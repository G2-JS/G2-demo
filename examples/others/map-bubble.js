webpackJsonp([47,0],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var G2 = __webpack_require__(1);
	var Stat = G2.Stat;
	var Frame = G2.Frame;
	var $ = __webpack_require__(3);

	$.getJSON('./data/USA.geo.json?nowrap', function (mapData) {

	  var map = [];
	  var features = mapData.features;
	  // 获取出所有的地图区域名称
	  for (var i = 0; i < features.length; i++) {
	    var name = features[i].properties.name;
	    map.push({
	      "name": name
	    });
	  }

	  var chart = new G2.Chart({
	    id: 'c1',
	    width: 1000,
	    height: 500,
	    animate: false
	  });
	  var defs = {
	    '..long': {
	      max: -66,
	      min: -125
	    },
	    '..lant': {
	      max: 50,
	      min: 24
	    },
	    '..x': {
	      max: -66,
	      min: -125
	    },
	    '..y': {
	      max: 50,
	      min: 24
	    }
	  };
	  chart.source(map, defs);
	  chart.tooltip({
	    title: null
	  });
	  var backView = chart.createView();
	  backView.source(map);
	  backView.tooltip(false); // 背景不显示tooltip
	  backView.polygon().position(Stat.map.region('name', mapData)).style({
	    fill: 'rgb(204,204,204)',
	    stroke: '#fff',
	    'stroke-width': 1
	  });
	  // backView.render();
	  $.getJSON('./data/flights-airport.json', function (flights) {
	    var linksByOrigin = {},
	        countByAirport = {},
	        locationByAirport = {},
	        subFlights = [];

	    // 计算飞机的起飞、降落数
	    flights.forEach(function (flight) {
	      var origin = flight.origin,
	          destination = flight.destination;

	      countByAirport[origin] = (countByAirport[origin] || 0) + 1;
	      countByAirport[destination] = (countByAirport[destination] || 0) + 1;
	    });

	    $.getJSON('./data/airport.json', function (airports) {

	      // Only consider airports with at least one flight.
	      airports = airports.filter(function (airport) {
	        if (countByAirport[airport.iata]) {
	          airport.count = countByAirport[airport.iata]; // 加入班次数量
	          airport.x = airport.longitude;
	          airport.y = airport.latitude;
	          airport.id = airport.iata;
	          return true;
	        }
	      });

	      var airView = chart.createView();
	      airView.source(airports, defs);
	      airView.point().position(Stat.map.location('longitude*latitude')).color('rgb(97,145,185)').shape('circle').style({
	        stroke: '#eee',
	        lineWidth: 1
	      }).size('count', 15, 3).tooltip('iata*count');

	      var flightView = chart.createView(); // 飞行路线
	      flightView.tooltip(false);
	      flightView.source(subFlights, defs);
	      flightView.edge().position(Stat.link('origin*destination', airports));
	      chart.render();
	      var preShape;

	      function getFlights(iata) {
	        var rst = [];
	        flights.forEach(function (flight) {
	          if (flight.origin == iata || flight.destination == iata) {
	            rst.push(flight);
	          }
	        });
	        return rst;
	      }
	      var preId;
	      chart.on('plotmove', function (ev) {
	        var records = airView.getSnapRecords({
	          x: ev.x,
	          y: ev.y
	        });
	        if (records.length) {
	          var obj = records[0]._origin;
	          var iata = obj.iata;
	          if (preId !== iata) {
	            subFlights = getFlights(iata);
	            flightView.changeData(subFlights);
	            preId = iata;
	          }
	        }
	      });

	      chart.on('plotleave', function (ev) {
	        if (subFlights.length) {
	          subFlights = [];
	          flightView.changeData([]);
	        }
	      });
	    });
	  });
		});

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	!function(t,e){ true?module.exports=e():"function"==typeof define&&define.amd?define("G2",[],e):"object"==typeof exports?exports.G2=e():t.G2=e()}(this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var i=n[r]={exports:{},id:r,loaded:!1};return t[r].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}(function(t){for(var e in t)if(Object.prototype.hasOwnProperty.call(t,e))switch(typeof t[e]){case"function":break;case"object":t[e]=function(e){var n=e.slice(1),r=t[e[0]];return function(t,e,i){r.apply(this,[t,e,i].concat(n))}}(t[e]);break;default:t[e]=t[t[e]]}return t}([function(t,e,n){"use strict";var r={};r.Chart=n(300),r.Util=n(1),r.Global=n(5),r.Stat=n(18),r.Stat.map=n(191),r.Stat.tree=n(217),r.Stat.treemap=n(220),n(215),r.Scale=n(79),r.Shape=n(98),r.Frame=n(2),r.Theme=n(46),r.Canvas=n(11),r.Coord=n(71),r.Base=n(27),r.ColorCalculate=n(60),r.Layout=n(184),r.Plugin={},t.exports=r},function(t,e,n){var r=n(263);t.exports=r},function(t,e,n){var r=n(31);n(76),n(167),n(166),t.exports=r},function(t,e,n){var r={Matrix3:n(197),Vector2:n(198),Vector3:n(199)};t.exports=r},function(t,e,n){var r=n(196);t.exports=r},function(t,e,n){"use strict";function r(t){t=t||0,t=100*t;var e=2;return t>0&&t<.01&&(e=(1/t+"").indexOf(".")+1),t.toFixed(e)+"%"}function i(t){for(var e in c)c.hasOwnProperty(e)&&delete c[e];var n;n=s.isObject(t)?t:s.indexOf(u,t)!==-1?o[t]:o["default"],s.mix(!0,c,a,n),c.setTheme=i}var a,s=n(1),o=n(325),u=["default","dark","cheery"],c={};a={animate:!0,percentFormat:r,widthRatio:{column:.5,rose:.9999999,multiplePie:1/1.3},scales:{"..x":{type:"linear",min:0,max:1,nice:!1},"..y":{type:"linear",min:0,max:1,nice:!1},"..level":{type:"linear",min:0,nice:!1},"..value":{type:"linear",min:0},"..count":{type:"linear",min:0,alias:"count"},"..percent":{type:"linear",min:0,max:1,alias:"percent",formatter:r},"..proportion":{type:"linear",min:0,max:1,alias:"proportion",formatter:r},"..density":{type:"linear",min:0,alias:"density"},"..long":{type:"linear",alias:"longitude",nice:!1},"..lant":{type:"linear",alias:"latitude",nice:!1},"..pieX":{type:"cat",values:["..pieX"],ticks:["..pieX"]}},connectNulls:!1,heatmapColors:"rgb(125,125,248)-rgb(0,0,255)-rgb(0,255,0)-yellow-rgb(255,0,0)",heatmap:{radius:50}},i("default"),t.exports=c},function(t,e,n){"use strict";var r=n(1);t.exports=r},function(t,e,n){"use strict";var r=n(89),i=n(58),a=n(57),s=n(56),o=n(3);n(1),o.Vector2;t.exports={line:function(t,e,n,i,a,s,o){var u=r.box(t,e,n,i,a);if(!this.box(u.minX,u.maxX,u.minY,u.maxY,s,o))return!1;var c=r.pointDistance(t,e,n,i,s,o);return!isNaN(c)&&c<=a/2},polyline:function(t,e,n,r){var i=this,a=t.length-1;if(a<1)return!1;for(var s=0;s<a;s++){var o=t[s][0],u=t[s][1],c=t[s+1][0],l=t[s+1][1];if(i.line(o,u,c,l,e,n,r))return!0}return!1},cubicline:function(t,e,n,r,i,s,o,u,c,l,h){return a.pointDistance(t,e,n,r,i,s,o,u,l,h)<=c/2},quadraticline:function(t,e,n,r,a,s,o,u,c){return i.pointDistance(t,e,n,r,a,s,u,c)<=o/2},arcline:function(t,e,n,r,i,a,o,u,c){return s.pointDistance(t,e,n,r,i,a,u,c)<=o/2},rect:function(t,e,n,r,i,a){return t<=i&&i<=t+n&&e<=a&&a<=e+r},circle:function(t,e,n,r,i){return Math.pow(r-t,2)+Math.pow(i-e,2)<=Math.pow(n,2)},box:function(t,e,n,r,i,a){return t<=i&&i<=e&&n<=a&&a<=r}}},function(t,e,n){"use strict";var r=n(6),i=n(86),a=n(3),s=n(7),o=a.Vector3,u=function(t){u.superclass.constructor.call(this,t)};u.ATTRS={fillOpacity:1,strokeOpacity:1},r.extend(u,i),r.augment(u,{isShape:!0,createPath:function(){},drawInner:function(){var t=this,e=t.get("context"),n=t.attr("lineWidth");t.createPath(),t.hasFill()&&e.fill(),t.hasStroke()&&n>0&&e.stroke()},isPointInPath:function(t,e){return!1},isHit:function(t,e){var n=this,r=n.get("canvas"),i=new o(t,e,1);n.invert(i,r);var a=n.getBBox();if(a&&s.box(a.minX,a.maxX,a.minY,a.maxY,i.x,i.y)){var u=n.__attrs.clip;if(!u)return n.isPointInPath(i.x,i.y);if(u.inside(t,e))return n.isPointInPath(i.x,i.y)}return!1},getBBox:function(){return this.get("box")}}),t.exports=u},function(t,e,n){"use strict";var r=n(1),i=n(177),a=n(148),s=n(147),o=n(143),u={radius:"r","font-size":"fontSize","stroke-width":"lineWidth","text-anchor":"textAlign","font-weight":"fontWeight","fill-opacity":"fillOpacity","stroke-opacity":"strokeOpacity","stroke-dasharray":"lineDash",horizontalAlign:"textAlign",verticalAlign:"textBaseline"};r.mix(r,{isPositiveNum:function(t){var e=/^[0-9]*[1-9][0-9]*$/;return e.test(t)},adapAttrs:function(t){r.each(t,function(e,n){var i=r.adapAttr(n,e);t[i.name]=i.value})},adapAttr:function(t,e){var n=u[t],r={name:t,value:e};return n&&("font-size"===t?e=parseInt(e,10):"text-anchor"===t&&(e="start"===e?"left":"middle"===e?"center":"right"),r.name=n,r.value=e),r},merge:function(t,e){if(e){if(!r.isObject(e))return e;var n={};return r.mix(n,t,e),n}return t},getRatio:function(){return window.devicePixelRatio?window.devicePixelRatio:2},mixXY:function(t,e){var n={x:e.get("x"),y:e.get("y")};t.x?t.x+=n.x:t.x=n.x,t.y?t.y+=n.y:t.y=n.y},getWidth:function(t){var e=r.getStyle(t,"width");return"auto"===e&&(e=t.offsetWidth),parseFloat(e)},getHeight:function(t){var e=r.getStyle(t,"height");return"auto"===e&&(e=t.offsetHeight),parseFloat(e)},getOuterHeight:function(t){var e=r.getHeight(t),n=parseFloat(r.getStyle(t,"borderTopWidth"))||0,i=parseFloat(r.getStyle(t,"paddingTop")),a=parseFloat(r.getStyle(t,"paddingBottom")),s=parseFloat(r.getStyle(t,"borderBottomWidth"))||0;return e+n+s+i+a},parsePathArray:function(t){return a.parsePathArray(t)},path2Absolute:function(t){return a.path2Absolute(t)},parsePathString:function(t){return a.parsePathString(t)},animPath:function(t,e,n,i,a,s){if(!r.vml&&(n=n||0,i=i||400,e)){var o,u=t.attr("path"),c=r.parsePathString(e),l=u.slice(n*-1);if(u.length>c.length)o=u.slice(0,c.length);else if(o=u.concat([]),n)for(var h=o.length;h<c.length;h++)o=o.concat(l);t.animate({path:c},i,a,s)}},animate:function(t,e,n,a,s){function u(){var e,h,x,m,y,_,S=+new Date,w=S-l,b={},M=t.get("canvas");c=w/n,c<=0?c=0:c>=1&&(c=1),c=o[a](c);for(_ in f)if(p[_]!==f[_])if("path"===_){x=r.parsePathString(f[_]),m=r.parsePathString(p[_]),b[_]=[];for(var A=0;A<x.length;A++){for(var C=x[A],k=m[A],T=[],P=0;P<C.length;P++)r.isNumeric(C[P])?(y=i.interpolation(C[P],k[P]),T.push(y(c))):T.push(C[P]);b[_].push(T)}}else y=i.interpolation(p[_],f[_]),b[_]=y(c);g&&(h=i.interpolation(v,g),e=h(c),t.setMatrix(e)),t.attr(b),M.draw(),r.requestAnimationFrame(function(){d===t.get("animCount")&&t.get("animable")&&t&&!t.get("destroyed")&&(c>=0&&c<1?u():c>=1&&s&&s())})}var c,l=+new Date,h=this.formatProps(e,t),f=h.attrs,g=h.M,p=this.getfromAttrs(f,t),v=t.getMatrix().clone(),d=t.get("animCount");a=a?a:"linear",setTimeout(function(){d===t.get("animCount")&&u()},6)},getfromAttrs:function(t,e){var n={};return r.each(t,function(t,r){n[r]=e.attr(r)}),n},formatProps:function(t,e){var n,r={M:null,attrs:{}};for(n in t)"transform"===n?r.M=s.transform(e.getMatrix(),t[n]):"matrix"===n?r.M=t[n]:r.attrs[n]=t[n];return r}}),r.MatrixUtil=s,t.exports=r},function(t,e,n){"use strict";var r=n(34),i=n(1),a=n(2),s=function(t){s.superclass.constructor.call(this,t)};i.extend(s,r),i.augment(s,{type:"summary",getStatDims:function(){var t=this,e=t.getDims(),n=e.length,r=[e[n-1]];return r},getGroupCondition:function(){var t,e=this,n=e.getDims(),r=n.length,a=[];return r>1&&(a=n.slice(0,r-1),t=[]),i.each(a,function(e){0!==e.indexOf("..")&&t.push(e)}),t},groupFrames:function(t){var e,n=this,r=n.getGroupCondition();return e=r?a.group(t,r):[t]},transformGroup:function(t,e){var n=this,r=[];return i.each(t,function(t){r.push(n.transform(t,e))}),r},execFrame:function(t){var e=this,n=e.getStatDims()[0],r=e.groupFrames(t),i=e.transformGroup(r,n),s=a.merge.apply(null,i);return s},transform:function(t){return t}}),t.exports=s},function(t,e,n){var r=n(129),i=n(12),a=n(28);r.G=a.G,r.Components=n(134),r.Group=i.GroupBase,r.Shape={},r.Shape.Marker=i.Marker,r.Util=n(9),r.Matrix=n(3),t.exports=r},function(t,e,n){t.exports={GMixin:n(144),GroupBase:n(70),GroupMixin:n(145),Marker:n(146)}},function(t,e){"use strict";var n={prefix:"g",backupContext:function(){return document.createElement("canvas").getContext("2d")}(),debug:!1,warn:function(t){}};t.exports=n},function(t,e,n){"use strict";var r=n(1),i=n(55),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{regressionType:"base",isRegression:!0,getRegressionString:function(){return""},execSmooth:function(t){return t}}),t.exports=a},function(t,e,n){"use strict";var r=n(80),i=n(20),a=n(1);a.mix(r.GeomShape,{getMarkerCfg:function(t,e){var n=this.getShape(t);return n.getMarkerCfg(e)},getActiveCfg:function(t,e){var n=this.getShape(t);return n.getActiveCfg(e)},getSelectedCfg:function(t,e){var n=this.getShape(t);return n.getActiveCfg(e)},drawShape:function(t,e,n){var r=this.getShape(t),i=r.drawShape(e,n);return i&&i.set("origin",e.origin),i}}),a.mix(r.ShapeBase,{setCoord:function(t){this._coord=t},parsePath:function(t,e){var n=this._coord;return t=a.parsePathString(t),t=n.isPolar&&e!==!1?i.convertPolarPath(t,n):i.convertNormalPath(t,n)},parsePoint:function(t){var e=this._coord;return e.convertPoint(t)},parsePoints:function(t){if(!t)return!1;var e=this._coord,n=[];return a.each(t,function(t){n.push(e.convertPoint(t))}),n}}),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(27),a=n(11).Matrix,s=a.Matrix3,o=function(t){o.superclass.constructor.call(this,t)};o.ATTRS={easing:"easeInOutQuad",duration:1e3,callback:null,group:null,rect:null,before:null},r.extend(o,i),r.augment(o,{start:function(){return this.startAnimate(),this},startAnimate:function(){var t=this.getTarget(),e=this.get("group");this.set("originMatrix",e.getMatrix().clone()),this.set("rect",this.getAnimRect()),this.set("target",t),this.beforeAnimate(t),this.execAnimate(t)},beforeAnimate:function(t){var e=this.getInitMatrix(),n=this.getInitAttrs(),r=this.get("originMatrix");e=s.multiply(r,e),t.setMatrix(e),t.attr(n)},execAnimate:function(t){var e,n=this,i=n.get("before"),a=n.get("callback"),o=n.get("duration"),u=n.get("easing"),c=n.getEndAttrs(),l=n.get("originMatrix"),h=n.getEndMatrix();h=s.multiply(l,h),e=r.mix({},c,{matrix:h}),t.animate(e,o,u,function(){a&&a(),n.afterAnimate(t)}),i&&i()},afterAnimate:function(t){var e=this.get("group"),n=e.get("canvas");return e==t||(e.attr("clip",!1),void n.draw())},getTarget:function(){return this.get("group")},getInitMatrix:function(){return new s},getInitAttrs:function(){return{}},getEndMatrix:function(){return new s},getEndAttrs:function(){return{}},getAnimRect:function(){var t=this.get("rect"),e=this.get("group");return t||(t=e.getBBBox()),t},getCircleInfo:function(){var t=this.get("rect"),e=this.get("circle"),n=this.getRectCenter(t),r=Math.min(t.width,t.height)/2;return e||(e={center:n,r:r}),e},getRectCenter:function(t){return{x:t.x+t.width/2,y:t.y+t.height/2}},stop:function(){return this.stopAnimate(),this},stopAnimate:function(){var t=this.getTarget();t&&t.stopAnimate()}}),t.exports=o},function(t,e,n){"use strict";var r=n(1),i=["min","max"],a=function(t){r.mix(this,t)};r.augment(a,{xScale:null,yScale:null,cfg:{},parsePoint:function(t,e){var n=this,a=n.xScale,s=n.yScale,o=e[0],u=e[1];return a&&(o=r.indexOf(i,o)!==-1?a.scale(a[o]):a.scale(o)),s&&(u=r.indexOf(i,u)!==-1?s.scale(s[u]):s.scale(u)),t.convert({x:o,y:u})},paint:function(){}}),t.exports=a},function(t,e,n){var r=n(34);r.summary=n(248),r.bin=n(224),r.smooth=n(238),r.density=n(228),r.region=n(231);var i=n(2);i.execStat=function(t,e){e.init();var n=e.exec([t]);return i.merge.apply(null,n)},t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(27),a=n(75),s=n(80),o=function(t){o.superclass.constructor.call(this,t)};o.ATTRS={type:null,container:null,attrs:null,shapeObj:null,styleCfg:{}},r.extend(o,i),r.augment(o,{_mapping:function(t){var e=this,n=t.toJSON(),i=e.get("attrs");return r.each(i,function(t){var i=t.names;r.each(n,function(n){var a=e._getAttrValues(t,n);r.each(a,function(t,e){var a=i[e];n[a]=r.isArray(t)&&1===t.length?t[0]:t})})}),new a(n)},_processShapePoints:function(t){var e,n,i=this,o=i.get("shapeType")||i.get("type"),u=s.getShape(o),c=[];return u._coord=i.getCoord(),r.each(t,function(t){var e=[];t.each(function(t){var n=i.getAttrValue("shape",t),r=i.getShapePointInfo(t),a=u.getShapePoints(n,r);t.points=a,e.push(t)}),e=new a(e),c.push(e)}),r.each(c,function(t,r){e=c[r+1],n=e?e.colArray("points")[0]:null,t.addCol("nextPoints",function(){return n})}),i.set("shapeObj",u),c},_getAttrValues:function(t,e){var n=t.scales,i=[];r.each(n,function(t){var n=t.dim;"identity"===t.type?i.push(t.value):i.push(e[n])});var a=t.mappingValues.apply(t,i);return a},draw:function(t){var e=this,n=[];return t=e.processFrames(t),t=e._processShapePoints(t),r.each(t,function(t){t=e.beforeMapping(t),t=e._mapping(t),t.rowCount()&&e.drawFrame(t),n.push(t)}),n},processFrames:function(t){return t},beforeMapping:function(t){return t},isInCircle:function(){return this.getCoord().isPolar},getShapePointInfo:function(t){var e=this.getXScale(),n=this.getYScale(),r=e?this._normalizeValues(t[e.dim],e):t.x?t.x:.1,i=n?this._normalizeValues(t[n.dim],n):t.y?t.y:.1;return{x:r,y:i,y0:n?n.scale(this.getYMinValue()):void 0,size:this.getSize(t)}},_normalizeValues:function(t,e){var n=[];return r.isArray(t)?r.each(t,function(t,r){n.push(e.scale(t))}):n=e.scale(t),n},getDefalutSize:function(){return.1},_getSize:function(t){var e,n=this.getCoord();return e=this.isInCircle()&&!n.isTransposed?(n.get("endAngle")-n.get("startAngle"))*n.get("radius"):this.getDimWidth("x"),t/e},getDimWidth:function(t){var e=this,n=e.getCoord(),r=n.convertPoint({x:0,y:0}),i=n.convertPoint({x:"x"===t?1:0,y:"x"===t?0:1}),a=0;return r&&i&&(a=Math.sqrt(Math.pow(i.x-r.x,2)+Math.pow(i.y-r.y,2))),a},getSize:function(t){var e=this.getAttrValue("size",t);return e=r.isNull(e)?this.getDefalutSize():this._getSize(e)},drawFrame:function(t){var e,n,i,a=this,s=t.toJSON(),o=a.get("container"),u=a.get("shapeObj");r.each(s,function(t){e=a.getDrawCfg(t),n=a.getDrawShape(t.shape),i=u.drawShape(n,e,o),a.afterDraw(i,t)})},afterDraw:function(t,e){},getDrawShape:function(t){return r.isArray(t)?t[0]:t},getDrawCfg:function(t){var e=this.get("styleCfg"),n=this.isInCircle(),r={points:t.points,nextPoints:t.nextPoints,color:t.color,isInCircle:n,style:e,size:t.size,shape:t.shape,opacity:t.opacity,x:t.x,y:t.y,origin:t};return n&&(r.center=this.getCoord().get("center")),r},getYMinValue:function(){var t,e=this.getYScale(),n=e.min;return t=n>=0?n:0},getAttrValue:function(t,e){var n=this.getAttr(t),r=null;return n&&(r=this._getAttrValues(n,e)[0]),r},getAttr:function(t){var e=this.get("attrs"),n=null;return r.each(e,function(e){e.type===t&&(n=e)}),n},getCoord:function(){return this.getAttr("position").coord},getXDim:function(){var t=this.getXScale();return t.dim},getYDim:function(){var t=this.getYScale();return t.dim},getXScale:function(){return this.getAttr("position").scales[0]},getYScale:function(){return this.getAttr("position").scales[1]}}),t.exports=o},function(t,e,n){"use strict";function r(t,e,n){if(!t.length)return"";var r="",i="";t.length<=2&&(n=!1);for(var a=0,s=t.length;a<s;a++){var o=t[a];i=0===a?n?"M{x} {y} R":"M{x} {y}":n?" {x} {y}":"L{x} {y}",r+=u.substitute(i,o)}return e&&(r+="Z"),r}function i(t,e){var n=t.getCenter(),r=Math.sqrt(Math.pow(e.x-n.x,2)+Math.pow(e.y-n.y,2));return r}function a(t,e){for(var n=t.length,r=[t[0]],i=1;i<n;i+=2){var a=e.convertPoint({x:t[i],y:t[i+1]});r.push(a.x,a.y)}return r}function s(t,e,n){var r=n.getRadius(),a=n.get("inner")||0,s=a*r,o=n.isTransposed,u=n.get("startAngle"),c=n.get("endAngle"),l={x:t[1],y:t[2]},h={x:e[1],y:e[2]},f=[];s=s||0;var g=o?"y":"x",p=Math.abs(h[g]-l[g])*(c-u),v=h[g]>=l[g]?1:0,d=p>Math.PI?1:0,x=n.convertPoint(h),m=i(n,x);if(p===2*Math.PI){if(m>=.5){var y={x:(h.x+l.x)/2,y:(h.y+l.y)/2},_=n.convertPoint(y);f.push(["A",m,m,0,d,v,_.x,_.y]),f.push(["A",m,m,0,d,v,x.x,x.y])}}else f.push(["A",m,m,0,d,v,x.x,x.y]);return f}function o(t){u.each(t,function(e,n){var r=e;if("a"===r[0].toLowerCase()){var i=t[n-1],a=t[n+1];a&&"a"===a[0].toLowerCase()?i&&"l"===i[0].toLowerCase()&&(i[0]="M"):i&&"a"===i[0].toLowerCase()&&a&&"l"===a[0].toLowerCase()&&(a[0]="M")}})}var u=n(1),c=n(213),l={getLinePath:function(t,e,n){return r(t,e,n)},getSplinePath:function(t,e){var n=[],r=t[0],i=null;u.each(t,function(t){i&&i.x===t.x&&i.y===t.y||(n.push(t.x),n.push(t.y),i=t)});var a=[[0,0],[1,1]],s=c.catmullRom2bezier(n,e,a);return"M"+r.x+" "+r.y+u.parsePathArray(s)},getPointRadius:function(t,e){var n=i(t,e);return n},getPointAngle:function(t,e){var n=t.getCenter(),r=Math.atan2(e.y-n.y,e.x-n.x);return r},convertNormalPath:function(t,e){var n=[];return u.each(t,function(t){var r=t[0];switch(r.toLowerCase()){case"m":case"l":case"c":n.push(a(t,e));break;case"z":default:n.push(t)}}),n},convertPolarPath:function(t,e){var n=[];return u.each(t,function(r,i){var o=r[0];switch(o.toLowerCase()){case"m":case"c":n.push(a(r,e));break;case"l":var u=t[i-1],c=r,l=e.isTransposed,h=l?u[1]===c[1]:u[2]===c[2];h?n=n.concat(s(u,c,e)):n.push(a(r,e));break;case"z":default:n.push(r)}}),o(n),n}};t.exports=l},function(t,e,n){"use strict";var r=n(1),i=function(t){r.mix(this,t)};i.prototype={type:"base",names:null,scales:[],min:0,max:10,method:function(t){return t*(this.max-this.min)+this.min},callback:function(){var t,e,n,i=this,a=i.arr,s=i.scales,o=r.toArray(arguments),u=[];return r.each(s,function(s,c){t=o[c],n=s.scale(t),e=s.translate(t),"identity"===s.type?u.push(s.value):r.isArray(a)?u.push(i._getArrValue(a,s,n,e)):i.method?u.push(i.method(n)):u.push(null)}),u},getNames:function(){var t=this.scales,e=this.names,n=[];return r.each(t,function(t,r){n.push(e[r])}),n},getDims:function(){var t=this.scales,e=[];return r.each(t,function(t){e.push(t.dim)}),e},getScale:function(t){var e=this.scales,n=this.names,r=n.indexOf(t);return e[r]},mappingValues:function(){var t=this.scales,e=r.toArray(arguments),n=this.callback,i=e;if(n){for(var a=0;a<e.length;a++)e[a]=this.parseParam(e[a],t[a]);i=n.apply(this,e)}return this.names&&1===this.names.length&&(i=[i]),i},parseParam:function(t,e){var n=t;return e.isLinear||(n=e.scale(t),n=e.invert(n)),n},_getArrValue:function(t,e,n,r){var i=0;return e.isCategory?i=r:e.isLinear&&(i=parseInt(n*(t.length-1),10)),t[i%t.length]}},t.exports=i},function(t,e,n){"use strict";var r=n(1),i=n(237),a={getRegressionString:function(){return this.regressionStr},getRegression:function(){return{equation:[],string:""}},execSmooth:function(t,e){var n=this,a=n.getRegression(t),s=a.equation;this.regressionStr=a.string;var o=[];return r.each(e,function(t){var e=t,r=i.execFnction(n.regressionType,s,e);o.push([e,r])}),o}};t.exports=a},function(t,e,n){var r=n(13),i={Canvas:n(268),Group:n(87),Shape:n(8),Rect:n(283),Circle:n(272),Ellipse:n(274),Path:n(279),Text:n(284),Line:n(277),Image:n(276),Polygon:n(280),Polyline:n(281),Arc:n(271),Fan:n(275),Cubic:n(273),Quadratic:n(282),debug:function(t){r.debug=t}};t.exports=i},function(t,e,n){var r={};r.Base=n(19),r.Interval=n(287),r.Point=n(289),r.Line=n(288),r.Polygon=n(290),r.Schema=n(291),r.Path=n(92),r.Area=n(286),t.exports=r},function(t,e,n){t.exports=n(330)},function(t,e,n){"use strict";var r=n(1),i=n(2),a=0,s=function(t){r.mix(this,t)};r.augment(s,{xDim:null,yDim:null,adjustNames:["x","y"],groupDims:null,isAdjust:function(t){return r.inArray(this.adjustNames,t)},processAdjust:function(t){var e=this,n=i.merge.apply(null,t);return e.adjFrames=t,e.mergeFrame=n,t=e.adjustFrames(t,n),e.adjFrames=null,e.mergeFrame=null,t},_getDimValues:function(t){var e=this,n={},s=[];if(e.xDim&&e.isAdjust("x")&&s.push(e.xDim),e.yDim&&e.isAdjust("y")&&s.push(e.yDim),r.each(s,function(e){var r=i.values(t,e);r.sort(function(t,e){return t-e}),n[e]=r}),!e.yDim&&e.isAdjust("y")){var o="y",u=[a,1];n[o]=u}return n},adjustFrames:function(t,e){var n=this,a=[],s=n._getDimValues(e);return r.each(t,function(e,o){var u=e.toJSON();r.each(s,function(e,r){n.adjustDim(r,e,u,t.length,o)}),a.push(new i(u))}),a},adjustDim:function(t,e,n){return new i(n)},getAdjustRange:function(t,e,n){var i,a,s=this,o=r.indexOf(n,e),u=n.length;return!s.yDim&&s.isAdjust("y")?(i=0,a=1):u>1?(i=0===o?n[0]:n[o-1],a=o===u-1?n[u-1]:n[o+1],0!==o?i+=(e-i)/2:i-=(a-e)/2,o!==u-1?a-=(a-e)/2:a+=(e-n[u-2])/2):(i=0===e?0:e-.5,a=0===e?1:e+.5),{pre:i,next:a}},groupData:function(t,e){var n={};return r.each(t,function(t){var r=t[e];void 0===r&&(r=t[e]=a),n[r]||(n[r]=[]),n[r].push(t)}),n}}),t.exports=s},function(t,e,n){var r=n(125);t.exports=r},function(t,e,n){var r=n(126),i=n(64);r.G=n(23),r.Util=n(29),r.Group=i.GroupBase,t.exports=r},function(t,e,n){"use strict";var r=n(23),i=n(1),a=r.Shape.superclass.constructor,s=document.createElement("table"),o=document.createElement("tr"),u=/^\s*<(\w+|!)[^>]*>/,c={tr:document.createElement("tbody"),tbody:s,thead:s,tfoot:s,td:o,th:o,"*":document.createElement("div")};i.mix(i,{getBoundingClientRect:function(t){var e=t.getBoundingClientRect(),n=document.documentElement.clientTop,r=document.documentElement.clientLeft;return{top:e.top-n,bottom:e.bottom-n,left:e.left-r,right:e.right-r}},upperFirst:function(t){return t.replace(/(\w)/,function(t){return t.toUpperCase()})},getStyle:function(t,e){return window.getComputedStyle?window.getComputedStyle(t,null)[e]:t.currentStyle[e]},modiCSS:function(t,e){var n;for(n in e)t.style[n]=e[n];return t},getRatio:function(){return window.devicePixelRatio?window.devicePixelRatio:1},initClassCfgs:function(t){if(!t.__cfg&&t!==a){var e=t.superclass.constructor;e&&!e.__cfg&&i.initClassCfgs(e),t.__cfg={},i.mix(!0,t.__cfg,e.__cfg),i.mix(!0,t.__cfg,t.CFG)}},mixin:function(t,e){var n=t.CFG?"CFG":"ATTRS";if(t&&e){t._mixins=e,t[n]=t[n]||{};var r={};i.each(e,function(e){i.augment(t,e);var a=e[n];a&&i.mix(r,a)}),t[n]=i.mix(r,t[n])}},createDom:function(t){var e=u.test(t)&&RegExp.$1;e in c||(e="*");var n=c[e];return t=t.replace(/(^\s*)|(\s*$)/g,""),n.innerHTML=""+t,n.childNodes[0]}}),t.exports=i},function(t,e,n){"use strict";var r=n(1),i=function(t){r.mix(this,t)};r.augment(i,{xValue:null,yValue:null,region:null,frame:null}),t.exports=i},function(t,e,n){"use strict";var r=n(1),i=function(t,e){this.data=t,r.mix(this,e),this.initFrame()};i.prototype={isFrame:!0,initFrame:function(){var t=this,e=t.data,n=t.colNames(),i=t.arr;if(r.isArray(e[0])&&(i=t.arr=e),!i){i=[];for(var a=0;a<n.length;a++){for(var s=[],o=n[a],u=0;u<e.length;u++)s.push(e[u][o]);i.push(s)}t.arr=i}},contains:function(t){var e=this.colNames();return r.indexOf(e,t)!==-1},colNames:function(){var t=this,e=t.names;if(!e){var n=this.data,i=n[0];e=[],i&&r.each(i,function(t,n){e.push(n)}),t.names=e}return e},rowCount:function(){var t=this,e=t.arr;return e&&e.length?e[0].length:0},colCount:function(){var t=this,e=t.colNames();return e?e.length:0},colIndex:function(t){return r.indexOf(this.names,t)},colArray:function(t){var e=t;return r.isString(t)&&(e=this.colIndex(t)),this.arr[e]},colReplace:function(t,e){var n=this.arr,i=this.colNames();if(r.isString(t)){var a=t;t=r.indexOf(i,a)}return n[t]=e,this},each:function(t){for(var e=this,n=e.rowCount(),r=0;r<n;r++){var i=e._getObject(r);t(i,r)}return e},rowObject:function(t){return this._getObject(t)},_getObject:function(t,e){var n=this,r=n.arr,i={};e=e||n.colNames();for(var a=0;a<e.length;a++)i[e[a]]=r[a][t];return i},addCol:function(t,e){var n=this;if(r.isFunction(e)){var i=e;e=[],n.each(function(t,n){var r=i(t,n);e.push(r)})}n.names.push(t),n.arr.push(e)},toArray:function(){return this.arr},toJSON:function(){for(var t=this,e=t.rowCount(),n=[],r=0;r<e;r++)n.push(t._getObject(r));return n}},t.exports=i},function(t,e,n){"use strict";var r=n(18),i=n(1),a=n(2),s=function(t){s.superclass.constructor.call(this,t)};i.extend(s,r),i.augment(s,{type:"map",mapData:{},initDims:function(t){var e=t[0],n=t.slice(1);t=n.concat([e]),t.unshift("..lant"),t.unshift("..long"),this.dims=t},getStatDims:function(){var t=this.getDims(),e=t.filter(function(t){return t.indexOf("..")>-1});return e},execFrame:function(t){var e=this,n=e.getStatDims(),r=[];return t=t.toJSON(),i.each(t,function(t){r.push(e.addGeoInfo(t,n))}),new a(r)},addGeoInfo:function(t){return t}}),t.exports=s},function(t,e,n){"use strict";var r=n(44),i=n(1),a=n(36),s=function(t){s.superclass.constructor.call(this,t)};i.extend(s,r),i.augment(s,{type:"cat",tickCount:null,isCategory:!0,init:function(){var t=this,e=t.values,n=t.tickCount;if(i.each(e,function(t,n){e[n]=t.toString()}),!t.ticks){var r=e;if(n){var s=a.Category.caculate({maxCount:n,data:e});r=s.ticks}this.ticks=r}},getText:function(t){return this.values.indexOf(t)>-1?t=t:i.isNumber(t)&&(t=this.values[Math.round(t)]),s.superclass.getText.call(this,t)},translate:function(t){var e=this.values.indexOf(t);return e===-1&&i.isNumber(t)?e=t:e===-1&&(e=NaN),e},scale:function(t){var e,n=this.rangeMin(),r=this.rangeMax();return(i.isString(t)||this.values.indexOf(t)!==-1)&&(t=this.translate(t)),e=this.values.length>1?t/(this.values.length-1):t,n+e*(r-n)},invert:function(t){if(i.isString(t))return t;var e=this.rangeMin(),n=this.rangeMax();t<e&&(t=e),t>n&&(t=n);var r=(t-e)/(n-e),a=Math.round(r*(this.values.length-1))%this.values.length;return a=a||0,this.values[a]}}),t.exports=s},function(t,e,n){"use strict";var r=n(1),i=function(t){r.mix(this,t)};r.augment(i,{isStat:!0,initDims:function(){},getDims:function(){return this.dims},getStatDims:function(){return this.getDims()},init:function(){var t=this,e=t.dims;if(r.isString(e)&&(e=e.split("*"),t.dims=e),e&&e.isStat){var n=e;n.init(),t.stat=n,e=n.dims,t.dims=e}e||(e=[],t.dims=e),t.initDims(e)},preExecute:function(){},exec:function(t){var e=this;e.preExecute(t);var n=[];return this.stat&&(t=this.stat.exec(t)),r.each(t,function(i){var a=e.execFrame(i,t);r.isArray(a)?n=n.concat(a):n.push(a)}),n},execFrame:function(t){return t}}),t.exports=i},function(t,e,n){function r(t,e,n,r){s(t,a(e,n,r))}function i(t,e,n){var r=n/Math.sin(c);return t.setLength(r/2),e.sub(t),e}function a(t,e,n){var r=new u(1,0).angleTo(t),i=r-c,a=r+c,s=6+3*n;return[{x:e.x-s*Math.cos(i),y:e.y-s*Math.sin(i)},e,{x:e.x-s*Math.cos(a),y:e.y-s*Math.sin(a)}]}function s(t,e){t.moveTo(e[0].x,e[0].y),t.lineTo(e[1].x,e[1].y),t.lineTo(e[2].x,e[2].y)}var o=n(3),u=(n(4),n(1),o.Vector2),c=Math.PI/6;t.exports={makeArrow:r,getEndPoint:i}},function(t,e,n){var r=n(124);t.exports=r},function(t,e,n){t.exports=n(149)},function(t,e,n){"use strict";var r=n(1),i=n(3),a=i.Matrix3,s=i.Vector3,o=function(t){this._attrs={},this._attrs.matrix=new a,r.mix(this._attrs,o.ATTRS,t),this.init()};r.augment(o,{isTransposed:!1,set:function(t,e){return this._attrs[t]=e,this},get:function(t){return this._attrs[t]},getDim:function(t){switch(t){case"x":return this.get("x");case"y":return this.get("y");case"z":return this.get("z");default:console.error("\u6ca1\u6709"+t+"\u4ee3\u8868\u7684\u7ef4\u5ea6!")}},init:function(){var t=this,e=t.get("start"),n=t.get("end"),r={x:(e.x+n.x)/2,y:(e.y+n.y)/2};t.set("center",r),t.set("width",Math.abs(n.x-e.x)),t.set("height",Math.abs(n.y-e.y))},getWidth:function(){return this.get("width")},getHeight:function(){return this.get("height")},convertDim:function(t,e){var n=this;return e=n.get(e),e.start+t*(e.end-e.start)},invertDim:function(t,e){var n=this;return e=n.get(e),(t-e.start)/(e.end-e.start)},rotate:function(t){var e=this,n=e.get("matrix"),r=e.get("center");return n.translate(-r.x,-r.y),n.rotate(t),n.translate(r.x,r.y),this},reflect:function(t){var e=this;switch(t){case"x":e._swapDim("x");break;case"y":e._swapDim("y");break;default:e._swapDim("y")}return this},_swapDim:function(t){var e=this,n=e.get(t);if(n){var r=n.start;n.start=n.end,n.end=r}},scale:function(t,e){var n=this,r=n.get("matrix"),i=n.get("center");return r.translate(-i.x,-i.y),r.scale(t,e),r.translate(i.x,i.y),this},translate:function(t,e){var n=this,r=n.get("matrix");return r.translate(t,e),this},transpose:function(){this.isTransposed=!this.isTransposed},convertPoint:function(t){return t},invertPoint:function(t){return t},convert:function(t){var e=this;t=this.convertPoint(t);var n=e.trans(t.x,t.y,1);return{x:n.x,y:n.y}},invert:function(t){var e=this,n=e.reverse(t.x,t.y,1);return this.invertPoint({x:n.x,y:n.y})},trans:function(t,e,n){n=n||0;var r=this,i=r.get("matrix"),a=new s(t,e,n);return a.applyMatrix(i),a},reverse:function(t,e,n){n=n||0;var r=this,i=r.get("matrix"),a=i.getInverse(),o=new s(t,e,n);return o.applyMatrix(a),o}}),t.exports=o},function(t,e,n){"use strict";var r=n(1),i=n(38),a=n(3),s=n(4),o=a.Vector2,u=a.Matrix3,c=a.Vector3,l=function(t){var e={};r.mix(e,l.ATTRS,t),l.superclass.constructor.call(this,e),this._init()};l.ATTRS={startAngle:-Math.PI/2,endAngle:3*Math.PI/2,inner:.5},r.extend(l,i),r.augment(l,{type:"plus",isPolar:!0,_init:function(){var t,e,n=this,r=n.get("radius"),i=n.get("inner"),a=n.get("startAngle"),s=n.get("endAngle"),o=n.get("center"),u=n.getOneBox(),c=u.maxX-u.minX,l=u.maxY-u.minY,h=Math.abs(u.minX)/c,f=Math.abs(u.minY)/l,g=n.getWidth(),p=n.getHeight();p/l>g/c?(t=g/c,e={x:o.x-(.5-h)*g,y:o.y-(.5-f)*t*l}):(t=p/l,e={x:o.x-(.5-h)*t*c,y:o.y-(.5-f)*p}),r=r?r>0&&r<=1?t*r:r>0&&r<=t?r:t:t;var v={start:a,end:s},d={start:i*r,end:r};n.set("x",v),n.set("y",d),n.set("radius",r),n.set("circleCentre",e),n.set("center",e)},getCenter:function(){return this.get("circleCentre")},getOneBox:function(){for(var t=this,e=t.get("startAngle"),n=t.get("endAngle"),r=[0,Math.cos(e),Math.cos(n)],i=[0,Math.sin(e),Math.sin(n)],a=5*-Math.PI/2;a<3*Math.PI/2;a+=Math.PI/2)e<=a&&a<=n&&(r.push(Math.cos(a)),i.push(Math.sin(a)));return{minX:Math.min.apply(Math,r),maxX:Math.max.apply(Math,r),minY:Math.min.apply(Math,i),maxY:Math.max.apply(Math,i)}},getRadius:function(){return this.get("radius")},convertPoint:function(t){var e=this,n=e.getCenter(),r=e.isTransposed?t.y:t.x,i=e.isTransposed?t.x:t.y;return r=e.convertDim(r,"x"),i=e.convertDim(i,"y"),{x:n.x+Math.cos(r)*i,y:n.y+Math.sin(r)*i}},invertPoint:function(t){var e=this,n=e.getCenter(),r=new o(t.x-n.x,t.y-n.y),i=e.get("x"),a=new u;a.rotate(i.start);var l=new c(1,0,0);l.applyMatrix(a),l=new o(l.x,l.y);var h=l.angleTo(r,i.end<i.start);s.equal(h,2*Math.PI)&&(h=0);var f=r.length(),g=h/(i.end-i.start);g=i.end-i.start>0?g:-g;var p=e.invertDim(f,"y"),v={};return v.x=e.isTransposed?p:g,v.y=e.isTransposed?g:p,v}}),t.exports=l},function(t,e,n){var r=n(160);t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(2),a=function(t){r.mix(this,t)};r.augment(a,{dims:[],margin:0,defs:{},facetTitle:{titleOffset:25,colDimTitle:{title:{"font-size":16,"text-anchor":"middle",fill:"#444"}},colTitle:{title:{"font-size":14,"text-anchor":"middle",fill:"#444"}},rowTitle:{title:{"font-size":14,"text-anchor":"middle",rotate:90,fill:"#444"}},rowDimTitle:{title:{"font-size":16,"text-anchor":"middle",rotate:90,fill:"#444"}}},plotRange:null,getDimValues:function(t,e){var n=this,r=n.defs[t],a=[];return a=r&&r.values?r.values:i.values(e,t)},getFilter:function(t){var e=this.defs,n=function(n){var i=!0;return r.each(t,function(t){var a=t.dim,s=t.value,o=t.values,u=!0;!r.isNull(s)&&a&&(u=e[a]&&e[a].group?e[a].group(n)===r.indexOf(o,s):n[a]===s||n[a]===r.indexOf(o,s)),i=i&&u}),i};return n},drawTitles:function(t,e){var n=this,i=n.dims;r.each(t,function(t){n.drawFacetTitle("col",t,e)}),n.drawDimTitle("col",i[0],e)},generateFacets:function(){},drawFacetTitle:function(t,e,n){var i=this,a=i.facetTitle,s=a.titleOffset,o="row"===t?a.rowTitle:a.colTitle,u=e.region,c=u.start,l=u.end,h="row"===t?"y":"x",f="row"===t?"x":"y",g={};g[h]=(l[h]-c[h])/2+c[h],g[f]=l[f];var p="x"===h?-1:1,v=r.mix({text:e[h+"Value"]},o.title);v[h]=g[h],v[f]=g[f]+s*p,n.addShape("Text",{attrs:v})},drawDimTitle:function(t,e,n){if(!r.isNull(e)){var i=this,a=i.plotRange,s=i.defs,o="row"===t?"y":"x",u=i.facetTitle,c=u.titleOffset,l="x"===o?u.colDimTitle:u.rowDimTitle,h=s[e]&&s[e].alias||e,f={};f="x"===o?{y:a.tl.y+(c+40)*-1,x:(a.tr.x-a.tl.x)/2+a.tl.x}:{x:a.tr.x+(c+40),y:(a.br.y-a.tr.y)/2+a.tr.y},h=r.mix({text:h,x:f.x,y:f.y},l.title),n.addShape("Text",{attrs:h})}}}),t.exports=a},function(t,e,n){"use strict";function r(t,e){if(a.isNumeric(t)&&a.isNumeric(e))return s.number(t,e);if(a.isString(t)&&a.isString(e)){
	var n=new u(t),r=new u(e);if(n.getType()&&r.getType())return o.color(n,r)}}function i(t,e){if(a.isNumeric(t)&&a.isNumeric(e))return s.unNumber(t,e);if(a.isString(t)&&a.isString(e)){var n=new u(t),r=new u(e);if(n.getType()&&r.getType())return o.unColor(n,r)}}var a=n(1),s=n(182),o=n(179),u=n(37);t.exports={singular:r,unSingular:i}},function(t,e,n){"use strict";var r=n(44),i=n(1),a=n(36),s=function(t){s.superclass.constructor.call(this,t)};i.extend(s,r),i.augment(s,{type:"linear",isLinear:!0,min:null,max:null,nice:!1,tickCount:5,tickInterval:null,init:function(){var t=this;if(t.ticks){var e=t.ticks,n=t.translate(e[0]),r=t.translate(e[e.length-1]);(i.isNull(t.min)||t.min>n)&&(t.min=n),(i.isNull(t.max)||t.max<r)&&(t.max=r)}else t.min=t.translate(t.min),t.max=t.translate(t.max),t.initTicks()},calculateTicks:function(){var t=this,e=t.min,n=t.max,r=t.tickCount,i=t.tickInterval,s=a.caculate({min:e,max:n,minCount:r,maxCount:r,interval:i});return s.ticks},initTicks:function(){var t=this,e=t.calculateTicks();if(t.nice)t.ticks=e,t.min=e[0],t.max=e[e.length-1];else{var n=[];i.each(e,function(e){e>=t.min&&e<=t.max&&n.push(e)}),t.ticks=n}},scale:function(t){if(null===t||void 0===t)return NaN;var e=this.max,n=this.min;if(e===n)return 0;var r=(t-n)/(e-n),i=this.rangeMin(),a=this.rangeMax();return i+r*(a-i)},invert:function(t){var e=(t-this.rangeMin())/(this.rangeMax()-this.rangeMin());return this.min+e*(this.max-this.min)}}),t.exports=s},function(t,e,n){"use strict";var r=n(1),i=function(t){r.mix(this,t),this.init()};r.augment(i,{formatter:null,range:[0,1],ticks:null,init:function(){},getTicks:function(){var t=this,e=t.ticks,n=[];return r.each(e,function(e){var i;i=r.isObject(e)?e:{text:t.getText(e),value:t.scale(e)},n.push(i)}),n},getText:function(t){var e=this.formatter;return t=e?e(t):t,!r.isNull(t)&&t.toString||(t=""),t.toString()},rangeMin:function(){return this.range[0]},rangeMax:function(){var t=this.range;return t[t.length-1]},invert:function(){},translate:function(t){return t},scale:function(){},clone:function(){var t=this,e=t.constructor,n={};return r.each(t,function(e,r){n[r]=t[r]}),new e(n)},change:function(t){return this.ticks=null,r.mix(this,t),this.init(),this}}),t.exports=i},function(t,e,n){"use strict";var r=n(1),i=n(34),a=n(2),s=function(t){s.superclass.constructor.call(this,t),this.colRange={},this.binWidth||(this.binWidth=.03)};r.extend(s,i),r.augment(s,{type:"bin",binWidth:.03,colRange:{},binDims:null,setRange:function(t,e){this.colRange[t]=e},getStatDims:function(){return this.getDims()},getBinDims:function(){var t=this.binDims||this.getDims(),e=[];return r.each(t,function(t){t.indexOf("..")===-1&&e.push(t)}),e},getBinWidth:function(){return this.binWidth||.03},getCenterValue:function(t,e,n){var r,i=this.getBinWidth(),a=(t-n)/(e-n);return 1===a&&(a-=i/4),r=(e-n)*(Math.floor(a/i)*i+i/2)+n},toBin:function(t){for(var e=this,n=e.getBinDims(),r=0;r<n.length;r++){var i=n[r],a=t[i],s=e.getDimRange(i);t[i]=e.getCenterValue(a,s.max,s.min)}},getDimRange:function(t){var e=this,n=e.cacheRange;return n[t]||{min:0,max:0}},preExecute:function(t){var e=this,n=a.merge.apply(null,t),i=e.getStatDims(),s=e.colRange,o={};r.each(i,function(t){if(s[t])o[t]=s[t];else{var e=a.range(n,t);o[t]={min:e[0],max:e[1]}}}),e.cacheRange=o},execFrame:function(t){var e=this,n=t.toJSON();return r.each(n,function(t){e.toBin(t)}),new a(n)},getRegion:function(){return[{x:0,y:0}]}}),t.exports=s},function(t,e){"use strict";var n="#4E7CCC",r='"Helvetica Neue", Helvetica, "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei", "\u5fae\u8f6f\u96c5\u9ed1", SimSun, "sans-serif"',i={defaultColor:n,plotCfg:{margin:[20,80,60,80]},facetCfg:{type:"rect",margin:10,facetTitle:{titleOffset:16,colDimTitle:{title:{fontSize:14,textAlign:"center",fill:"#999"}},colTitle:{title:{fontSize:12,textAlign:"center",fill:"#999"}},rowTitle:{title:{fontSize:12,textAlign:"center",rotate:90,fill:"#999"}},rowDimTitle:{title:{fontSize:12,textAlign:"center",rotate:90,fill:"#999"}}}},binWidth:.03,fontFamily:r,colors:{"default":["#4E7CCC","#36B3C3","#4ECDA5","#94E08A","#E2F194","#EDCC72","#F8AB60","#F9815C","#EB4456","#C82B3D"],intervalStack:["#4E7CCC","#36B3C3","#4ECDA5","#94E08A","#E2F194","#EDCC72","#F8AB60","#F9815C","#EB4456","#C82B3D"]},shapes:{point:["hollowCircle","hollowSquare","hollowDiamond","hollowBowtie","hollowTriangle","hollowHexagon","cross","tick","plus","hyphen","line"],line:["line","dash","dot"],area:["area"]},hues:["red","yellow","green","blue","orange","purple","pink","brown","white","gray","black"],axis:{top:{position:"top",titleOffset:30,title:{fontSize:12,fill:"#999"},labels:{label:{fill:"#404040",fontSize:12}},tickLine:{lineWidth:1,stroke:"#ccc",value:5}},bottom:{position:"bottom",titleOffset:45,labelOffset:20,title:{fontSize:12,textAlign:"center",fill:"#999"},labels:{label:{fill:"#404040",fontSize:12}},line:{lineWidth:1,stroke:"#ccc"},tickLine:{lineWidth:1,stroke:"#ccc",value:5}},left:{position:"left",titleOffset:60,labelOffset:13,title:{fontSize:12,fill:"#999"},labels:{label:{fill:"#404040"}},line:{lineWidth:1,stroke:"#ccc"},tickLine:{lineWidth:1,stroke:"#ccc",value:5},grid:{line:{stroke:"#d9d9d9",lineWidth:1,lineDash:[2,2]}}},right:{position:"right",titleOffset:60,labelOffset:13,title:{fontSize:12,fill:"#999"},labels:{label:{fill:"#404040"}},line:{lineWidth:1,stroke:"#ccc"},tickLine:{lineWidth:1,stroke:"#ccc",value:5}},circle:{labelOffset:5,line:{lineWidth:1,stroke:"#ccc"},grid:{line:{stroke:"#d9d9d9",lineWidth:1,lineDash:[1,3]}},labels:{label:{fill:"#404040"}}},gauge:{grid:null,labelOffset:5,tickLine:{lineWidth:1,value:-20,stroke:"#ccc"},subTick:5,labels:{label:{fill:"#404040"}}},clock:{grid:null,labelOffset:5,tickLine:{lineWidth:1,value:-20,stroke:"#C0D0E0"},subTick:5,labels:{label:{fill:"#404040"}}},radius:{titleOffset:45,labels:{label:{fill:"#404040"}},line:{lineWidth:1,stroke:"#ccc"},grid:{line:{stroke:"#d9d9d9",lineWidth:1,lineDash:[2,2]},type:"circle"}}},labels:{offset:14,label:{fill:"#666",fontSize:12}},treemapLabels:{offset:10,label:{fill:"#fff",fontSize:14,textBaseline:"top",fontStyle:"bold"}},innerLabels:{label:{fill:"#fff",fontSize:12}},thetaLabels:{labelLine:{lineWidth:1},labelHeight:14,offset:30},legend:{right:{position:"right",back:null,spacingX:10,spacingY:12,markerAlign:"center",wordSpaceing:12},left:{position:"left",back:null,spacingX:10,spacingY:12,markerAlign:"center",wordSpaceing:12},top:{position:"top",title:null,back:null,spacingX:16,spacingY:10,markerAlign:"center",wordSpaceing:12},bottom:{position:"bottom",title:null,back:null,spacingX:16,spacingY:10,markerAlign:"center",wordSpaceing:12},size:{width:20,height:156}},tooltip:{crosshairs:!1,offset:15,crossLine:{stroke:"#666"},wordSpaceing:6,markerCfg:{symbol:"circle",radius:3}},activeShape:{point:{radius:5,fillOpacity:.7},hollowPoint:{lineWidth:2,radius:4},interval:{fillOpacity:.7},hollowInterval:{lineWidth:2},area:{fillOpacity:.85},hollowArea:{lineWidth:2},line:{lineWidth:2},polygon:{fillOpacity:.75}},shape:{point:{lineWidth:1,fill:n,radius:4},hollowPoint:{fill:"#fff",lineWidth:1,stroke:n,radius:3},interval:{lineWidth:0,fill:n,fillOpacity:.85},pie:{lineWidth:1,stroke:"#fff"},hollowInterval:{fill:"#fff",stroke:n,fillOpacity:0,lineWidth:1},area:{lineWidth:0,fill:n,fillOpacity:.6},polygon:{lineWidth:0,fill:n,fillOpacity:1},hollowPolygon:{fill:"#fff",stroke:n,fillOpacity:0,lineWidth:1},hollowArea:{fill:"#fff",stroke:n,fillOpacity:0,lineWidth:1},line:{stroke:n,lineWidth:1,fill:null}},guide:{text:{fill:"#666",fontSize:12},line:{stroke:n,lineDash:[0,2,2]},rect:{lineWidth:0,fill:n,fillOpacity:.1},tag:{line:{stroke:n,lineDash:[0,2,2]},text:{fill:"#666",fontSize:12,textAlign:"center"},rect:{lineWidth:0,fill:n,fillOpacity:.1}}},tooltipMarker:{fill:"#fff",symbol:"circle",lineWidth:2,stroke:n,radius:4}};t.exports=i},function(t,e,n){var r=n(1),i=n(12),a=n(66),s=i.GroupBase,o=a.ShowLabels,u="x-chart-axis",c=n(131),l=function(t){l.superclass.constructor.call(this,t)};l.CFG={zIndex:4,ticks:null,line:null,tickLine:null,subTick:null,grid:null,labels:{label:{},autoRotate:!0},title:{},_title:{textBaseline:"middle"},autoPaint:!0,labelOffset:10,titleOffset:20,animate:!1,formatter:null,firstTick:!0},r.mixin(l,[o]),r.extend(l,s),r.augment(l,{_initCfg:function(){this.deepSet("title")},_beforeRenderUI:function(){l.superclass._beforeRenderUI.call(this);var t=this.get("labelOffset");0===t&&this.set("labelOffset",.001)},_renderUI:function(){l.superclass._renderUI.call(this);var t=this.get("labels");t&&this.renderLabels(),this.get("autoPaint")&&this.paint(),this.get("title")&&this.renderTitle(),this.sort()},_parseTicks:function(t){t=t||[];for(var e=t.length,n=0;n<e;n++){var i=t[n];r.isObject(i)||(t[n]=this.parseTick(i,n,e))}return this.set("ticks",t),t},_addTickItem:function(t,e,n){var r=this.get("tickItems"),i={x1:e.x,y1:e.y},a=this.getTickEnd(e,n,t);i.x2=a.x,i.y2=a.y,r||(r=[],this.set("tickItems",r)),r.push(i)},_formatPoint:function(t){var e=this.get("formatter");return e&&(t=e.call(this,t)),t},_renderLines:function(){var t,e=this.get("line");if(e){t=this.getLinePath(),e=r.mix({path:t},e);var n=this.addShape("Path",{elCls:u+"-line",attrs:e});this.set("lineShape",n)}},_processTicks:function(){var t=this,e=t.get("labels"),n=t.get("subTick"),i=t.get("tickLine"),a=t.get("ticks");a=t._parseTicks(a),r.each(a,function(n,r){var a=t.getTickPoint(n.value,r);i&&t._addTickItem(r,a),e&&t.addLabel(t._formatPoint(n.text),a,r)}),n&&r.each(a,function(e,r){var s=r?e.value-a[r-1].value:e.value;s/=t.get("subTick");for(var o=1;o<n;o++){var u={text:"",value:r?a[r-1].value+o*s:o*s};if(i){var c=t.getTickPoint(u.value),l=parseInt(.6*i.value,10);t._addTickItem(o-1,c,l)}}})},_renderTicks:function(){var t=this,e=t.get("tickItems"),n=t.get("tickLine"),i="",a=r.mix({},n);if(e){r.each(e,function(t){var e=r.substitute("M{x1} {y1}L{x2} {y2}",t);i+=e}),delete a.value,a.path=i;var s=t.addShape("Path",{elCls:u+"-ticks",attrs:a});t.set("tickShape",s)}},_renderGrid:function(){var t=this.get("grid");if(t){r.isNull(t.animate)&&(t.animate=this.get("animate"));var e=this.addGroup(c,t);this.set("gridGroup",e)}},paint:function(){this._renderLines(),this._processTicks(),this._renderTicks(),this._renderGrid();var t=this.get("labels");t&&t.autoRotate&&this.autoRotateLabels()},parseTick:function(t,e,n){return{text:t,value:e/(n-1)}},getTextAnchor:function(t){var e,n=Math.abs(t.y/t.x);return e=n>=1?"center":t.x>0?"left":"right"},addLabel:function(t,e,n){var r,i=this.get("labelsGroup"),a={};if(i){var s=this.get("labelOffset")||10,o=this.getSideVector(s,e,n);e={x:e.x+o.x,y:e.y+o.y},a.text=t,a.x=e.x,a.y=e.y,a.textAlign=this.getTextAnchor(o),r=i.addLabel(a)}return r},getMaxLabelWidth:function(t){var e=t.get("children"),n=0;return r.each(e,function(t){var e=t.getBBBox(),r=e.width;n<r&&(n=r)}),n},remove:function(){l.superclass.remove.call(this);var t=this.get("gridGroup");t&&t.remove(),this.removeLabels()},autoRotateLabels:function(){},renderTitle:function(){},getLinePath:function(){},getTickPoint:function(){},getTickEnd:function(){},getSideVector:function(){}}),t.exports=l},function(t,e,n){"use strict";var r=n(9),i=n(12),a=i.GroupBase,s=function(t){s.superclass.constructor.call(this,t)};s.CFG={title:{},titleText:null,plotRange:null,_title:{text:" ",fill:"#333",textBaseline:"middle"},dx:0,dy:0,position:!0},r.extend(s,a),r.augment(s,{_initCfg:function(){s.superclass._initCfg.call(this),r.isNull(this.get("title"))&&this.set("titleText",null),this.deepSet("title")},_beforeRenderUI:function(){s.superclass._beforeRenderUI.call(this);var t=this.get("title");this.set("itemsGroup",this.addGroup()),this.set("titleShape",this.addShape("Text",{attrs:t}))},_renderUI:function(){s.superclass._renderUI.call(this),this._renderTitle()},_renderTitle:function(){var t=this.get("titleShape"),e=this.get("titleText");t.attr({x:0,text:e})},setPosition:function(t){t=t?t:this.get("position");var e=this.get("plotRange");if(e){var n=e.tl,r=e.br,i=this.get("dx"),a=this.get("dy"),s=this.getBBBox().width,o=0,u=0;switch(t){case"top":o=n.x,u=n.y;break;case"left":o=n.x,u=(n.y+r.y)/2;break;case"right":o=r.x-s,u=(n.y+r.y)/2;break;case"bottom":o=(n.x+r.x)/2-s/2,u=r.y}this.move(o+i,u+a),this.set("position",t)}},getCount:function(){return this.get("itemsGroup").get("children").length},getLeaveCount:function(){var t=this.get("itemsGroup"),e=t.get("children"),n=[];return n=r.filter(e,function(t){return t.get("checked")}),n.length},setItems:function(t){this.set("items",t),this.clearItems(),this._renderUI()},addItem:function(t){var e=this.get("items");e.push(t),this.clearItems(),this._renderUI()},clearItems:function(){var t=this.get("itemsGroup");t.clear()}}),t.exports=s},function(t,e,n){var r=n(139);t.exports=r},function(t,e,n){"use strict";function r(t,e){return t>e?e:t}function i(t,e){return t>e?t:e}function a(t,e){this.start=t,this.end=e,this.init()}var s=n(1);a.CFG={start:null,end:null,background:null},s.augment(a,{init:function(){var t=this,e=t.start,n=t.end,a=t.tl={};a.x=r(e.x,n.x),a.y=r(e.y,n.y);var s=t.tr={};s.x=i(e.x,n.x),s.y=r(e.y,n.y);var o=t.bl={};o.x=r(e.x,n.x),o.y=i(e.y,n.y);var u=t.br={};u.x=i(e.x,n.x),u.y=i(e.y,n.y);var c=t.cc={};c.x=(u.x-a.x)/2+a.x,c.y=(u.y-a.y)/2+a.y},reset:function(t,e){this.start=t,this.end=e,this.init()},isInRange:function(t,e){s.isObject(t)&&(e=t.y,t=t.x);var n=this,r=n.tl,i=n.br;return t>=r.x&&t<=i.x&&e>=r.y&&e<=i.y},isInVertical:function(t){s.isObject(t)&&(t=t.y);var e=this,n=e.tl,r=e.br;return t>=n.y&&t<=r.y},isInHorizontal:function(t){s.isObject(t)&&(t=t.x);var e=this,n=e.tl,r=e.br;return t>=n.x&&t<=r.x},getWidth:function(){var t=this.tl,e=this.br;return e.x-t.x},getHeight:function(){var t=this.tl,e=this.br;return e.y-t.y}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(39),a=function(t){t.inner=t.inner||0,a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{type:"polar"}),t.exports=a},function(t,e,n){var r=n(161);t.exports=r},function(t,e,n){"use strict";var r=n(1),i=Math.PI/180,a=180/Math.PI,s=function(t){r.mix(this,t)};r.augment(s,{basic:null,toRadians:function(t){return i*t},toDegrees:function(t){return t*a},project:function(t,e){return{x:t,y:e}},invert:function(t){return{x:t.x,y:t.y}}}),t.exports=s},function(t,e,n){"use strict";var r=n(1),i=n(10),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{type:"region"}),t.exports=a},function(t,e,n){"use strict";var r=n(34),i=n(1),a=n(2),s=function(t){s.superclass.constructor.call(this,t)};i.extend(s,r),i.augment(s,{type:"smooth",bandWidth:.01,colRange:{},setRange:function(t,e){this.colRange[t]=e},getStatDims:function(){var t=this,e=t.getDims(),n=e.length,r=[e[n-1]];return r},execSmooth:function(t){return t},getXDim:function(){var t=this,e=t.getDims();if(e.length<2)throw"you must support the x,y dimension!!!";return e[0]},getYDim:function(){var t=this,e=t.getDims();if(e.length<2)throw"you must support the x,y dimension!!!";return e[1]},getZDim:function(){var t=this,e=t.getDims();if(e.length<3)throw"you must support the x,y,z dimension!!!";return e[2]},getData:function(t){var e=[],n=this.dims;return t.each(function(t){var r=[];i.each(n,function(e){r.push(t[e])}),e.push(r)}),e},getDimRange:function(t,e){var n=this,r=n.colRange[e];if(!r){var i=a.range(t,e);r={min:i[0],max:i[1]}}return r},gatStep:function(t,e){var n=this,r=n.getDimRange(t,e),i=r.min,a=r.max,s=n.bandWidth,o=(a-i)*s;return o},getInterArray:function(t,e){for(var n=this,r=n.gatStep(t,e),i=n.getDimRange(t,e),a=i.min,s=i.max,o=[],u=a;u<=s;u+=r)o.push(u);return o},execFrame:function(t){var e=this,n=e.getXDim(),r=e.getYDim();t=a.sort(t,n);var s=e.getData(t),o=e.getInterArray(t,n),u=e.execSmooth(s,o,t),c=t.rowObject(0),l=[];return i.each(u,function(t){var e=i.mix({},c);e[n]=t[0],e[r]=t[1],l.push(e)}),new a(l)}}),t.exports=s},function(t,e,n){"use strict";function r(t,e,n,r){return{x:Math.cos(r)*n+t,y:Math.sin(r)*n+e}}function i(t,e,n,r){if(r){if(t<e)var i=e-t,a=2*Math.PI-n+t;else if(t>n)var i=2*Math.PI-t+e,a=t-n}else var i=t-e,a=n-t;return i>a?n:e}function a(t,e,n,r){var a=0;return n-e>=2*Math.PI&&(a=2*Math.PI),e=l.mod(e,2*Math.PI),n=l.mod(n,2*Math.PI)+a,t=l.mod(t,2*Math.PI),r?e>=n?t>n&&t<e?t:i(t,n,e,!0):t<e||t>n?t:i(t,e,n):e<=n?e<t&&t<n?t:i(t,e,n,!0):t>e||t<n?t:i(t,n,e)}function s(t,e,n,r,i,s,o,u,l){var h=new c(o,u),f=new c(t,e),g=new c(1,0),p=c.sub(h,f),v=g.angleTo(p);v=a(v,r,i,s);var d=new c(n*Math.cos(v)+t,n*Math.sin(v)+e);l&&(l.x=d.x,l.y=d.y);var x=h.distanceTo(d);return x}function o(t,e,n,i,s,o){var u=0,c=Math.PI/2,l=Math.PI,f=3*Math.PI/2,g=[],p=a(u,i,s,o);p===u&&g.push(r(t,e,n,u)),p=a(c,i,s,o),p===c&&g.push(r(t,e,n,c)),p=a(l,i,s,o),p===l&&g.push(r(t,e,n,l)),p=a(f,i,s,o),p===f&&g.push(r(t,e,n,f)),g.push(r(t,e,n,i)),g.push(r(t,e,n,s));var v=1/0,d=-(1/0),x=1/0,m=-(1/0);return h.each(g,function(t){v>t.x&&(v=t.x),d<t.x&&(d=t.x),x>t.y&&(x=t.y),m<t.y&&(m=t.y)}),{minX:v,minY:x,maxX:d,maxY:m}}var u=n(3),c=u.Vector2,l=n(4),h=n(1);t.exports={nearAngle:a,projectPoint:function(t,e,n,r,i,a,o,u){var c={};return s(t,e,n,r,i,a,o,u,c),c},pointDistance:s,box:o}},function(t,e,n){"use strict";function r(t,e,n,r,i){var a=1-i;return a*a*(a*r+3*i*n)+i*i*(i*t+3*a*e)}function i(t,e,n,r,i){var a=1-i;return 3*(((e-t)*a+2*(n-e)*i)*a+(r-n)*i*i)}function a(t,e,n,i,a,s,o,c,l,h,f){for(var g,p=.005,v=1/0,d=1e-4,x=new u(l,h),m=0;m<1;m+=.05){var y=new u(r(t,n,a,o,m),r(e,i,s,c,m)),_=y.distanceToSquared(x);_<v&&(g=m,v=_)}for(var v=1/0,S=0;S<32&&!(p<d);S++){var w=g-p,b=g+p,y=new u(r(t,n,a,o,w),r(e,i,s,c,w)),_=y.distanceToSquared(x);if(w>=0&&_<v)g=w,v=_;else{var M=new u(r(t,n,a,o,b),r(e,i,s,c,b)),A=M.distanceToSquared(x);b<=1&&A<v?(g=b,v=A):p*=.5}}return f&&(f.x=r(t,n,a,o,g),f.y=r(e,i,s,c,g)),Math.sqrt(v)}function s(t,e,n,r){var i=3*t-9*e+9*n-3*r,a=6*e-12*n+6*r,s=3*n-3*r,o=[];if(c.equal(i,0)){if(!c.equal(a,0)){var u=-s/a;u>=0&&u<=1&&o.push(u)}}else{var l=a*a-4*i*s;if(c.equal(l,0))o.push(-a/(2*i));else if(l>0){var h=Math.sqrt(l),u=(-a+h)/(2*i),f=(-a-h)/(2*i);u>=0&&u<=1&&o.push(u),f>=0&&f<=1&&o.push(f)}}return o}var o=n(3),u=o.Vector2,c=n(4);t.exports={at:r,derivativeAt:i,projectPoint:function(t,e,n,r,i,s,o,u,c,l){var h={};return a(t,e,n,r,i,s,o,u,c,l,h),h},pointDistance:a,extrema:s}},function(t,e,n){"use strict";function r(t,e,n,r){var i=1-r;return i*(i*t+2*r*e)+r*r*n}function i(t,e,n,i,a,s,o,c,l){for(var h,f=.005,g=1/0,p=1e-4,v=new u(o,c),d=0;d<1;d+=.05){var x=new u(r(t,n,a,d),r(e,i,s,d)),m=x.distanceToSquared(v);m<g&&(h=d,g=m)}for(var g=1/0,y=0;y<32&&!(f<p);y++){var _=h-f,S=h+f,x=new u(r(t,n,a,_),r(e,i,s,_)),m=x.distanceToSquared(v);if(_>=0&&m<g)h=_,g=m;else{var w=new u(r(t,n,a,S),r(e,i,s,S)),b=w.distanceToSquared(v);S<=1&&b<g?(h=S,g=b):f*=.5}}return l&&(l.x=r(t,n,a,h),l.y=r(e,i,s,h)),Math.sqrt(g)}function a(t,e,n){var r=t+n-2*e;if(o.equal(r,0))return[.5];var i=(t-e)/r;return i<=1&&i>=0?[i]:[]}var s=n(3),o=n(4),u=s.Vector2;t.exports={at:r,projectPoint:function(t,e,n,r,a,s,o,u){var c={};return i(t,e,n,r,a,s,o,u,c),c},pointDistance:i,extrema:a}},function(t,e,n){"use strict";var r=n(1),i={splitPoints:function(t){var e=[],n=t.x,i=t.y;return i=r.isArray(i)?i:[i],r.each(i,function(t,i){var a={x:r.isArray(n)?n[i]:n,y:t};e.push(a)}),e}};t.exports=i},[332,100,61],function(t,e){"use strict";function n(){var t=document.createElement("i");return t.title="Web Colour Picker",t.style.display="none",document.body.appendChild(t),t}var r=/rgb\((\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/;t.exports={toRGB:function(){var t;return document.body&&(t=n()),function(e){t||(t=n()),t.style.color=e;var i=document.defaultView.getComputedStyle(t,"").getPropertyValue("color"),a=r.exec(i);return a.shift(),this.arr2rgb(a)}}(),toHex:function(t){return t=Math.round(t),t=t.toString(16),1===t.length&&(t="0"+t),t},hsl2Rgb:function(t){var e=t[0],n=t[1],r=t[2],i={};if(0===n)i.r=i.g=i.b=r;else{var a=function(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t},s=r<=.5?r*(1+n):r+n-r*n,o=2*r-s;i.r=a(o,s,e+1/3),i.g=a(o,s,e),i.b=a(o,s,e-1/3)}return i.r=Math.min(Math.round(255*i.r),255),i.g=Math.min(Math.round(255*i.g),255),i.b=Math.min(Math.round(255*i.b),255),"#"+this.toHex(i.r)+this.toHex(i.g)+this.toHex(i.b)},rgb2hsl:function(t){var e,n,r,i=this.rgb2arr(t),a=i[0]/255,s=i[1]/255,o=i[2]/255,u=Math.min(a,s,o),c=Math.max(a,s,o),l=c-u;return c==u?e=0:a==c?e=(s-o)/l:s==c?e=2+(o-a)/l:o==c&&(e=4+(a-s)/l),e=Math.min(60*e,360),e<0&&(e+=360),r=(u+c)/2,n=c==u?0:r<=.5?l/(c+u):l/(2-c-u),[e/360,n,r]},arr2rgb:function(t){return"#"+this.toHex(t[0])+this.toHex(t[1])+this.toHex(t[2])},rgb2arr:function(t){var e=[];return e.push(parseInt(t.substr(1,2),16)),e.push(parseInt(t.substr(3,2),16)),e.push(parseInt(t.substr(5,2),16)),e}}},function(t,e,n){"use strict";var r=n(16),i=n(1),a=function(t){a.superclass.constructor.call(this,t)};i.extend(a,r),i.augment(a,{getEndAttrs:function(){var t=this.get("rect"),e={width:t.width,height:t.height};return e},getTarget:function(){var t=this.get("group"),e=t.getParent(),n=e.addShape("Rect");return t.attr("clip",n),n}}),t.exports=a},function(t,e,n){"use strict";var r=n(29),i=n(23),a=i.Group,s=function(t){s.superclass.constructor.call(this,t),this._beforeRenderUI(),this._renderUI(),this._bindUI()};s.CFG={},r.extend(s,a),r.augment(s,{_beforeRenderUI:function(){this._initCfg(),this._multiRatioCfg()},_renderUI:function(){},_multiRatioCfg:function(){},_initCfg:function(){},_bindUI:function(){}}),t.exports=s},function(t,e,n){t.exports={GMixin:n(127),GroupBase:n(63),GroupMixin:n(128)}},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(47),a=n(9),s="x-chart-axis",o=n(3),u=o.Vector2,c=n(4);r.CFG={zIndex:4,x:null,y:null,elCls:s,line:{lineWidth:1,stroke:"#C0D0E0"},tickLine:{lineWidth:1,stroke:"#C0D0E0",value:5},isVertical:!1,start:null,end:null},a.extend(r,i),a.augment(r,{_beforeRenderUI:function(){r.superclass._beforeRenderUI.call(this)},_getAvgLabelLength:function(t){var e=t.get("children");return e[1].attr("x")-e[0].attr("x")},getSideVector:function(t){var e=this,n=e.get("factor"),r=e.get("isVertical"),i=e.get("start"),a=e.get("end"),s=e.getAxisVector(),o=s.normalize(),u=!1;(r&&i.y<a.y||!r&&i.x>a.x)&&(u=!0);var c=o.vertical(u);return c.multiplyScaler(t*n)},getAxisVector:function(){var t=this.get("start"),e=this.get("end");return new u(e.x-t.x,e.y-t.y)},getLinePath:function(){var t=this,e=t.get("start"),n=t.get("end"),r=[];return r.push(["M",e.x,e.y]),r.push(["L",n.x,n.y]),r},getTickEnd:function(t,e){var n,r=this,i=r.get("tickLine");return e=e?e:i.value,n=r.getSideVector(e),{x:t.x+n.x,y:t.y+n.y}},getTickPoint:function(t){var e=this,n=e.get("start"),r=e.get("end"),i=r.x-n.x,a=r.y-n.y;return{x:n.x+i*t,y:n.y+a*t}},renderTitle:function(){var t=this,e=t.get("title"),n=t.getTickPoint(.5),r=t.get("titleOffset"),i=t.get("labelsGroup");if(i){var o=t.getMaxLabelWidth(i),l=t.get("labelOffset")||10;o+l+20<r&&(r=o+l+20)}var h=a.mix({},e);if(e.text){var f=t.getSideVector(r),g={x:n.x+f.x,y:n.y+f.y},p=t.getAxisVector(),v=0;if(!c.equal(p.y,0)){var d=new u(1,0),x=new u(p.x,p.y);v=x.angleTo(d,!0)}h.rotate=v*(180/Math.PI),h.x=g.x,h.y=g.y,t.addShape("Text",{elCls:s+"-title",attrs:h})}},autoRotateLabels:function(){var t=this,e=t.get("labelsGroup"),n=t.get("title");if(e){var r,i,s=t.get("labelOffset")||10,o=s,u=t.get("titleOffset"),l=t.getAxisVector();if(c.equal(l.x,0)&&n.text)i=t.getMaxLabelWidth(e),i+s>u-o&&(r=Math.acos((u-o)/(i+s))*-1);else if(c.equal(l.y,0)&&e.getCount()>1){var h=Math.abs(t._getAvgLabelLength(e));i=t.getMaxLabelWidth(e),i>h&&(r=Math.atan2(1.5*s,h))}if(r){var f=t.get("factor");a.each(e.get("children"),function(t){t.rotateAtStart(180*r/Math.PI),c.equal(l.y,0)&&(f>0?t.attr("textAlign","left"):t.attr("textAlign","right"))})}}}}),t.exports=r},function(t,e,n){var r=n(67);r.ShowLabels=n(135),t.exports=r},function(t,e,n){"use strict";var r=n(12),i=r.GroupBase,a=n(1),s=function(t){s.superclass.constructor.call(this,t)};s.CFG={zIndex:6,items:null,label:null,_label:{fontSize:12,textBaseline:"middle"},renderer:null,custom:!1,animate:!1,html:'<div class="g-labels" style="position:absolute;top:0;left:0;"></div>',itemTpl:'<div class="g-label" style="position:absolute;">{text}</div>',duration:400},a.extend(s,i),a.augment(s,{_initCfg:function(){s.superclass._initCfg.call(this),this.deepSet("label")},_renderUI:function(){s.superclass._renderUI.call(this),this._drawLabels()},_drawLabels:function(){var t=this,e=t.get("items");a.each(e,function(e,n){t._addLabel(e,n)})},_addLabel:function(t,e){var n=this._getLabelCfg(t,e);return this._createText(n)},_getLabelCfg:function(t,e){var n=this.get("label")||{},r=this.get("renderer");if(!a.isObject(t)){var i=t;t={},t.text=i}r&&(t.text=r(t.text,t,e)),a.isNull(t.text)&&(t.text=""),t.text=t.text.toString();var s=a.mix({},t,n,{x:(t.x||0)+(n.x||0),y:(t.y||0)+(n.y||0)});return s},_createText:function(t){var e=this,n=e.get("custom"),r=e.get("customDiv");if(!n)return this.addShape("Text",{attrs:t});if(!r){var i=e.get("html"),s=e.get("canvas").get("el").parentNode;r=a.createDom(i),s.style.position="relative",s.appendChild(r),e.set("customDiv",r)}var o=e._createDom(t);r.appendChild(o),e._setCustomPosition(t,o)},_setCustomPosition:function(t,e){var n=t.textAlign||"left",r=t.y,i=t.x,s=a.getWidth(e),o=a.getHeight(e);r-=o/2,"middle"===n?i-=s/2:"end"===n&&(i-=s),e.style.top=parseInt(r,10)+"px",e.style.left=parseInt(i,10)+"px"},_createDom:function(t){var e=this,n=e.get("itemTpl"),r=a.substitute(n,t),i=a.createDom(r);return i},getLabels:function(){var t=this,e=t.get("customDiv");return e?a.toArray(e.childNodes):t.get("children")},addLabel:function(t){var e=this.get("items"),n=e.length;return e.push(t),this._addLabel(t,n)},changeLabel:function(t,e){var n,r,i=this,s=i.get("custom");if(n=a.indexOf(i.get("children"),t),r=i._getLabelCfg(e,n),t)if(s){var o=i._createDom(r);t.innerHTML=o.innerHTML,i._setCustomPosition(r,t)}else if(t.attr("text",r.text),t.attr("x")!==r.x||t.attr("y")!==r.y){var u=t.get("attrs").rotate;u&&t.rotateAtStart(-u),t.attr(r),u&&t.rotateAtStart(u)}},clear:function(){var t=this,e=t.get("customDiv");e&&(e.innerHTML=""),s.superclass.clear.call(t)},setItems:function(t){var e=this;e.clear(),e.set("items",t),e._drawLabels()}}),t.exports=s},function(t,e,n){"use strict";var r=n(1),i=n(12),a=n(50),s=i.GroupBase,o=function(t){o.superclass.constructor.call(this,t)};o.CFG={type:"plotBack",margin:null,border:null,plotRange:null,background:null},r.extend(o,s),r.augment(o,{_beforeRenderUI:function(){this._calculateRange()},_renderUI:function(){this._renderBorder(),this._renderBackground()},_renderBorder:function(){var t,e=this,n=e.get("border"),i=e.get("canvas"),a=e.get("borderShape");if(n){var s=e.get("width")||i.get("width"),o=e.get("height")||i.get("height");a?a.attr({x:0,y:0,width:s,height:o}):(t=r.mix({x:0,y:0,width:s,height:o},n),a=this.addShape("Rect",{attrs:t}),this.set("borderShape",a))}},_renderBackground:function(){var t,e,n,i,a=this,s=a.get("background"),o=a.get("plotRange"),u=a.get("backShape");s&&(t=o.getWidth(),e=o.getHeight(),n=o.tl,i={x:n.x,y:n.y,width:t,height:e},u?u.attr(i):(s.image?(i.img=s.image,u=a.addShape("Image",{attrs:i})):(r.mix(i,s),u=a.addShape("Rect",{attrs:i})),a.set("backShape",u)))},_calculateRange:function(){var t,e,n=this,i=n.get("margin"),s=n.get("canvas"),o=n.get("width")||s.get("width"),u=n.get("height")||s.get("height"),c=n.get("plotRange"),l=0,h=0,f=0,g=0;r.isNumber(i)&&(l=h=f=g=i),r.isArray(i)&&(l=i[0],f=r.isNull(i[1])?i[0]:i[1],g=r.isNull(i[2])?i[0]:i[2],h=r.isNull(i[3])?f:i[3]),t={x:h,y:u-g},e={x:o-f,y:l},c?c.reset(t,e):(c=new a(t,e),n.set("plotRange",c))},repaint:function(){return this._calculateRange(),this._renderBorder(),this._renderBackground(),this}}),t.exports=o},function(t,e,n){var r=n(142);t.exports=r},function(t,e,n){"use strict";var r=n(9),i=n(28),a=i.G,s=a.Group,o=function(t){o.superclass.constructor.call(this,t),this._beforeRenderUI(),this._renderUI(),this._bindUI()};o.CFG={},r.extend(o,s),r.augment(o,{_beforeRenderUI:function(){this._initCfg()},_renderUI:function(){},_initCfg:function(){},_bindUI:function(){}}),t.exports=o},function(t,e,n){"use strict";var r=n(38),i=n(72),a=n(51),s=n(158),o=n(157),u=n(39),c=n(159),l=n(154),h=n(155),f=n(156);r.Cartesian=i,r.Rect=i,r.Polar=a,r.Theta=s,r.Rho=o,r.Plus=u,r.TriAngle=c,r.Clock=l,r.Gauge=h,r.Map=f,t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(38),a=function(t){var e={};r.mix(e,a.ATTRS,t),a.superclass.constructor.call(this,e),this._init()};a.ATTRS={start:{x:0,y:0},end:{x:0,y:0}},r.extend(a,i),r.augment(a,{type:"cartesian",isRect:!0,_init:function(){var t=this,e=t.get("start"),n=t.get("end"),r={start:e.x,end:n.x},i={start:e.y,end:n.y};t.set("x",r),t.set("y",i)},convertPoint:function(t){var e=this,n=e.isTransposed?t.y:t.x,r=e.isTransposed?t.x:t.y;return{x:this.convertDim(n,"x"),y:this.convertDim(r,"y")}},invertPoint:function(t){var e=this,n=this.invertDim(t.x,"x"),r=this.invertDim(t.y,"y"),i={};return i.x=e.isTransposed?r:n,i.y=e.isTransposed?n:r,i}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(74),a=n(2),s=n(30),o=function(t){o.superclass.constructor.call(this,t)};r.extend(o,i),r.augment(o,{dims:[],cols:5,rows:null,drawTitles:function(t,e){var n=this,i=n.dims;r.each(t,function(t){n.drawFacetTitle("col",t,e)}),n.drawDimTitle("col",i[0],e)},getRegion:function(t,e,n,r){var i=this,a=i.plotRange,s=i.margin,o=a.tl,u=a.br,c=(u.x-o.x)/e,l=(u.y-o.y)/t,h={x:o.x+c*n,y:o.y+l*(r+1)-s},f={x:h.x+c-s,y:h.y-l+s};return{start:h,end:f}},generateFacets:function(t){var e=this,n=e.dims,i=n[0];if(!i)throw new Error("Please specify for the field for facet!");var o=e.getDimValues(i,t),u=o.length,c=e.cols,l=parseInt((u+c-1)/c,10),h=[],f=0;return r.each(o,function(n,r){var g=parseInt(r/c,10),p=r%c,v=[{dim:i,value:n,values:o}],d=e.getFilter(v),x=a.filter(t,d),m=new s({type:e.type,count:u,xValue:n,xDim:i,yValue:n,yDim:i,colIndex:p,rowIndex:g,cols:c,rows:l,frame:x,region:e.getRegion(l,c,p,g),index:f++});h.push(m)}),h}}),t.exports=o},function(t,e,n){"use strict";var r=n(1),i=n(2),a=n(41),s=n(30),o=function(t){o.superclass.constructor.call(this,t)};r.extend(o,a),r.augment(o,{dims:[],defs:{},type:"rect",plotRange:null,drawTitles:function(t,e){if(!(t.length<=1)){var n=this,i=t[0];r.each(t,function(t){t.cols>0&&t.rowIndex===t.rows-1&&n.drawFacetTitle("col",t,e),t.rows>0&&t.colIndex===t.cols-1&&n.drawFacetTitle("row",t,e)}),i&&(i.cols>1&&n.drawDimTitle("col",i.xDim,e),i.rows>1&&n.drawDimTitle("row",i.yDim,e))}},getRegion:function(t,e,n,r){var i=this,a=i.plotRange,s=1===t&&1===e?0:i.margin,o=a.bl,u=a.tr,c=(u.x-o.x)/e,l=(u.y-o.y)/t,h={x:o.x+c*n,y:o.y+l*r-s},f={x:h.x+c-s,y:h.y+l+s};return{start:h,end:f}},generateFacets:function(t){var e=this,n=e.dims,a=[],o=1,u=1,c=n[0],l=n[1],h=[""],f=[""];c&&(h=e.getDimValues(c,t),u=h.length),l&&(f=e.getDimValues(l,t),o=f.length);var g=0;return r.each(h,function(n,p){r.each(f,function(r,v){var d=[{dim:c,value:n,values:h},{dim:l,value:r,values:f}],x=e.getFilter(d),m=i.filter(t,x),y=new s({type:e.type,xValue:n,yValue:r,xDim:c,yDim:l,colIndex:p,rowIndex:v,cols:u,rows:o,frame:m,region:e.getRegion(o,u,p,v),index:g++});a.push(y)})}),a}}),t.exports=o},function(t,e,n){var r=n(31);n(76),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(77),a=n(31);r.mix(a,{values:function(t,e){var n=[],r={},a=t.colArray(e);a=i.formatArray(a);for(var s=0,o=a.length;s<o;s++){var u=a[s];r[u]||void 0===u||(r[u]=!0,n.push(u))}return n},group:function(t,e){if(!e)return[t];var n=a.groupToMap(t,e),r=[];for(var i in n)n.hasOwnProperty(i)&&r.push(n[i]);return r},groupToMap:function(t,e){var n=t.colNames(),i={};if(!e)return{0:t};if(!r.isFunction(e)){var s=r.isArray(e)?e:e.replace(/\s+/g,"").split("*");e=function(t){for(var e="",n=0,r=s.length;n<r;n++)e+=t[s[n]].toString();return e}}t.each(function(t){var n=e(t);i[n]?i[n].push(t):i[n]=[t]});for(var o in i)i.hasOwnProperty(o)&&(i[o]=new a(i[o],{names:n.slice(0)}));return i},merge:function(){for(var t=r.toArray(arguments),e=t[0],n=e.colNames(),i=e.colCount(),s=[],o=0;o<i;o++){s[o]=[];for(var u=0;u<t.length;u++){var c=t[u].colArray(o);s[o]=s[o].concat(c)}}return new a(s,{names:n})},sort:function(t,e){var n=t.toJSON();return n.sort(function(t,n){return t[e]-n[e];
	}),new a(n,{names:t.colNames()})}}),t.exports=a},function(t,e,n){"use strict";var r=n(1);t.exports={filterNull:function(t){var e=[];return r.each(t,function(t){r.isNull(t)||e.push(t)}),e},mixIf:function(t,e,n){r.each(n,function(n){t[n]=e[n]})},formatArray:function(t){var e=[];return r.each(t,function(t){r.isArray(t)?e=e.concat(t):e.push(t)}),e}}},function(t,e){var n={uniform:function(t){return Math.abs(t)<1?.5:0},triangular:function(t){return Math.abs(t)<1?1-Math.abs(t):0},epanechnikov:function(t){return Math.abs(t)<1?.75*(1-t*t):0},quartic:function(t){return Math.abs(t)<1?.9375*Math.pow(1-t*t,2):0},triweight:function(t){return Math.abs(t)<1?35/32*Math.pow(1-t*t,3):0},tricube:function(t){return Math.abs(t)<1?70/81*Math.pow(1-Math.pow(Math.abs(t),3),3):0},gaussian:function(t){return Math.abs(t)<3?1/Math.sqrt(2*Math.PI)*Math.exp(-.5*t*t):0},cosine:function(t){return Math.abs(t)<1?Math.PI/4*Math.cos(Math.PI/2*t):0}};t.exports=n},function(t,e,n){var r=n(1),i=n(44);i.Linear=n(43),i.linear=function(t){return new i.Linear(t)},i.Cat=n(33),i.cat=function(t){return new i.Cat(t)},i.Pow=n(210),i.pow=function(t){return new i.Pow(t)},i.Log=n(208),i.log=function(t){return new i.Log(t)},i.Identity=n(207),i.I=function(t){return new i.Identity(t)},i.Time=n(212),i.time=function(t){return new i.Time(t)},i.NumberCat=n(209),i.numberCat=function(t){return new i.NumberCat(t)},i.TimeCat=n(211),i.timeCat=function(t){return new i.TimeCat(t)},i.Condition=n(205),i.condition=function(t){return new i.Condition(t)},i.Group=n(206),i.group=function(t){return new i.Group(t)},i.I_TYPE="identity",i.isCategory=function(t){if("cat"===t)return!0;var e=r.ucfirst(t);return!(!i[e]||!i[e].superclass||"cat"!==i[e].superclass.type)},t.exports=i},function(t,e,n){"use strict";var r=n(1),i={},a={defaultShapeType:null,getShape:function(t){var e=this,n=e[t]||e[e.defaultShapeType]||i.ShapeBase;return n._coord=e._coord,n},getShapePoints:function(t,e){var n=this.getShape(t);return n.getShapePoints(e)},drawShape:function(t,e,n){var r=this.getShape(t);return r.drawShape(e,n)}},s={_coord:null,drawShape:function(){},getShapePoints:function(){}};i.registGeom=function(t,e){var n=r.ucfirst(t),s=r.mix({},a,e);return i[n]=s,s.className=n,s},i.registShape=function(t,e,n){var a=r.ucfirst(t),s=i[a],o=s.getShape(),u=r.mix({},o,n);return s[e]=u,u},i.getShape=function(t){var e=this;return t=t||"point",t=r.ucfirst(t),e[t]||i.ShapeBase},i.GeomShape=a,i.ShapeBase=s,t.exports=i},function(t,e,n){"use strict";var r=n(1),i=n(18),a=n(2),s="..x",o="..y",u="_value",c="_level",l=function(t){l.superclass.constructor.call(this,t)};r.extend(l,i),r.augment(l,{type:"tree",levels:0,totalValue:0,initDims:function(t){t.unshift(o),t.unshift(s)},getValueField:function(){var t=this.getDims();return t[3]||u},getChildrenField:function(){var t=this.getDims();return t[2]},exec:function(t){var e=this,n=[],r=a.merge.apply(null,t);return n.push(e.execFrame(r)),n},_traverseNodes:function(t,e){var n,i=this;n=e?e[c]+1:0;var a=i.getChildrenField(),s=i.getValueField();r.each(t,function(t){t[c]=n,t.parent=e;var r=t[a];r?(i._traverseNodes(t[a],t),s===u&&(t[s]=i.getTotalValue(r))):(s===u&&(t[s]=1),n+1>i.levels&&(i.levels=n+1))})},getNodeValue:function(t){var e=this,n=e.getValueField();return t[n]},getNodeRange:function(t,e,n){var r,i=this,a=t[c],s=i.levels,o=e.indexOf(t),u=t.parent,l=0,h=1,f=0;if(u?(r=i.getNodeValue(u),h=n.end.x-n.start.x,f=n.start.x):r=i.getTotalValue(e),o>0){var g=e.slice(0,o);l=i.getTotalValue(g)}var p=i.getNodeValue(t),v={start:{x:l/r*h+f,y:a/s},end:{x:(l+p)/r*h+f,y:(a+1)/s}};return v},getTotalValue:function(t){var e=this,n=e.getValueField(),i=0;return r.each(t,function(t){i+=t[n]}),i},getStatObject:function(t,e){var n=r.mix({},t);return n[s]=(e.end.x+e.start.x)/2,n[o]=(e.end.y+e.start.y)/2,n},_extractData:function(t,e,n){var i=this,a=i.getChildrenField();r.each(t,function(r){var s=i.getNodeRange(r,t,n),o=i.getStatObject(r,s);e.push(o),r[a]&&i._extractData(r[a],e,s)})},execFrame:function(t){var e=this,n=t.toJSON(),r=[];e._traverseNodes(n),e._extractData(n,r,0);var t=new a(r);return t}}),t.exports=l},function(t,e,n){"use strict";var r=n(1),i=n(45),a=n(2),s=function(t){s.superclass.constructor.call(this,t)};r.extend(s,i),r.augment(s,{fractions:10,execFrame:function(t){var e=this,n=t.toJSON();r.each(n,function(t){e.toBin(t)});var i=new a(n);return e.execQuantile(i)},getSplitArray:function(){for(var t=this,e=t.fractions,n=[],r=1/e,i=0;i<=1;i+=r)n.push(i);return n},execQuantile:function(t){var e=this,n=[],i=e.getDims(),s=i[i.length-1],o=i.slice(0,i.length-1),u=a.group(t,o),c=e.getSplitArray();return r.each(u,function(t){var e=t.rowObject(0);e[s]=a.quantile(t,s,c),n.push(e)}),new a(n)}}),t.exports=s},function(t,e,n){"use strict";var r=n(34),i=n(1),a=n(2),s="..density",o=function(t){o.superclass.constructor.call(this,t)};i.extend(o,r),i.augment(o,{type:"density",bandWidth:.01,colRange:{},initDims:function(t){t.push(s)},execFrame:function(t){return t},getWindowWidth:function(t,e){var n=a.max(t,e),r=a.min(t,e),i=(n-r)*this.bandWidth;return i},getCoordinate:function(t,e,n){for(var r=this,i=r.getDimRange(t,e),a=i.max,s=i.min,o=[],u=s;u<=a;u+=n)o.push(u);return o},getDimRange:function(t,e){var n=this,r=n.colRange[e];if(!r){var i=a.range(t,e);r={min:i[0],max:i[1]}}return r},setRange:function(t,e){this.colRange[t]=e}}),t.exports=o},function(t,e,n){"use strict";var r=n(1),i=n(2);t.exports={exec:function(t){var e=this;e.preExecute(t),this.stat&&(t=this.stat.exec(t));var n=[],a=i.merge.apply(null,t),s=e.getGroupCondition(),o=i.groupToMap(a,s);if(t.length>1)r.each(t,function(t){var r=e.execFrame(t,o);n.push(r)});else{var u=e.execFrame(t[0]);n.push(u)}return n},execFrame:function(t,e){var n=this,a=n.getGroupCondition(),s=i.groupToMap(t,a),o=[],u=n.getStatDims()[0];return r.each(s,function(r,i){var a=e?e[i]:t,s=n.transform(r,u,a);o.push(s)}),i.merge.apply(null,o)}}},function(t,e,n){"use strict";function r(t,e){t.sort(function(t,n){return t[e]-n[e]})}function i(t,e){var n=0;return a.each(t,function(t){n+=t[e]}),n}var a=n(1),s=function(t){return t},o=function(t){a.mix(this,t),this.rect=this.rect||{x:0,y:0,dx:1,dy:1},this.init()};a.augment(o,{nodes:null,rect:null,valueField:"value",childrenField:"children",init:function(){var t=this,e=t.nodes,n=t.rect,s=t.valueField;r(e,s),a.each(e,function(e){t._traverse(e)});var o=i(e,s);t.processNodes(e,n,o)},_traverse:function(t,e){var n=this;e=e||0,t.depth=e;var i=n.childrenField;t.parent||(t.parent=null);var s=t[i];a.isArray(s)&&(r(s,n.valueField),a.each(s,function(r){r.parent=t,n._traverse(r,e+1)}))},getNodes:function(){return this.nodes},changeNodes:function(t){return this.nodes=t,this.init(),this},processNodes:function(){},pad:function(t){var e={x:t.x,y:t.y,dx:t.dx,dy:t.dy};return e},position:function(t,e,n,r){var i,a=-1,o=t.length,u=n.x,c=n.y,l=e?s(t.area/e):0;if(e===n.dx){for((r||l>n.dy)&&(l=n.dy);++a<o;)i=t[a],i.x=u,i.y=c,i.dy=l,u+=i.dx=Math.min(n.x+n.dx-u,l?s(i.area/l):0);i.z=!0,i.dx+=n.x+n.dx-u,n.y+=l,n.dy-=l}else{for((r||l>n.dx)&&(l=n.dx);++a<o;)i=t[a],i.x=u,i.y=c,i.dx=l,c+=i.dy=Math.min(n.y+n.dy-c,l?s(i.area/l):0);i.z=!1,i.dy+=n.y+n.dy-c,n.x+=l,n.dx-=l}},scale:function(t,e){for(var n,r,i=-1,a=t.length,s=this.valueField;++i<a;)r=(n=t[i])[s]*(e<0?0:e),n.area=isNaN(r)||r<=0?0:r}}),t.exports=o},function(t,e,n){"use strict";function r(t){if(!t.__attrs&&t!==c){var e=t.superclass.constructor;e&&!e.__attrs&&r(e),t.__attrs={},i.mix(!0,t.__attrs,e.__attrs),i.mix(!0,t.__attrs,t.ATTRS)}}var i=n(6),a=n(13),s=n(264),o=n(270),u=n(269),c=function(t){this.__cfg={};var e=this.getDefaultCfg();i.mix(this.__cfg,c.CFG,e,t),this.__cfg.uuid=i.guid(a.prefix),r(this.constructor),this.initAttrs(this.__cfg.attrs),this.initTransform(),this.initEventDispatcher(),this.init()};c.CFG={id:null,zIndex:0,canvas:null,parent:null,capture:!0,context:null,visible:!0,destroyed:!1},i.augment(c,s,o,u,{init:function(){},getDefaultCfg:function(){return{}},set:function(t,e){var n=this,r="__set"+i.ucfirst(t);return n[r]&&(e=n[r](e)),n.__cfg[t]=e,this},get:function(t){return this.__cfg[t]},beforeDraw:function(){},draw:function(){var t=this,e=t.get("context"),n=t.__attrs.clip;t.beforeDraw(),t.get("visible")&&(e.save(),n&&(e.save(),n.resetTransform(),n.createPath(),e.restore(),e.clip()),t.resetAttrs(),t.resetTransform(),t.drawInner(),e.restore())},drawInner:function(){},show:function(){return this.set("visible",!0),this},hide:function(){return this.set("visible",!1),this},remove:function(t){var e=this;if(void 0===t&&(t=!0),e.get("parent")){var n=e.get("parent"),r=n.get("children");i.remove(r,e),e.set("parent",null)}return t&&e.destroy(),e},destroy:function(){var t=this,e=t.get("destroyed");if(!e)return t.__cfg={},t.__attrs=null,t.__listeners=null,t.__m=null,t.set("destroyed",!0),t},__setZIndex:function(t){var e=this;return this.__cfg.zIndex=t,i.notNull(e.get("parent"))&&e.get("parent").sort(),t},__setAttrs:function(t){var e=this;return e.attr(t),t},clone:function(){return i.clone(this)},getBBox:function(){return{minX:0,maxX:0,minY:0,maxY:0}}}),t.exports=c},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t),this.set("children",[])}var i=n(6),a=n(86),s=(n(7),n(3)),o=s.Vector3;i.extend(r,a),i.augment(r,{isGroup:!0,canFill:!0,canStroke:!0,remove:function(t,e){var n=this;if(arguments.length>=2)n.contain(t)&&t.remove(e);else{if(1===arguments.length){if(!i.isBoolean(t))return n.contain(t)&&t.remove(!0),n;e=t}0===arguments.length&&(e=!0),r.superclass.remove.call(n,e)}return n},add:function(t){var e=this,n=e.get("children");if(i.isArray(t))i.each(t,function(t){t.get("parent")&&t.get("parent").remove(t,!1),e.__setEvn(t)}),n.push.apply(n,t);else{var r=t;r.get("parent")&&r.get("parent").remove(r,!1),e.__setEvn(r),n.push(r)}return e},contain:function(t){for(var e=this,n=e.get("children"),r=0,i=n.length;r<i;r++)if(n[r]===t)return!0;return!1},__setEvn:function(t){var e=this;t.set("parent",e),t.set("context",e.get("context"));var n=t.__attrs.clip;n&&(n.set("parent",e),n.set("context",e.get("context"))),t.set("canvas",e.get("canvas")),i.each(t.get("children"),function(e){t.__setEvn(e)})},getBBox:function(){var t=this,e=1/0,n=-(1/0),r=1/0,a=-(1/0),s=t.get("children");return i.each(s,function(t){if(t.get("visible")){var i=t.getBBox("box");if(!i)return!0;var s=new o(i.minX,i.minY,1),u=new o(i.minX,i.maxY,1),c=new o(i.maxX,i.minY,1),l=new o(i.maxX,i.maxY,1);t.apply(s),t.apply(u),t.apply(c),t.apply(l);var h=Math.min(s.x,u.x,c.x,l.x),f=Math.max(s.x,u.x,c.x,l.x),g=Math.min(s.y,u.y,c.y,l.y),p=Math.max(s.y,u.y,c.y,l.y);h<e&&(e=h),f>n&&(n=f),g<r&&(r=g),p>a&&(a=p)}}),{minX:e,minY:r,maxX:n,maxY:a}},drawInner:function(){var t=this,e=t.get("children");return i.each(e,function(t){t.draw()}),t},getCount:function(){var t=this;return t.get("children").length},sort:function(){var t=this,e=t.get("children");return e.sort(function(t,e){return t.get("zIndex")-e.get("zIndex")}),t},find:function(t){var e=this;return e.findBy(function(e){return e.get("id")===t})},findBy:function(t){var e=this,n=e.get("children"),r=null;return i.each(n,function(e){if(t(e)?r=e:e.findBy&&(r=e.findBy(t)),r)return!1}),r},getShape:function(t,e){function n(){for(var n=s.length-1;n>=0;n--){var i=s[n];if(i.get("visible")&&i.get("capture")&&(i.isGroup?r=i.getShape(t,e):i.isHit(t,e)&&(r=i)),r)break}}var r,i=this,a=i.__attrs.clip,s=i.get("children");return a?a.inside(t,e)&&n():n(),r},clear:function(){for(var t=this,e=t.get("children");0!==e.length;)e[e.length-1].remove();return t},destroy:function(){var t=this;t.get("destroyed")||(t.clear(),r.superclass.destroy.call(t))}}),t.exports=r},function(t,e,n){"use strict";function r(t,e,n){var r=g.exec(t),i=c.mod(c.degreeToRad(parseFloat(r[1])),2*Math.PI),a=r[2],o=e.getBBox();if(0<=i&&i<.5*Math.PI)var u={x:o.minX,y:o.minY},l={x:o.maxX,y:o.maxY};else if(.5*Math.PI<=i&&i<Math.PI)var u={x:o.maxX,y:o.minY},l={x:o.minX,y:o.maxY};else if(Math.PI<=i&&i<1.5*Math.PI)var u={x:o.maxX,y:o.maxY},l={x:o.minX,y:o.minY};else var u={x:o.minX,y:o.maxY},l={x:o.maxX,y:o.minY};var h=Math.tan(i),f=h*h,p=(l.x-u.x+h*(l.y-u.y))/(f+1)+u.x,v=h*(l.x-u.x+h*(l.y-u.y))/(f+1)+u.y,d=e.get("context"),x=d.createLinearGradient(u.x,u.y,p,v);return s(a,x,n),x}function i(t,e,n){var r=p.exec(t),i=parseFloat(r[1]),a=parseFloat(r[2]),o=parseFloat(r[3]),u=r[4],c=e.getBBox(),l=e.get("context"),h=c.maxX-c.minX,f=c.maxY-c.minY,g=Math.sqrt(h*h+f*f)/2,v=l.createRadialGradient(c.minX+h*i,c.minY+f*a,o,c.minX+h/2,c.minY+f/2,g);return s(u,v,n),v}function a(t,e){var n=v.exec(t),r=n[1],i=n[2];switch(r){case"a":r="repeat";break;case"x":r="repeat-x";break;case"y":r="repeat-y";break;case"n":r="no-repeat";break;default:r="no-repeat"}var a=document.getElementById(i),s=e.get("context"),o=s.createPattern(a,r);return o}function s(t,e,n){var r=t.match(d);u.each(r,function(t){t=t.split(":");var r=o(t[1],n);e.addColorStop(t[0],r)})}function o(t,e){if(void 0===e)return t;t=new l(t),t.multiplyA(e);var n=t.getType();return"hsl"===n?t.getHSLStyle():"rgb"===n?t.getRGBStyle():void 0}var u=n(6),c=n(4),l=n(37),h=/[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/gi,f=/[^\s\,]+/gi,g=/^l\s*\(\s*([\d.]+)\s*\)\s*(.*)/i,p=/^r\s*\(\s*([\d.]+)\s*,\s*([\d.]+)\s*,\s*([\d.]+)\s*\)\s*(.*)/i,v=/^p\s*([axyn])\s+(.*)/i,d=/[\d.]+:(#[^\s]+|[^\)]+\))/gi,x={parsePath:function(t){return t=t||[],u.isArray(t)?t:u.isString(t)?(t=t.match(h),u.each(t,function(e,n){if(e=e.match(f),e[0].length>1){var r=e[0].charAt(0);e.splice(1,0,e[0].substr(1)),e[0]=r}u.each(e,function(t,n){isNaN(t)||(e[n]=+t)}),t[n]=e}),t):void 0},parseStyle:function(t,e,n){if(u.isString(t))return g.test(t)?r(t,e,n):p.test(t)?i(t,e,n):v.test(t)?a(t,e):o(t,n)}};t.exports=x},function(t,e,n){"use strict";var r=n(3),i=r.Vector2;t.exports={at:function(t,e,n){return(e-t)*n+t},pointDistance:function(t,e,n,r,a,s){var o=new i(n-t,r-e);if(o.isZero())return NaN;var u=o.vertical();u.normalize();var c=new i(a-t,s-e);return Math.abs(c.dot(u))},box:function(t,e,n,r,i){var a=i/2,s=Math.min(t,n),o=Math.max(t,n),u=Math.min(e,r),c=Math.max(e,r);return{minX:s-a,minY:u-a,maxX:o+a,maxY:c+a}}}},function(t,e,n){"use strict";var r=n(1),i=n(75);t.exports={processFrames:function(t){var e=this,n=[];return r.each(t,function(t){n.push(e.sortFrame(t))}),n},sortFrame:function(t){var e=this.getXDim();return i.sort(t,e)}}},function(t,e,n){"use strict";var r=n(1);t.exports={splitData:function(t){if(!t.length)return[];var e,n=[],i=[],a=this.getYDim();return r.each(t,function(t){e=t._origin?t._origin[a]:t[a],r.isArray(e)&&r.isNull(e[0])||r.isNull(e)?(n.push(i),i=[]):i.push(t)}),n.push(i),n}}},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(19),s=n(91);i.extend(r,a),i.mixin(r,[s]),r.ATTRS={type:"path",shapeType:"line"},i.augment(r,{drawFrame:function(t){var e,n,r,a=this,s=t.toJSON(),o=this.splitData(s),u=this.get("container"),c=this.get("shapeObj"),l=s[0],h=this.getDrawCfg(l),f=l.points.length;i.each(o,function(t){for(var i=0;i<f;i++){e=[];for(var s=0;s<t.length;s++)r=t[s],e.push(r.points[i]);if(0===e.length)return;h.points=e,n=a.getDrawShape(h.shape),c.drawShape(n,h,u)}})}}),t.exports=r},function(t,e,n){"use strict";var r=n(293),i=n(292),a=n(298),s=n(299),o=n(297),u=n(296),c=n(294),l={initEvent:function(t){var e=new c({chart:t});e.bindEvents(),t.set("eventAssist",e)},initScale:function(t){var e=new a;t.set("scaleAssist",e)},initCoord:function(t){var e=new r;t.set("coordAssist",e)},initAxis:function(t){var e=new i({chart:t});t.set("axisAssist",e)},initLegend:function(t){var e=new o({chart:t});t.set("legendAssist",e)},initTooltip:function(t){var e=new s({chart:t});t.set("tooltipAssist",e)},initGuide:function(t){var e=new u;t.set("guideAssist",e)}};t.exports=l},function(t,e,n){"use strict";var r=n(1),i=n(95),a=n(20),s=function o(t){o.superclass.constructor.call(this,t)};r.extend(s,i),r.augment(s,{getPointRauis:function(t,e){return a.getPointRadius(t,e)},getCirclePoint:function(t,e,n){var r=this,i=r.get("coord"),a=i.getCenter(),s=r._isEmitLabels(),o=r.getPointRauis(i,n);if(i.isTransposed&&o>e&&!s){var u=Math.asin(e/(2*o));t+=2*u}else o+=e;return{x:a.x+o*Math.cos(t),y:a.y+o*Math.sin(t),angle:t,r:o}},getArcPoint:function(t,e){var n,i=this;return e=e||0,n=r.isArray(t.x)||r.isArray(t.y)?{x:r.isArray(t.x)?t.x[e]:t.x,y:r.isArray(t.y)?t.y[e]:t.y}:t,i.transLabelPoint(n),n},getPointAngle:function(t){var e=this,n=e.get("coord");return a.getPointAngle(n,t)},getMiddlePoint:function(t){var e=this,n=e.get("coord"),i=t.length,a={x:0,y:0};return r.each(t,function(t){a.x+=t.x,a.y+=t.y}),a.x/=i,a.y/=i,a=n.convert(a)},_isToMiddle:function(t){return t.x.length>2},getLabelPoint:function(t,e,n){var r,i=this,a=t[n],s=1;i._isToMiddle(e)?r=i.getMiddlePoint(e.points):(1===t.length&&0===n?n=1:0===n&&(s=-1),r=i.getArcPoint(e,n));var o=i.getDefaultOffset();o*=s;var u=i.getPointAngle(r),c=i.getCirclePoint(u,o,r);return c.text=a,c.angle=u,c.color=e.color,c.rotate=i.getLabelRotate(u,o,e),c},_isEmitLabels:function(){var t=this.get("labels");return t.labelEmit},getLabelRotate:function(t){var e,n=this;return e=180*t/Math.PI,e+=90,n._isEmitLabels()&&(e-=90),e&&(e>90?e-=180:e<-90&&(e+=180)),e},getLabelAlign:function(t){var e,n=this,r=n.get("coord");if(n._isEmitLabels())e=t.angle<=Math.PI/2&&t.angle>-Math.PI/2?"left":"right";else if(r.isTransposed){var i=r.getCenter(),a=n.getDefaultOffset();e=Math.abs(t.x-i.x)<1?"center":t.angle>Math.PI||t.angle<=0?a>0?"left":"right":a>0?"right":"left"}else e="center";return e}}),t.exports=s},function(t,e,n){"use strict";function r(t){var e=0;return u.each(t,function(t){e+=t}),e/t.length}var i=n(11),a=i.Components,s=a.Labels,o=i.Group,u=n(1),c=n(5),l=["line","point","path"],h="_origin",f=function g(t){g.superclass.constructor.call(this,t)};f.CFG={labels:c.labels,labelsCfg:null,coord:null,geomType:null,zIndex:6},u.extend(f,o),u.mixin(f,[s.ShowLabels]),u.augment(f,{_renderUI:function(){f.superclass._renderUI.call(this),this.initLabelsCfg(),this.renderLabels()},_getLabelValue:function(t){var e,n=this,r=t[h],i=n.get("labelsCfg"),a=i.scales,s=i.callback;if(s){var o=[];u.each(a,function(t){o.push(r[t.dim])}),e=s.apply(null,o)}else{var c=a[0];if(e=r[c.dim],u.isArray(e)){var l=[];u.each(e,function(t){l.push(c.getText(t))}),e=l}else e=c.getText(e)}return e},initLabelsCfg:function(){var t=this,e=t.getDefaultLabelCfg(),n=t.get("labelsCfg");u.mix(!0,e,n.cfg),t.set("labels",e)},getDefaultLabelCfg:function(){var t=this,e=t.get("labelsCfg").cfg,n=t.get("geomType");return"polygon"===n||e&&e.offset<0&&u.indexOf(l,n)===-1?u.mix(!0,{},c.innerLabels):this.get("labels")},getLabelsItems:function(t){var e=this,n=[],r=e.get("labels");return u.each(t,function(t){var i=e._getLabelValue(t);u.isArray(i)||(i=[i]);var a=i.length;u.each(i,function(s,o){var c=e.getLabelPoint(i,t,o);if(c){c=u.mix({},t._origin,c);var l;l=r&&r.label&&r.label.textAlign?r.label.textAlign:e.getLabelAlign(c,o,a),c.textAlign=l,n.push(c)}})}),n},adjustItems:function(t){return t},drawLines:function(){},getLabelPoint:function(t,e,n){function i(e,n){return u.isArray(e)&&(e=1===t.length?e.length<=2?e[e.length-1]:r(e):e[n]),e}var a=this,s={x:i(e.x,n),y:i(e.y,n),text:t[n]},o=a.getLabelOffset(s,n,t.length);return a.transLabelPoint(s),s.x+=o.x,s.y+=o.y,s},transLabelPoint:function(t){var e=this,n=e.get("coord"),r=n.trans(t.x,t.y,1);t.x=r.x,t.y=r.y},getOffsetVector:function(){var t,e=this,n=e.get("labels"),r=n.offset||0,i=e.get("coord");return t=i.isTransposed?i.trans(r,0):i.trans(0,r)},getDefaultOffset:function(){var t=this,e=0,n=t.get("coord"),r=t.getOffsetVector();return e=n.isTransposed?r.x:r.y},getLabelOffset:function(t,e,n){var r=this,i=r.getDefaultOffset(),a=r.get("coord"),s=a.isTransposed,o=s?"x":"y",u=s?1:-1,c={x:0,y:0};return e>0||1===n?c[o]=i*u:c[o]=i*u*-1,c},getLabelAlign:function(t,e,n){var r=this,i="center",a=r.get("coord");if(a.isTransposed){var s=r.getDefaultOffset();i=s<0?"right":0===s?"center":"left",n>1&&0===e&&("right"===i?i="left":"left"===i&&(i="right"))}return i},showLabels:function(t){var e=this,n=e.getLabelsItems(t),r=e.get("labels");n=e.adjustItems(n),e.resetLabels(n),r.labelLine&&e.drawLines(n,r.labelLine)},destroy:function(){this.removeLabels(),f.superclass.destroy.call(this)}}),t.exports=f},function(t,e,n){"use strict";var r=n(24);r.Interval=n(310),r.Schema=n(311),r.Heatmap=n(309),r.Contour=n(307),r.Edge=n(308),t.exports=r},function(t,e,n){"use strict";var r=n(5),i={getDefalutSize:function(){var t=this.getCoord(),e=this.getXScale(),n=e.values.length,i=1/n,a=1;this.isInCircle()&&"schema"!==this.get("type")?t.isTransposed&&n>1&&(a=r.widthRatio.multiplePie):a=r.widthRatio.column,i*=a;var s=this.get("adjusts");if(s&&("Dodge"===s||s.indexOf("Dodge")!==-1)){var o=this.get("frames");i/=o.length}return i}};t.exports=i},function(t,e,n){"use strict";var r=n(15);n(318),n(319),n(320),n(321),n(316),n(322),n(317),t.exports=r},function(t,e){"use strict";function n(){var t=document.createElement("i");return t.title="Web Colour Picker",t.style.display="none",document.body.appendChild(t),t}var r=/rgb\((\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/;t.exports={toRGB:function(){var t;return document.body&&(t=n()),function(e){t||(t=n()),t.style.color=e;var i=document.defaultView.getComputedStyle(t,"").getPropertyValue("color"),a=r.exec(i);return a.shift(),this.arr2rgb(a)}}(),toHex:function(t){return t=Math.round(t),t=t.toString(16),1===t.length&&(t="0"+t),t},hsl2Rgb:function(t){var e=t[0],n=t[1],r=t[2],i={};if(0===n)i.r=i.g=i.b=r;else{var a=function(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t},s=r<=.5?r*(1+n):r+n-r*n,o=2*r-s;i.r=a(o,s,e+1/3),i.g=a(o,s,e),i.b=a(o,s,e-1/3)}return i.r=Math.min(Math.round(255*i.r),255),i.g=Math.min(Math.round(255*i.g),255),i.b=Math.min(Math.round(255*i.b),255),"#"+this.toHex(i.r)+this.toHex(i.g)+this.toHex(i.b)},rgb2hsl:function(t){var e,n,r,i=this.rgb2arr(t),a=i[0]/255,s=i[1]/255,o=i[2]/255,u=Math.min(a,s,o),c=Math.max(a,s,o),l=c-u;return c==u?e=0:a==c?e=(s-o)/l:s==c?e=2+(o-a)/l:o==c&&(e=4+(a-s)/l),e=Math.min(60*e,360),e<0&&(e+=360),r=(u+c)/2,n=c==u?0:r<=.5?l/(c+u):l/(2-c-u),[e/360,n,r]},arr2rgb:function(t){return"#"+this.toHex(t[0])+this.toHex(t[1])+this.toHex(t[2])},rgb2arr:function(t){var e=[];return e.push(parseInt(t.substr(1,2),16)),e.push(parseInt(t.substr(3,2),16)),e.push(parseInt(t.substr(5,2),16)),e}}},function(t,e,n){"use strict";function r(t,e,n,r){var i=t[r]+(e[r]-t[r])*n;return i}var i=n(61),a=n(1),s={calColor:function(t,e,n){var a,s=t.length-1,o=Math.floor(s*e),u=s*e-o,c=t[o],l=o===s?c:t[o+1];return"hsl"===n?a=i.hsl2Rgb([r(c,l,u,0),r(c,l,u,1),r(c,l,u,2)]):(a={r:r(c,l,u,0),g:r(c,l,u,1),b:r(c,l,u,2)},a="#"+i.toHex(a.r)+i.toHex(a.g)+i.toHex(a.b)),a},lightness:function(t,e){e=e||0;var n=[[e,1,.9],[e,1,.5]];return s.calColor(n,t,"hsl")},red:function(t){return s.lightness(t,0)},blue:function(t){return s.lightness(t,.66)},green:function(t){return s.lightness(t,.33)},gradient:function(t){var e=[];return a.isString(t)&&(t=t.split("-")),a.each(t,function(t){t.indexOf("#")===-1&&(t=i.toRGB(t)),e.push(i.rgb2arr(t))}),function(t){return s.calColor(e,t)}},gradientHsl:function(t){var e=[];return a.isString(t)&&(t=t.split("-")),a.each(t,function(t){t.indexOf("#")===-1&&(t=i.toRGB(t)),e.push(i.rgb2hsl(t))}),function(t){return s.calColor(e,t,"hsl")}},saturation:function(t,e){e=e||0;var n=[[e,0,.5],[e,1,.5]];return s.calColor(n,t,"hsl")},hue:function(t){var e=[[0,1,.5],[1,1,.5]];return s.calColor(e,t,"hsl")},brightness:function(t){var e=[[255,255,255],[0,0,0]];return s.calColor(e,t)},heat:function(t){var e=[[255,255,255],[255,127.5,0],[0,0,0]];return s.calColor(e,t)},rainbow:function(t){var e=[[0,255,255],[0,0,255],[0,255,0],[255,0,0]];return s.calColor(e,t)},circular:function(t){var e=[[0,0,255],[0,255,0],[255,255,0],[255,0,0],[0,0,255]];return s.calColor(e,t)},bipolar:function(t){var e=[[0,255,0],[0,0,0],[255,0,0]];return s.calColor(e,t)}};t.exports=s},function(t,e,n){var r=n(102);r.Group=n(103),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=function(){};i.ATTRS={actived:!1},r.augment(i,{isActived:function(){return this.get("actived")},setActived:function(){this.setActiveStatus(!0),this.set("actived",!0)},setActiveStatus:function(){},clearActived:function(){this.setActiveStatus(!1),this.set("actived",!1),this.clearActivedItem&&this.clearActivedItem()}}),t.exports=i},function(t,e,n){"use strict";var r=n(1),i=function(){};i.ATTRS={multipleActive:!1},r.augment(i,{isItemActived:function(t){return t.isActived()},getActiveItems:function(){return this.get("children")},setItemActived:function(t,e){e?t.setActived():t.clearActived()},onActived:function(t){this.fire("itemactived",{item:t}),this.fireUpGroup&&this.fireUpGroup("actived",t)},onUnActived:function(t){this.fire("itemunactived",{item:t}),this.fireUpGroup&&this.fireUpGroup("unactived",t)},setActivedItem:function(t){var e=this,n=e.get("multipleActive");n||e.clearActivedItem(),t&&!e.isItemActived(t)&&(e.setItemActived(t,!0),e.onActived(t))},getActived:function(){var t=this,e=t.getActiveItems(),n=null;return r.each(e,function(e){if(t.isItemActived(e))return n=e,!1}),n},getAllActived:function(){var t=this,e=t.getActiveItems(),n=[];return r.each(e,function(e){t.isItemActived(e)&&n.push(e)}),n},clearAllActived:function(){var t=this,e=t.getAllActived();return r.each(e,function(e){t.setItemActived(e,!1),t.onUnActived(e)}),this},clearActivedItem:function(t){var e=this;return t=t||e.getActived(),t&&(e.setItemActived(t,!1),e.onUnActived(t)),this}}),t.exports=i},function(t,e,n){var r=n(26);r.Dodge=n(105),r.Jitter=n(106),r.Stack=n(107),r.Symmetric=n(108),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(26),a=n(2),s=function(t){s.superclass.constructor.call(this,t)};r.extend(s,i),r.augment(s,{marginRatio:.5,dodgeRatio:.5,_getDodgeDim:function(t){var e=this,n=null;return r.each(t,function(t){if(t!==e.xDim)return n=t,!1}),n},processAdjust:function(t){var e=this,n=a.merge.apply(null,t),r=e.groupDims,i=e._getDodgeDim(r);if(i&&(t=a.group(n,i)),e.adjFrames=t,e.mergeFrame=n,t=e.adjustFrames(t,n),i){var n=a.merge.apply(null,t);t=a.group(n,r)}return e.adjFrames=null,e.mergeFrame=null,t},getDistribution:function(t){var e=this,n=e.adjFrames,i={};return r.each(n,function(e,n){var s=a.values(e,t);s.length||s.push(0),r.each(s,function(t){i[t]||(i[t]=[]),i[t].push(n)})}),i},adjustDim:function(t,e,n,i,a){var s=this,o=s.getDistribution(t),u=s.groupData(n,t);r.each(u,function(n,i){i=parseFloat(i);var u;u=1===e.length?{pre:-1,next:1}:s.getAdjustRange(t,i,e),r.each(n,function(e){var n=e[t],i=o[n],c=r.indexOf(i,a);e[t]=s.getDodgeOffset(u,c,i.length)})})},getDodgeOffset:function(t,e,n){var r,i=this,a=t.pre,s=t.next,o=s-a,u=o*i.dodgeRatio/n,c=i.marginRatio*u;return r=.5*(o-n*u-(n-1)*c)+((e+1)*u+e*c)-.5*u-.5*o,(a+s)/2+r}}),t.exports=s},function(t,e,n){"use strict";var r=n(1),i=n(26),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{getAdjustOffset:function(t,e){var n=Math.random(),r=e-t,i=.05*r;return t+i+.9*r*n},_adjustGroup:function(t,e,n,i){var a=this,s=a.getAdjustRange(e,n,i);r.each(t,function(t){t[e]=a.getAdjustOffset(s.pre,s.next)})},adjustDim:function(t,e,n){var i=this,a=i.groupData(n,t);r.each(a,function(n,r){r=parseFloat(r),i._adjustGroup(n,t,r,e)})}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(2),a=n(26),s=function(t){s.superclass.constructor.call(this,t)};r.extend(s,a),r.augment(s,{height:null,size:10,adjustNames:["y"],processOneDimStack:function(t){for(var e=this,n=e.xDim,r=e.yDim||"y",a=e.height,s={},o=[],u=0;u<t.length;u++){for(var c=t[u].toJSON(),l=0;l<c.length;l++){var h=c[l],f=h.size||e.size,g=2*f/a,p=h[n];s[p]||(s[p]=g/2),h[r]=s[p],s[p]+=g}o.push(new i(c))}return o},processAdjust:function(t){var e=this;return t=e.yDim?e.processStack(t):e.processOneDimStack(t)},processStack:function(t){for(var e=this,n=e.xDim,a=e.yDim,s=t.length,o=[],u={positive:{},negative:{}},c=[],l=0;l<s;l++){for(var h=t[l].toJSON(),f=0;f<h.length;f++){var g=h[f],p=g[n],v=g[a]||0,d=p.toString();v=r.isArray(v)?v[1]:v;var x=v>0?"positive":"negative";u[x][d]||(u[x][d]=0),g[a]=[u[x][d],v+u[x][d]],u[x][d]+=v}o.push(h)}return r.each(o,function(t){var e=new i(t);c.push(e)}),c}}),t.exports=s},function(t,e,n){"use strict";var r=n(1),i=n(2),a=n(26),s=function(t){s.superclass.constructor.call(this,t)};r.extend(s,a),r.augment(s,{cacheMax:null,adjustNames:["y"],_getMax:function(t){var e=this,n=e.mergeFrame,r=i.max(n,t);return r},_getXValuesMax:function(){var t=this,e=t.yDim,n=t.xDim,i={},a=t.mergeFrame;return a.each(function(t){var a=t[n],s=t[e],o=r.isArray(s)?Math.max.apply(null,s):s;i[a]=i[a]||0,i[a]<o&&(i[a]=o)}),i},processAdjust:function(t){var e=this,n=i.merge.apply(null,t);return e.mergeFrame=n,t=e._processSymmetric(t),e.mergeFrame=null,t},_processSymmetric:function(t){var e,n=this,a=n.xDim,s=n.yDim,o=n._getMax(s),u=t[0].rowObject(0),c=[];return u&&r.isArray(u[s])&&(e=n._getXValuesMax()),r.each(t,function(t){var n=t.toJSON();r.each(n,function(t){var n,i=t[s];if(r.isArray(i)){var u=t[a],c=e[u];n=(o-c)/2;var l=[];r.each(i,function(t){l.push(n+t)}),t[s]=l}else n=(o-i)/2,t[s]=[n,i+n]}),c.push(new i(n))}),c}}),t.exports=s},function(t,e,n){var r=n(112);t.exports=r},function(t,e,n){"use strict";var r=n(16),i=n(1),a=function(t){a.superclass.constructor.call(this,t)};a.ATTRS={_circle:{center:{x:0,y:0},r:0,startAngle:-Math.PI/2,endAngle:1.5*Math.PI}},i.extend(a,r),i.augment(a,{getInitAttrs:function(){var t=this.get("_circle"),e=this.getCircleInfo(),n=e.center;e=i.mix(t,e);var r={x:n.x,y:n.y,rs:0,re:e.r+100,startAngle:e.startAngle/Math.PI*180,endAngle:e.startAngle/Math.PI*180};return r},getEndAttrs:function(){var t=this.get("_circle"),e=this.getCircleInfo();e=i.mix(t,e);var n={endAngle:e.endAngle/Math.PI*180};return n},getTarget:function(){var t=this.get("group"),e=t.getParent(),n=e.addShape("Fan");return t.attr("clip",n),n}}),t.exports=a},function(t,e,n){"use strict";var r=n(16),i=n(1),a=function(t){a.superclass.constructor.call(this,t)};i.extend(a,r),i.augment(a,{getInitAttrs:function(){var t=this.getCircleInfo(),e=t.center,n={x:e.x,y:e.y,r:0};return n},getEndAttrs:function(){var t=this.getCircleInfo(),e={r:t.r+150};return e},getTarget:function(){var t=this.get("group"),e=t.getParent(),n=e.addShape("Circle");return t.attr("clip",n),n}}),t.exports=a},function(t,e,n){"use strict";var r=n(16),i=n(110),a=n(111),s=n(116),o=n(115),u=n(114),c=n(113),l=n(117);r.angle=i,r.circle=a,r.waveh=s,r.scaleXY=o,r.scaleY=u,r.scaleX=c,r.waves=l,t.exports=r},function(t,e,n){"use strict";var r=n(16),i=n(1),a=n(11).Matrix,s=a.Matrix3,o=i.MatrixUtil,u=function(t){u.superclass.constructor.call(this,t)};i.extend(u,r),i.augment(u,{getInitMatrix:function(){var t=this.get("rect"),e=this.getRectCenter(t),n=new s;return n=o.scale(n,.01,1,e.x-t.width/2,t.y)},getAnimMatrix:function(){var t=this.get("rect"),e=this.getRectCenter(t),n=new s;return n=o.scale(n,1,1,e.x-t.width/2,t.y)}}),t.exports=u},function(t,e,n){"use strict";var r=n(16),i=n(1),a=n(11).Matrix,s=a.Matrix3,o=i.MatrixUtil,u=function(t){u.superclass.constructor.call(this,t)};i.extend(u,r),i.augment(u,{getInitMatrix:function(){var t=this.get("rect"),e=this.getRectCenter(t),n=new s;return n=o.scale(n,1,-.01,e.x,t.y+t.height)},getAnimMatrix:function(){var t=this.get("rect"),e=this.getRectCenter(t),n=new s;return n=o.scale(n,1,1,e.x,t.y+t.height)}}),t.exports=u},function(t,e,n){"use strict";var r=n(16),i=n(1),a=n(11).Matrix,s=a.Matrix3,o=i.MatrixUtil,u=function(t){u.superclass.constructor.call(this,t)};i.extend(u,r),i.augment(u,{getInitMatrix:function(){var t=this.get("rect"),e=this.getRectCenter(t),n=new s;return n=o.scale(n,.01,.01,e.x,e.y)},getAnimMatrix:function(){var t=this.get("rect"),e=this.getRectCenter(t),n=new s;return n=o.scale(n,1,1,e.x,e.y)}}),t.exports=u},function(t,e,n){"use strict";var r=n(62),i=n(1),a=function(t){a.superclass.constructor.call(this,t)};i.extend(a,r),i.augment(a,{getInitAttrs:function(){var t=this.get("rect"),e={x:t.x,y:t.y,width:t.width,height:0};return e}}),t.exports=a},function(t,e,n){"use strict";var r=n(62),i=n(1),a=function(t){a.superclass.constructor.call(this,t)};i.extend(a,r),i.augment(a,{getInitAttrs:function(){var t=this.get("rect"),e={
	x:t.x,y:t.y,width:0,height:t.height};return e}}),t.exports=a},function(t,e,n){var r=n(21);r.Position=n(121),r.Color=n(119),r.Size=n(123),r.Shape=n(122),r.Opacity=n(120),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(60),a=n(21),s=function(t){s.superclass.constructor.call(this,t),this.initMethod()};r.extend(s,a),r.augment(s,{type:"color",names:["color"],arr:null,method:null,methodType:null,initMethod:function(){var t,e=this.methodType;t=e&&e.indexOf("-")!==-1?i.gradient(e):i[e],this.method=t}}),t.exports=s},function(t,e,n){"use strict";var r=n(1),i=n(21),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{type:"opacity",names:["opacity"],min:.1,max:1,arr:null}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(21),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{type:"position",names:["x","y","z"],coord:null,parseParam:function(t,e){var n;return r.isArray(t)?(n=[],r.each(t,function(t){n.push(e.scale(t))})):n=e.scale(t),n},callback:function(t,e){var n,i,a,s=this.coord;if(t||0===t||(t=.1),e||0===e||(e=.1),r.isArray(e)&&r.isArray(t)){n=[],i=[];for(var o=0,u=0;o<t.length&&u<e.length;o++,u++)a=s.convertPoint({x:t[o],y:e[u]}),n.push(a.x),i.push(a.y)}else if(r.isArray(e))i=[],r.each(e,function(e){a=s.convertPoint({x:t,y:e}),n&&n!==a.x?(r.isArray(n)||(n=[n]),n.push(a.x)):n=a.x,i.push(a.y)});else if(r.isArray(t))n=[],r.each(t,function(t){a=s.convertPoint({x:t,y:e}),i&&i!==a.y?(r.isArray(i)||(i=[i]),i.push(a.y)):i=a.y,n.push(a.x)});else{var c=s.convertPoint({x:t,y:e});n=c.x,i=c.y}return[n,i]}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(21),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{type:"shape",names:["shape"],arr:null}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(21),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{type:"size",names:["size"],arr:null}),t.exports=a},function(t,e,n){"use strict";function r(t){return null===t||void 0===t}function i(t){var e=1;if(t<1e-6)return e;for(;t>10;)e=10*e,t/=10;for(;t<1;)e/=10,t=10*t;return e}function a(t,e,n){n=n||M;var r=n!==M,a=1;t<0&&(a=-1),t*=a;var o=i(t);return a*=o,t/=o,t=r?s(n,t):e&&a>0?b.snapFloor(n,t):b.snapCeiling(n,t),t*a}function s(t,e){for(var n=e,r=e,i=e,a=1;a<t.length;a++){var s=t[a];if(s>e){n=s;break}r=s}return i=Math.abs(r-e)<Math.abs(n-e)?r:n}function o(t,e,n){var r;return r=n?Math.ceil(t/e,10):Math.floor(t/e,10),r*e}function u(t){for(var e=t[0],n=t[0],r=t.length,i=1;i<r;i++){var a=t[i];e<a&&(e=a),n>a&&(n=a)}return{max:e,min:n}}function c(t,e){var n=[];return e?S.isArray(t[0])&&S.each(t[0],function(e,r){for(var i=e,a=1;a<t.length;a++)i+=t[a][r];n.push(i)}):S.each(t,function(t){S.isArray(t)?n=n.concat(t):n.push(t)}),n}function l(t,e,n){var r=c(t,n);return e&&(r=S.map(r,e)),u(r)}function h(t){return t=new Date(t),w.getDate(t).getTime()}function f(t){t=new Date(t);var e=w.getDate(t);return e<t&&(e=w.addDay(1,e)),e.getTime()}function g(t){return new Date(t).getFullYear()}function p(t){return new Date(t,0,1).getTime()}function v(t){return new Date(t).getMonth()}function d(t,e){var n=g(t),r=g(e),i=v(t),a=v(e);return 12*(r-n)+(a-i)%12}function x(t,e){return new Date(t,e,1).getTime()}function m(t,e){return Math.ceil((e-t)/L)}function y(t,e){return Math.ceil((e-t)/D)}function _(t,e){return Math.ceil((e-t)/6e4)}var S=n(1),w=n(40),b=n(4),M=[0,1,1.5,2,2.5,3,4,5,6,8,10],A=[0,1,2,4,5,10],C=[1,2,4,6,8,12],k=5,T=7,P={};P.caculate=function(t,e){var n,i=t.min,s=t.max,u=t.data,c=t.interval,h=[],f=t.minCount||k,g=t.maxCount||T,p=(f+g)/2,v=!1;e&&"percent"===e&&(i=0,s=100,c=25);var d;if((r(i)||r(s)||r(c))&&(d=l(u,null,v),r(s)&&(s=d.max+.05*(d.max-d.min)),r(i)&&(i=d.min),s===i&&(0===i?s=1:i>0?i=0:s=0,s-i<5&&(c=1)),r(c))){var x=(s-i)/p;c=a(x,!0,A),n=parseInt((s-i)/c,10),n>g&&(n=g),n<f&&(n=f),c=a((s-i)/n,!0,A),s=o(s,c,!0),i=o(i,c),n=Math.round((s-i)/c)}r(n)&&(s=o(s,c,!0),i=o(i,c),n=Math.round((s-i)/c)),i=S.fixedBase(i,c),r(i)||h.push(i);for(var m=1;m<=n;m++)h.push(S.fixedBase(c*m+i,c));return{min:i,max:S.fixedBase(s,c),interval:c,count:n,ticks:h,info:d}},P.Time={};var I=6e4,D=36e5,L=864e5;P.Time.caculate=function(t){var e,n=t.min,i=t.max,a=t.data,s=t.interval,o=[],u={};if((r(n)||r(i)||r(s))&&(u=l(a,function(t){return S.isDate(t)&&(t=t.getTime()),S.isString(t)&&(t=t.replace(/-/gi,"/"),t=new Date(t),t=t.getTime()),t}),r(i)&&(i=u.max),r(n)&&(n=u.min),i-n>L&&(n=h(n),i=f(i)),i===n&&(i=n+L),r(s))){var c,w,M=i-n,A=L,k=365*A;s=parseInt(M/(t.maxCount||8)),c=s/k;var T=g(n);if(c>.51){w=Math.ceil(c),s=w*k;for(var P=g(i),R=T;R<=P+w;R+=w)o.push(p(R));s=null}else if(c>.0834){for(var w=g(n),B=Math.floor(c/.0834),F=v(n),O=d(n,i),R=0;R<=O+B;R+=B)o.push(x(T,R+F));s=null}else if(s>.5*A){var G=new Date(n),w=G.getFullYear(),B=G.getMonth(n),N=G.getDate(),z=Math.ceil(s/A),j=m(n,i);s=z*A;for(var R=0;R<j+z;R+=z)o.push(new Date(w,B,N+R).getTime())}else if(s>D){var G=new Date(n),w=G.getFullYear(),B=G.getMonth(n),z=G.getDate(),X=G.getHours(),Y=b.snapTo(C,Math.ceil(s/D)),W=y(n,i);s=Y*D;for(var R=0;R<=W+Y;R+=Y)o.push(new Date(w,B,z,X+R).getTime())}else if(s>I){var V=_(n,i),E=Math.ceil(s/I);s=E*I;for(var R=0;R<=V+E;R+=E)o.push(n+R*I)}else{s<1e3&&(s=1e3),n=1e3*Math.floor(n/1e3);var q=Math.ceil((i-n)/1e3),H=Math.ceil(s/1e3);s=1e3*H;for(var R=0;R<q+H;R+=H)o.push(n+1e3*R)}}if(!o.length){n=1e3*Math.floor(n/1e3),i=1e3*Math.ceil(i/1e3);for(var e=(i-n)/s,R=0;R<=e;R++)o.push(S.fixedBase(s*R+n,s))}return{max:u.max||i,min:u.min||n,interval:s,ticks:o,count:o.length}},P.Category={},P.Category.caculate=function(t){var e={},n=[],r=t.maxCount||T,i=c(t.data);if(i.length<r)n=[].concat(i);else{var a=i.length,s=parseInt(a/(r-1),10),o=i.map(function(t,e){return e%s===0?i.slice(e,e+s):null}).filter(function(t){return t});n.push(i[0]);for(var u=1;u<o.length&&u<r-1;u++)n.push(o[u][0]);n.push(i[a-1])}return e.categories=i,e.ticks=n,e},t.exports=P},function(t,e,n){"use strict";function r(t){if(!t._attrs&&t!==i){var e=t.superclass.constructor;e&&!e._attrs&&r(e),t._attrs={},a.mix(!0,t._attrs,e._attrs),a.mix(!0,t._attrs,t.ATTRS)}}var i,a=n(1);i=function(t){r(this.constructor),this._attrs={},this.events={};var e=this.getDefaultCfg();a.mix(this._attrs,e,t)},a.augment(i,{getDefaultCfg:function(){var t=this,e=t.constructor,n=e._attrs,r=a.mix(!0,{},n);return r},set:function(t,e){var n="_onRender"+a.ucfirst(t);return this[n]&&this[n](e,this._attrs[t]),this._attrs[t]=e,this},get:function(t){return this._attrs[t]},on:function(t,e){var n=this,r=n.events,i=r[t];return i||(i=r[t]=[]),i.push(e),n},fire:function(t,e){var n=this,r=n.events,i=r[t];i&&a.each(i,function(t){t(e)})},off:function(t,e){var n=this,r=n.events,i=r[t];return t?(i&&a.remove(i,e),n):(n.events={},n)},destroy:function(){var t=this,e=t.destroyed;return e?t:(t._attrs={},t.events={},void(t.destroyed=!0))}}),t.exports=i},function(t,e,n){"use strict";var r=n(29),i=n(23),a=i.Shape.superclass.constructor,s=i.Canvas,o=n(64);r.mixin(a,[o.GMixin]),r.mixin(i.Group,[o.GroupMixin]);var u=function(t){u.superclass.constructor.call(this,t)};u.CFG={width:null,height:null,widthCanvas:null,heightCanvas:null,widthStyle:null,heightStyle:null,containerDOM:null,canvasDOM:null,pixelRatio:null},r.extend(u,s),r.augment(u,{init:function(){u.superclass.constructor.superclass.init.call(this),this._setGlobalParam(),this._setDOM(),this._setInitSize(),this._setCanvas(),this._scale()},_scale:function(){var t=this.get("pixelRatio");this.scale(t,t)},_setCanvas:function(){var t=this.get("canvasDOM");this.set("el",t),this.set("context",t.getContext("2d")),this.set("canvas",this),this.__events()},_setGlobalParam:function(){var t=this.get("pixelRatio");t||this.set("pixelRatio",r.getRatio())},_setDOM:function(){this._setContainer(),this._setLayer()},_setContainer:function(){var t=this.get("containerId"),e=this.get("containerDOM");e||(e=document.getElementById(t),this.set("containerDOM",e)),r.modiCSS(e,{position:"relative"})},_setLayer:function(){var t=this.get("containerDOM"),e=r.guid("canvas_");if(t){var n=r.createDom('<canvas id="'+e+'"></canvas>');t.appendChild(n),this.set("canvasDOM",n)}},_setInitSize:function(){this.get("widthStyle")?this.changeSizeByCss(this.get("widthStyle"),this.get("heightStyle")):this.get("width")&&this.changeSize(this.get("width"),this.get("height"))},_getPx:function(t,e){var n=this.get("canvasDOM");n.style[t]=e;var i=r.getBoundingClientRect(n);return"width"===t?i.right-i.left:"height"===t?i.bottom-i.top:void 0},_reSize:function(){var t=this.get("canvasDOM"),e=this.get("widthCanvas"),n=this.get("heightCanvas"),r=this.get("widthStyle"),i=this.get("heightStyle");t.style.width=r,t.style.height=i,t.setAttribute("width",e),t.setAttribute("height",n)},getWidth:function(){var t=this.get("pixelRatio"),e=this.get("width");return e*t},getHeight:function(){var t=this.get("pixelRatio"),e=this.get("height");return e*t},changeSizeByCss:function(t,e){var n=this.get("pixelRatio"),t=this._getPx("width",t),e=this._getPx("height",e),r=t*n,i=e*n;this.set("widthStyle",t),this.set("heightStyle",e),this.set("widthCanvas",r),this.set("heightCanvas",i),this.set("width",t),this.set("height",e),this._reSize()},changeSize:function(t,e){var n=this.get("pixelRatio"),r=t*n,i=e*n;this.set("widthCanvas",r),this.set("heightCanvas",i),this.set("widthStyle",t+"px"),this.set("heightStyle",e+"px"),this.set("width",t),this.set("height",e),this._reSize()}}),t.exports=u},function(t,e,n){var r=n(29),i=(n(23),function(){});r.augment(i,{getParent:function(){return this.get("parent")||this.get("father")},getDefaultCfg:function(){r.initClassCfgs(this.constructor);var t=r.mix(!0,{},this.constructor.__cfg);return t},getBBBox:function(){var t=this.getBBox();return t?(t.x=t.minX,t.y=t.minY,t.width=t.maxX-t.minX,t.height=t.maxY-t.minY,t.centerX=t.x+t.width/2,t.centerY=t.y+t.height/2):t={x:0,y:0,centerX:0,centerY:0,width:0,height:0},t},move:function(t,e){var n=this,r=n.get("x")||0,i=n.get("y")||0;n.translate(t-r,e-i),n.set("x",t),n.set("y",e)}}),t.exports=i},function(t,e,n){var r=n(29),i=n(23),a=n(63),s=function(){};r.augment(s,{addShape:function(t,e){var n,a=this.get("canvas");return e=r.mix({},e),e?(e.type=t,e.canvas=a,e.father=this,t=r.upperFirst(t),n=new i[t](e)):n=new i[t],this.add(n),n},addGroup:function(t,e){var n,i=this.get("canvas");if(e=r.mix({},e),r.isFunction(t))e?(e.canvas=i,e.father=this,n=new t(e)):n=new t({canvas:i,father:this}),this.add(n);else if(r.isObject(t))t.canvas=i,n=new a(t),this.add(n);else{if(void 0!==t)return!1;n=new a,this.add(n)}return n},findByCFG:function(t,e){var n=this.get("children"),i=[];return r.each(n,function(n,r){n.get(t)===e&&i.push(n)}),i}}),t.exports=s},function(t,e,n){"use strict";var r=n(9),i=n(28),a=n(12),s=n(200),o=i.G,u=o.Shape.superclass.constructor;new s(o),r.mixin(u,[a.GMixin]),r.mixin(o.Group,[a.GroupMixin]),o.Marker=a.Marker;var c=function(t){c.superclass.constructor.call(this,t)};c.CFG={},r.extend(c,i),t.exports=c},function(t,e,n){"use strict";var r=n(1),i=n(47),a=n(3),s=n(4),o=a.Vector2,u=function(t){u.superclass.constructor.call(this,t)};r.extend(u,i),u.CFG={type:"circle",tickInterval:null,startAngle:-Math.PI/2,endAngle:3*Math.PI/2,grid:{line:{lineWidth:1,stroke:"#C0D0E0"}},labelOffset:5},r.augment(u,{_beforeRenderUI:function(){var t=this;u.superclass._beforeRenderUI.call(t)},parseTick:function(t,e,n){return{text:t,value:e/n}},_getCirclePoint:function(t,e){var n=this,r=n.get("center");return e=e||n.get("radius"),{x:r.x+Math.cos(t)*e,y:r.y+Math.sin(t)*e}},getTickPoint:function(t){var e=this,n=e.get("startAngle"),r=e.get("endAngle"),i=n+(r-n)*t;return e._getCirclePoint(i)},getSideVector:function(t,e){var n=this,r=n.get("center"),i=new o(e.x-r.x,e.y-r.y);return t&&i.setLength(t),i},getSidePoint:function(t,e){var n=this,r=n.getSideVector(e,t);return{x:t.x+r.x,y:t.y+r.y}},getTickEnd:function(t,e){var n=this,r=n.get("tickLine");return e=e?e:r.value,n.getSidePoint(t,e)},getTextAnchor:function(t){var e;return s.equal(t.x,0)?e="center":t.x>0?e="left":t.x<0&&(e="right"),e},getLinePath:function(){var t=this,e=t.get("center"),n=e.x,r=e.y,i=t.get("radius"),a=i,s=t.get("startAngle"),o=t.get("endAngle"),u=t.get("inner"),c=[];if(Math.abs(o-s)===2*Math.PI)c=[["M",n,r],["m",0,-a],["a",i,a,0,1,1,0,2*a],["a",i,a,0,1,1,0,-2*a],["z"]];else{var l=t._getCirclePoint(s),h=t._getCirclePoint(o),f=Math.abs(o-s)>Math.PI?1:0,g=s>o?0:1;if(u){var p=t.getSideVector(u*i,l),v=t.getSideVector(u*i,h),d={x:p.x+n,y:p.y+r},x={x:v.x+n,y:v.y+r};c=[["M",d.x,d.y],["L",l.x,l.y],["A",i,a,0,f,g,h.x,h.y],["L",x.x,x.y],["A",i*u,a*u,0,f,Math.abs(g-1),d.x,d.y]]}else c=[["M",n,r],["L",l.x,l.y],["A",i,a,0,f,g,h.x,h.y],["L",n,r]]}return c},addLabel:function(t,e){var n=this,r=n.get("labelOffset");e=n.getSidePoint(e,r),u.superclass.addLabel.call(n,t,e)},autoRotateLabels:function(){var t=this,e=t.get("ticks"),n=t.get("labelsGroup");if(n&&e.length>12){var i=t.get("radius"),a=t.get("startAngle"),s=t.get("endAngle"),o=s-a,u=o/(e.length-1),c=Math.sin(u/2)*i*2,l=t.getMaxLabelWidth(n);r.each(n.get("children"),function(t,n){var r=e[n],i=r.value*o+a,s=i%(2*Math.PI);l<c?(s<=0&&(i+=Math.PI),s>Math.PI&&(i-=Math.PI),i-=Math.PI/2,t.attr("textAlign","center")):s>Math.PI/2?i-=Math.PI:s<Math.PI/2*-1&&(i+=Math.PI),t.rotateAtStart(180*i/Math.PI)})}}}),t.exports=u},function(t,e,n){"use strict";function r(t,e,n){var r=e.get(t);return r||(r=n,e.set(t,r)),r}function i(t,e){var n="",r=u.mix({},e);return u.each(t,function(t){u.each(t,function(t,e){var r=0===e?"M{x} {y} ":"L{x} {y} ",i=u.substitute(r,t);n+=i})}),r.path=n,r}function a(t){a.superclass.constructor.call(this,t)}var s=n(12),o=s.GroupBase,u=n(1),c="x-chart-grid";u.extend(a,o),a.CFG={zIndex:1,elCls:c,type:"line",line:null,minorLine:null,minorCount:0,renderer:null,items:null,odd:null,even:null,animate:!1,matrix:null,duration:1e3},u.augment(a,{_renderUI:function(){var t=this;a.superclass._renderUI.call(t),t._drawLines()},_drawLines:function(){var t=this,e=t.get("line"),n=t.get("items");n&&(t._precessItems(n),t._drawGridLines(n,e,c+"-line"),t.get("minorCount")&&t.drawMinorLines())},_precessItems:function(t){var e,n=this,r=n.get("minorCount"),i=n.get("renderer");u.each(t,function(t,a){i?i.call(n,t,a):r&&e&&n._addMonorItem(t,e),e&&(n.get("odd")||n.get("even"))&&n._drawOddEven(t,e,a),e=t})},change:function(t){var e=this;return e.set("items",t),e._clearPre(),e._precessItems(t),e._changeGridLines(t,c+"-line"),e._changeMinorLinses(),this},_clearPre:function(){var t,e=this;e.get("minorCount")&&e.set("minorItems",[]),t=e.findAllBy(function(t){var e=t.get("elCls");return e!==c+"-line"&&e!==c+"-minor"}),u.each(t,function(t){t.remove()})},_isVertical:function(t){return t.x1===t.x2},_drawGridLines:function(t,e,n){var r=this,i=r._linesToPath(t,e),a=r.addShape("Path",{elCls:n,attrs:i});r.set("gridLine"+n,a)},_changeGridLines:function(t,e){var n=this,r=n.get("animate"),i=n.get("gridLine"+e);if(i){var a=n._linesToPath(t,{});r?u.animPath(i,a.path,2):a?i.attr("path",a.path):i.remove()}else if(t&&t.length){var s;s=e===c+"-line"?n.get("line"):n.get("minorLine"),n._drawGridLines(t,s,e)}},_linesToPath:function(t,e){var n,r=this,a=[],s=r.get("type");return"line"===s?0!==t.length&&i(t,e):(n=u.mix({},e),u.each(t,function(t){a=a.concat(r._getMultiplePath(t,s))}),n.path=a,n)},_getMultiplePath:function(t,e){var n=t,r=[];return"polygon"===e?u.each(n,function(t,e){0===e?r.push(["M",t.x,t.y]):r.push(["L",t.x,t.y])}):u.each(n,function(t,e){var n=t.radius;0===e?r.push(["M",t.x,t.y]):r.push(["A",n,n,0,0,t.flag,t.x,t.y])}),r},_drawOddEven:function(t,e,n){var r,i,a=this,s=a.get("odd"),o=a.get("even");n%2===0?o&&(i=a._getBackItem(e,t,o),r="even"):s&&(i=a._getBackItem(e,t,s),r="odd"),i&&a.addShape("Path",{elCls:c+"-"+r,attrs:i})},_getBackItem:function(t,e,n){var r=u.substitute("M {x1} {y1} L{x2} {y2}",t);return r+=u.substitute("L{x2} {y2} L{x1} {y1}Z",e),n=u.mix({},n,{path:r})},_getMinorItem:function(t,e,n,r){var i=this,a=i._isVertical(t,e),s=a?"x":"y",o=a?"y":"x",u=e[s+"1"]-t[s+"1"],c=u/(r+1),l={};return l[s+"1"]=l[s+"2"]=(n+1)*c+t[s+"1"],l[o+"1"]=t[o+"1"],l[o+"2"]=t[o+"2"],l},_addMonorItem:function(t,e){var n=this,i=r("minorItems",n,[]),a=n.get("minorCount");if(a)for(var s=0;s<a;s++){var o=n._getMinorItem(e,t,s,a);i.push(o)}},drawMinorLines:function(){var t=this,e=t.get("minorLine"),n=t.get("minorItems");t._drawGridLines(n,e,c+"-minor")},_changeMinorLinses:function(){var t=this,e=t.get("minorItems");t._changeGridLines(e,c+"-minor")}}),t.exports=a},function(t,e,n){var r=n(65);r.Abstract=n(47),r.Circle=n(130),r.MultLine=n(133),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(65),a=n(3),s=a.Vector2,o=function(t){o.superclass.constructor.call(this,t)};o.CFG={type:"multLine"},r.extend(o,i),r.augment(o,{_beforeRenderUI:function(){var t=this;o.superclass._beforeRenderUI.call(t)},getLinePath:function(){var t=this,e=t.get("tickPoints"),n=t.get("start"),i=t.get("end"),a=[];return a.push(["M",n.x,n.y]),r.each(e,function(t){a.push(["L",t.x,t.y])}),a.push(["L",i.x,i.y]),a},getTickPoint:function(t,e){var n=this.get("tickPoints");return n[e]},getTickEnd:function(t,e,n){var r,i=this,a=i.get("tickLine");return e=e?e:a.value,r=i.getSideVector(e,t,n),{x:t.x+r.x,y:t.y+r.y}},getSideVector:function(t,e,n){var r,i=this;if(0===n)r=i.get("start");else{var a=i.get("tickPoints");r=a[n-1]}var o=new s(e.x-r.x,e.y-r.y),u=o.normalize(),c=u.vertical(!1);return c.multiplyScaler(t)}}),t.exports=o},function(t,e,n){"use strict";t.exports={Axis:n(132),PlotBack:n(68),PlotRange:n(50),Plot:{Back:n(68),Range:n(50)},Labels:n(66),Tooltip:n(140),Li:n(49),Ul:n(69),Legend:n(138)}},function(t,e,n){"use strict";function r(t){t.remove()}var i=n(9),a=n(67),s=function(){};s.ATTRS={labels:null},i.augment(s,{renderLabels:function(){var t,e=this,n=e.get("labels");n&&(n.items||(n.items=[]),i.isNull(n.animate)&&(n.animate=e.get("animate")),t=e.addGroup(a,n),e.set("labelsGroup",t))},resetLabels:function(t){var e=this,n=e.get("labels");if(n){var a=e.get("labelsGroup"),s=a.getLabels(),o=s.length;t=t||n.items,i.each(t,function(t,n){if(n<o){var r=s[n];a.changeLabel(r,t)}else e.addLabel(t.text,t)});for(var u=o-1;u>=t.length;u--)r(s[u])}},addLabel:function(t,e){var n,r=this,i=r.get("labelsGroup"),a={};return i&&(a.text=t,a.x=e.x,a.y=e.y,a.point=e,a.textAlign=e.textAlign,e.rotate&&(a.rotate=e.rotate),n=i.addLabel(a)),n},removeLabels:function(){var t=this,e=t.get("labelsGroup");e&&e.remove(),t.set("labelsGroup",null)}}),t.exports=s},function(t,e,n){"use strict";function r(t,e){var n=null;return i.each(t,function(t){if(t.name===e.get("value"))return n=t,!1}),n}var i=n(9),a=n(49),s=n(52),o=n(48),u=function(t){u.superclass.constructor.call(this,t)};u.CFG={type:"category-legend",items:null,spacingX:5,spacingY:10,wordSpaceing:2,itemsGroup:null,layout:"horizontal",leaveChecked:!0,backPadding:[0,0,0,0],checkable:!0,itemsbeginX:0,itemsbeginY:0,unChecked:"#CCC",word:{fill:"#3c3c3c"},back:null,itemWrap:!1,maxLength:100,_back:{}},i.extend(u,o),i.augment(u,{_initCfg:function(){u.superclass._initCfg.call(this),this.deepSet("back")},_beforeRenderUI:function(){u.superclass._beforeRenderUI.call(this);var t=this.get("col"),e=this.get("items").length;this.set("_row",Math.ceil(e/t))},_renderUI:function(){u.superclass._renderUI.call(this),this._renderTitle(),this._renderItems(),this._wrapItems(),this._renderBack(),this.setPosition()},_wrapItems:function(){var t=this.get("itemWrap"),e=this.get("layout"),n=this.get("maxLength");t&&n>0&&("horizontal"===e?this._warpHorizontal():"vertical"===e&&this._warpVertical())},_warpVertical:function(){var t,e,n,r,a=this.get("itemsGroup"),s=this.get("titleShape"),o=a.get("children"),u=this.get("maxLength"),c=this.get("spacingX"),l=this.get("spacingY"),h=s.getBBBox().height+l,f=1,g=h,p=0,v=0,d=0;a.getBBBox().height>u&&i.each(o,function(i){r=i.getBBBox(),e=r.width+c,n=r.height+l,p=v,v=e>v?e:v,t=g,g+=n,g>u?(d+=p,g=n+h,f++,v=0,p=0,i.move(d,h)):i.move(d,t)})},_warpHorizontal:function(){var t,e,n,r=this.get("itemsGroup"),a=r.get("children"),s=this.get("maxLength"),o=this.get("spacingX"),u=this.get("spacingY"),c=1,l=0,h=0;r.getBBBox().width>s&&i.each(a,function(r){n=r.getBBBox(),t=n.width+o,e=n.height+u,h=l,l+=t,l>s?(l=t,c++,r.move(0,c*e)):r.move(h,c*e)})},_bindUI:function(){this._bindOverOut(),this._bindClick()},_bindClick:function(){var t=this.get("checkable");t&&this.on("click",i.wrapBehavior(this,"_onClick"))},_bindOverOut:function(){this.on("mouseenter",i.wrapBehavior(this,"_onMouseenter")),this.on("mouseleave",i.wrapBehavior(this,"_onMouseleave"))},_onClick:function(t){var e,n,i,a,o=this.get("leaveChecked"),u=this._getLi(t.currentTarget),c=this.get("items");if(u){var l=r(c,u);if(a=u.get("checked"),e=new s("itemclick",t),e.item=l,this.trigger(e),o&&a&&1===this.getLeaveCount())return;a?(i=new s("itemunchecked",t),i.item=l,this.trigger(i)):(n=new s("itemchecked",t),n.item=l,this.trigger(n))}},_onMouseenter:function(t){var e=new s("itemover",t),n=t.currentTarget,r=this._getLi(t.currentTarget),a=n.getCanvasNode();r&&(e.item=r,this.trigger(e),i.modiCSS(a,{cursor:"pointer"}))},_onMouseleave:function(t){var e=new s("itemout",t),n=this.getCanvasNode(),r=this._getLi(t.currentTarget);r&&(e.item=r,this.trigger(e),i.modiCSS(n,{cursor:"default"}))},_renderBack:function(){var t=this.get("itemsGroup"),e=this.get("backPadding"),n=this.get("back");t.renderBack(e,n)},_renderItems:function(){var t=this,e=t.get("items");i.each(e,function(e,n){t._addItem(e,n)})},_addItem:function(t){var e=this.get("itemsGroup"),n=this._getNextX(),r=this._getNextY(),i=this.get("unChecked"),s={words:[{text:t.name}]};t.symbol?s.marker={symbol:t.symbol,fill:t.checked?t.color:i}:t.marker&&(t.checked||(t.marker.fill=i,t.marker.stroke=i),s.marker=t.marker),e.addGroup(a,{value:t.name,"class":"legend-item",word:t.word,checked:t.checked,x:n,y:r,items:s})},_getNextX:function(){var t=this.get("layout"),e=this.get("spacingX"),n=this.get("itemsGroup"),r=n.get("children"),a=0;return"horizontal"===t&&i.each(r,function(t){a+=t.getBBBox().width+e}),a},_getNextY:function(){var t=this.get("spacingY"),e=this.get("layout"),n=this.get("itemsGroup"),r=this.get("titleShape"),a=n.get("children"),s=r.getBBBox().height+t;return"vertical"===e&&i.each(a,function(e){s+=e.getBBBox().height+t}),s},_getLi:function(t){var e=t.getParent();return"li"===e.get("type")&&e}}),t.exports=u},function(t,e,n){"use strict";var r=n(9),i=n(48),a=n(37),s=function(t){s.superclass.constructor.call(this,t)};s.CFG={type:"continuous-legend",items:null,layout:"vertical",width:200,height:60,attrType:null,nameGroup:null,titleOffset:30,nameOffset:10,word:{},title:{text:" "},color:"#4E7CCC",_word:{fill:"#333",textAlign:"center",textBaseline:"middle"}},r.extend(s,i),r.augment(s,{_initCfg:function(){s.superclass._initCfg.call(this),this.deepSet("word")},_beforeRenderUI:function(){s.superclass._beforeRenderUI.call(this);var t=this.addGroup();this.set("nameGroup",t)},_renderUI:function(){s.superclass._renderUI.call(this);var t=this.get("attrType");this._calStartPoint(),"color"===t?this._renderGradient():"size"===t&&this._renderTriangle()},_calStartPoint:function(){var t=this.get("titleShape"),e=t.getBBBox(),n=this.get("titleOffset"),r={x:0,y:e.height+n};this.set("startPoint",r)},_renderTriangle:function(){var t=this.get("items"),e=this.get("layout");this._renderName(t,e),this._renderTriangleShape(t,e)},_renderGradient:function(){var t=this.get("items"),e=this.get("layout");this._renderName(t,e),this._renderGradientShape(t,e)},_renderTriangleShape:function(t,e){var n=this.get("itemsGroup"),r=this.get("width"),i=this.get("height"),a=this.get("startPoint"),s=this.get("color");"vertical"===e?n.addShape("Polygon",{attrs:{points:[[a.x,a.y],[a.x+r,a.y],[a.x,a.y+i]],fill:s}}):n.addShape("Polygon",{attrs:{points:[[a.x,a.y+i],[a.x+r,a.y],[a.x+r,a.y+i]],fill:s}})},_renderGradientShape:function(t,e){var n,i=this.get("itemsGroup"),s=this.get("width"),o=this.get("height"),u="",c=this.get("startPoint");"vertical"===e?(u+="l (90) ",r.each(t,function(t){n=new a(t.color).getRGBStyle(),u+=1-t.value+":"+n+" "})):(u+="l (0) ",r.each(t,function(t){n=new a(t.color).getRGBStyle(),u+=t.value+":"+n+" "})),i.addShape("Rect",{attrs:{x:c.x,y:c.y,width:s,height:o,fill:u}})},setLayout:function(t){this.set("layout",t),this.clear(),this._renderUI()},_renderName:function(t,e){var n=this.get("nameGroup"),i=r.mix({},this.get("word")),a=this.get("nameOffset"),s=this.get("width"),o=this.get("height"),u=this.get("startPoint");r.each(t,function(c,l){0!==l&&l!==t.length-1||("vertical"===e?(a=0===l?a:-a,i=r.mix(i,{x:u.x+s/2,y:u.y+o*(1-c.value)+a,text:c.name}),n.addShape("Text",{attrs:i})):(a=1===l?a:-a,i=r.mix(i,{x:u.x+s*c.value+a,y:u.y+o/2,text:c.name}),n.addShape("Text",{attrs:i})))})},clear:function(){var t=this.get("itemsGroup"),e=this.get("nameGroup");t.clear(),e.clear()}}),t.exports=s},function(t,e,n){var r=n(48);r.Category=n(136),r.Continuous=n(137),t.exports=r},function(t,e,n){"use strict";var r=n(9),i=n(12),a=i.GroupBase,s=function(t){s.superclass.constructor.call(this,t)};s.CFG={type:"li",items:null,itemsGroup:null,word:null,marker:null,wordSpaceing:null,_marker:{fill:"red",lineWidth:4,r:2.5},_wordSpaceing:6,_word:{fill:"#fff",textBaseline:"middle"}},r.extend(s,a),r.augment(s,{_initCfg:function(){this.deepSet("word"),this.deepSet("marker"),this.deepSet("wordSpaceing"),this.deepSet("markerAlign")},_renderUI:function(){s.superclass._renderUI.call(this),this._renderItems()},_renderItems:function(){var t,e=this,n=e.getBBBox(),i=n.width,a=e.get("word"),s=e.get("wordSpaceing"),o=e.get("items"),u=e.get("marker"),c=e.get("markerAlign");o.marker&&(t=r.mix({},u,o.marker,{x:"center"===c?0:o.marker.radius,y:0}),r.mixXY(t,e),t.symbol&&e.addShape("Marker",{type:"marker",attrs:t})),r.each(o.words,function(o){n=e.getBBBox(),i=Math.abs(n.width)===1/0?0:n.width,t=r.mix({},a,o,{x:"center"===c?s:0===i?0:i+s,y:0}),r.mixXY(t,e),e.addShape("Text",{attrs:t})})}}),t.exports=s},function(t,e,n){var r=n(141);t.exports=r},function(t,e,n){"use strict";function r(t,e){return t.getElementsByClassName(e)[0]}var i=n(9),a=n(3),s=n(12),o=n(69),u=s.GroupBase,c="ac-title",l="ac-list",h=function(t){h.superclass.constructor.call(this,t)};h.CFG={zIndex:10,x:0,y:0,itemName:"tootip",items:[],ulItems:[],ul:{fill:"#fff",textAlign:"left"},title:{},name:{},value:{},crossLine:{stroke:"#999",lineWidth:1},markerCfg:null,titleText:void 0,wordSpaceing:6,padding:[10,10,10,10],crosshairs:!1,titleShape:null,ulGroup:null,crossShapeX:null,crossShapeY:null,backShape:null,plotRange:null,shared:!1,offset:10,animate:!0,duration:50,visible:!1,valueSplit:"",valueSuffix:"",custom:!1,customDiv:null,customFollow:!0,timeStamp:0,html:'<div class="ac-tooltip" style="position:absolute;visibility: hidden;"><h4 class="'+c+'"></h4><ul class="'+l+'"></ul></div>',itemTpl:'<li><span style="color:{color}">{name}</span> : {value}</li>'},i.extend(h,u),i.augment(h,{_beforeRenderUI:function(){o.superclass._beforeRenderUI.call(this);var t=this.get("ul"),e=this.get("custom"),n=this.get("crossLine"),r=this.addGroup({attrs:n}),i=this.addGroup(o,{zIndex:10,attrs:t});this.set("ulItems",[]),this.set("crossGroup",r),this.set("ulGroup",i),e&&this._setCustomDiv()},_renderUI:function(){o.superclass._renderUI.call(this);var t=this.get("custom");t?this._renderCustom():this._renderUl(),this._renderCrossLine()},_renderUl:function(){var t,e,n,r,a=this,s=[],o=a.get("ulGroup"),u=a.get("items"),c=a.get("title"),l=a.get("titleText"),h=a.get("name"),f=a.get("value"),g=a.get("valueSplit"),p=a.get("valueSuffix"),v=a.get("markerCfg");c&&s.push({words:[{text:l}],attrs:c}),i.each(u,function(t){var e=i.mix({},h,{text:t.name?t.name+":":""}),n=i.mix({},f,{text:t.value+g+p});t.marker===!0&&(t.marker="circle");var r=t.marker?{symbol:t.marker,fill:t.color}:{};s.push({color:t.color,words:[e,n],marker:i.mix(r,v)})}),o.setItems(s),r=o.get("backShape"),c&&(e=o.get("itemsGroup").getFirst(),n=e.getFirst(),a.set("titleShape",n)),t=o.get("itemsGroup").getFilterChild(e),a.set("backShape",r),a.set("ulItems",s),a.set("textGroup",t)},_renderCrossLine:function(){var t=this.get("crosshairs"),e=this.get("canvas"),n=this.get("plotRange");if(this.clearCrossGroup(),t)switch(t.type){case"x":this._renderCrossLineX(e,n);break;case"y":this._renderCrossLineY(e,n);break;case"cross":this._renderCrossLineX(e,n),this._renderCrossLineY(e,n);break;default:this._renderCrossLineY(e,n)}},_renderCrossLineY:function(t,e){var n,r,a=this.get("crosshairs");e?(n=e.bl.y,r=e.tl.y):(n=t.get("height"),r=0);var s=i.mix({x1:0,y1:n,x2:0,y2:r},this.get("crossLine"));"dash"===a.shape&&(s=i.mix(s,{lineDash:"6 3"}));var o=this._getCrossShape(s);this.set("crossShapeY",o)},_renderCrossLineX:function(t,e){var n,r,a,s,o=this.get("crosshairs");e?(n=e.bl.x,r=e.br.x):(n=t.get("width"),r=0),a=i.mix({x1:n,y1:0,x2:r,y2:0},this.get("crossLine")),"dash"===o.shape&&(a=i.mix(a,{lineDash:"6 3"})),s=this._getCrossShape(a),this.set("crossShapeX",s)},_getCrossShape:function(t){var e=this.get("crossGroup"),n=e.addShape("Line",{attrs:t});return n},clearCrossGroup:function(){var t=this.get("crossGroup");this.set("crossShapeX",void 0),this.set("crossShapeY",void 0),t.clear()},setCross:function(t){var e={};e.type=t,this.set("crosshairs",{type:t}),this._renderCrossLine()},setContent:function(t,e){var n=this._isContentChange(t,e);if(!n){var r=this.get("custom"),i=+new Date;this.set("items",e),this.set("titleText",t),this.set("timeStamp",i),r?this._renderCustom():this._renderUl()}return this},_isContentChange:function(t,e){var n=this.get("titleText"),r=this.get("items");return t===n&&r.length===e.length&&e[0].value===r[0].value},getTitle:function(){return this.get("titleShape")},setPosition:function(t,e){var n=this.get("canvas"),r=this.get("customDiv"),i=this.get("plotRange"),s=this.get("offset"),o=this.get("crossShapeX"),u=this.get("crossShapeY"),c=this.get("ulGroup"),l=c.getBBBox(),h=this.get("animate"),f=new a.Matrix3,g=!0,p=t,v=e;r&&this.get("customFollow")?t+=s:(t=t-l.width-s,e-=l.height),i&&(i.isInRange(t,e)||(i.isInVertical(e)||(e=i.tl.y),i.isInHorizontal(t)||(t=Math.max(i.tl.x,p)+s,g=!1))),this.get("x")===t&&this.get("y")===e||(u&&(g?u.move(p,0):u.move(t-s,0)),o&&o.move(0,v),f.translate(t,e),h&&this.get("visible")?c.animate({matrix:f},this.get("duration")):(c.setMatrix(f),this.get("visible")||this.show(),n.draw()),this.moveCustom(t,e,g))},_setCustomDiv:function(){var t,e,n=this,r=n.get("html"),a=n.get("canvas").get("el").parentNode;/^\#/.test(r)?(e=r.replace("#",""),t=document.getElementById(e)):t=i.createDom(r),n.set("customDiv",t),n.get("customFollow")&&(a.appendChild(t),a.style.position="relative")},_renderCustom:function(){var t=this,e=t.get("title"),n=t.get("titleText"),a=t.get("customDiv"),s=r(a,c),o=r(a,l),u=t.get("items");t._clearCustom(),s&&e&&(s.innerHTML=n),o&&(t.set("titleText",n),i.each(u,function(e,n){t.addCustomItem(e,n)}))},_clearCustom:function(){var t=this.get("customDiv"),e=r(t,c),n=r(t,l);e&&(e.innerHTML=""),n&&(n.innerHTML="")},addCustomItem:function(t){var e,n,a=this.get("customDiv"),s=r(a,l),o=this.get("itemTpl");e=i.substitute(o,t),n=i.createDom(e),s.appendChild(n)},moveCustom:function(t,e){var n=this,r=n.get("customDiv");r&&n.get("customFollow")&&(t=t,e=e,e-=i.getOuterHeight(r)/2,r.style.left=t+"px",r.style.top=e+"px")},show:function(){var t=this.get("crossShapeX"),e=this.get("crossShapeY"),n=this.get("customDiv"),r=this.get("hideHandler");r&&clearTimeout(r),h.superclass.show.call(this),n&&this.get("customFollow")&&(n.style.visibility="visible"),t&&t.show(),e&&e.show()},hide:function(){var t=this,e=t.get("customDiv"),n=t.get("crossShapeX"),r=t.get("crossShapeY"),i=t.get("canvas"),a=setTimeout(function(){e&&t.get("customFollow")&&(e.style.visibility="hidden"),t.set("hideHandler",null),t.get("destroyed")||(h.superclass.hide.call(t),i.draw())},t.get("duration"));t.set("hideHandler",a),n&&n.hide(),r&&r.hide()},remove:function(){var t=this,e=t.get("crossShapeX"),n=t.get("crossShapeY"),r=t.get("customDiv");e&&e.remove(),n&&n.remove(),h.superclass.remove.call(this),r&&r.parentNode.removeChild(r)}}),t.exports=h},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(12),s=n(49),o=a.GroupBase;
	r.CFG={items:null,itemsGroup:null,backShape:null,back:{radius:6,fill:"#000",fillOpacity:.7},padding:null,lineHeight:null,_padding:[10,10,10,10],_lineHeight:20},i.extend(r,o),i.augment(r,{_initCfg:function(){this.deepSet("lineHeight"),this.deepSet("padding"),this.deepSet("marker")},_beforeRenderUI:function(){r.superclass._beforeRenderUI.call(this);var t=this;t.set("itemsGroup",this.addGroup())},_renderUI:function(){r.superclass._renderUI.call(this);var t=this;t.get("items")&&(t._renderItems(),t._renderBack())},_renderBack:function(){var t=this.get("padding"),e=this.get("back"),n=this.get("itemsGroup"),r=n.renderBack(t,e);this.set("backShape",r)},_renderItems:function(){var t=this,e=t.get("items");i.each(e,function(e,n){t._addItem(e,n)})},_addItem:function(t,e){var n=this,r=n.get("itemsGroup"),i=n.get("lineHeight"),a=n.get("padding"),o=e*i+a[0]+8;r.addGroup(s,{x:a[3],y:o,items:t})},setItems:function(t){var e=this;e.clearItems(),e.set("items",t),e._renderItems(),e._renderBack()},clearItems:function(){var t=this,e=t.get("itemsGroup");e&&e.clear()}}),t.exports=r},function(t,e){"use strict";var n={linear:function(t){return t},easeInQuad:function(t){return t*t},easeOutQuad:function(t){return-1*t*(t-2)},easeInOutQuad:function(t){return(t/=.5)<1?.5*t*t:-.5*(--t*(t-2)-1)},easeInCubic:function(t){return t*t*t},easeOutCubic:function(t){return 1*((t=t/1-1)*t*t+1)},easeInOutCubic:function(t){return(t/=.5)<1?.5*t*t*t:.5*((t-=2)*t*t+2)},easeInQuart:function(t){return t*t*t*t},easeOutQuart:function(t){return-1*((t=t/1-1)*t*t*t-1)},easeInOutQuart:function(t){return(t/=.5)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2)},easeInQuint:function(t){return 1*(t/=1)*t*t*t*t},easeOutQuint:function(t){return 1*((t=t/1-1)*t*t*t*t+1)},easeInOutQuint:function(t){return(t/=.5)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)},easeInSine:function(t){return-1*Math.cos(t/1*(Math.PI/2))+1},easeOutSine:function(t){return 1*Math.sin(t/1*(Math.PI/2))},easeInOutSine:function(t){return-.5*(Math.cos(Math.PI*t/1)-1)},easeInExpo:function(t){return 0===t?1:1*Math.pow(2,10*(t/1-1))},easeOutExpo:function(t){return 1===t?1:1*(-Math.pow(2,-10*t/1)+1)},easeInOutExpo:function(t){return 0===t?0:1===t?1:(t/=.5)<1?.5*Math.pow(2,10*(t-1)):.5*(-Math.pow(2,-10*--t)+2)},easeInCirc:function(t){return t>=1?t:-1*(Math.sqrt(1-(t/=1)*t)-1)},easeOutCirc:function(t){return 1*Math.sqrt(1-(t=t/1-1)*t)},easeInOutCirc:function(t){return(t/=.5)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)},easeInElastic:function(t){var e=1.70158,n=0,r=1;return 0===t?0:1===(t/=1)?1:(n||(n=.3),r<Math.abs(1)?(r=1,e=n/4):e=n/(2*Math.PI)*Math.asin(1/r),-(r*Math.pow(2,10*(t-=1))*Math.sin((1*t-e)*(2*Math.PI)/n)))},easeOutElastic:function(t){var e=1.70158,n=0,r=1;return 0===t?0:1===(t/=1)?1:(n||(n=.3),r<Math.abs(1)?(r=1,e=n/4):e=n/(2*Math.PI)*Math.asin(1/r),r*Math.pow(2,-10*t)*Math.sin((1*t-e)*(2*Math.PI)/n)+1)},easeInOutElastic:function(t){var e=1.70158,n=0,r=1;return 0===t?0:2===(t/=.5)?1:(n||(n=1*(.3*1.5)),r<Math.abs(1)?(r=1,e=n/4):e=n/(2*Math.PI)*Math.asin(1/r),t<1?-.5*(r*Math.pow(2,10*(t-=1))*Math.sin((1*t-e)*(2*Math.PI)/n)):r*Math.pow(2,-10*(t-=1))*Math.sin((1*t-e)*(2*Math.PI)/n)*.5+1)},easeInBack:function(t){var e=1.70158;return 1*(t/=1)*t*((e+1)*t-e)},easeOutBack:function(t){var e=1.70158;return 1*((t=t/1-1)*t*((e+1)*t+e)+1)},easeInOutBack:function(t){var e=1.70158;return(t/=.5)<1?.5*(t*t*(((e*=1.525)+1)*t-e)):.5*((t-=2)*t*(((e*=1.525)+1)*t+e)+2)},easeInBounce:function(t){return 1-n.easeOutBounce(1-t)},easeOutBounce:function(t){return(t/=1)<1/2.75?1*(7.5625*t*t):t<2/2.75?1*(7.5625*(t-=1.5/2.75)*t+.75):t<2.5/2.75?1*(7.5625*(t-=2.25/2.75)*t+.9375):1*(7.5625*(t-=2.625/2.75)*t+.984375)},easeInOutBounce:function(t){return t<.5?.5*n.easeInBounce(2*t):.5*n.easeOutBounce(2*t-1)+.5}};t.exports=n},function(t,e,n){"use strict";var r=n(9),i=n(52),a=function(){};r.augment(a,{fire:function(t,e){var n=new i(t);r.each(e,function(t,e){n[e]=t}),this.trigger(n)},getCenter:function(){var t=this.getBBBox();return{x:t.minX+t.width/2,y:t.minY+t.height/2}},getWidth:function(){return this.getBBBox().width},getHeight:function(){return this.getBBBox().height},init:function(){this.set("animable",!0),this.set("animCount",0),this.transformByAttr()},deepSet:function(t){var e=this.get("_"+t),n=this.deepGet(t);this.set(t,r.merge(e,n))},deepGet:function(t){for(var e=this.get(t),n=this.getParent();n;){if(e)return e;e=n.get(t),n=n.getParent()}},getCanvasNode:function(){var t=this.get("canvas");return t.get("el")},transformByAttr:function(){var t=this.get("attrs");return t&&t.rotate&&this.rotateAtStart(t.rotate),this},rotateAtStart:function(t){var e=this.attr("x"),n=this.attr("y");this.transform([["t",-e,-n],["r",t],["t",e,n]])},move:function(t,e){var n=this,r=n.get("x")||0,i=n.get("y")||0;n.translate(t-r,e-i),n.set("x",t),n.set("y",e)},animate:function(t,e,n,i){this.addAnimCount(),r.animate(this,t,e,n,i)},stopAnimate:function(){this.set("animable",!1)},addAnimCount:function(){var t=this.get("animCount");t<1e4?this.set("animCount",++t):this.set("animCount",0)},attr:function(t,e){var n=this;if(0===arguments.length)return n.__attrs;if(r.isObject(t))return r.adapAttrs(t),r.each(t,function(t,e){n._setAttr(e,t)}),n.__afterSetAttrAll&&n.__afterSetAttrAll(t),n;if(2===arguments.length){if(n._setAttr(t,e)!==!1){var i=r.adapAttr(t,e);t=i.name,e=i.value;var a="__afterSetAttr"+r.ucfirst(t);n[a]&&n[a](e)}return n}return n._getAttr(t)}}),t.exports=a},function(t,e,n){var r=n(9),i=n(28),a=n(70),s=i.G,o=function(){};r.augment(o,{findAllBy:function(t){var e=this,n=e.get("children"),i=[],a=[];return r.each(n,function(e){if(t(e)&&i.push(e),e.findBy){a=e.findAllBy(t);for(var n=0;n<a.length;n++)i.push(a[n])}}),0!==i.length&&i},isChild:function(t){var e=this.get("canvas"),n=e.get("children");return n.indexOf(t)!==-1},getFilterChild:function(t){var e=this.get("children"),n=[];return r.each(e,function(e){t!==e&&n.push(e)}),n},getChildAt:function(t){var e=this.get("children");return e[t]},getFirst:function(){var t=this.get("children");return t[0]},getLast:function(){var t=this.get("children");return t[t.length-1]},addShape:function(t,e){var n,i,a=this.get("canvas");return e=r.mix({},e),e?(e.type=t,t=r.upperFirst(t),e.attrs&&(i=e.attrs,"Text"===t&&(i.fontFamily=i.fontFamily?i.fontFamily:a.get("fontFamily"))),e.canvas=a,e.father=this,n=new s[t](e)):n=new s[t],this.add(n),n},addGroup:function(t,e){var n,i=this.get("canvas");if(e=r.mix({},e),r.isFunction(t))e?(e.canvas=i,e.father=this,n=new t(e)):n=new t({canvas:i,father:this}),this.add(n);else if(r.isObject(t))t.canvas=i,n=new a(t),this.add(n);else{if(void 0!==t)return!1;n=new a,this.add(n)}return n},renderBack:function(t,e){var n=this.get("backShape"),i=this.getBBBox(),a=this.getParent();return r.mix(e,{x:i.minX-t[3],y:i.minY-t[0],width:i.width+t[1]+t[3],height:i.height+t[0]+t[2]}),n?n.attr(e):n=a.addShape("Rect",{zIndex:-1,attrs:e}),this.set("backShape",n),a.sort(),n},findByType:function(t){var e,n=this.get("children");return r.each(n,function(n){n.get("type")===t&&(e=n)}),e}}),t.exports=o},function(t,e,n){"use strict";var r=n(28),i=n(9),a=r.G,s=function(t){s.superclass.constructor.call(this,t)};s.Symbols={circle:function(t,e,n){return[["M",t,e-n],["a",n,n,0,1,1,0,2*n],["a",n,n,0,1,1,0,-2*n],["z"]]},square:function(t,e,n){return[["M",t-n,e-n],["L",t+n,e-n],["L",t+n,e+n],["L",t-n,e+n],["z"]]},diamond:function(t,e,n){return[["M",t-n,e],["L",t,e-n],["L",t+n,e],["L",t,e+n],["z"]]},triangle:function(t,e,n){var r=n/.966,i=n;return[["M",t,e-n],["L",t+r,e+i],["L",t-r,e+i],["z"]]},"triangle-down":function(t,e,n){var r=n/.966,i=n;return[["M",t,e+n],["L",t+r,e-i],["L",t-r,e-i],["z"]]}},s.ATTRS={path:null,lineWidth:1},i.extend(s,a.Path),i.augment(s,{getDefaultAttrs:function(){s.superclass.getDefaultAttrs.call(this);var t,e,n=this.get("attrs"),r=n.x,a=n.y,o=n.radius?n.radius:n.r;return e=i.isFunction(n.symbol)?n.symbol:s.Symbols[n.symbol],e&&(t={path:e(r,a,o)}),i.mix(s.ATTRS,t)}}),t.exports=s},function(t,e,n){"use strict";var r=n(1),i={transform:function(t,e){return t=t.clone(),r.each(e,function(e){switch(e[0]){case"t":t.translate(e[1],e[2]);break;case"s":t.scale(e[1],e[2]);break;case"r":t.rotate(e[1]);break;case"m":t.multiply(e[1]);break;default:return!1}}),t},isMatrix3:function(t){return"matrix3"===t.type},scale:function(t,e,n,r,i){return t=t.clone(),t.translate(-1*r,-1*i),t.scale(e,n),t.translate(r,i),t},rotate:function(t,e,n,r){return t=t.clone(),e=parseFloat(e)/180*Math.PI,t.translate(-1*n,-1*r),t.rotate(e),t.translate(n,r),t}};t.exports=i},function(t,e,n){"use strict";function r(t,e){for(var n=[],r=0,i=t.length;i-2*!e>r;r+=2){var a=[{x:+t[r-2],y:+t[r-1]},{x:+t[r],y:+t[r+1]},{x:+t[r+2],y:+t[r+3]},{x:+t[r+4],y:+t[r+5]}];e?r?i-4===r?a[3]={x:+t[0],y:+t[1]}:i-2===r&&(a[2]={x:+t[0],y:+t[1]},a[3]={x:+t[2],y:+t[3]}):a[0]={x:+t[i-2],y:+t[i-1]}:i-4===r?a[3]=a[2]:r||(a[0]={x:+t[r],y:+t[r+1]}),n.push(["C",(-a[0].x+6*a[1].x+a[2].x)/6,(-a[0].y+6*a[1].y+a[2].y)/6,(a[1].x+6*a[2].x-a[3].x)/6,(a[1].y+6*a[2].y-a[3].y)/6,a[2].x,a[2].y])}return n}var i=n(1),a="concat",s=String.prototype.toUpperCase,o=/(-?\d*\.?\d*(?:e[\-+]?\d+)?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/gi,u=/([achlmrqstvz])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/gi,c={path2Absolute:function(t){if(i.isArray(t)&&i.isArray(t&&t[0])||(t=c.parsePathString(t)),!t||!t.length)return[["M",0,0]];var e=[],n=0,o=0,u=0,l=0,h=0;"M"===t[0][0]&&(n=+t[0][1],o=+t[0][2],u=n,l=o,h++,e[0]=["M",n,o]);for(var f,g,p=3===t.length&&"M"===t[0][0]&&"R"===t[1][0].toUpperCase()&&"Z"===t[2][0].toUpperCase(),v=h,d=t.length;v<d;v++){e.push(f=[]),g=t[v];var x,m,y;if(g[0]!==s.call(g[0]))switch(f[0]=s.call(g[0]),f[0]){case"A":f[1]=g[1],f[2]=g[2],f[3]=g[3],f[4]=g[4],f[5]=g[5],f[6]=+(g[6]+n),f[7]=+(g[7]+o);break;case"V":f[1]=+g[1]+o;break;case"H":f[1]=+g[1]+n;break;case"R":for(x=[n,o][a](g.slice(1)),m=2,y=x.length;m<y;m++)x[m]=+x[m]+n,x[++m]=+x[m]+o;e.pop(),e=e[a](r(x,p));break;case"M":for(u=+g[1]+n,l=+g[2]+o,m=1,y=g.length;m<y;m++)f[m]=+g[m]+(m%2?n:o);break;default:for(m=1,y=g.length;m<y;m++)f[m]=+g[m]+(m%2?n:o)}else if("R"===g[0])x=[n,o][a](g.slice(1)),e.pop(),e=e[a](r(x,p)),f=["R"][a](g.slice(-2));else for(var _=0,S=g.length;_<S;_++)f[_]=g[_];switch(f[0]){case"Z":n=u,o=l;break;case"H":n=f[1];break;case"V":o=f[1];break;case"M":u=f[f.length-2],l=f[f.length-1],n=f[f.length-2],o=f[f.length-1];break;default:n=f[f.length-2],o=f[f.length-1]}}return e},parsePathString:function(t){if(!t)return null;var e={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0},n=[];return i.isArray(t)&&i.isArray(t[0])&&(n=t.slice(0)),!n.length&&i.isString(t)&&t.replace(u,function(t,r,i){var s=[],u=r.toLowerCase();if(i.replace(o,function(t,e){e&&s.push(+e)}),"m"===u&&s.length>2&&(n.push([r][a](s.splice(0,2))),u="l",r="m"===r?"l":"L"),"r"===u)n.push([r][a](s));else for(;s.length>=e[u]&&(n.push([r][a](s.splice(0,e[u]))),e[u]););}),n},parsePathArray:function(t){if(i.isArray(t)){var e=i.map(t,function(t){var e=t.join(" ");return e.replace(/([a-z,A-Z])\s+/,"$1")});return e.join(" ")}return t}};t.exports=c},function(t,e,n){"use strict";function r(t){this.space={},i.isString(t)?this.setStyle(t):t instanceof r&&this.copy(t)}var i=n(1),a=(n(4),n(151)),s=n(152),o=n(150),u={hex:/^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{6})$/,space:/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)$/,rgbNum:/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*$/,rgbaNum:/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*([0-9]*\.?[0-9]+)\s*$/,rgbPre:/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*$/,rgbaPre:/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*([0-9]*\.?[0-9]+)\s*$/,hsl:/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*$/,hsla:/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*([0-9]*\.?[0-9]+)\s*$/};i.augment(r,{getType:function(){return this.space.type},toRGB:function(){var t=this.space;if("rgb"!==t.type){var e=t.toRGB();this.setRGB(e.r,e.g,e.b,e.a)}},toHSL:function(){var t=this.space;if("hsl"!==t.type){var e=t.toHSL();this.setHSL(e.h,e.s,e.l,e.a)}},getR:function(){return this.toRGB(),this.space.r},getG:function(){return this.toRGB(),this.space.g},getB:function(){return this.toRGB(),this.space.b},getH:function(){return this.toHSL(),this.space.h},getS:function(){return this.toHSL(),this.space.s},getL:function(){return this.toHSL(),this.space.l},getA:function(){return this.space.a},multiplyA:function(t){return void 0===t?this:(void 0===this.space.a&&(this.space.a=1),this.space.a*=t,this)},getRGBStyle:function(){return this.toRGB(),this.space.getStyle()},getRGBPreStyle:function(){return this.toRGB(),this.space.getPreStyle()},getHSLStyle:function(){return this.toHSL(),this.space.getStyle()},getHex:function(){return this.toRGB(),this.space.getHex()},setRGB:function(t,e,n,r){return this.space=new s,this.space.setRGB(t,e,n,r),this},setHSL:function(t,e,n,r){return this.space=new a,this.space.setHSL(t,e,n,r),this},setHex:function(t){return this.space=new s,t=Math.floor(t),this.space.r=(t>>16&255)/255,this.space.g=(t>>8&255)/255,this.space.b=(255&t)/255,this},setStyle:function(t){var e;if(e=u.hex.exec(t)){var n=e[1],r=n.length;if(3===r)return this.setRGB(parseInt(n.charAt(0)+n.charAt(0),16)/255,parseInt(n.charAt(1)+n.charAt(1),16)/255,parseInt(n.charAt(2)+n.charAt(2),16)/255),this;if(6===r)return this.setRGB(parseInt(n.charAt(0)+n.charAt(1),16)/255,parseInt(n.charAt(2)+n.charAt(3),16)/255,parseInt(n.charAt(4)+n.charAt(5),16)/255),this}else if(e=u.space.exec(t)){var i,a=e[1],s=e[2];switch(a){case"rgb":if(i=u.rgbNum.exec(s))return this.setRGB(parseInt(i[1],10)/255,parseInt(i[2],10)/255,parseInt(i[3],10)/255),this;if(i=u.rgbPre.exec(s))return this.setRGB(parseInt(i[1],10)/100,parseInt(i[2],10)/100,parseInt(i[3],10)/100),this;break;case"rgba":if(i=u.rgbaNum.exec(s))return this.setRGB(parseInt(i[1],10)/255,parseInt(i[2],10)/255,parseInt(i[3],10)/255,parseFloat(i[4])),this;if(i=u.rgbaPre.exec(s))return this.setRGB(parseInt(i[1],10)/100,parseInt(i[2],10)/100,parseInt(i[3],10)/100,parseFloat(i[4])),this;break;case"hsl":if(i=u.hsl.exec(s))return this.setHSL(parseInt(i[1],10)/360,parseInt(i[2],10)/100,parseInt(i[3],10)/100),this;break;case"hsla":if(i=u.hsla.exec(s))return this.setHSL(parseInt(i[1],10)/360,parseInt(i[2],10)/100,parseInt(i[3],10)/100,parseFloat(i[4])),this}}else t=t.toLowerCase(),void 0!==o[t]?this.setHex(o[t]):this.setHex(o.black)},copy:function(t){this.space=t.space.clone()},clone:function(){return new r(this)}}),t.exports=r},function(t,e){t.exports={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074}},function(t,e,n){"use strict";var r=n(1),i=n(4),a=function(){this.h=0,this.s=0,this.l=0};r.augment(a,{type:"hsl",setHSL:function(t,e,n,r){this.h=i.mod(t,1),this.s=i.clamp(e,0,1),this.l=i.clamp(n,0,1),void 0!==r?this.a=i.clamp(r,0,1):this.a=void 0},toRGB:function(){function t(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}return function(){var e=this,n=e.h,r=e.s,i=e.l;if(0===r)return{r:i,g:i,b:i,a:e.a};var a=i<=.5?i*(1+r):i+r-i*r,s=2*i-a;return{r:t(s,a,n+1/3),g:t(s,a,n),b:t(s,a,n-1/3),a:e.a}}}(),clone:function(){var t=new a;return t.h=this.h,t.s=this.s,t.l=this.l,t.a=this.a,t},copy:function(t){return this.h=t.h,this.s=t.s,this.l=t.l,this.a=t.a,this},getStyle:function(){var t=this;return void 0===t.a?"hsl("+Math.round(360*t.h)+", "+Math.round(100*t.s)+"%, "+Math.round(100*t.l)+"%)":"hsla("+Math.round(360*t.h)+", "+Math.round(100*t.s)+"%, "+Math.round(100*t.l)+"%, "+t.a+")"}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(4),a=function(){this.r=0,this.g=0,this.b=0,this.type="rgb"};r.augment(a,{type:"rgb",setRGB:function(t,e,n,r){this.r=i.clamp(t,0,1),this.g=i.clamp(e,0,1),this.b=i.clamp(n,0,1),void 0!==r?this.a=i.clamp(r,0,1):this.a=void 0},toHSL:function(){var t,e,n=this.r,r=this.g,i=this.b,a=Math.max(n,r,i),s=Math.min(n,r,i),o=(s+a)/2;if(s===a)t=0,e=0;else{var u=a-s;switch(e=o<=.5?u/(a+s):u/(2-a-s),a){case n:t=(r-i)/u+(r<i?6:0);break;case r:t=(i-n)/u+2;break;case i:t=(n-r)/u+4}t/=6}return{h:t,s:e,l:o,a:this.a}},getHex:function(){var t=255*this.r<<16^255*this.g<<8^255*this.b<<0;return"#"+("000000"+t.toString(16)).slice(-6)},getStyle:function(){return void 0===this.a?"rgb("+Math.round(255*this.r).toString()+", "+Math.round(255*this.g).toString()+", "+Math.round(255*this.b).toString()+")":"rgba("+Math.round(255*this.r).toString()+", "+Math.round(255*this.g).toString()+", "+Math.round(255*this.b).toString()+", "+this.a+")"},getPreStyle:function(){return void 0===this.a?"rgb("+Math.round(100*this.r).toString()+"%, "+Math.round(100*this.g).toString()+"%, "+Math.round(100*this.b).toString()+"%)":"rgba("+Math.round(100*this.r).toString()+"%, "+Math.round(100*this.g).toString()+"%, "+Math.round(100*this.b).toString()+"%, "+this.a+")"},clone:function(){var t=new a;return t.r=this.r,t.g=this.g,t.b=this.b,t.a=this.a,t},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this.a=t.a,this}}),t.exports=a},function(t,e){"use strict";function n(t){w=t.length,w&&(b=t[0].length),w>1&&b>1&&(m=t[0][0][0],_=t[0][0][1],y=t[1][0][0]-t[0][0][0],S=t[0][1][1]-t[0][0][1])}function r(t,e){var n=i(!0,t,e),r=i(!1,t,e);return[n,r]}function i(t,e,n){var r=w,i=b,s=[];t?i--:r--;for(var o=0;o<r;o++){s[o]=[];for(var u=0;u<i;u++){s[o][u]={};var c,l;if(c=e[o][u][2],l=t?e[o][u+1][2]:e[o+1][u][2],a(c,l))s[o][u].rate=-2,s[o][u].have_iso_point=!1;else{var h=a(n,c),f=a(n,l),g=(n-c)*(n-l);if(h||f){h?c+=M:l+=M;var p=s[o][u].rate=(n-c)/(l-c);p>0&&p<1?s[o][u].have_iso_point=!0:s[o][u].have_iso_point=!1}else g>0?(s[o][u].rate=-2,s[o][u].have_iso_point=!1):g<0&&(s[o][u].rate=(n-c)/(l-c),s[o][u].have_iso_point=!0)}}}return s}function a(t,e){return Math.abs(t-e)<1e-9}function s(t,e,n,r){var i=0,a=0,s=c(),u=c();for(i=0;i<w-1;i++)e[i][0].have_iso_point&&(s=c(i,-1,!1),u=c(i,0,!1),o(s,u,n,r,t,e));for(a=0;a<b-1;a++)t[w-1][a].have_iso_point&&(s=c(w,a,!0),u=c(w-1,a,!0),o(s,u,n,r,t,e));for(i=0;i<w-1;i++)e[i][b-1].have_iso_point&&(s=c(i,b,!1),u=c(i,b-1,!1),o(s,u,n,r,t,e));for(a=0;a<b-1;a++)t[0][a].have_iso_point&&(s=c(-1,a,!0),u=c(0,a,!0),o(s,u,n,r,t,e))}function o(t,e,n,r,i,a){var s=!1,o={value:n,path:[]};for(h(e,i,a),o.path.push(u(e,i,a));!s&&f(e,t,i,a,o);)s=!e.row&&e.isHorizon||!e.col&&!e.isHorizon||e.row==w-1||e.col==b-1;r.push(o)}function u(t,e,n){var r=t.row,i=t.col,a=t.isHorizon,s=m+r*y,o=_+i*S;return a?o+=e[r][i].rate*S:s+=n[r][i].rate*y,[s,o]}function c(t,e,n){return{row:t||0,col:e||0,isHorizon:n||0,clone:l}}function l(t){this.row=t.row,this.col=t.col,this.isHorizon=t.isHorizon}function h(t,e,n){var r=t.row,i=t.col,a=t.isHorizon;return a?e[r][i].have_iso_point=!1:n[r][i].have_iso_point=!1,t}function f(t,e,n,r,i){var a=c(),s=c(),o=c();g(a,s,o,t,e);for(var l=[a,s,o],f=[],d={},x=!1,m=0;m<3;m++)f[m]=p(n,r,l[m]);if(f[0]&&f[1]&&f[2])d=v(t,l[0],n,r)<v(t,l[1],n,r)?h(l[0],n,r):h(l[1],n,r),x=!0;else for(var m=0;m<3;m++)if(f[m]){d=h(l[m],n,r),x=!0;break}return x&&(i.path.push(u(d,n,r)),e.clone(t),t.clone(d)),x}function g(t,e,n,r,i){return r.row>i.row?(t.clone(r),t.isHorizon=!1,e.clone(t),e.col+=1,n.clone(r),void(n.row+=1)):r.col>i.col?(e.clone(r),e.isHorizon=!0,t.clone(e),t.row+=1,n.clone(r),void(n.col+=1)):r.isHorizon?(e.clone(r),e.row-=1,e.isHorizon=!1,t.clone(e),t.col+=1,n.clone(r),void(n.row-=1)):(t.clone(r),t.col-=1,t.isHorizon=!0,e.clone(t),e.row+=1,n.clone(r),void(n.col-=1))}function p(t,e,n){var r=n.row,i=n.col,a=n.isHorizon;return a?t[r][i].have_iso_point:e[r][i].have_iso_point}function v(t,e,n,r){var i=u(t,n,r),a=u(e,n,r),s=i.x-a.x,o=i.y-a.y;return Math.sqrt(s*s+o*o)}function d(t,e,n,r){var i,a,s=c(),o=c();for(a=0;a<b-1;a++)for(i=0;i<w-1;i++)e[i][a].have_iso_point&&(s=c(i,0,!1),o=c(i,a,!1),x(s,o,t,e,n,r))}function x(t,e,n,r,i,a){var s=e.row,o=e.col,c=!1,l={value:i,path:[]};for(l.path.push(u(e,n,r));!c&&f(e,t,n,r,l);)c=e.row==s&&e.col==o&&!e.isHorizon;a.push(l)}var m,y,_,S,w=0,b=0,M=.001,A=function(t,e){var i,a=[],o=[],u=[];n(t);for(var c=0;c<e.length;c++){i=e[c];var l=r(t,i);a=l[0],o=l[1],s(a,o,i,u),d(a,o,i,u)}return u};t.exports=A},function(t,e,n){"use strict";var r=n(1),i=n(51),a=function(t){t.inner=t.inner||0,a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{type:"clock"}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(51),a=function(t){t.inner=t.inner||0,a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{type:"gauge"}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(72),a=n(187),s=function(t){var e={};r.mix(e,s.ATTRS,t),s.superclass.constructor.call(this,e);var n=this.get("projection"),i=this.get("basic"),o=a[n];this.set("project",new o({basic:i}))};s.ATTRS={projection:"mercator"},r.extend(s,i),r.augment(s,{type:"map",_getOriginRange:function(){var t=this,e=t.get("originMin")[0],n=t.get("originMin")[1],r=t.get("originMax")[0],i=t.get("originMax")[1],a={x:r-e,y:i-n};return{xMin:e,yMin:n,range:a}},_getProjectRange:function(){var t=this,e=t.get("min")?t.get("min"):t.get("originMin"),n=t.get("max")?t.get("max"):t.get("originMax"),r=e[0],i=e[1],a=n[0],s=n[1],o={x:a-r,y:s-i};return{xMin:r,yMin:i,range:o}},_invert:function(t,e){var n;"origin"===e?n=this._getOriginRange():"project"===e&&(n=this._getProjectRange());var r=n.xMin,i=n.yMin,a=n.range;return t.x=r+t.x*a.x,t.y=i+t.y*a.y,t},_scale:function(t,e){var n;"origin"===e?n=this._getOriginRange():"project"===e&&(n=this._getProjectRange());var r=n.xMin,i=n.yMin,a=n.range;return t.x=(t.x-r)/a.x,t.y=(t.y-i)/a.y,t},convertPoint:function(t){var e=this,n=e.isTransposed?t.y:t.x,r=e.isTransposed?t.x:t.y,i=e.get("project"),a=e._invert({x:n,y:r},"origin");return a=i.project(a.x,a.y),a=e._scale(a,"project"),{x:this.convertDim(a.x,"x"),y:this.convertDim(a.y,"y")}},invertPoint:function(t){var e=this,n=this.invertDim(t.x,"x"),r=this.invertDim(t.y,"y"),i={};i.x=e.isTransposed?r:n,i.y=e.isTransposed?n:r;var a=e.get("project");return i=e._invert(i,"project"),i=a.invert(i),i=e._scale(i,"origin")}}),t.exports=s},function(t,e,n){"use strict";var r=n(1),i=n(39),a=n(3),s=a.Vector2,o=function(t){t.inner=t.inner||0,o.superclass.constructor.call(this,t);var e=this.get("x");this.set("x",this.get("y")),this.set("y",e)};r.extend(o,i),r.augment(o,{type:"rho",convertPoint:function(t){var e=this,n=e.getCenter(),r=e.get("y").start,i=e.convertDim(t.x,"x");return{x:n.x+Math.cos(r)*i,y:n.y+Math.sin(r)*i}},invertPoint:function(t){var e=this,n=e.getCenter(),r=new s(t.x-n.x,t.y-n.y),i=r.length();return{x:e.invertDim(i,"x")}}}),t.exports=o},function(t,e,n){"use strict";var r=n(1),i=n(39),a=n(3),s=n(4),o=a.Vector2,u=a.Matrix3,c=a.Vector3,l=function(t){t.inner=t.inner||0,l.superclass.constructor.call(this,t)};r.extend(l,i),r.augment(l,{type:"theta",convertPoint:function(t){var e=this,n=e.getCenter(),r=e.convertDim(t.x,"x"),i=e.get("y").end;return{x:n.x+Math.cos(r)*i,y:n.y+Math.sin(r)*i}},invertPoint:function(t){var e=this,n=e.getCenter(),r=new o(t.x-n.x,t.y-n.y),i=e.get("x"),a=new u;a.rotate(i.start);var l=new c(1,0,0);l.applyMatrix(a),l=new o(l.x,l.y);var h=l.angleTo(r,i.end<i.start);s.equal(h,2*Math.PI)&&(h=0);var f=h/(i.end-i.start);return f=i.end-i.start>0?f:-f,{x:f}}}),t.exports=l},function(t,e,n){"use strict";function r(t){var e={};i.mix(e,r.ATTRS,t),r.superclass.constructor.call(this,e),this._init()}var i=n(1),a=n(38);r.ATTRS={start:{x:0,y:0},end:{x:0,y:0},top:.5},i.extend(r,a),i.augment(r,{type:"triAngle",triAngle:!0,_init:function(){return this.setTopfactor(),this},setTopfactor:function(){var t=this,e=t.get("start"),n=t.get("end"),r={x:n.x,y:e.y},i={x:e.x+(n.x-e.x)*t.get("top"),y:n.y};t.getXStart=function(t){return e.x+(i.x-e.x)/(i.y-e.y)*(t-e.y)},t.getXEnd=function(t){return r.x+(i.x-r.x)/(i.y-r.y)*(t-r.y)}},set:function(t,e){return this._attrs[t]=e,"top"===t&&this.setTopfactor(),this},convertPoint:function(t){var e=this,n=e.get("start"),r=e.get("end"),i=t.y,a=t.x;isNaN(i)&&(i=0),i=n.y+(r.y-n.y)*i;var s=e.getXStart(i),o=e.getXEnd(i);return a=s+(o-s)*a,{x:a,y:i}},invertPoint:function(t){var e=this,n=e.get("start"),r=e.get("end"),i=e.getXStart(t.y),a=e.getXEnd(t.y),s=(t.x-i)/(i-a);return{x:-s,y:-(t.y-n.y)/(r.y-n.y)}}}),t.exports=r},function(t,e){"use strict";function n(t){return t instanceof Date?t:new Date(t)}function r(t,e,n){var r=new Date(n);switch(isNaN(r)&&(r=new Date),e=parseInt(e,10),t){case"s":r=new Date(r.getTime()+1e3*e);break;case"n":r=new Date(r.getTime()+6e4*e);break;case"h":r=new Date(r.getTime()+36e5*e);break;case"d":r=new Date(r.getTime()+864e5*e);break;case"w":r=new Date(r.getTime()+6048e5*e);break;case"m":r=new Date(r.getFullYear(),r.getMonth()+e,r.getDate(),r.getHours(),r.getMinutes(),r.getSeconds());break;case"y":r=new Date(r.getFullYear()+e,r.getMonth(),r.getDate(),r.getHours(),r.getMinutes(),r.getSeconds())}return r}var i=/^(?:(?!0000)[0-9]{4}([-\/.]+)(?:(?:0?[1-9]|1[0-2])\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\1(?:29|30)|(?:0?[13578]|1[02])\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-\/.]?)0?2\2(?:29))(\s+([01]|([01][0-9]|2[0-3])):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9]))?$/,a=function(){var t=/w{1}|d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g,e=/\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,n=/[^-+\dA-Z]/g,r=function(t,e){for(t=String(t),e=e||2;t.length<e;)t="0"+t;return t},i={"default":"ddd mmm dd yyyy HH:MM:ss",shortDate:"m/d/yy",longDate:"mmmm d, yyyy",fullDate:"dddd, mmmm d, yyyy",shortTime:"h:MM TT",longTime:"h:MM:ss TT Z",isoDate:"yyyy-mm-dd",isoTime:"HH:MM:ss",isoDateTime:"yyyy-mm-dd'T'HH:MM:ss",isoUTCDateTime:"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'",localShortDate:"yy\u5e74mm\u6708dd\u65e5",localShortDateTime:"yy\u5e74mm\u6708dd\u65e5 hh:MM:ss TT",localLongDate:"yyyy\u5e74mm\u6708dd\u65e5",localLongDateTime:"yyyy\u5e74mm\u6708dd\u65e5 hh:MM:ss TT",localFullDate:"yyyy\u5e74mm\u6708dd\u65e5 w",localFullDateTime:"yyyy\u5e74mm\u6708dd\u65e5 w hh:MM:ss TT"},a={dayNames:["Sun","Mon","Tue","Wed","Thu","Fri","Sat","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","\u661f\u671f\u65e5","\u661f\u671f\u4e00","\u661f\u671f\u4e8c","\u661f\u671f\u4e09","\u661f\u671f\u56db","\u661f\u671f\u4e94","\u661f\u671f\u516d"],monthNames:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","January","February","March","April","May","June","July","August","September","October","November","December"]};return function(s,o,u){if(1!==arguments.length||"[object String]"!==Object.prototype.toString.call(s)||/\d/.test(s)||(o=s,s=void 0),s=s?new Date(s):new Date,isNaN(s))throw SyntaxError("invalid date");o=String(i[o]||o||i["default"]),"UTC:"===o.slice(0,4)&&(o=o.slice(4),u=!0);var c=u?"getUTC":"get",l=s[c+"Date"](),h=s[c+"Day"](),f=s[c+"Month"](),g=s[c+"FullYear"](),p=s[c+"Hours"](),v=s[c+"Minutes"](),d=s[c+"Seconds"](),x=s[c+"Milliseconds"](),m=u?0:s.getTimezoneOffset(),y={d:l,dd:r(l,void 0),ddd:a.dayNames[h],dddd:a.dayNames[h+7],w:a.dayNames[h+14],m:f+1,mm:r(f+1,void 0),mmm:a.monthNames[f],mmmm:a.monthNames[f+12],yy:String(g).slice(2),yyyy:g,h:p%12||12,hh:r(p%12||12,void 0),H:p,HH:r(p,void 0),M:v,MM:r(v,void 0),s:d,ss:r(d,void 0),l:r(x,3),L:r(x>99?Math.round(x/10):x,void 0),t:p<12?"a":"p",tt:p<12?"am":"pm",T:p<12?"A":"P",TT:p<12?"AM":"PM",Z:u?"UTC":(String(s).match(e)||[""]).pop().replace(n,""),o:(m>0?"-":"+")+r(100*Math.floor(Math.abs(m)/60)+Math.abs(m)%60,4),S:["th","st","nd","rd"][l%10>3?0:(l%100-l%10!==10)*l%10]};return o.replace(t,function(t){return t in y?y[t]:t.slice(1,t.length-1)})}}(),s={add:function(t,e,n){return r(t,e,n)},addHour:function(t,e){return r("h",t,e)},addMinute:function(t,e){return r("n",t,e)},addSecond:function(t,e){return r("s",t,e)},addDay:function(t,e){return r("d",t,e)},addWeek:function(t,e){return r("w",t,e)},addMonths:function(t,e){return r("m",t,e)},addYear:function(t,e){return r("y",t,e)},isDateEquals:function(t,e){return t.getFullYear()===e.getFullYear()&&t.getMonth()===e.getMonth()&&t.getDate()===e.getDate()},isEquals:function(t,e){return t===e||!(!t||!e)&&(!(!t.getTime||!e.getTime)&&t.getTime()===e.getTime())},isDateString:function(t){return i.test(t)},format:function(t,e,n){return a(t,e,n)},parse:function(t){return"string"==typeof t&&(t=t.replace(/-/g,"/")),n(t)},today:function(){var t=new Date;return new Date(t.getFullYear(),t.getMonth(),t.getDate())},getDate:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate())}};t.exports=s},function(t,e,n){"use strict";var r=n(1),i=function(t,e,n,r){this.type=t,this.target=null,this.currentTarget=null,this.bubbles=n,this.cancelable=r,this.timeStamp=(new Date).getTime(),this.defaultPrevented=!1,this.propagationStopped=!1,this.removed=!1,this.event=e};r.augment(i,{preventDefault:function(){this.defaultPrevented=this.cancelable&&!0},stopPropagation:function(){this.propagationStopped=!0},remove:function(){this.remove=!0},clone:function(){return r.clone(this)},toString:function(){return"[Event (type="+this.type+")]"}}),t.exports=i},function(t,e,n){var r=n(41);r.Facet=n(30),
	r.Rect=n(74),r.List=n(73),r.Circle=n(163),r.Tree=n(165),r.Mirror=n(164),t.exports=r},function(t,e,n){"use strict";function r(t,e,n){return{x:t.x+e*Math.cos(n),y:t.y+e*Math.sin(n)}}var i=n(1),a=n(41),s=n(2),o=n(30),u=function(t){u.superclass.constructor.call(this,t)};i.extend(u,a),i.augment(u,{getRegion:function(t,e){var n=this,i=n.plotRange,a=Math.min(i.getWidth(),i.getHeight())/2,s=2*Math.PI/t,o=-1*Math.PI/2+s*e,u=a/(1+1/Math.sin(s/2)),c=n.getCenter(),l=r(c,a-u,o);return n.getFacetRegion(l,u)},getFacetRegion:function(t,e){var n=3*Math.PI/4,i=Math.PI*-1*1/4;return{start:r(t,e,n),end:r(t,e,i)}},getCenter:function(){var t=this,e=t.plotRange,n=e.tl,r=e.getWidth(),i=e.getHeight(),a={x:n.x+r/2,y:n.y+i/2};return a},generateFacets:function(t){var e=this,n=e.dims,r=n[0];if(!r)throw new Error("Please specify for the field for facet!");var a=e.getDimValues(r,t),u=a.length,c=[],l=0;return i.each(a,function(n,i){var h=[{dim:r,value:n,values:a}],f=e.getFilter(h),g=s.filter(t,f),p=new o({type:e.type,xValue:n,xDim:r,colIndex:i,cols:u,rows:1,rowIndex:0,frame:g,region:e.getRegion(u,i),index:l++});c.push(p)}),c}}),t.exports=u},function(t,e,n){"use strict";var r=n(1),i=n(73),a=function(t){a.superclass.constructor.call(this,t),this._init()};r.extend(a,i),r.augment(a,{type:"mirror",transpose:!1,drawTitles:function(t,e){var n=this,i=n.dims,a=n.transpose?"col":"row";r.each(t,function(t){n.drawFacetTitle(a,t,e)}),n.drawDimTitle(a,i[0],e)},_init:function(){var t=this,e=t.dims,n=e[0];if(!n)throw new Error("Please specify for the field for facet!");t.transpose?(t.cols=2,t.rows=1):(t.cols=1,t.rows=2)},getRegion:function(t,e,n,r){var i,a,s=this,o=s.plotRange,u=s.margin,c=o.tl,l=o.br;e>1?(i=(l.x-c.x-u)/e,a=l.y-c.y):(i=l.x-c.x,a=(l.y-c.y-u)/t);var h={x:c.x+i*n+n*u,y:c.y+a*(r+1)+u*r},f={x:h.x+i,y:h.y-a};return{start:h,end:f}}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(41),a=n(2),s=n(30),o=function(t){o.superclass.constructor.call(this,t)};r.extend(o,i),r.augment(o,{rootTitle:"",line:{stroke:"red"},smooth:!1,generateFacets:function(t){var e=this,n=e.dims;if(!n.length)throw new Error("Please specify for the fields for facet!");var r=[],i=e.getRootFacet(t);return r.push(i),i.children=e.getChildFacets(t,1,r),e.setRegion(r),r},getRows:function(){return this.dims.length+1},drawTitles:function(t,e){var n=this;n.drawLines(t,e),r.each(t,function(t){n.drawFacetTitle("col",t,e)})},drawLines:function(t,e){var n=this,i=e.addGroup();r.each(t,function(t){if(!n.isLeaf(t)){var e=t.children;n._addFacetLines(t,e,i)}})},_addFacetLines:function(t,e,n){var i=this,a=t.region,s={x:a.start.x+(a.end.x-a.start.x)/2,y:a.start.y};r.each(e,function(t){var e=t.region,r={x:e.start.x+(e.end.x-e.start.x)/2,y:e.end.y},a={x:s.x,y:s.y+(r.y-s.y)/2},o={x:r.x,y:a.y};i._drawLine([s,a,o,r],n)})},_getPath:function(t){var e=this,n="",i=e.smooth;if(i){var a=[];a.push(["M",t[0].x,t[0].y]),a.push(["C",t[1].x,t[1].y,t[2].x,t[2].y,t[3].x,t[3].y]),n=a.join(" ")}else r.each(t,function(t,e){var i=0===e?"M {x} {y}":"L {x} {y}";n+=r.substitute(i,t)});return n},_drawLine:function(t,e){var n=this,i=n._getPath(t),a=n.line;e.addShape("Path",{attrs:r.mix({path:i},a)})},getRootFacet:function(t){var e=this,n=new s({type:e.type,rows:e.getRows(),rowIndex:0,colIndex:0,xValue:e.rootTitle,frame:t,index:0});return n},getChildFacets:function(t,e,n){var i=this,o=[],u=i.dims,c=u.length;if(c<e)return[];var l=u[e-1],h=i.getDimValues(l,t);return r.each(h,function(r,u){var c=[{dim:l,value:r,values:h}],f=i.getFilter(c),g=a.filter(t,f);if(g.rowCount()){var p=new s({type:i.type,xValue:r,xDim:l,colIndex:u,rows:i.getRows(),rowIndex:e,frame:g,children:i.getChildFacets(g,e+1,n),index:n.length});o.push(p),n.push(p)}}),o},getFacetsByLevel:function(t,e){var n=[];return r.each(t,function(t){t.rowIndex===e&&n.push(t)}),n},getRegion:function(t,e,n,r){var i=this,a=i.plotRange,s=i.margin,o=a.bl,u=a.tr,c=(u.x-o.x)/e,l=(u.y-o.y)/t,h={x:o.x+c*n+s,y:o.y+l*r-s},f={x:h.x+c-s,y:h.y+2*l/3+s};return{start:h,end:f}},getRegionIndex:function(t){var e=t[0],n=t[t.length-1];return(n.colIndex-e.colIndex)/2+e.colIndex},setRegion:function(t){var e=this;e.forceColIndex(t),r.each(t,function(t){t.region=e.getRegion(t.rows,t.cols,t.colIndex,t.rows-t.rowIndex-1)})},isLeaf:function(t){return!t.children||!t.children.length},forceColIndex:function(t){var e=this,n=[],i=0;r.each(t,function(t){e.isLeaf(t)&&(n.push(t),t.colIndex=i,i++)}),r.each(n,function(t){t.cols=n.length});for(var a=e.dims.length,s=a-1;s>=0;s--)for(var o=e.getFacetsByLevel(t,s),u=0;u<o.length;u++){var c=o[u];e.isLeaf(c)||(c.originColIndex=c.colIndex,c.colIndex=e.getRegionIndex(c.children),c.cols=n.length)}}}),t.exports=o},function(t,e,n){"use strict";var r=n(1),i=n(31);r.augment(i,{row:function(t){var e=this,n=e.colNames(),r=[];return r.push(e._getObject(t,n)),new i(r,{names:n.slice(0)})},addRow:function(t){var e=this,n=e.colNames(),i=e.arr;r.each(n,function(e,n){i[n].push(t[e])})},rows:function(t){var e=this,n=e.colNames(),r=e.data,a=[];if(r)for(var s=0;s<t.length;s++)a.push(e._getObject(s,n));return new i(a,{names:n.slice(0)})},_getColArray:function(t,e,n){var i=this,a=i.arr,s=i.colNames(),o=[],u=i.rowCount(),c=r.map(t,function(t){return r.indexOf(s,t)});e=e||0,n=r.isNull(n)?u:n;for(var l=0;l<c.length;l++){var h=a[c[l]]||[],f=h.slice(e,n);o.push(f)}return o},col:function(t){var e,n=this,a=n.colNames();r.isString(t)?(e=t,t=r.indexOf(a,e)):e=a[t];var s=n._getColArray([e]);return new i(s,{names:[e]})},cols:function(t){for(var e=this,n=0;n<t.length;n++){var a=t[n];r.isNumber(a)&&(t[n]=e.names[a])}var s=e._getColArray(t);return new i(s,{names:t})},cell:function(t,e){var n=this,i=n.colNames(),a=n.arr;return r.isString(e)&&(e=r.indexOf(i,e)),a[e]?a[e][t]:void 0},sub:function(t,e,n,a){var s,o=this,u=o.colNames();return t=t||0,e?e+=1:e=void 0,u=u.slice(t,e),r.isNull(n)||(a?a+=1:a=o.rowCount-1),s=o._getColArray(u,n,a),new i(s,{names:u})},toString:function(){var t=this,e=[],n=t.arr,r=t.colNames(),i=t.rowCount();e.push(r.join("\t"));for(var a=0;a<i;a++){for(var s=[],o=0;o<n.length;o++)s.push(n[o][a]);e.push(s.join("\t"))}return e.join("\n")},s:function(){return this.toString()}}),t.exports=i},function(t,e,n){"use strict";var r=n(1),i=n(77),a=n(31),s=n(331);r.mix(a,{mean:function(t,e){var n=t.colArray(e);return n=i.formatArray(n),n=i.filterNull(n),s.mean(n)},geometric_mean:function(t,e){var n=t.colArray(e);return n=i.formatArray(n),n=i.filterNull(n),s.geometric_mean(n)},median:function(t,e){var n=t.colArray(e);return n=i.formatArray(n),n=i.filterNull(n),s.median(n)},max:function(t,e){var n=t.colArray(e);return n=i.formatArray(n),n=i.filterNull(n),s.max(n)},min:function(t,e){var n=t.colArray(e);return n=i.formatArray(n),n=i.filterNull(n),s.min(n)},mode:function(t,e){var n=t.colArray(e);return n=i.formatArray(n),n=i.filterNull(n),s.mode(n)},range:function(t,e){var n=a.max(t,e),r=a.min(t,e);return[r,n]},sum:function(t,e){var n=t.colArray(e);return n=i.formatArray(n),n=i.filterNull(n),s.sum(n)},quantile:function(t,e,n){var r=t.colArray(e);return r=i.formatArray(r),r=i.filterNull(r),s.quantile(r,n)},variance:function(t,e){var n=t.colArray(e);return n=i.formatArray(n),n=i.filterNull(n),s.variance(n)},sample_variance:function(t,e){var n=t.colArray(e);return n=i.formatArray(n),n=i.filterNull(n),s.sample_variance(n)},standard_deviation:function(t,e){var n=t.colArray(e);return n=i.formatArray(n),n=i.filterNull(n),s.standard_deviation(n)},sd:function(t,e){return a.standard_deviation(t,e)},se:function(t,e){var n=t.colArray(e);n=i.formatArray(n),n=i.filterNull(n);var r=s.sample_variance(n);return Math.sqrt(r)/Math.sqrt(n.length)},sortBy:function(t,e){var n=t.toJSON();return n.sort(e),new a(n,{names:t.colNames()})},filter:function(t,e){var n=[];return e?(t.each(function(t,r){e(t,r)&&n.push(t)}),new a(n)):t},cumulative:function(t,e){var n=t.colArray(e);n=i.filterNull(n);var a=[],s=0;return r.each(n,function(t){s+=t,a.push(s)}),a},complement:function(t,e){var n=t.colNames().slice(0);return r.each(e,function(t){r.remove(n,t)}),t.cols(n)},forceMerge:function(){var t=r.toArray(arguments),e=[],n=[];return r.each(t,function(t){var n=t.colNames();r.each(n,function(t){r.indexOf(e,t)===-1&&e.push(t)})}),r.each(t,function(t){var e=t.toJSON();n=n.concat(e)}),new a(n,{names:e})},combin:function(){var t=r.toArray(arguments),e=[],n=[];return r.each(t,function(t){e=e.concat(t.colNames()),n=n.concat(t.toArray())}),new a(n,{names:e})},combinColumns:function(t,e,n,s,o){if(s=s||"type",r.isString(o)&&(o=[o]),!o){o=[];var u=t.colNames();r.each(u,function(t){r.indexOf(e,t)===-1&&o.push(t)})}var c=[];return t.each(function(t){r.each(e,function(e){var r={};r[n]=t[e],r[s]=e,i.mixIf(r,t,o),c.push(r)})}),new a(c)},combinArray:function(){var t,e=r.toArray(arguments);t=r.isString(e[0])?e.shift():"type";var n=[];return r.each(e,function(e,i){r.each(e,function(e){e[t]=i}),n=n.concat(e)}),new a(n)}}),a.Array={repeat:function(t,e){for(var n=[],r=0;r<e;r++)n.push(t);return n}},t.exports=a},function(t,e){var n=function(t,e,n){var r,i,a,s,o=!0;for(r=0;r<n-1;r++){if(0==t[r][r]){o=!1;break}for(i=r+1;i<n;i++)for(s=-t[i][r]/t[r][r],e[i]=e[i]+s*e[r],a=r;a<n;a++)t[i][a]=t[i][a]+s*t[r][a]}for(r=0;r<n;r++)if(0==t[r][r]){o=!1;break}return o},r=function(t,e){var r=[],i=t,a=e,s=a.length,o=n(i,a,s);if(o){r[s-1]=a[s-1]/i[s-1][s-1];for(var u=s-2;u>=0;u--){r[u]=a[u];for(var c=u+1;c<s;c++)r[u]=r[u]-i[u][c]*r[c];r[u]=r[u]/i[u][u]}}else r=!1;return r};t.exports=r},function(t,e,n){var r=n(17);r.Image=n(171),r.Text=n(175),r.Line=n(172),r.Tag=n(174),r.Rect=n(173),r.Arc=n(170),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(17),a=n(3),s=a.Vector2,o=function(t){o.superclass.constructor.call(this,t)};r.extend(o,i),r.augment(o,{start:[],end:[],cfg:{stroke:"#000"},getCfg:function(t){var e,n,r,i=this,a=i.parsePoint(t,i.start),o=i.parsePoint(t,i.end),u=t.invertPoint(a),c=t.invertPoint(o),l={x:(c.x+u.x)/2,y:u.y},h=t.convertPoint(l),f=t.getCenter(),g=new s(1,0),p=new s.sub(a,f).length(),v=new s.sub(o,a);return v=v.vertical(),v.setLength(p),v.add(h),e=new s.sub(a,v),n=new s.sub(o,v),r={x:v.x,y:v.y,startAngle:e.angleTo(g,!0)/Math.PI*180,endAngle:n.angleTo(g,!0)/Math.PI*180,r:p}},paint:function(t,e){var n=r.mix({},this.cfg,this.getCfg(t));e.addShape("Arc",{attrs:n})}}),t.exports=o},function(t,e,n){"use strict";var r=n(1),i=n(17),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{start:[],end:null,src:"",paint:function(t,e){var n=this,i=n.parsePoint(t,n.start),a=n.cfg;if(a.img=a.src,a=r.mix({src:n.src},a,i),n.end){var s=n.parsePoint(t,n.end);a.x=i.x,a.y=s.y,a.width=s.x-i.x,a.height=i.y-s.y}else a.y=a.y-a.height;e.addShape("Image",{attrs:a})}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(17),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{from:[],to:[],cfg:{stroke:"#000",lineWidth:1},paint:function(t,e){var n=this,i=n.parsePoint(t,n.from),a=n.parsePoint(t,n.to),s=n.cfg,o=r.substitute("M {x} {y}",i)+r.substitute("L {x} {y}",a);s=r.mix({path:o},s),e.addShape("Path",{attrs:s})}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(17),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{start:[],end:[],cfg:{stroke:"#000"},getPath:function(t){var e=this,n=e.parsePoint(t,e.start),r=e.parsePoint(t,e.end),i=[];return i.push(["M",n.x,n.y]),i.push(["L",r.x,n.y]),i.push(["L",r.x,r.y]),i.push(["L",n.x,r.y]),i.push(["z"]),i},paint:function(t,e){var n=this,i=n.cfg,a=n.getPath(t);i=r.mix({path:a},i),e.addShape("Path",{attrs:i})}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(17),a=10,s=function(t){s.superclass.constructor.call(this,t)};r.extend(s,i),r.augment(s,{from:[],to:[],text:"",cfg:{line:{stroke:"#000",lineWidth:1},text:{fill:"#000"},rect:{stroke:"#000",lineWidth:1,fill:"#fff"}},paint:function(t,e){var n=this,r=n.parsePoint(t,n.from),i=n.parsePoint(t,n.to),a=e.addGroup();n.drawLine(r,i,a),n.drawText(i,a)},drawLine:function(t,e,n){var i=this,a=r.substitute("M {x} {y}",t)+r.substitute("L {x} {y}",e),s=r.mix({path:a},i.cfg.line);n.addShape("Path",{attrs:s})},drawText:function(t,e){var n=this,i=r.mix({text:n.text},n.cfg.text,t),s=e.addShape("Text",{zIndex:1,attrs:i}),o=s.getBBBox(),u=r.mix({x:o.minX-a,y:o.minY-a,width:o.width+2*a,height:o.height+2*a},n.cfg.rect);e.addShape("rect",{attrs:u}),e.sort()}}),t.exports=s},function(t,e,n){"use strict";var r=n(1),i=n(17),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{position:[],text:"",cfg:{fill:"#000",textAlign:"center"},paint:function(t,e){var n=this,i=n.position,a=n.parsePoint(t,i),s=n.cfg;s=r.mix({text:n.text},s,a),e.addShape("Text",{attrs:s})}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(328),a=function(t){r.mix(this,t)};r.augment(a,{get:function(t){return this[t]},set:function(t,e){this[t]=e},width:500,height:500,x:0,y:0,min:null,max:null,formatter:function(t){return t},radius:60,blur:0,colors:["rgb(0,0,255)","rgb(0,0,255)","rgb(0,255,0)","yellow","rgb(255,0,0)"],_mkcircle:function(t,e,n,r){var i=this.blur,a=this.radius,s=r.createRadialGradient(t,e,a*i,t,e,a);s.addColorStop(0,"rgba(0, 0, 0, 1)"),s.addColorStop(1,"rgba(0, 0, 0, 0)"),r.globalAlpha=n,r.fillStyle=s},_colorise:function(t){for(var e=this.width,n=this.height,r=t.getImageData(this.x,this.y,e,n),a=r.data,s=a.length,o=this.colors,u=i.gradient(o),c=3;c<s;c+=4){var l=a[c];if(l){var h=i.Util.rgb2arr(u(l/256));a[c-3]=h[0],a[c-2]=h[1],a[c-1]=h[2],a[c]=l}}return r},getData:function(t){for(var e=[],n=t.length-1;n>=0;n--)e.push(t[n][2]);var i=r.isNull(this.max)?Math.max.apply(null,e):this.max,a=r.isNull(this.min)?Math.min.apply(null,e):this.min;if(i===a)return!1;var s=document.createElement("canvas"),o=s.getContext("2d");s.width=this.width+this.x,s.height=this.height+this.y;for(var u=this.formatter,n=t.length-1;n>=0;n--){var c=(u(t[n][2])-u(a))/(u(i)-u(a));this._mkcircle(t[n][0],t[n][1],c,o),o.fillRect(0,0,this.width+this.x,this.height+this.y)}return this._colorise(o)}}),t.exports=a},function(t,e,n){var r=n(180);t.exports={interpolation:r.interpolation,unInterpolation:r.unInterpolation}},function(t,e,n){"use strict";function r(t,e){for(var n=[],r=Math.min(t.length,e.length),i=0;i<r;i++)n[i]=a.singular(t[i],e[i]);return function(t){for(var e=[],i=0;i<r;i++)e[i]=n[i](t);return e}}function i(t,e){for(var n=[],r=Math.min(t.length,e.length),i=0;i<r;i++)n[i]=a.unSingular(t[i],e[i]);return function(t){for(var e=Math.min(n.length,t.length),r=0,i=0,a=0;a<e;a++)r+=n[a](t[a]),i++;return 0===i?0:r/i}}var a=n(42);t.exports={array:r,unArray:i}},function(t,e,n){"use strict";function r(t,e){switch(e.getType()){case"rgb":return a(t,e);case"hsl":return o(t,e)}}function i(t,e){switch(e.getType()){case"rgb":return s(t,e);case"hsl":return u(t,e)}}function a(t,e){var n=t.getR(),r=t.getG(),i=t.getB(),a=t.getA(),s=e.getR()-n,o=e.getG()-r,u=e.getB()-i,l=e.getA();return void 0===a&&void 0===l||(a=a||1,l=(void 0===l?1:l)-a),function(t){var e=new c;return e.setRGB(n+s*t,r+o*t,i+u*t,void 0!==a&&void 0!==l?a+l*t:void 0),e.getRGBStyle()}}function s(t,e){var n=t.getR(),r=t.getG(),i=t.getB(),a=t.getA(),s=e.getR()-n,o=e.getG()-r,u=e.getB()-i,l=e.getA();return void 0===a&&void 0===l||(a=a||1,l=(void 0===l?1:l)-a),function(t){if(t=new c(t),!t.getType())return 0;var e=t.getR(),h=t.getG(),f=t.getB(),g=t.getA();g=g||1;var p=0,v=0;return 0!==s&&(p+=(e-n)/s,v++),0!==o&&(p+=(h-r)/o,v++),0!==u&&(p+=(f-i)/u,v++),0!==l&&l&&(p+=(g-a)/l,v++),0===v?0:p/v}}function o(t,e){var n=t.getH(),r=t.getS(),i=t.getL(),a=t.getA(),s=e.getH()-n,o=e.getS()-r,u=e.getL()-i,l=e.getA();return void 0===a&&void 0===l||(a=a||1,l=(void 0===l?1:l)-a),function(t){var e=new c;return e.setHSL(n+s*t,r+o*t,i+u*t,void 0!==a&&void 0!==l?a+l*t:void 0),e.getHSLStyle()}}function u(t,e){var n=t.getH(),r=t.getS(),i=t.getL(),a=t.getA(),s=e.getH()-n,o=e.getS()-r,u=e.getL()-i,l=e.getA();return void 0===a&&void 0===l||(a=a||1,l=(void 0===l?1:l)-a),function(t){if(t=new c(t),!t.getType())return 0;var e=t.getH(),h=t.getS(),f=t.getL(),g=t.getA();g=g||1;var p=0,v=0;return 0!==s&&(p+=(e-n)/s,v++),0!==o&&(p+=(h-r)/o,v++),0!==u&&(p+=(f-i)/u,v++),0!==l&&l&&(p+=(g-a)/l,v++),0===v?0:p/v}}var c=n(37);t.exports={color:r,unColor:i}},function(t,e,n){"use strict";function r(t,e){return t instanceof h&&e instanceof h?c.matrix(t,e):a.isArray(t)&&a.isArray(e)?s.array(t,e):a.isObject(t)&&a.isObject(e)?o.object(t,e):u.singular(t,e)}function i(t,e){return t instanceof h&&e instanceof h?c.unMatrix(t,e):a.isArray(t)&&a.isArray(e)?s.unArray(t,e):a.isObject(t)&&a.isObject(e)?o.unObject(t,e):u.unSingular(t,e)}var a=n(1),s=n(178),o=n(183),u=n(42),c=n(181),l=n(3),h=l.Matrix3;t.exports={interpolation:r,unInterpolation:i}},function(t,e,n){"use strict";function r(t,e){for(var n=[],r=t.elements,i=e.elements,s=0;s<u;s++)n[s]=a.singular(r[s],i[s]);return function(t){for(var e=new o,r=e.elements,i=0;i<u;i++)r[i]=n[i](t);return e}}function i(t,e){for(var n=[],r=t.elements,i=e.elements,s=0;s<u;s++)n[s]=a.unSingular(r[s],i[s]);return function(t){for(var e=t.elements,r=0,i=0,a=0;a<u;a++){var s=n[a](e[a]);0!==s&&(r+=s,i++)}return r/i}}var a=n(42),s=n(3),o=s.Matrix3,u=9;t.exports={matrix:r,unMatrix:i}},function(t,e){"use strict";function n(t,e){return t=+t,e=+e,function(n){return t*(1-n)+e*n}}function r(t,e){return e-=t,function(n){return 0===e?0:(n-t)/e}}t.exports={number:n,unNumber:r}},function(t,e,n){"use strict";function r(t,e){var n={};for(var r in t)r in e&&(n[r]=a.singular(t[r],e[r]));return function(t){var e={};for(var r in n)e[r]=n[r](t);return e}}function i(t,e){var n={};for(var r in t)r in e&&(n[r]=a.unSingular(t[r],e[r]));return function(t){var e=0,r=0;for(var i in n)i in t&&(e+=n[i](t[i]),r++);return 0===r?0:e/r}}var a=n(42);t.exports={object:r,unObject:i}},function(t,e,n){var r={};r.Tree=n(186),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=function(t){r.mix(this,t)};r.augment(i,{parent:null,level:0,children:null,x:0,y:0}),t.exports=i},function(t,e,n){"use strict";function r(t){return(t-1)/2+1}var i=n(1),a="level",s=n(185),o=function(t){i.mix(this,t),this._init()};i.augment(o,{nodes:null,childrenField:"children",width:1,height:1,_levels:1,_preX:{},dx:0,dy:0,_totalLeafCount:0,_init:function(){var t=this,e=t.nodes.slice(0);t._traverseNodes(e);var n=t._levels;if(t._preX={},!t.dx){var r=t._getAlignCount(e);t._totalLeafCount=r,t.dx=t.width/r}t.dy||(t.dy=t.height/n),t.nodes=e},_traverseNodes:function(t,e){var n,r,s=this;e?(n=e[a]+1,r=e.id):(n=0,r="");var o=s.childrenField;i.each(t,function(t,i){t[a]=n,t.parent=e,t.id||(t.id=r?r+"-"+i:i.toString());var u=t[o];u&&u.length?s._traverseNodes(t[o],t):n+1>s._levels&&(s._levels=n+1)})},_getAlignCount:function(t){var e=this,n=0,a=0,s=0,o=e.childrenField;return i.each(t,function(t){var i=t[o];if(i&&i.length){a-=r(s),n+=Math.abs(a);var u=e._getAlignCount(i);if(u>1){var c=r(u);a>0?(a-=c,n+=Math.abs(a)):n+=c,a=0}else a+=1;s=u}else a+=1}),s>1&&(a-=r(s)),n+=Math.abs(a)},_layoutNodes:function(t,e){var n=this,r=n.childrenField;i.each(t,function(t){var i=t[r],o=t[a],u=n.dx,c=n.dy;if(t.y=o*c,i&&i.length){n._layoutNodes(i,e);var l=i[0],h=i[i.length-1];t.x=(l.x+h.x)/2,n._preX[o+1]+=.3*u}else{var f=n._preX[o]||0,g=t.parent,p=n._preX[o-1]||0;if(g){var v=g[r].length;p-=(v-.5)*u/2}f=Math.max(f,p),t.x=f+u}n._preX[o]=t.x,e.push(new s(t))})},_getEdges:function(t,e){var n=this,r=[],a=n.childrenField;return i.each(t,function(t){if(e){var i={source:e.id,target:t.id};r.push(i)}t[a]&&(r=r.concat(n._getEdges(t[a],t)))}),r},getNodes:function(){var t=this,e=t.nodes,n=[];return t._layoutNodes(e,n),n},getEdges:function(){var t=this,e=t.nodes;return t._getEdges(e)}}),t.exports=o},function(t,e,n){var r;r={albers:n(188),mercator:n(189),orthographic:n(190)},t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(53),a=function(t){a.superclass.constructor.call(this,t),this._init()};r.extend(a,i),r.augment(a,{"\u03bb0":0,"\u03c60":0,"\u03c61":0,"\u03c62":0,basic:[0,0,0,60],_init:function(){this.\u03bb0=this.toRadians(this.basic[0]),this.\u03c60=this.toRadians(this.basic[1]),this.\u03c61=this.toRadians(this.basic[2]),this.\u03c62=this.toRadians(this.basic[3])},project:function(t,e){var n=this.\u03bb0,r=(this.\u03c60,this.\u03c61),i=this.\u03c62,a=.5*(Math.sin(r)+Math.sin(i)),s=Math.cos(r),o=s*s+2*a*Math.sin(r),u=Math.sqrt(o-2*a*Math.sin(n))/a,c=a*(this.toRadians(t)-n),l=Math.sqrt(o-2*a*Math.sin(this.toRadians(e)))/a;return{x:this.toDegrees(l*Math.sin(c)),y:this.toDegrees(u-l*Math.cos(c))}},invert:function(t){var e=this.\u03bb0,n=(this.\u03c60,this.\u03c61),r=this.\u03c62,i=this.toRadians(t.x),a=this.toRadians(t.y),s=.5*(Math.sin(n)+Math.sin(r)),o=Math.cos(n),u=o*o+2*s*Math.sin(n),c=Math.sqrt(u-2*s*Math.sin(e))/s,l=Math.atan(i/(c-a)),h=Math.sqrt(i*i+Math.pow(c-a,2));return{x:this.toDegrees(e+l/s),y:this.toDegrees(Math.asin((u-h*h*s*s)/(2*s)))}}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(53),a=function(t){a.superclass.constructor.call(this,t),this._init()};r.extend(a,i),r.augment(a,{"\u03bb0":0,_init:function(){this.\u03bb0=this.toRadians(this.\u03bb0)},project:function(t,e){return t=this.toRadians(t),e=this.toRadians(e),{x:this.toDegrees(t-this.\u03bb0),y:this.toDegrees(Math.log(Math.tan(Math.PI/4+e/2)))}},invert:function(t){var e=this.toRadians(t.x),n=this.toRadians(t.y);return{x:this.toDegrees(e+this.\u03bb0),y:this.toDegrees(2*Math.atan(Math.exp(n))-Math.PI/2)}}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(53),a=function(t){a.superclass.constructor.call(this,t),this._init()};r.extend(a,i),r.augment(a,{"\u03bb0":110,"\u03c61":25,_init:function(){this.\u03bb0=this.toRadians(this.\u03bb0),this.\u03c61=this.toRadians(this.\u03c61)},project:function(t,e){t=this.toRadians(t),e=this.toRadians(e);var n=Math.cos(e)*Math.sin(t-this.\u03bb0),r=Math.cos(\u03c61)*Math.sin(e)-Math.sin(\u03c61)*Math.cos(e)*Math.cos(t-\u03bb0);return{x:this.toDegrees(n),y:this.toDegrees(r)}},invert:function(t){var e=this.toRadians(t.x),n=this.toRadians(t.y),r=Math.sqrt(e*e+n*n),i=Math.asin(r),a=this.\u03bb0+Math.atan(e*Math.sin(i)/(r*Math.cos(this.\u03c61)*Math.cos(i)-n*Math.sin(this.\u03c611)*Math.sin(i))),s=Math.asin(Math.cos(i)*Math.sin(this.\u03c61)+n*Math.sin(i)*Math.cos(this.\u03c61)/r);return{x:this.toDegrees(a),y:this.toDegrees(s)}}}),t.exports=a},function(t,e,n){"use strict";var r=(n(2),n(32),{region:n(195),center:n(192),name:n(194),location:n(193)});t.exports=r},function(t,e,n){"use strict";function r(t){return Math.min.apply(null,t)}function i(t){return Math.max.apply(null,t)}var a=n(1),s=n(32),o=function(t,e){return new s({dims:t,mapData:e,addGeoInfo:function(t,e){var n=this,r=n.getDims(),i=r[r.length-1],s=t[i],o=n.mapData.features,u=e[0],c=e[1];return t[u]=[],t[c]=[],o&&a.each(o,function(e){var r=e.properties?e.properties.name:"";if(r===s){var i=e.properties.cp;if(!i){var a=e.geometry,o=a.coordinates,l=n._getBBox(o);i=[l[0]+(l[2]-l[0])/2,l[1]+(l[3]-l[1])/2]}return t[u]=i[0],t[c]=i[1],!1}}),t},_getBBox:function(t){var e=this,n=[],s=[],o=e._getPoints(t);return a.each(o,function(t){n.push(t[0]),s.push(t[1])}),[r(n),r(s),i(n),i(s)]},_getPoints:function(t){var e=this,n=[];return a.isArray(t[0])?a.each(t,function(t){var r=e._getPoints(t);n=n.concat(r)}):n.push(t),n}})};t.exports=o},function(t,e,n){"use strict";var r=n(32),i=function(t){return new r({dims:t,initDims:function(t){var e=t.slice(0,2),n=t.slice(2);t=n.concat(e),t.unshift("..lant"),t.unshift("..long"),this.dims=t},addGeoInfo:function(t,e){var n=this,r=e[0],i=e[1],a=n.getDims(),s=a.length;return t[r]=t[a[s-2]],t[i]=t[a[s-1]],t}})};t.exports=i},function(t,e,n){"use strict";var r=n(1),i=n(32),a=function(t,e){return new i({dims:t,mapData:e,initDims:function(t){t.push("..name")},addGeoInfo:function(t,e){var n=this,i=n.getDims(),a=i[0],s=i[1],o=[t[a],t[s]],u=!1,c=n.mapData.features;return t[e]="",c&&r.each(c,function(i){var a=i.geometry.coordinates;if("Polygon"===i.geometry.type?r.each(a,function(t){if(u=n._isInside(o,t))return!1}):"MultiPolygon"===i.geometry.type&&r.each(a,function(t){return!u&&void r.each(t,function(t){if(u=n._isInside(o,t))return!1})}),u){var s=i.properties?i.properties.name:"";return t[e]=n.names?n.names.indexOf(s):s,!1}}),t},_isInside:function(t,e){for(var n=t[0],r=t[1],i=!1,a=0,s=e.length-1;a<e.length;s=a++){var o=e[a][0],u=e[a][1],c=e[s][0],l=e[s][1],h=u>r!=l>r&&n<(c-o)*(r-u)/(l-u)+o;h&&(i=!i)}return i}})};t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(32),a=function(t,e){return new i({dims:t,mapData:e,addGeoInfo:function(t,e){var n=this,i=n.getDims(),a=i[i.length-1],s=t[a],o=n.mapData,u=o.features,c=e[0],l=e[1];return t[c]=[],t[l]=[],u&&r.each(u,function(e){var r=e.properties?e.properties.name:"";if(r===s){var i=e.geometry,a=i.coordinates;return"Polygon"===i.type?a.forEach(function(e){n._getCoordinates(e,t[c],t[l])}):"MultiPolygon"===i.type?a.forEach(function(e){e.forEach(function(e){n._getCoordinates(e,t[c],t[l])})}):"MultiLineString"===i.type&&a.forEach(function(e){n._getCoordinates(e,t[c],t[l],"line")}),!1}}),t},_getCoordinates:function(t,e,n,i){return r.each(t,function(t){e.push(t[0]),n.push(t[1])}),i&&"line"===i&&(e.push(t[0][0]),n.push(t[0][1])),!1}})};t.exports=a},function(t,e){"use strict";function n(t,e){var n=t.length;if(0===n)return NaN;var r=t[0];if(e<t[0])return NaN;if(e>=t[n-1])return t[n-1];for(var i=1;i<t.length&&!(e<t[i]);i++)r=t[i];return r}function r(t,e){var n=t.length;if(0===n)return NaN;var r,i=t[0];if(e>t[n-1])return NaN;if(e<t[0])return t[0];for(var a=1;a<t.length;a++){if(e<=t[a]){r=t[a];break}i=t[a]}return r}var i={PRECISION:1e-5,equal:function(t,e){return Math.abs(t-e)<i.PRECISION},clamp:function(t,e,n){return t<e?e:t>n?n:t},snapTo:function(t,e){var i=n(t,e),a=r(t,e);if(isNaN(i)||isNaN(a)){if(t[0]>=e)return t[0];var s=t[t.length-1];if(s<=e)return s}return Math.abs(e-i)<Math.abs(a-e)?i:a},snapFloor:function(t,e){return n(t,e)},snapCeiling:function(t,e){return r(t,e)},degreeToRad:function(t){return Math.PI/180*t},radToDegree:function(t){return 180/Math.PI*t},mod:function(t,e){return(t%e+e)%e}};t.exports=i},function(t,e,n){"use strict";function r(){"undefined"!=typeof Float32Array?this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]):this.elements=[1,0,0,0,1,0,0,0,1]}var i=n(1),a=n(4);r.multiply=function(t,e){var n=t.elements,i=e.elements,a=new r;return a.set(n[0]*i[0]+n[3]*i[1]+n[6]*i[2],n[0]*i[3]+n[3]*i[4]+n[6]*i[5],n[0]*i[6]+n[3]*i[7]+n[6]*i[8],n[1]*i[0]+n[4]*i[1]+n[7]*i[2],n[1]*i[3]+n[4]*i[4]+n[7]*i[5],n[1]*i[6]+n[4]*i[7]+n[7]*i[8],n[2]*i[0]+n[5]*i[1]+n[8]*i[2],n[2]*i[3]+n[5]*i[4]+n[8]*i[5],n[2]*i[6]+n[5]*i[7]+n[8]*i[8])},r.equal=function(t,e){for(var n=t.elements,r=e.elements,i=!0,s=0,o=n.length;s<o;s++)if(!a.equal(n[s],r[s])){i=!1;break}return i},i.augment(r,{type:"matrix3",set:function(t,e,n,r,i,a,s,o,u){var c=this.elements;return c[0]=t,c[3]=e,c[6]=n,c[1]=r,c[4]=i,c[7]=a,c[2]=s,c[5]=o,c[8]=u,this},get:function(t,e){return t--,e--,this.elements[3*e+t]},identity:function(){return this.set(1,0,0,0,1,0,0,0,1)},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},det:function(){var t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],a=t[4],s=t[5],o=t[6],u=t[7],c=t[8];return e*a*c-e*s*u-n*i*c+n*s*o+r*i*u-r*a*o},inverse:function(t){return this.copy(this.getInverse(t))},getInverse:function(t){var e=this.det();if(0===e){if(t)throw"matrix exception: get inverse matrix with 0 det";return console.warn("matrix cannot inverse"),new r}var n=this.elements,i=(n[0],n[3],n[6],n[1],n[4],n[7],n[2],n[5],n[8],new r);return i.set(n[4]*n[8]-n[7]*n[5],-(n[3]*n[8]-n[6]*n[5]),n[3]*n[7]-n[6]*n[4],-(n[1]*n[8]-n[7]*n[2]),n[0]*n[8]-n[6]*n[2],-(n[0]*n[7]-n[6]*n[1]),n[1]*n[5]-n[4]*n[2],-(n[0]*n[5]-n[3]*n[2]),n[0]*n[4]-n[3]*n[1]),i.multiplyScalar(1/e),i},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},multiply:function(t){return this.copy(r.multiply(this,t))},translate:function(t,e){var n=new r;return n.set(1,0,t,0,1,e,0,0,1),this.copy(r.multiply(n,this))},rotate:function(t){var e=new r;return e.set(Math.cos(t),-Math.sin(t),0,Math.sin(t),Math.cos(t),0,0,0,1),this.copy(r.multiply(e,this))},scale:function(t,e){var n=new r;return n.set(t,0,0,0,e,0,0,0,1),this.copy(r.multiply(n,this))},equal:function(t){return r.equal(this,t)},copy:function(t){for(var e=t.elements,n=this.elements,r=0,i=e.length;r<i;r++)n[r]=e[r];return this},clone:function(){for(var t=new r,e=t.elements,n=this.elements,i=0,a=n.length;i<a;i++)e[i]=n[i];return t},to2DObject:function(){var t=this.elements;return{a:t[0],b:t[1],c:t[3],d:t[4],e:t[6],f:t[7]}},from2DObject:function(t){var e=this.elements;return e[0]=t.a,e[1]=t.b,e[3]=t.c,e[4]=t.d,e[6]=t.e,e[7]=t.f,this}}),t.exports=r},function(t,e,n){"use strict";function r(t,e){if(1===arguments.length){var n=t;t=n[0],e=n[1]}this.x=t||0,this.y=e||0}var i=n(1),a=n(4);r.add=function(t,e){return new r(t.x+e.x,t.y+e.y)},r.sub=function(t,e){return new r(t.x-e.x,t.y-e.y)},r.lerp=function(t,e,n){return new r(t.x+(e.x-t.x)*n,t.y+(e.y-t.y)*n)},r.angle=function(t,e){var n=t.dot(e)/(t.length()*e.length());return Math.acos(a.clamp(n,-1,1))},r.direction=function(t,e){return t.x*e.y-e.x*t.y},i.augment(r,{type:"vector2",set:function(t,e){return this.x=t,this.y=e,this},setComponent:function(t,e){switch(t){case 0:return this.x=e,this;case 1:return this.y=e,this;default:throw new Error("the index out of range:"+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("the index out of range:"+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t){return this.copy(r.add(this,t))},sub:function(t){return this.copy(r.sub(this,t))},subBy:function(t){return this.copy(r.sub(t,this))},multiplyScaler:function(t){return this.x*=t,this.y*=t,this},divideScaler:function(t){if(0!==t){var e=1/t;this.x*=e,this.y*=e}else this.x=0,this.y=0;return this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this},clampScale:function(){var t,e;return function(n,i){return void 0===t&&(t=new r,e=new r),t.set(n,n),e.set(i,i),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScaler(this.length())},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y;return e*e+n*n},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},angleTo:function(t,e){var n=this.angle(t),i=r.direction(this,t)>=0;return e?i?2*Math.PI-n:n:i?n:2*Math.PI-n},vertical:function(t){return t?new r(this.y,(-this.x)):new r((-this.y),this.x)},angle:function(t){return r.angle(this,t)},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScaler(t/e),this},isZero:function(){return 0===this.x&&0===this.y},lerp:function(t,e){return this.copy(r.lerp(this,t,e))},equal:function(t){return a.equal(this.x,t.x)&&a.equal(this.y,t.y)},clone:function(){return new r(this.x,this.y)}}),t.exports=r},function(t,e,n){"use strict";function r(t,e,n){if(1===arguments.length)if(i.isArray(t)){var r=t;t=r[0],e=r[1],n=r[2]}else if("vector2"===t.type){var a=t;t=a.x,e=a.y,n=1}this.x=t||0,this.y=e||0,this.z=n||0}var i=n(1),a=n(4);r.add=function(t,e){return new r(t.x+e.x,t.y+e.y,t.z+e.z)},r.sub=function(t,e){return new r(t.x-e.x,t.y-e.y,t.z-e.z)},r.lerp=function(t,e,n){return new r(t.x+(e.x-t.x)*n,t.y+(e.y-t.y)*n,t.z+(e.z-t.z)*n)},
	r.cross=function(t,e){var n=t.x,i=t.y,a=t.z,s=e.x,o=e.y,u=e.z;return new r(i*u-a*o,a*s-n*u,n*o-i*s)},r.angle=function(t,e){var n=t.dot(e)/(t.length()*e.length());return Math.acos(a.clamp(n,-1,1))},i.augment(r,{type:"vector3",set:function(t,e,n){return this.x=t,this.y=e,this.z=n,this},setComponent:function(t,e){switch(t){case 0:return this.x=e,this;case 1:return this.y=e,this;case 2:return this.z=e,this;default:throw new Error("index is out of range:"+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range:"+t)}},add:function(t){return this.copy(r.add(this,t))},sub:function(t){return this.copy(r.sub(this,t))},subBy:function(t){return this.copy(r.sub(t,this))},multiplyScaler:function(t){return this.x*=t,this.y*=t,this.z*=t,this},divideScaler:function(t){if(0!==t){var e=1/t;this.x*=e,this.y*=e,this.z*=e}else this.x=0,this.y=0,this.z=0;return this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this.z>t.z&&(this.z=t.z),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this.z<t.z&&(this.z=t.z),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this.z<t.z?this.z=t.z:this.z>e.z&&(this.z=e.z),this},clampScale:function(){var t,e;return function(n,i){return void 0===t&&(t=new r,e=new r),t.set(n,n,n),e.set(i,i,i),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScaler(this.length())},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScaler(t/e),this},lerp:function(t,e){return this.copy(r.lerp(this,t,e))},cross:function(t){return this.copy(r.cross(this,t))},angle:function(t){return r.angle(this,t)},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},applyMatrix:function(t){var e=t.elements,n=e[0]*this.x+e[3]*this.y+e[6]*this.z,r=e[1]*this.x+e[4]*this.y+e[7]*this.z,i=e[2]*this.x+e[5]*this.y+e[8]*this.z;return this.x=n,this.y=r,this.z=i,this},copy:function(t){return this.x=t.x,this.y=t.y,this.z=void 0!==t.z?t.z:1,this},equal:function(t){return a.equal(this.x,t.x)&&a.equal(this.y,t.y)&&a.equal(this.z,t.z)},clone:function(){return new r(this.x,this.y,this.z)}}),t.exports=r},function(t,e,n){var r=n(202);if(window.G){new r(window.G)}else t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(52),a=function(t){this.canvas=t,this.el=t.get("el"),this.current=null,this.pre=null};r.augment(a,{tryTrigger:function(t,e){t.__listeners&&t.trigger(e)},getCurrent:function(t){var e=this.canvas,n=e.getPointByClient(t.clientX,t.clientY);this.point=n,this.pre=this.current,this.current=e.getShape(n.x,n.y)},mousemove:function(t){this.getCurrent(t);var e=this.point,n=this.canvas;if(n.has("canvas-mousemove")){var r=new i("canvas-mousemove",t,(!0),(!0));r.x=e.x,r.y=e.y,r.clientX=t.clientX,r.clientY=t.clientY,r.currentTarget=n,this.tryTrigger(n,r)}if(this.pre&&this.pre!==this.current){var a=new i("mouseleave",t,(!0),(!0));a.x=e.x,a.y=e.y,a.clientX=t.clientX,a.clientY=t.clientY,a.currentTarget=this.pre,a.target=this.pre,this.tryTrigger(this.pre,a)}if(this.current){var s=new i("mousemove",t,(!0),(!0));if(s.x=e.x,s.y=e.y,s.clientX=t.clientX,s.clientY=t.clientY,s.currentTarget=this.current,s.target=this.current,this.tryTrigger(this.current,s),this.pre!==this.current){var o=new i("mouseenter",t,(!0),(!0));o.x=e.x,o.y=e.y,o.clientX=t.clientX,o.clientY=t.clientY,o.currentTarget=this.current,o.target=this.current,this.tryTrigger(this.current,o)}}},mousedown:function(t){var e=this.point,n=this.canvas;if(n.has("canvas-mousedown")){var r=new i("canvas-mousedown",t,(!0),(!0));r.x=e.x,r.y=e.y,r.clientX=t.clientX,r.clientY=t.clientY,r.currentTarget=n,this.tryTrigger(n,r)}if(this.current){var a=new i("mousedown",t,(!0),(!0));a.x=e.x,a.y=e.y,a.clientX=t.clientX,a.clientY=t.clientY,a.currentTarget=this.current,a.target=this.current,this.tryTrigger(this.current,a)}},mouseup:function(t){var e=this.point,n=this.canvas;if(n.has("canvas-mouseup")){var r=new i("canvas-mouseup",t,(!0),(!0));r.x=e.x,r.y=e.y,r.clientX=t.clientX,r.clientY=t.clientY,r.currentTarget=n,this.tryTrigger(n,r)}if(this.current){var a=new i("mouseup",t,(!0),(!0));a.x=e.x,a.y=e.y,a.clientX=t.clientX,a.clientY=t.clientY,a.currentTarget=this.current,a.target=this.current,this.tryTrigger(this.current,a)}},click:function(t){this.getCurrent(t);var e=this.point,n=this.canvas;if(n.has("canvas-click")){var r=new i("canvas-click",t,(!0),(!0));r.x=e.x,r.y=e.y,r.clientX=t.clientX,r.clientY=t.clientY,r.currentTarget=n,this.tryTrigger(n,r)}if(this.current){var a=new i("click",t,(!0),(!0));a.x=e.x,a.y=e.y,a.clientX=t.clientX,a.clientY=t.clientY,a.currentTarget=this.current,a.target=this.current,this.tryTrigger(this.current,a)}},dblclick:function(t){var e=this.point,n=this.canvas;if(n.has("canvas-dblclick")){var r=new i("canvas-dblclick",t,(!0),(!0));r.x=e.x,r.y=e.y,r.clientX=t.clientX,r.clientY=t.clientY,r.currentTarget=n,this.tryTrigger(n,r)}if(this.current){var a=new i("dblclick",t,(!0),(!0));a.x=e.x,a.y=e.y,a.clientX=t.clientX,a.clientY=t.clientY,a.currentTarget=this.current,a.target=this.current,this.tryTrigger(this.current,a)}},mouseout:function(t){var e=this.point,n=this.canvas,r=new i("canvas-mouseleave",t,(!0),(!0));r.x=e.x,r.y=e.y,r.currentTarget=n,this.tryTrigger(n,r)},mouseover:function(t){var e=(this.point,this.canvas),n=new i("canvas-mouseenter",t,(!0),(!0));n.currentTarget=e,this.tryTrigger(e,n)}}),t.exports=a},function(t,e,n){"use strict";function r(t){this.name="mouseEvent",this.type="event",r.superclass.constructor.call(this,t)}var i=n(1),a=n(201),s=n(203);i.extend(r,s),i.augment(r,{__events:function(){var t=this,e=t.get("el"),n=new a(this);e.addEventListener("mouseout",function(t){n.mouseout(t)},!1),e.addEventListener("mouseover",function(t){n.mouseover(t)},!1),e.addEventListener("mousemove",function(t){n.mousemove(t)},!1),e.addEventListener("mousedown",function(t){n.mousedown(t)},!1),e.addEventListener("mouseup",function(t){n.mouseup(t)},!1),e.addEventListener("click",function(t){n.click(t)},!1),e.addEventListener("dblclick",function(t){n.dblclick(t)},!1)}}),t.exports=r},function(t,e,n){var r=n(204);t.exports=r},function(t,e,n){"use strict";function r(t){this.register(t)}var i=n(1);i.augment(r,{register:function(t){var e=this;if(t.plugins||(t.plugins={}),!t.plugins[e.name])switch(t.plugins[e.name]=e,e.type){case"event":e.__registerEvent(t)}},__registerEvent:function(t){var e=this;if(e.__events){var n=t.Canvas.prototype.__events;i.augment(t.Canvas,{__events:function(){n&&n.call(this),e.__events.call(this)}})}}}),t.exports=r},function(t,e,n){"use strict";var r=n(33),i=n(1),a=function(t){a.superclass.constructor.call(this,t)};i.extend(a,r),i.augment(a,{type:"condition",condition:null}),t.exports=a},function(t,e,n){"use strict";var r=n(33),i=n(1),a=function(t){a.superclass.constructor.call(this,t)};i.extend(a,r),i.augment(a,{type:"group",group:null}),t.exports=a},function(t,e,n){"use strict";var r=n(44),i=n(1),a=function(t){a.superclass.constructor.call(this,t)};i.extend(a,r),i.augment(a,{type:"identity",value:null,getText:function(){return this.value.toString()},scale:function(){return 1},invert:function(){return this.value}}),t.exports=a},function(t,e,n){"use strict";function r(t,e){return 1===t?1:Math.log(e)/Math.log(t)}var i=n(1),a=n(43),s=function(t){s.superclass.constructor.call(this,t)};i.extend(s,a),i.augment(s,{type:"log",base:2,tickCount:10,calculateTicks:function(){var t,e=this,n=e.base,i=r(n,e.max);t=e.min>0?Math.floor(r(n,e.min)):i-1;for(var a=i-t,s=e.tickCount,o=Math.ceil(a/s),u=[],c=t;c<i+o;c+=o)u.push(Math.pow(n,c));return u},getScalePercent:function(t){var e=this.max,n=this.min;if(e===n)return 0;var i=this.base,a=(r(i,t)-r(i,n))/(r(i,e)-r(i,n));return a},scale:function(t){var e=this.getScalePercent(t),n=this.rangeMin(),r=this.rangeMax();return n+e*(r-n)},invert:function(t){var e=(t-this.rangeMin())/(this.rangeMax()-this.rangeMin()),n=this.base,i=r(n,this.max),a=r(n,this.min),s=e*(i-a)+a;return Math.pow(n,s)}}),t.exports=s},function(t,e,n){"use strict";var r=n(33),i=n(1),a=function(t){a.superclass.constructor.call(this,t)};i.extend(a,r),i.augment(a,{type:"numberCat",init:function(){var t=this.values;t.sort(function(t,e){return t-e}),i.each(t,function(e,n){t[n]=e.toString()}),this.ticks=t}}),t.exports=a},function(t,e,n){"use strict";function r(t,e){var n=Math.E,r=Math.pow(n,Math.log(e)/t);return r}var i=n(1),a=n(43),s=function(t){s.superclass.constructor.call(this,t)};i.extend(s,a),i.augment(s,{type:"pow",exponent:2,tickCount:12,calculateTicks:function(){var t,e=this,n=e.exponent,i=Math.ceil(r(n,e.max));if(t=e.min>=0?Math.round(r(n,e.min)):0,t>i){var a=i;i=t,t=a}for(var s=i-t,o=e.tickCount,u=Math.ceil(s/o),c=[],l=t;l<i+u;l+=u)c.push(Math.pow(l,n));return c},getScalePercent:function(t){var e=this.max,n=this.min;if(e===n)return 0;var i=this.exponent,a=(r(i,t)-r(i,n))/(r(i,e)-r(i,n));return a},scale:function(t){var e=this.getScalePercent(t),n=this.rangeMin(),r=this.rangeMax();return n+e*(r-n)},invert:function(t){var e=(t-this.rangeMin())/(this.rangeMax()-this.rangeMin()),n=this.exponent,i=r(n,this.max),a=r(n,this.min),s=e*(i-a)+a;return Math.pow(s,n)}}),t.exports=s},function(t,e,n){"use strict";var r=n(33),i=n(1),a=n(40),s=n(36),o=function(t){o.superclass.constructor.call(this,t)};i.extend(o,r),i.augment(o,{type:"timeCat",mask:"yyyy-mm-dd HH:MM:ss",tickCount:5,init:function(){var t=this,e=this.values;e.sort(function(e,n){return e=t._toTimeStamp(e),n=t._toTimeStamp(n),e-n}),i.each(e,function(n,r){e[r]=t._toTimeStamp(n)}),this.ticks=this.calculateTicks(!0)},calculateTicks:function(t){var e=this,n=e.tickCount,r=s.Category.caculate({maxCount:n,data:e.values}),o=r.ticks;return t&&i.each(o,function(t,n){o[n]=a.format(t,e.mask)}),o},translate:function(t){t=this._toTimeStamp(t);var e=this.values.indexOf(t);return e===-1&&(e=i.isNumber(t)&&t<this.values.length?t:NaN),e},scale:function(t){var e,n=this.rangeMin(),r=this.rangeMax(),i=this.translate(t);return e=this.values.length>1&&i>-1?i/(this.values.length-1):0,n+e*(r-n)},getText:function(t){var e="",n=this.translate(t);n>-1&&(e=this.values[n]);var r=this.formatter;return e=parseInt(e,10),e=r?r(e):a.format(e,this.mask)},getTicks:function(){var t=this,e=this.calculateTicks(!1),n=[];return i.each(e,function(e){var r;r=i.isObject(e)?e:{text:t.getText(e),value:t.scale(e)},n.push(r)}),n},_toTimeStamp:function(t){return i.isString(t)&&(t=t.replace(/-/gi,"/").replace("T"," ").replace("Z",""),t=new Date(t).getTime()),i.isDate(t)&&(t=t.getTime()),t}}),t.exports=o},function(t,e,n){"use strict";var r=n(43),i=n(1),a=n(36),s=n(40),o=function(t){o.superclass.constructor.call(this,t)};i.extend(o,r),i.augment(o,{type:"time",mask:"yyyy-mm-dd",init:function(){var t=this,e=this.values;if(e){var n=[];i.each(e,function(e){n.push(t._toTimeStamp(e))}),this.min=Math.min.apply(null,n),this.max=Math.max.apply(null,n)}o.superclass.init.call(this)},calculateTicks:function(){var t=this,e=t.min,n=t.max,r=t.tickCount,i=t.tickInterval,s=a.Time.caculate({min:e,max:n,minCount:r,maxCount:r,interval:i});return s.ticks},getText:function(t){var e=this.formatter;return t=this.translate(t),t=e?e(t):s.format(t,this.mask)},scale:function(t){return i.isString(t)&&(t=this.translate(t)),o.superclass.scale.call(this,t)},translate:function(t){return i.isString(t)&&(t=t.replace(/-/gi,"/").replace("T"," ").replace("Z",""),t=new Date(t).getTime()),i.isDate(t)&&(t=t.getTime()),t},_toTimeStamp:function(t){return i.isString(t)&&(t=t.replace(/-/gi,"/").replace("T"," ").replace("Z",""),t=new Date(t).getTime()),i.isDate(t)&&(t=t.getTime()),t}}),t.exports=o},function(t,e,n){var r=n(214);t.exports=r},function(t,e,n){function r(t,e,n,r){var i,o,c,l,h=[],f=!!r;if(f){c=new u(1/0,1/0),l=new u((-(1/0)),(-(1/0)));for(var g=0,p=t.length;g<p;g++){var v=a(t[g]);c.min(v),l.max(v)}c.min(a(r[0])),l.max(a(r[1]))}for(var g=0,d=t.length;g<d;g++){var v=a(t[g]);if(n)i=a(t[g?g-1:d-1]),o=a(t[(g+1)%d]);else{if(0===g||g===d-1){h.push([v.x,v.y]);continue}i=a(t[g-1]),o=a(t[g+1])}var x=u.sub(o,i);s(x,e);var m=v.distanceTo(i),y=v.distanceTo(o),_=m+y;0!==_&&(m/=_,y/=_);var S=s(x.clone(),-m),w=s(x.clone(),y),b=u.add(v,S),M=u.add(v,w);f&&(b.max(c),b.min(l),M.max(c),M.min(l)),h.push([b.x,b.y]),h.push([M.x,M.y])}return n&&h.push(h.shift()),h}function i(t,e,n){for(var i=!!e,a=[],s=0,o=t.length;s<o;s+=2)a.push([t[s],t[s+1]]);for(var u,c,l,h=r(a,.4,i,n),f=a.length,g=[],s=0;s<f-1;s++)u=h[2*s],c=h[2*s+1],l=a[s+1],g.push(["C",u[0],u[1],c[0],c[1],l[0],l[1]]);return i&&(u=h[f],c=h[f+1],l=a[0],g.push(["C",u[0],u[1],c[0],c[1],l[0],l[1]])),g}function a(t){return new u(t[0],t[1])}function s(t,e){return t.x*=e,t.y*=e,t}var o=n(3),u=o.Vector2;t.exports={catmullRom2bezier:i}},function(t,e,n){var r=n(18),i=n(216);r.link=function(t,e){return new i({dims:t,nodes:e})},t.exports=i},function(t,e,n){var r=n(1),i=n(18),a=n(2),s="..x",o="..y",u=function(t){u.superclass.constructor.call(this,t)};r.extend(u,i),r.augment(u,{type:"link",nodes:null,getFromField:function(){var t=this.getDims();return t[2]},getToField:function(){var t=this.getDims();return t[3]},initDims:function(t){t.unshift(o),t.unshift(s)},execFrame:function(t){var e=this,n=e.getFromField(),r=e.getToField(),i=[];return t.each(function(t){var a=t[n],u=t[r],c=e.findObj(a),l=e.findObj(u);t[s]=[c.x,l.x],t[o]=[c.y,l.y],i.push(t)}),new a(i)},findObj:function(t){var e=this,n=e.nodes,i=null;return r.each(n,function(e){if(e.id===t)return i=e,!1}),i}}),t.exports=u},function(t,e,n){"use strict";var r=n(18),i={dot:n(218),rect:n(219)};r.tree=i,t.exports=i},function(t,e,n){"use strict";var r=n(81),i=function(t){return new r({dims:t})};t.exports=i},function(t,e,n){"use strict";var r=n(1),i=n(81),a="..x",s="..y",o=function(t){return new i({dims:t,getStatObject:function(t,e){var n=r.mix({},t);return n[a]=[e.start.x,e.start.x,e.end.x,e.end.x],n[s]=[e.start.y,e.end.y,e.end.y,e.start.y],n}})};t.exports=o},function(t,e,n){"use strict";function r(t,e,n){return e=e||1,new i({dims:t,ratio:e,mode:n})}var i=n(221),a=function(t,e){return r(t,e,"squarify")};a.squarify=function(t,e){return r(t,e,"squarify")},a.sliceDice=function(t,e){return r(t,e,"slice-dice")},t.exports=a},function(t,e,n){"use strict";function r(t){return 1-t}var i=n(1),a=n(18),s=n(259),o=n(2),u="..x",c="..y",l="_value",h=function(t){h.superclass.constructor.call(this,t)};i.extend(h,a),i.augment(h,{type:"treemap",mode:"squarify",ratio:1,getValueField:function(){var t=this.getDims();return t[3]||l},getChildrenField:function(){var t=this.getDims();return t[2]},initDims:function(t){t.unshift(c),t.unshift(u)},_copyObject:function(t){var e=i.mix({},t);return e},_extractData:function(t,e){for(var n=this,a=t.length-1;a>=0;a--){var s=t[a],o=n._copyObject(s);o[u]=[],o[c]=[],o[u].push(s.x),o[c].push(r(s.y+s.dy)),o[u].push(s.x),o[c].push(r(s.y)),o[u].push(s.x+s.dx),o[c].push(r(s.y)),o[u].push(s.x+s.dx),o[c].push(r(s.y+s.dy)),e.push(o);var l=n.getChildrenField();i.isArray(s[l])&&n._extractData(s[l],e)}},exec:function(t){var e=this,n=[],r=o.merge.apply(null,t);return n.push(e.execFrame(r)),n},execFrame:function(t){var e=this,n=t.toJSON(),r=(e.getDims(),new s.Squarify({nodes:n,mode:e.mode,childrenField:e.getChildrenField(),valueField:e.getValueField(),ratio:e.ratio})),i=r.getNodes(),n=[];e._extractData(i,n);var t=new o(n);return t}}),t.exports=h},function(t,e,n){"use strict";var r=n(45),i=function(t,e){return new r({dims:t,binWidth:e})};t.exports=i},function(t,e,n){"use strict";function r(t,e,n){var r=[];return s.each(t,function(t){r.push(t*e*n/2)}),r}function i(t,e){var n=[];return s.each(t,function(t){n.push(t*e/2)}),n}var a=n(45),s=n(1),o=function(t,e,n){return new a({ratio:n||.5,dims:t,binWidth:e||.03,_getDimVaues:function(t,e,n){var r=this,i=r.getDimRange(e),a=i.max-i.min,o=[];return s.each(n,function(e){o.push(t+a*e)}),o},toBin:function(t){var e=this,n=e.getBinDims();if(n<2)throw"the bin.rect method only support 2 dimenssion!";var a=n[0],s=n[1],o=e.binWidth,u=e.ratio,c=e._center([t[a],t[s]]),l=r([-.5,-1.5,-.5,.5,1.5,.5],o,u),h=i([-1,0,1,1,0,-1],o);t[a]=e._getDimVaues(c[0],a,l),t[s]=e._getDimVaues(c[1],s,h)},_center:function(t){var e,n,r,i=this,a=i.binWidth,s=i.getBinDims(),o=s[0],u=i.getDimRange(o),c=a*(u.max-u.min)/2,l=s[1],h=i.getDimRange(l),f=a*(h.max-h.min)/2,g=i.ratio;return n=[t[0]/(c*g),t[1]/f],r=i._centerForBasis(n),e=[r[0]*c,r[1]*f]},_chkOdd:function(t){var e=parseInt(t);return e?!!(e%2):"0"},_aroundX:function(t){var e,n,r,i=this;return t=t<1?1:t,i._chkOdd(t)?n=r=parseInt(t)+.5:t%2===0?n=r=parseInt(t)-.5:(n=parseInt(t)-.5,r=n+2),e=[n,r]},_aroundY:function(t){var e,n,r;return t=t<1?1:t,n=parseInt(t),r=n+1,e=[n,r]},_shortPoint:function(t,e,n){var r,i,a=this,s=(t[1]-.5)%4;1===s?a._chkOdd(e[1])?(r=[t[0],e[0]],i=[t[1],e[1]]):(r=[t[1],e[0]],i=[t[0],e[1]]):a._chkOdd(e[0])?(r=[t[0],e[0]],i=[t[1],e[1]]):(r=[t[1],e[0]],i=[t[0],e[1]]);var o=Math.abs(n[0]-r[0])+Math.abs(n[1]-r[1]),u=Math.abs(n[0]-i[0])+Math.abs(n[1]-i[1]);return o===u?r[0]<i[0]?r:i:o<u?r:i},_centerForBasis:function(t){var e,n,r,i,a=this,s=a._aroundX(t[0]),o=a.ratio;return s[0]===s[1]?(r=s[0],r>2&&a._chkOdd(r/2)?(t[1]=t[1]<1?1:t[1],i=a._chkOdd(parseInt(t[1]))?parseInt(t[1])+1:parseInt(t[1])):(t[1]=t[1]<1?1:t[1],i=a._chkOdd(parseInt(t[1]))?parseInt(t[1]):parseInt(t[1])-1),e=[r,i]):(t[1]=t[1]<1?1:t[1],n=a._aroundY(t[1]),e=a._shortPoint(s,n,t)),e[0]=e[0]*o,e}})};t.exports=o},function(t,e,n){var r={dot:n(222),rect:n(227),hex:n(223),quantile:n(225)};t.exports=r},function(t,e,n){var r=n(82);r.letter=n(226),t.exports=r},function(t,e,n){"use strict";var r=n(82),i=function(t,e){return new r({dims:t,binWidth:e,fractions:4})};t.exports=i},function(t,e,n){"use strict";var r=n(45),i=function(t,e){return new r({dims:t,binWidth:e,toBin:function(t){var e=this,n=e.getBinDims();if(n.length<1)throw"the bin.rect method support for minimum one dimension!";if(1===n.length){var r=n[0];t[r]=e._getValueRange(r,t[r])}else{var i=n[0],a=n[1],s=e._getValueRange(i,t[i]),o=e._getValueRange(a,t[a]);t[i]=[s[0],s[0],s[1],s[1]],t[a]=[o[0],o[1],o[1],o[0]]}},_getValueRange:function(t,e){var n=this,r=n.binWidth,i=n.getDimRange(t),a=i.max-i.min,s=n.getCenterValue(e,i.max,i.min);return[s-a*r*1/2,s+a*r*1/2]}})};t.exports=i},function(t,e,n){"use strict";function r(t,e,n){return e=e||.01,new i({dims:t,bandWidth:e,kernelType:n})}var i=n(229),a=n(230),s={};s.kernel={},s.kernel.uniform=function(t,e){return r(t,e,"uniform")},s.kernel.triangular=function(t,e){return r(t,e,"triangular")},s.kernel.epanechnikov=function(t,e){return r(t,e,"epanechnikov")},s.kernel.quartic=function(t,e){return r(t,e,"quartic")},s.kernel.triweight=function(t,e){return r(t,e,"triweight")},s.kernel.tricube=function(t,e){return r(t,e,"tricube")},s.kernel.gaussian=function(t,e){return r(t,e,"gaussian")},s.kernel.cosine=function(t,e){return r(t,e,"cosine")},s.normal=function(t,e){return e=e||.01,new a({dims:t,bandWidth:e})},t.exports=s},function(t,e,n){"use strict";var r=n(1),i=n(2),a=n(78),s=n(83),o="..density",u=function(t){u.superclass.constructor.call(this,t)};r.extend(u,s),r.augment(u,{kernelType:"",execFrame:function(t){var e=this,n=e.kernelType;if(!n)return t;var r=a[n],s=e.getDims(),o=[];return 2===s.length?o=e._getOneDimDensity(t,r,s):3===s.length&&(o=e._getTwoDimDensity(t,r,s)),new i(o)},_getOneDimDensity:function(t,e,n){for(var i=n[n.length-2],a=t.colArray(i),s=this.getWindowWidth(t,i),u=this.getCoordinate(t,i,s),c=u.length,l=a.length,h=t.rowObject(0),f=[],g=0;g<c;g++){for(var p=0,v=u[g],d=0;d<l;d++)p+=e((v-a[d])/s);var x=1/(l*s)*p,m=r.mix({},h);m[i]=v,m[o]=x,f[g]=m}return f},_getTwoDimDensity:function(t,e,n){for(var i=n[n.length-3],a=n[n.length-2],s=this.getWindowWidth(t,i),u=this.getWindowWidth(t,a),c=this.getCoordinate(t,i,s),l=c.length,h=this.getCoordinate(t,a,u),f=h.length,g=t.rowCount(),p=t.rowObject(0),v=[],d=0;d<l;d++)for(var x=0;x<f;x++){for(var m=0,y=c[d],_=h[x],S=0;S<g;S++)m+=e((y-t.data[S][i])/s)*e((_-t.data[S][a])/u);var w=1/(g*s*u)*m,b=r.mix({},p);b[i]=y,b[a]=_,b[o]=w,v.push(b)}return v}}),t.exports=u},function(t,e,n){"use strict";var r=n(1),i=n(2),a=n(83),s="..density",o=function(t){o.superclass.constructor.call(this,t)};r.extend(o,a),r.augment(o,{execFrame:function(t){for(var e=this,n=t.rowObject(0),a=e.getDims(),o=a[a.length-2],u=this.getWindowWidth(t,o),c=this.getCoordinate(t,o,u),l=c.length,h=i.mean(t,o),f=i.standard_deviation(t,o),g=[],p=0;p<l;p++){var v=c[p],d=e.getNormal(v,h,f),x=r.mix({},n);x[o]=v,x[s]=d,g.push(x)}return new i(g)},getNormal:function(t,e,n){var r=1/(Math.sqrt(2*Math.PI)*n)*Math.exp(-(t-e)*(t-e)/(2*n*n));return r}}),t.exports=o},function(t,e,n){var r={spread:{range:n(232),sd:n(233),se:n(234)},confi:{}};t.exports=r},function(t,e,n){"use strict";var r=n(54),i=n(2),a=function(t){return new r({dims:t,transform:function(t,e){var n=t.rowObject(0);return n[e]=i.range(t,e),new i([n])}})};t.exports=a},function(t,e,n){"use strict";var r=n(54),i=n(2),a=function(t){return new r({dims:t,transform:function(t,e){var n=t.rowObject(0),r=i.mean(t,e),a=i.sd(t,e);return n[e]=[r-a,r+a],new i([n])}})};t.exports=a},function(t,e,n){"use strict";var r=n(54),i=n(2),a=function(t){return new r({dims:t,transform:function(t,e){var n=t.rowObject(0),r=i.mean(t,e),a=i.se(t,e);return n[e]=[r-a,r+a],new i([n])}})};t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(14),a=n(25),s=n(22),o=function(t){return new i(r.mix({},s,{dims:t,regressionType:"cubic",getRegression:function(t){return a("polynomial",t,3)}}))};t.exports=o},function(t,e,n){"use strict";var r=n(1),i=n(14),a=n(25),s=n(22),o=n(2),u=function(t){return new i(r.mix({},s,{dims:t,regressionType:"exp",preExecute:function(t){var e=this.getYDim();r.each(t,function(t){var n=o.min(t,e);if(n<0)throw"the field "+e+" has value less than 0,you can't use this regression!"})},getRegression:function(t){return a("exponential",t)}}))};t.exports=u},function(t,e,n){"use strict";function r(t,e){for(var n=0,r=0;r<t.length;r++){var i=t[r];n+=i*Math.pow(e,r)}return n}var i=n(1),a=["linear","cubic","quadratic"],s={execFnction:function(t,e,n){var r;return r=i.indexOf(a,t)>=0?s.poly(e,n):s[t]?s[t](e[0],e[1],n):n},linear:function(t,e,n){var i=[e,t];return r(i,n)},poly:function(t,e){return r(t,e)},log:function(t,e,n){return t+e*Math.log(n)},pow:function(t,e,n){return t*Math.pow(n,e)},exp:function(t,e,n){return t*Math.pow(Math.E,e*n)}};t.exports=s},function(t,e,n){"use strict";function r(t,e,n){return e=e||.01,new a({dims:t,bandWidth:e,kernelType:n})}var i=n(55);i.mean=n(242),i.median=n(243),i.linear=n(239),i.quadratic=n(245),i.cubic=n(235),i.log=n(241),i.pow=n(244),i.exp=n(236);var a=n(240);i.loess={},i.loess.uniform=function(t,e){return r(t,e,"uniform")},i.loess.triangular=function(t,e){return r(t,e,"triangular")},i.loess.epanechnikov=function(t,e){return r(t,e,"epanechnikov")},i.loess.quartic=function(t,e){return r(t,e,"quartic")},i.loess.triweight=function(t,e){return r(t,e,"triweight")},i.loess.tricube=function(t,e){return r(t,e,"tricube")},i.loess.gaussian=function(t,e){return r(t,e,"gaussian")},i.loess.cosine=function(t,e){return r(t,e,"cosine")},t.exports=i},function(t,e,n){"use strict";var r=n(1),i=n(14),a=n(25),s=n(22),o=function(t){return new i(r.mix({},s,{dims:t,regressionType:"linear",getRegression:function(t){return a("polynomial",t,1)}}))};t.exports=o},function(t,e,n){"use strict";var r=n(55),i=n(1),a=n(78),s=n(2),o=n(168),u=function(t){u.superclass.constructor.call(this,t)};i.extend(u,r),i.augment(u,{kernelType:"",k:10,execFrame:function(t){var e=this,n=e.getDims(),r=[];if(2===n.length){var a=e.getXDim(),o=e.getYDim(),u=e.getData(t),c=e.getInterArray(t,a),l=e.execSmooth(u,c),h=t.rowObject(0);i.each(l,function(t){var e=i.mix({},h);e[a]=t[0],e[o]=t[1],r.push(e)})}else{var a=e.getXDim(),o=e.getYDim(),f=e.getZDim(),u=e.getData(t),c=[];c[0]=e.getInterArray(t,a),c[1]=e.getInterArray(t,o);var l=e.execSmoothThreeDim(u,c),h=t.rowObject(0);i.each(l,function(t){var e=i.mix({},h);e[a]=t[0],e[o]=t[1],e[f]=t[2],r.push(e)})}return new s(r)},execSmooth:function(t,e){for(var n=this,r=e.length,i=t.length,s=n.kernelType,o=a[s],u=[],c=[],l=e[1]-e[0],h=0;h<r;h++){for(var f,g,p,v,d=0,x=0,m=0,y=0,_=0,S=e[h],w=n.getWindowWidth([S],t,[l])[0],b=0;b<i;b++)g=t[b][0],p=t[b][1],f=o((S-g)/w),0!==f&&(d+=f,x+=f*g,m+=f*g*g,y+=f*p,_+=f*g*p);d*m-x*x!==0&&(c[1]=(x*y-d*_)/(x*x-d*m),c[0]=y/d-x/d*c[1],v=c[0]+c[1]*S,u.push([S,v]))}return u},execSmoothThreeDim:function(t,e){for(var n=this,r=e[0].length,i=e[1].length,s=t.length,u=n.kernelType,c=a[u],l=[],h=[],f=e[0][1]-e[0][0],g=e[1][1]-e[1][0],p=0;p<r;p++)for(var v=0;v<i;v++){for(var d,x,m,y,_,S=0,w=0,b=0,M=0,A=0,C=0,k=0,T=0,P=0,I=e[0][p],D=e[1][v],L=n.getWindowWidth([I,D],t,[f,g]),R=L[0],B=L[1],F=0;F<s;F++)x=t[F][0],m=t[F][1],y=t[F][2],d=c((I-x)/R)*c((D-m)/B),0!==d&&(S+=d,w+=d*x,b+=d*m,M+=d*x*m,A+=d*x*x,C+=d*m*m,k+=d*y,T+=d*x*y,P+=d*m*y);var O=[[S,w,b],[w,A,M],[b,M,C]],G=[k,T,P];h=o(O,G),h&&(_=h[0]+h[1]*I+h[2]*D,l.push([I,D,_]))}return l},getWindowWidth:function(t,e,n){var r=this,i=r.k,a=e.length,s=[],o=e[0].length-1,u=0;a<=i&&(i=a),e.sort(function(e,r){for(var i=0,a=0,s=0;s<o;s++)i+=(e[s]-t[s])*(e[s]-t[s])/(n[s]*n[s]),a+=(r[s]-t[s])*(r[s]-t[s])/(n[s]*n[s]);return i-a});for(var c=0;c<o;c++){for(;e[i-1][c]===e[0][c];)i++;var l=1.1*Math.abs(e[i-1][c]-t[c])/n[c];u+=l*l}u=Math.sqrt(u);for(var c=0;c<o;c++)s[c]=u*n[c];return s}}),t.exports=u},function(t,e,n){"use strict";var r=n(1),i=n(14),a=n(25),s=n(22),o=function(t){return new i(r.mix({},s,{dims:t,regressionType:"log",getRegression:function(t){return a("logarithmic",t)}}))};t.exports=o},function(t,e,n){"use strict";var r=n(1),i=n(2),a=n(14),s=function(t){return new a({dims:t,getRegressionString:function(){return"y = "+this.curMean},execSmooth:function(t,e,n){var a=this,s=a.getYDim(),o=i.mean(n,s);a.curMean=o;var u=[];return r.each(e,function(t){u.push([t,o])}),u}})};t.exports=s},function(t,e,n){"use strict";var r=n(1),i=n(2),a=n(14),s=function(t){return new a({dims:t,getRegressionString:function(){return"y = "+this.curMedian},execSmooth:function(t,e,n){var a=this,s=a.getYDim(),o=i.median(n,s);a.curMedian=o;var u=[];return r.each(e,function(t){u.push([t,o])}),u}})};t.exports=s},function(t,e,n){"use strict";var r=n(1),i=n(14),a=n(25),s=n(22),o=n(2),u=function(t){return new i(r.mix({},s,{dims:t,regressionType:"pow",preExecute:function(t){var e=this.getYDim();r.each(t,function(t){var n=o.min(t,e);if(n<0)throw"the field "+e+" has value less than 0,you can't use this regression!"})},getRegression:function(t){return a("power",t)}}))};t.exports=u},function(t,e,n){"use strict";var r=n(1),i=n(14),a=n(25),s=n(22),o=function(t){return new i(r.mix({},s,{regressionType:"quadratic",dims:t,getRegression:function(t){return a("polynomial",t,2)}}))};t.exports=o},function(t,e,n){"use strict";var r=n(10),i=n(2),a=function(t){return new r({dims:t,initDims:function(t){t.push("..count")},transform:function(t,e){var n=t.rowObject(0);return n[e]=t.rowCount(),new i([n])}})};t.exports=a},function(t,e,n){"use strict";var r=n(10),i=n(2),a=n(1),s=function(t){return new r({dims:t,getStatDims:function(){var t=this.stat;if(t)return t.getStatDims();var e=this.getDims(),n=e.length,r=[e[n-1]];return r},execFrame:function(t){var e=this.getStatDims(),n=e[e.length-1],r=this.getDims()[0];r&&r!==n&&(t=i.sort(t,r));var s=this.stat,o=[];if(s&&"density"===s.type){var u=s.getWindowWidth(t,r),c=t.colArray(n),l=0;a.each(c,function(t){l+=t*u,o.push(l)})}else o=i.cumulative(t,n);return t.colReplace(n,o),t}})};t.exports=s},function(t,e,n){var r={count:n(246),max:n(249),min:n(252),mean:n(250),median:n(251),proportion:n(255),range:n(256),percent:n(254),sd:n(257),mode:n(253),sum:n(258),cumulative:n(247)};t.exports=r},function(t,e,n){"use strict";var r=n(10),i=n(2),a=function(t){return new r({dims:t,transform:function(t,e){var n=t.rowObject(0);return n[e]=i.max(t,e),new i([n])}})};t.exports=a},function(t,e,n){"use strict";var r=n(10),i=n(2),a=function(t){return new r({dims:t,transform:function(t,e){var n=t.rowObject(0);return n[e]=i.mean(t,e),new i([n])}})};t.exports=a},function(t,e,n){"use strict";var r=n(10),i=n(2),a=function(t){return new r({dims:t,transform:function(t,e){var n=t.rowObject(0);return n[e]=i.median(t,e),new i([n])}})};t.exports=a},function(t,e,n){"use strict";var r=n(10),i=n(2),a=function(t){return new r({dims:t,transform:function(t,e){var n=t.rowObject(0);return n[e]=i.min(t,e),new i([n])}})};t.exports=a},function(t,e,n){"use strict";var r=n(10),i=n(2),a=function(t){return new r({dims:t,transform:function(t,e){var n=t.rowObject(0);return n[e]=i.mode(t,e),new i([n])}})};t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(10),a=n(2),s=n(84),o="..percent",u=function(t){return new i(r.mix({dims:t,initDims:function(t){var e=t[t.length-1];t.splice(t.length-1,0,o),this.percetDim=e},getStatDims:function(){return[o]},transform:function(t,e,n){e=this.percetDim;var r=a.sum(t,e),i=a.sum(n,e),s=t.rowObject(0);return s["..percent"]=r/i,s[e]=r,new a([s])}},s))};t.exports=u},function(t,e,n){"use strict";var r=n(1),i=n(10),a=n(2),s=n(84),o=function(t){return new i(r.mix({dims:t,initDims:function(t){t.push("..proportion")},transform:function(t,e,n){var r=t.rowCount()/n.rowCount(),i=t.rowObject(0);return i[e]=r,new a([i])}},s))};t.exports=o},function(t,e,n){"use strict";var r=n(10),i=n(2),a=function(t){return new r({dims:t,transform:function(t,e){var n=t.rowObject(0);return n[e]=i.max(t,e)-i.min(t,e),new i([n])}})};t.exports=a},function(t,e,n){"use strict";var r=n(10),i=n(2),a=function(t){return new r({dims:t,transform:function(t,e){var n=t.rowObject(0);return n[e]=i.standard_deviation(t,e),new i([n])}})};t.exports=a},function(t,e,n){"use strict";var r=n(10),i=n(2),a=function(t){return new r({dims:t,transform:function(t,e){var n=t.rowObject(0);return n[e]=i.sum(t,e),new i([n])}})};t.exports=a},function(t,e,n){var r=n(85);r.Squarify=n(260),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(85),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{mode:"squarify",ratio:.5*(1+Math.sqrt(5)),processNodes:function(t,e,n){var i=this;if(r.isArray(t)&&t.length){var a,s,o,u=[],c=t[0],l=i.mode,h=i.valueField,f=i.childrenField,g=t.slice(),p=1/0,v="slice"===l?e.dx:"dice"===l?e.dy:"slice-dice"===l?c.depth%2?e.dy:e.dx:Math.min(e.dx,e.dy);for(i.scale(g,e.dx*e.dy/n),u.area=0;(o=g.length)>0;)u.push(a=g[o-1]),u.area+=a.area,"squarify"!==l||(s=i.worst(u,v))<=p?(g.pop(),p=s):(u.area-=u.pop().area,i.position(u,v,e,!1),v=Math.min(e.dx,e.dy),u.length=u.area=0,p=1/0);u.length&&(i.position(u,v,e,!0),u.length=u.area=0),t.forEach(function(t){i.processNodes(t[f],i.pad(t),t[h])})}},worst:function(t,e){for(var n,r=this,i=t.area,a=0,s=1/0,o=-1,u=t.length;++o<u;)(n=t[o].area)&&(n<s&&(s=n),n>a&&(a=n));return i*=i,e*=e,i?Math.max(e*a*r.ratio/i,i/(e*s*r.ratio)):1/0}}),t.exports=a},function(t,e,n){var r=n(262);t.exports=r},function(t,e){"use strict";function n(t,e,r){r=r||0;for(var i in e)if(e.hasOwnProperty(i)){var o=e[i];null!==o&&s.isObject(o)?(s.isObject(t[i])||(t[i]={}),r<a?n(t[i],e[i]):t[i]=e[i]):s.isArray(o)?(t[i]=[],t[i]=t[i].concat(o)):void 0!==o&&(t[i]=e[i])}}var r=Object.prototype,i=r.toString,a=5,s={
	substitute:function(t,e){return t&&e?t.replace(/\\?\{([^{}]+)\}/g,function(t,n){return"\\"===t.charAt(0)?t.slice(1):void 0===e[n]?"":e[n]}):t},ucfirst:function(t){return t+="",t.charAt(0).toUpperCase()+t.substring(1)},isString:function(t){return"string"==typeof t},isNumber:function(t){return"number"==typeof t},isNumeric:function(t){return!isNaN(parseFloat(t))&&isFinite(t)},isBoolean:function(t){return"boolean"==typeof t},isFunction:function(t){return"function"==typeof t},isArray:"isArray"in Array?Array.isArray:function(t){return"[object Array]"===i.call(t)},isDate:function(t){return"[object Date]"===i.call(t)},isNull:function(t){return void 0===t||null===t},notNull:function(t){return!s.isNull(t)},isBlank:function(t){if(s.isArray(t))return 0===t.length;if(s.isObject(t)){var e=0;return s.each(t,function(t,n){e++}),0===e}return!1},isObject:"[object Object]"===i.call(null)?function(t){return null!==t&&void 0!==t&&"[object Object]"===i.call(t)&&void 0===t.ownerDocument}:function(t){return"[object Object]"===i.call(t)},extend:function(t,e,n,r){s.isFunction(e)||(n=e,e=t,t=function(){});var i=Object.create?function(t,e){return Object.create(t,{constructor:{value:e}})}:function(t,e){function n(){}n.prototype=t;var r=new n;return r.constructor=e,r},a=i(e.prototype,t);return t.prototype=s.mix(a,t.prototype),t.superclass=i(e.prototype,e),s.mix(a,n),s.mix(t,r),t},augment:function(t){for(var e=s.toArray(arguments),n=1;n<e.length;n++){var r=e[n];s.isFunction(r)&&(r=r.prototype),s.mix(t.prototype,r)}},toArray:function(t){return t&&t.length?Array.prototype.slice.call(t):[]},mix:function(){var t=s.toArray(arguments),e=t[0];if(e===!0){e=t[1];for(var r=2;r<t.length;r++){var i=t[r];n(e,i)}}else for(var r=1;r<t.length;r++){var i=t[r];for(var a in i)i.hasOwnProperty(a)&&"constructor"!==a&&(e[a]=i[a])}return e},each:function(t,e){if(t)if(s.isObject(t)){for(var n in t)if(t.hasOwnProperty(n)){var r=e(t[n],n);if(r===!1)break}}else if(t.length)for(var i=0;i<t.length;i++){var r=e(t[i],i);if(r===!1)break}},requestAnimationFrame:function(t){var e=window.requestAnimationFrame||window.webkitRequestAnimationFrame||function(t){return setTimeout(t,16)};return e(t)},cancelAnimationFrame:function(t){var e=window.cancelAnimationFrame||window.webkitCancelAnimationFrame||function(t){return clearTimeout(t)};return e(t)}};t.exports=s},function(t,e,n){"use strict";function r(t,e){var n=e.toString(),r=n.indexOf(".");if(r===-1)return Math.round(t);var i=n.substr(r+1).length;return parseFloat(t.toFixed(i))}var i=Object.prototype,a=(i.toString,n(261));a.mix(a,{mixin:function(t,e){if(t&&e){t._mixins=e,t.ATTRS=t.ATTRS||{};var n={};a.each(e,function(e){a.augment(t,e);var r=e.ATTRS;r&&a.mix(n,r)}),t.ATTRS=a.mix(n,t.ATTRS)}},map:function(t,e){var n=[];return a.each(t,function(t,r){n.push(e(t,r))}),n},filter:function(t,e){var n=[];return a.each(t,function(t,r){e(t,r)&&n.push(t)}),n},guid:function(){var t={};return function(e){return e=e||"g",t[e]?t[e]+=1:t[e]=1,e+t[e]}}(),inArray:function(t,e){return a.indexOf(t,e)!==-1},indexOf:function(t,e){var n=Array.prototype.indexOf;if(n)return n.call(t,e);for(var r=-1,i=0;i<t.length;i++)if(t[i]===e){r=i;break}return r},remove:function(t,e){var n=a.indexOf(t,e);n!==-1&&t.splice(n,1)},empty:function(t){if(!(t instanceof Array))for(var e=t.length-1;e>=0;e--)delete t[e];t.length=0},equalsArray:function(t,e){if(t===e)return!0;if(!t||!e)return!1;if(t.length!==e.length)return!1;for(var n=!0,r=0;r<t.length;r++)if(t[r]!==e[r]){n=!1;break}return n},wrapBehavior:function(t,e){return t["_wrap_"+e]=function(n){t[e](n)}},getWrapBehavior:function(t,e){return t["_wrap_"+e]},fixedBase:function(t,e){return r(t,e)},length:function(t){if(a.isArray(t))return t.length;if(a.isObject(t)){var e=0;return a.each(t,function(){e++}),e}return 0},clone:function(t){if("object"!=typeof t||null===t)return t;if(a.isArray(t))for(var e=[],n=0,r=t.length;n<r;n++)"object"==typeof t[n]&&null!=t[n]?e[n]=a.clone(t[n]):e[n]=t[n];else{var e={};for(var n in t)"object"==typeof t[n]&&null!=t[n]?e[n]=a.clone(t[n]):e[n]=t[n]}return e}}),t.exports=a},function(t,e,n){"use strict";var r=n(6),i=n(266),a=n(267),s=n(88),o=(n(13),n(265)),u=n(3),c=u.Vector3,l=function(t){};r.augment(l,{canFill:!1,canStroke:!1,initAttrs:function(t){return this.__attrs={},this.attr(r.mix({},this.getDefaultAttrs(),t)),this},getDefaultAttrs:function(){var t=this,e=t.constructor,n=e.__attrs;return r.mix(!0,{},n)},attr:function(t,e){var n=this;if(0===arguments.length)return n.__attrs;if(r.isObject(t))return r.each(t,function(t,e){n._setAttr(e,t)}),n.__afterSetAttrAll&&n.__afterSetAttrAll(t),n;if(2===arguments.length){if(n._setAttr(t,e)!==!1){var i="__afterSetAttr"+r.ucfirst(t);n[i]&&n[i](e)}return n}return n._getAttr(t)},resetAttrs:function(){var t=this,e=t,n=t.get("context"),o=e.__attrs;e.isGroup?r.each(o,function(t,a){i[a]&&("fillStyle"===a&&(t=s.parseStyle(t,e,o.fillOpacity)),"strokeStyle"===a&&(t=s.parseStyle(t,e,o.strokeOpacity)),"lineDash"===a&&n.setLineDash?r.isArray(t)?n.setLineDash(t):r.isString(t)&&n.setLineDash(t.split(" ")):n[a]=t)}):r.each(o,function(t,i){a[i]&&("fillStyle"===i&&(t=s.parseStyle(t,e,o.fillOpacity)),"strokeStyle"===i&&(t=s.parseStyle(t,e,o.strokeOpacity)),"lineDash"===i&&n.setLineDash?r.isArray(t)?n.setLineDash(t):r.isString(t)&&n.setLineDash(t.split(" ")):n[i]=t)})},_getAttr:function(t){var e=this,n=e.__attrs[t],i="__getAttr"+r.ucfirst(t);return e[i]&&(n=e[i](n)),n},_setAttr:function(t,e){var n=this,i="__setAttr"+r.ucfirst(t);return n[i]&&(e=n[i](e,n.__attrs[t])),e!==n.__attrs[t]&&(n.__attrs[t]=e,n)},__setAttrFill:function(t){var e=this;if(e.canFill)return e.__attrs.fillStyle=t,t},hasFill:function(){if(this.canFill)for(var t=this;t;){if(t.__attrs.fill)return t.__attrs.fill;t=t.get("parent")}},__setAttrStroke:function(t){var e=this;if(e.canStroke)return this.__attrs.strokeStyle=t,t},hasStroke:function(){if(this.canStroke)for(var t=this;t;){if(t.__attrs.stroke)return t.__attrs.stroke;t=t.get("parent")}},__setAttrOpacity:function(t){return this.__attrs.globalAlpha=t,t},__getAttrOpacity:function(){return this.__attrs.globalAlpha},__setAttrLineWidth:function(t,e){return t>=0?t:e||1},__setAttrClip:function(t){var e=this;if(t&&t.type in o)return null===t.get("canvas")&&(t=r.clone(t)),t.set("parent",e.get("parent")),t.set("context",e.get("context")),t.inside=function(n,r){var i=new c(n,r,1);return t.invert(i,e.get("canvas")),t.__isPointInFill(i.x,i.y)},t}}),t.exports=l},function(t,e){"use strict";t.exports={circle:1,ellipse:1,fan:1,polygon:1,rect:1,path:1}},function(t,e){"use strict";t.exports={fillStyle:1,strokeStyle:1,globalAlpha:1,shadowBlur:1,shadowColor:1,shadowOffsetX:1,shadowOffsetY:1,lineDash:1}},function(t,e){"use strict";t.exports={fillStyle:1,font:1,globalAlpha:1,lineCap:1,lineWidth:1,lineJoin:1,miterLimit:1,shadowBlur:1,shadowColor:1,shadowOffsetX:1,shadowOffsetY:1,strokeStyle:1,textAlign:1,textBaseline:1,lineDash:1}},function(t,e,n){var r=n(6),i=n(87),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{init:function(){a.superclass.init.call(this);var t=this,e=t.get("canvasId"),n=document.getElementById(e);t.set("el",n),t.set("context",n.getContext("2d")),t.set("canvas",t),t.__events()},__events:function(){},getPointByClient:function(t,e){var n=this,r=n.get("el"),i=r.getBoundingClientRect(),a=i.right-i.left,s=i.bottom-i.top;return{x:(t-i.left)*(r.width/a),y:(e-i.top)*(r.height/s)}},getClientByPoint:function(t,e){var n=this,r=n.get("el"),i=r.getBoundingClientRect(),a=i.right-i.left,s=i.bottom-i.top;return{clientX:t/(r.width/a)+i.left,clientY:e/(r.height/s)+i.top}},beforeDraw:function(){var t=this,e=t.get("context"),n=t.get("el");e.clearRect(0,0,n.width,n.height)}}),t.exports=a},function(t,e,n){"use strict";var r=n(6),i=function(){};r.augment(i,{initEventDispatcher:function(){this.__listeners={}},on:function(t,e){var n=this.__listeners;return r.isNull(n[t])&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e),this},off:function(t,e){var n=this.__listeners;return 0===arguments.length?(this.__listeners={},this):1===arguments.length&&r.isString(t)?(n[t]=[],this):2===arguments.length&&r.isString(t)&&r.isFunction(e)?(r.remove(n[t],e),this):void 0},has:function(t,e){var n=this.__listeners;return 0===arguments.length&&!r.isBlank(n)||(!(1!==arguments.length||!n[t]||r.isBlank(n[t]))||!(2!==arguments.length||!n[t]||n[t].indexOf(e)===-1))},trigger:function(t){var e=this,n=e.__listeners,i=n[t.type];if(t.target=e,r.notNull(i)&&r.each(i,function(n){n.call(e,t)}),t.bubbles){var a=e.get("parent");a&&!t.propagationStopped&&a.trigger(t)}return e}}),t.exports=i},function(t,e,n){"use strict";var r=n(6),i=n(3),a=i.Matrix3,s=(i.Vector3,n(4)),o=function(){};r.augment(o,{initTransform:function(){this.__m=new a},translate:function(t,e){return this.__m.translate(t,e),this},rotate:function(t){return this.__m.rotate(s.degreeToRad(t)),this},scale:function(t,e){return this.__m.scale(t,e),this},transform:function(t){var e=this;return r.each(t,function(t){switch(t[0]){case"t":e.translate(t[1],t[2]);break;case"s":e.scale(t[1],t[2]);break;case"r":e.rotate(t[1]);break;case"m":e.__m=a.multiply(t[1],e.__m)}}),this},setTransform:function(t){return this.__m.identity(),this.transform(t)},getMatrix:function(){return this.__m},setMatrix:function(t){return this.__m=t,this},apply:function(t,e){var n=this;e=e||n;for(var i=n,s=[];i!==e;)s.unshift(i),i=i.get("parent");s.unshift(i);var o=new a;return r.each(s,function(t){o.multiply(t.__m)}),t.applyMatrix(o),this},invert:function(t,e){var n=this;e=e||n;for(var i=n,s=[];i!==e;)s.unshift(i),i=i.get("parent");s.unshift(i);var o=new a;r.each(s,function(t){o.multiply(t.__m)});var u=o.getInverse();return t.applyMatrix(u),this},resetTransform:function(){var t=this,e=t.get("context"),n=t.__m.to2DObject();e.transform(n.a,n.b,n.c,n.d,n.e,n.f)}}),t.exports=o},function(t,e,n){"use strict";var r=n(6),i=n(8),a=n(7),s=n(56),o=n(4),u=n(35),c=n(3),l=c.Vector2,h=n(13),f=function(t){f.superclass.constructor.call(this,t)};f.ATTRS={x:0,y:0,r:0,startAngle:0,endAngle:0,clockwise:!1,lineWidth:1,arrow:!1},r.extend(f,i),r.augment(f,{canStroke:!0,type:"arc",__setAttrR:function(t,e){return t>=0?t:(h.warn("r \u5fc5\u987b\u5927\u4e8e0"),e)},__setAttrClockwise:function(t,e){return r.isBoolean(t)?t:(h.warn("clockwise \u5fc5\u987b\u662fboolean\u503c"),e)},__setAttrStartAngle:function(t){return o.degreeToRad(t)},__getAttrStartAngle:function(t){return o.radToDegree(t)},__setAttrEndAngle:function(t){return o.degreeToRad(t)},__getAttrEndAngle:function(t){return o.radToDegree(t)},__afterSetAttrX:function(){this.__calculateBox()},__afterSetAttrY:function(){this.__calculateBox()},__afterSetAttrR:function(){this.__calculateBox()},__afterSetAttrStartAngle:function(){this.__calculateBox()},__afterSetAttrEndAngle:function(){this.__calculateBox()},__afterSetAttrClockwise:function(){this.__calculateBox()},__afterSetAttrLineWidth:function(){this.__calculateBox()},__afterSetAttrAll:function(){this.__calculateBox()},__calculateBox:function(){var t=this,e=t.__attrs,n=e.x,r=e.y,i=e.r,a=e.startAngle,o=e.endAngle,u=e.clockwise,c=e.lineWidth,l=s.box(n,r,i,a,o,u),h=c/2;l.minX-=h,l.minY-=h,l.maxX+=h,l.maxY+=h,this.set("box",l)},isPointInPath:function(t,e){var n=this,r=n.__attrs,i=r.x,s=r.y,o=r.r,u=r.startAngle,c=r.endAngle,l=r.clockwise,h=r.lineWidth;return!!n.hasStroke()&&a.arcline(i,s,o,u,c,l,h,t,e)},createPath:function(){var t=this,e=t.get("context"),n=t.__attrs,r=n.x,i=n.y,a=n.r,s=n.startAngle,o=n.endAngle,c=n.clockwise,h=n.lineWidth,f=n.arrow;if(e.beginPath(),e.arc(r,i,a,s,o,c),f){var g={x:r+a*Math.cos(o),y:i+a*Math.sin(o)},p=new l(-a*Math.sin(o),a*Math.cos(o));c&&p.multiplyScaler(-1),u.makeArrow(e,p,g,h)}}}),t.exports=f},function(t,e,n){"use strict";var r=n(6),i=n(8),a=n(7),s=n(13),o=function(t){o.superclass.constructor.call(this,t)};o.ATTRS={x:0,y:0,r:0,lineWidth:1},r.extend(o,i),r.augment(o,{canFill:!0,canStroke:!0,type:"circle",__setAttrR:function(t,e){return t>=0?t:(s.warn("r \u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e0"),e)},__afterSetAttrX:function(){this.__calculateBox()},__afterSetAttrY:function(){this.__calculateBox()},__afterSetAttrR:function(){this.__calculateBox()},__afterSetAttrLineWidth:function(){this.__calculateBox()},__afterSetAttrAll:function(){this.__calculateBox()},__calculateBox:function(){var t=this,e=t.__attrs,n=e.x,r=e.y,i=e.r,a=e.lineWidth,s=a/2+i;this.set("box",{minX:n-s,minY:r-s,maxX:n+s,maxY:r+s})},isPointInPath:function(t,e){var n=this,r=n.hasFill(),i=n.hasStroke();return r&&i?n.__isPointInFill(t,e)||n.__isPointInStroke(t,e):r?n.__isPointInFill(t,e):!!i&&n.__isPointInStroke(t,e)},__isPointInFill:function(t,e){var n=this,r=n.__attrs,i=r.x,s=r.y,o=r.r;return a.circle(i,s,o,t,e)},__isPointInStroke:function(t,e){var n=this,r=n.__attrs,i=r.x,s=r.y,o=r.r,u=r.lineWidth;return a.arcline(i,s,o,0,2*Math.PI,!1,u,t,e)},createPath:function(){var t=this,e=t.get("context"),n=t.__attrs,r=n.x,i=n.y,a=n.r;e.beginPath(),e.arc(r,i,a,0,2*Math.PI,!1),e.closePath()}}),t.exports=o},function(t,e,n){"use strict";var r=n(6),i=n(8),a=n(7),s=(n(4),n(35)),o=n(57),u=n(3),c=u.Vector2,l=function(t){l.superclass.constructor.call(this,t)};l.ATTRS={p1:null,p2:null,p3:null,p4:null,lineWidth:1,arrow:!1},r.extend(l,i),r.augment(l,{canStroke:!0,type:"cubic",__afterSetAttrP1:function(){this.__calculateBox()},__afterSetAttrP2:function(){this.__calculateBox()},__afterSetAttrP3:function(){this.__calculateBox()},__afterSetAttrP4:function(){this.__calculateBox()},__afterSetAttrLineWidth:function(){this.__calculateBox()},__afterSetAttrAll:function(){this.__calculateBox()},__calculateBox:function(){var t=this,e=t.__attrs,n=e.p1,i=e.p2,a=e.p3,s=e.p4;if(!(r.isNull(n)||r.isNull(i)||r.isNull(a)||r.isNull(s))){for(var u=e.lineWidth/2,c=o.extrema(n[0],i[0],a[0],s[0]),l=0,h=c.length;l<h;l++)c[l]=o.at(n[0],i[0],a[0],s[0],c[l]);for(var f=o.extrema(n[1],i[1],a[1],s[1]),l=0,h=f.length;l<h;l++)f[l]=o.at(n[1],i[1],a[1],s[1],f[l]);c.push(n[0],s[0]),f.push(n[1],s[1]),t.set("box",{minX:Math.min.apply(Math,c)-u,maxX:Math.max.apply(Math,c)+u,minY:Math.min.apply(Math,f)-u,maxY:Math.max.apply(Math,f)+u})}},isPointInPath:function(t,e){var n=this,r=n.__attrs,i=r.p1,s=r.p2,o=r.p3,u=r.p4,c=r.lineWidth;return a.cubicline(i[0],i[1],s[0],s[1],o[0],o[1],u[0],u[1],c,t,e)},createPath:function(){var t=this,e=t.get("context"),n=t.__attrs,i=n.p1,a=n.p2,o=n.p3,u=n.p4,l=n.lineWidth,h=n.arrow;if(!(r.isNull(i)||r.isNull(a)||r.isNull(o)||r.isNull(u))&&(e.beginPath(),e.moveTo(i[0],i[1]),e.bezierCurveTo(a[0],a[1],o[0],o[1],u[0],u[1]),h)){var f=new c(u[0]-o[0],u[1]-o[1]);s.makeArrow(e,f,{x:u[0],y:u[1]},l)}},getPoint:function(t){var e=this.__attrs;return{x:o.at(e.p4[0],e.p3[0],e.p2[0],e.p1[0],t),y:o.at(e.p4[1],e.p3[1],e.p2[1],e.p1[1],t)}}}),t.exports=l},function(t,e,n){"use strict";var r=n(6),i=n(8),a=n(7),s=n(3),o=s.Matrix3,u=s.Vector3,c=n(13),l=function(t){l.superclass.constructor.call(this,t)};l.ATTRS={x:0,y:0,rx:1,ry:1,lineWidth:1},r.extend(l,i),r.augment(l,{canFill:!0,canStroke:!0,type:"ellipse",__setAttrRx:function(t,e){return t>0?t:(c.warn("rx \u5927\u4e8e\u7b49\u4e8e0"),e)},__setAttrRy:function(t,e){return t>0?t:(c.warn("ry \u5927\u4e8e\u7b49\u4e8e0"),e)},__afterSetAttrX:function(){this.__calculateBox()},__afterSetAttrY:function(){this.__calculateBox()},__afterSetAttrRx:function(){this.__calculateBox()},__afterSetAttrRy:function(){this.__calculateBox()},__afterSetAttrLineWidth:function(){this.__calculateBox()},__afterSetAttrAll:function(){this.__calculateBox()},__calculateBox:function(){var t=this,e=t.__attrs,n=e.x,r=e.y,i=e.rx,a=e.ry,s=e.lineWidth,o=i+s/2,u=a+s/2;this.set("box",{minX:n-o,minY:r-u,maxX:n+o,maxY:r+u})},isPointInPath:function(t,e){var n=this,r=n.hasFill(),i=n.hasStroke();return r&&i?n.__isPointInFill(t,e)||n.__isPointInStroke(t,e):r?n.__isPointInFill(t,e):!!i&&n.__isPointInStroke(t,e)},__isPointInFill:function(t,e){var n=this,r=n.__attrs,i=r.x,s=r.y,c=r.rx,l=r.ry,h=c>l?c:l,f=c>l?1:c/l,g=c>l?l/c:1,p=new u(t,e,1),v=new o;v.scale(f,g),v.translate(i,s);var d=v.getInverse();return p.applyMatrix(d),a.circle(0,0,h,p.x,p.y)},__isPointInStroke:function(t,e){var n=this,r=n.__attrs,i=r.x,s=r.y,c=r.rx,l=r.ry,h=r.lineWidth,f=c>l?c:l,g=c>l?1:c/l,p=c>l?l/c:1,v=new u(t,e,1),d=new o;d.scale(g,p),d.translate(i,s);var x=d.getInverse();return v.applyMatrix(x),a.arcline(0,0,f,0,2*Math.PI,!1,h,v.x,v.y)},createPath:function(){var t=this,e=t.get("context"),n=t.__attrs,r=n.x,i=n.y,a=n.rx,s=n.ry,u=a>s?a:s,c=a>s?1:a/s,l=a>s?s/a:1,h=new o;h.scale(c,l),h.translate(r,i);var f=h.to2DObject();e.beginPath(),e.save(),e.transform(f.a,f.b,f.c,f.d,f.e,f.f),e.arc(0,0,u,0,2*Math.PI),e.restore(),e.closePath()}}),t.exports=l},function(t,e,n){"use strict";var r=n(6),i=n(8),a=n(7),s=n(4),o=n(56),u=n(3),c=u.Vector2,l=n(13),h=function(t){h.superclass.constructor.call(this,t)};h.ATTRS={x:0,y:0,rs:0,re:0,startAngle:0,endAngle:0,clockwise:!1,lineWidth:1},r.extend(h,i),r.augment(h,{canFill:!0,canStroke:!0,type:"fan",__setAttrRs:function(t,e){return t>=0?t:(l.warn("rs \u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e0"),e)},__setAttrRe:function(t,e){return t>=0?t:(l.warn("re \u5fc5\u987b\u5927\u4e8e\u7b49\u4f600"),e)},__setAttrClockwise:function(t,e){return r.isBoolean(t)?t:(l.warn("clockwise \u5fc5\u987b\u4e3aboolean\u503c"),e)},__setAttrStartAngle:function(t){return s.degreeToRad(t)},__getAttrStartAngle:function(t){return s.radToDegree(t)},__setAttrEndAngle:function(t){return s.degreeToRad(t)},__getAttrEndAngle:function(t){return s.radToDegree(t)},__afterSetAttrX:function(){this.__calculateBox()},__afterSetAttrY:function(){this.__calculateBox()},__afterSetAttrRs:function(){this.__calculateBox()},__afterSetAttrRe:function(){this.__calculateBox()},__afterSetAttrStartAngle:function(){this.__calculateBox()},__afterSetAttrEndAngle:function(){this.__calculateBox()},__afterSetAttrClockwise:function(){this.__calculateBox()},__afterSetAttrLineWidth:function(){this.__calculateBox()},__afterSetAttrAll:function(){this.__calculateBox()},__calculateBox:function(){var t=this,e=t.__attrs,n=e.x,r=e.y,i=e.rs,a=e.re,s=e.startAngle,u=e.endAngle,c=e.clockwise,l=e.lineWidth,h=o.box(n,r,i,s,u,c),f=o.box(n,r,a,s,u,c),g=Math.min(h.minX,f.minX),p=Math.min(h.minY,f.minY),v=Math.max(h.maxX,f.maxX),d=Math.max(h.maxY,f.maxY),x=l/2;this.set("box",{minX:g-x,minY:p-x,maxX:v+x,maxY:d+x})},isPointInPath:function(t,e){var n=this,r=n.hasFill(),i=n.hasStroke();return r&&i?n.__isPointInFill(t,e)||n.__isPointInStroke(t,e):r?n.__isPointInFill(t,e):!!i&&n.__isPointInStroke(t,e)},__isPointInFill:function(t,e){var n=this,r=n.__attrs,i=r.x,a=r.y,u=r.rs,l=r.re,h=r.startAngle,f=r.endAngle,g=r.clockwise,p=new c(1,0),v=new c(t-i,e-a),d=p.angleTo(v),x=o.nearAngle(d,h,f,g);if(s.equal(d,x)){var m=v.lengthSq();if(u*u<=m&&m<=l*l)return!0}return!1},__isPointInStroke:function(t,e){var n=this,r=n.__attrs,i=r.x,s=r.y,o=r.rs,u=r.re,c=r.startAngle,l=r.endAngle,h=r.clockwise,f=r.lineWidth,g={x:Math.cos(c)*o+i,y:Math.sin(c)*o+s},p={x:Math.cos(c)*u+i,y:Math.sin(c)*u+s},v={x:Math.cos(l)*o+i,y:Math.sin(l)*o+s},d={x:Math.cos(l)*u+i,y:Math.sin(l)*u+s};return!!a.line(g.x,g.y,p.x,p.y,f,t,e)||(!!a.line(v.x,v.y,d.x,d.y,f,t,e)||(!!a.arcline(i,s,o,c,l,h,f,t,e)||!!a.arcline(i,s,u,c,l,h,f,t,e)))},createPath:function(){var t=this,e=t.get("context"),n=t.__attrs,r=n.x,i=n.y,a=n.rs,s=n.re,o=n.startAngle,u=n.endAngle,c=n.clockwise,l={x:Math.cos(o)*a+r,y:Math.sin(o)*a+i},h={x:Math.cos(o)*s+r,y:Math.sin(o)*s+i},f={x:Math.cos(u)*a+r,y:Math.sin(u)*a+i};({x:Math.cos(u)*s+r,y:Math.sin(u)*s+i});e.beginPath(),e.moveTo(l.x,l.y),e.lineTo(h.x,h.y),e.arc(r,i,s,o,u,c),e.lineTo(f.x,f.y),e.arc(r,i,a,u,o,!c),e.closePath()}}),t.exports=h},function(t,e,n){"use strict";var r=n(6),i=n(8),a=n(7),s=n(13),o=function(t){o.superclass.constructor.call(this,t)};o.ATTRS={x:0,y:0,img:void 0,width:0,height:0,sx:null,sy:null,swidth:null,sheight:null},r.extend(o,i),r.augment(o,{type:"image",getDefaultAttrs:function(){return o.ATTRS},__setAttrWidth:function(t,e){return t>=0?t:(s.warn("width \u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e0"),e)},__setAttrHeight:function(t,e){return t>=0?t:(s.warn("height \u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e0"),e)},__afterSetAttrX:function(){this.__calculateBox()},__afterSetAttrY:function(){this.__calculateBox()},__afterSetAttrWidth:function(){this.__calculateBox()},__afterSetAttrHeight:function(){this.__calculateBox()},__afterSetAttrAll:function(){this.__calculateBox()},__calculateBox:function(){var t=this,e=t.__attrs,n=e.x,r=e.y,i=e.width,a=e.height;this.set("box",{minX:n,minY:r,maxX:n+i,maxY:r+a})},isPointInPath:function(t,e){var n=this,r=n.__attrs;if(n.get("toDraw")||!r.img)return!1;var i=r.x,s=r.y,o=r.width,u=r.height;return a.rect(i,s,o,u,t,e)},__setLoading:function(t){var e=this,n=e.get("canvas");return t===!1&&e.get("toDraw")===!0&&(e.__cfg.loading=!1,n.draw()),t},__setAttrImg:function(t){var e=this,n=e.__attrs;e.get("context");if(!r.isString(t))return t instanceof Image?(n.width||e.attr("width",t.width),n.height||e.attr("height",t.height),t):t instanceof HTMLElement&&r.isString(t.nodeName)&&"CANVAS"===t.nodeName.toUpperCase()?(n.width||e.attr("width",Number(t.getAttribute("width"))),n.height||e.attr("height",Number(t.getAttribute("height"))),t):t instanceof ImageData?(n.width||e.attr("width",t.width),n.height||e.attr("height",t.height),t):void 0;var i=new Image;i.onload=function(){return!e.get("destroyed")&&(e.attr("imgSrc",t),e.attr("img",i),void e.set("loading",!1))},i.src=t,e.set("loading",!0)},drawInner:function(){var t=this;return t.get("loading")?void t.set("toDraw",!0):void t.__drawImage()},__drawImage:function(){var t=this,e=t.get("context"),n=t.__attrs,i=n.x,a=n.y,s=n.img,o=n.width,u=n.height,c=n.sx,l=n.sy,h=n.swidth,f=n.sheight;return t.set("toDraw",!1),s instanceof Image||s instanceof HTMLElement&&r.isString(s.nodeName)&&"CANVAS"===s.nodeName.toUpperCase()?r.isNull(c)||r.isNull(l)||r.isNull(h)||r.isNull(f)?void e.drawImage(s,i,a,o,u):r.notNull(c)&&r.notNull(l)&&r.notNull(h)&&r.notNull(f)?void e.drawImage(s,c,l,h,f,i,a,o,u):void 0:s instanceof ImageData?void e.putImageData(s,i,a,c||0,l||0,h||o,f||u):void 0}}),t.exports=o},function(t,e,n){"use strict";var r=n(6),i=n(8),a=n(7),s=n(3),o=s.Vector2,u=n(35),c=n(89),l=function(t){l.superclass.constructor.call(this,t)};l.ATTRS={x1:0,y1:0,x2:0,y2:0,lineWidth:1,arrow:!1},r.extend(l,i),r.augment(l,{canStroke:!0,type:"line",__afterSetAttrX1:function(){this.__calculateBox()},__afterSetAttrY1:function(){this.__calculateBox()},__afterSetAttrX2:function(){this.__calculateBox()},__afterSetAttrY2:function(){this.__calculateBox()},__afterSetAttrLineWidth:function(){this.__calculateBox()},__afterSetAttrAll:function(){this.__calculateBox()},__calculateBox:function(){var t=this,e=t.__attrs,n=e.x1,r=e.y1,i=e.x2,a=e.y2,s=e.lineWidth;this.set("box",c.box(n,r,i,a,s))},isPointInPath:function(t,e){var n=this,r=n.__attrs,i=r.x1,s=r.y1,o=r.x2,u=r.y2,c=r.lineWidth;return!!n.hasStroke()&&a.line(i,s,o,u,c,t,e)},createPath:function(){var t=this,e=t.get("context"),n=t.__attrs,r=n.x1,i=n.y1,a=n.x2,s=n.y2,c=n.arrow,l=n.lineWidth;if(e.beginPath(),e.moveTo(r,i),c){var h=new o(a-r,s-i),f=u.getEndPoint(h,new o(a,s),l);e.lineTo(f.x,f.y),u.makeArrow(e,h,f,l)}else e.lineTo(a,s)},getPoint:function(t){var e=this.__attrs;return{x:c.at(e.x1,e.x2,t),y:c.at(e.y1,e.y2,t)}}}),t.exports=l},function(t,e,n){"use strict";function r(t,e,n,r,i){return e*Math.cos(t)*Math.cos(i)-n*Math.sin(t)*Math.sin(i)+r}function i(t,e,n,r,i){return e*Math.sin(t)*Math.cos(i)+n*Math.cos(t)*Math.sin(i)+r}function a(t,e,n){return Math.atan(-n/e*Math.tan(t))}function s(t,e,n){return Math.atan(n/(e*Math.tan(t)))}var o=n(3);o.Vector2,n(4);t.exports={xAt:r,yAt:i,xExtrema:a,yExtrema:s}},function(t,e,n){"use strict";var r=n(6),i=n(8),a=n(285),s=n(88),o=function(t){o.superclass.constructor.call(this,t)};o.ATTRS={path:null,lineWidth:1},r.extend(o,i),r.augment(o,{canFill:!0,canStroke:!0,type:"path",__afterSetAttrPath:function(t){var e=this;if(r.isNull(t))return e.set("segments",null),void e.set("box",void 0);var n,i=s.parsePath(t),o=[];!r.isArray(i)||0===i.length||"M"!==i[0][0]&&"m"!==i[0][0]||(r.each(i,function(t){n=new a(t,n),o.push(n)}),e.set("segments",o),e.__calculateBox())},__afterSetAttrLineWidth:function(t){var e=this;e.get("segments");e.__calculateBox()},__afterSetAttrAll:function(t){var e=this;t.path?e.__afterSetAttrPath(t.path):e.__calculateBox()},__calculateBox:function(){var t=this,e=t.__attrs,n=e.lineWidth,i=t.get("segments");if(i){var a=1/0,s=-(1/0),o=1/0,u=-(1/0);r.each(i,function(t,e){t.getBBox(n);var r=t.box;r&&(r.minX<a&&(a=r.minX),r.maxX>s&&(s=r.maxX),r.minY<o&&(o=r.minY),r.maxY>u&&(u=r.maxY))}),this.set("box",{minX:a,minY:o,maxX:s,maxY:u})}},isPointInPath:function(t,e){var n=this,r=n.hasFill(),i=n.hasStroke();return r&&i?n.__isPointInFill(t,e)||n.__isPointInStroke(t,e):r?n.__isPointInFill(t,e):!!i&&n.__isPointInStroke(t,e)},__isPointInFill:function(t,e){var n=this,r=n.get("context");if(r)return n.createPath(),r.isPointInPath(t,e)},__isPointInStroke:function(t,e){for(var n=this,r=n.get("segments"),i=n.__attrs,a=i.lineWidth,s=0,o=r.length;s<o;s++)if(r[s].isInside(t,e,a))return!0;return!1},createPath:function(){var t=this,e=t.get("context"),n=t.get("segments");e.beginPath();for(var r=0,i=n.length;r<i;r++)n[r].draw(e)}}),t.exports=o},function(t,e,n){"use strict";var r=n(6),i=n(8),a=n(7),s=function(t){s.superclass.constructor.call(this,t)};s.ATTRS={points:null,lineWidth:1},r.extend(s,i),r.augment(s,{canFill:!0,canStroke:!0,type:"polygon",__afterSetAttrPoints:function(){this.__calculateBox()},__afterSetAttrLineWidth:function(){this.__calculateBox()},__afterSetAttrAll:function(){this.__calculateBox()},__calculateBox:function(){var t=this,e=t.__attrs,n=e.points,i=e.lineWidth;if(n&&0!==n.length){var a=1/0,s=1/0,o=-(1/0),u=-(1/0);r.each(n,function(t){var e=t[0],n=t[1];e<a&&(a=e),e>o&&(o=e),n<s&&(s=n),n>u&&(u=n)});var c=i/2;t.set("box",{minX:a-c,minY:s-c,maxX:o+c,maxY:u+c})}},isPointInPath:function(t,e){var n=this,r=n.hasFill(),i=n.hasStroke();return r&&i?n.__isPointInFill(t,e)||n.__isPointInStroke(t,e):r?n.__isPointInFill(t,e):!!i&&n.__isPointInStroke(t,e)},__isPointInFill:function(t,e){var n=this,r=n.get("context");return n.createPath(),r.isPointInPath(t,e)},__isPointInStroke:function(t,e){var n=this,r=n.__attrs,i=r.points;if(i.length<2)return!1;var s=r.lineWidth,o=i.slice(0);return i.length>=3&&o.push(i[0]),a.polyline(o,s,t,e)},createPath:function(){var t=this,e=t.get("context"),n=t.__attrs,i=n.points;i.length<2||(e.beginPath(),r.each(i,function(t,n){0===n?e.moveTo(t[0],t[1]):e.lineTo(t[0],t[1])}),e.closePath())}}),t.exports=s},function(t,e,n){"use strict";var r=n(6),i=n(8),a=n(7),s=n(3),o=s.Vector2,u=n(35),c=function(t){c.superclass.constructor.call(this,t)};c.ATTRS={points:null,lineWidth:1,arrow:!1},r.extend(c,i),r.augment(c,{canStroke:!0,type:"polyline",__afterSetAttrPoints:function(){this.__calculateBox()},__afterSetAttrLineWidth:function(){this.__calculateBox()},__afterSetAttrAll:function(){this.__calculateBox()},__calculateBox:function(){var t=this,e=t.__attrs,n=e.lineWidth,i=e.points;if(i&&0!==i.length){var a=1/0,s=1/0,o=-(1/0),u=-(1/0);r.each(i,function(t){var e=t[0],n=t[1];e<a&&(a=e),e>o&&(o=e),n<s&&(s=n),n>u&&(u=n)});var c=n/2;this.set("box",{minX:a-c,minY:s-c,maxX:o+c,maxY:u+c})}},isPointInPath:function(t,e){var n=this,r=n.__attrs;if(n.hasStroke()){var i=r.points;if(i.length<2)return!1;var s=r.lineWidth;return a.polyline(i,s,t,e)}return!1},createPath:function(){var t=this,e=t.get("context"),n=t.__attrs,r=n.points,i=n.arrow,a=n.lineWidth;if(!(r.length<2)){e.beginPath(),e.moveTo(r[0][0],r[0][1]);for(var s=1,c=r.length-1;s<c;s++)e.lineTo(r[s][0],r[s][1]);if(i){var l=new o(r[c][0]-r[c-1][0],r[c][1]-r[c-1][1]),h=u.getEndPoint(l,new o(r[c][0],r[c][1]),a);e.lineTo(h.x,h.y),u.makeArrow(e,l,h,a)}else e.lineTo(r[c][0],r[c][1])}}}),t.exports=c},function(t,e,n){"use strict";var r=n(6),i=n(8),a=n(7),s=(n(4),n(35)),o=n(58),u=n(3),c=u.Vector2,l=function(t){l.superclass.constructor.call(this,t)};l.ATTRS={p1:null,p2:null,p3:null,lineWidth:1,arrow:!1},r.extend(l,i),r.augment(l,{canStroke:!0,type:"quadratic",__afterSetAttrP1:function(){this.__calculateBox()},__afterSetAttrP2:function(){this.__calculateBox()},__afterSetAttrP3:function(){this.__calculateBox()},__afterSetAttrLineWidth:function(){this.__calculateBox()},__afterSetAttrAll:function(){this.__calculateBox()},__calculateBox:function(){var t=this,e=t.__attrs,n=e.p1,i=e.p2,a=e.p3;if(!(r.isNull(n)||r.isNull(i)||r.isNull(a))){for(var s=e.lineWidth/2,u=o.extrema(n[0],i[0],a[0]),c=0,l=u.length;c<l;c++)u[c]=o.at(n[0],i[0],a[0],u[c]);u.push(n[0],a[0]);for(var h=o.extrema(n[1],i[1],a[1]),c=0,l=h.length;c<l;c++)h[c]=o.at(n[1],i[1],a[1],h[c]);h.push(n[1],a[1]),t.set("box",{minX:Math.min.apply(Math,u)-s,maxX:Math.max.apply(Math,u)+s,minY:Math.min.apply(Math,h)-s,maxY:Math.max.apply(Math,h)+s})}},isPointInPath:function(t,e){var n=this,r=n.__attrs,i=r.p1,s=r.p2,o=r.p3,u=r.lineWidth;return a.quadraticline(i[0],i[1],s[0],s[1],o[0],o[1],u,t,e)},createPath:function(){var t=this,e=t.get("context"),n=t.__attrs,i=n.p1,a=n.p2,o=n.p3,u=n.lineWidth,l=n.arrow;if(!(r.isNull(i)||r.isNull(a)||r.isNull(o))&&(e.beginPath(),e.moveTo(i[0],i[1]),e.quadraticCurveTo(a[0],a[1],o[0],o[1]),l)){var h=new c(o[0]-a[0],o[1]-a[1]);s.makeArrow(e,h,{x:o[0],y:o[1]},u)}},getPoint:function(t){var e=this.__attrs;return{x:o.at(e.p1[0],e.p2[0],e.p3[0],t),y:o.at(e.p1[1],e.p2[1],e.p3[1],t)}}}),t.exports=l},function(t,e,n){"use strict";var r=n(6),i=n(8),a=n(7),s=n(13),o=function(t){o.superclass.constructor.call(this,t)};o.ATTRS={x:0,y:0,width:0,height:0,radius:0,lineWidth:1},r.extend(o,i),r.augment(o,{canFill:!0,canStroke:!0,type:"rect",__setAttrWidth:function(t,e){return t>=0?t:(s.warn("width \u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e0"),e)},__setAttrHeight:function(t,e){return t>=0?t:(s.warn("height \u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e0"),e)},__setAttrRadius:function(t,e){return t>=0?t:(s.warn("radius \u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e0"),e)},__afterSetAttrX:function(){this.__calculateBox()},__afterSetAttrY:function(){this.__calculateBox()},__afterSetAttrWidth:function(){this.__calculateBox()},__afterSetAttrHeight:function(){this.__calculateBox()},__afterSetAttrLineWidth:function(){this.__calculateBox()},__afterSetAttrAll:function(){this.__calculateBox()},__calculateBox:function(){var t=this,e=t.__attrs,n=e.x,r=e.y,i=e.width,a=e.height,s=e.lineWidth,o=s/2;this.set("box",{minX:n-o,minY:r-o,maxX:n+i+o,maxY:r+a+o})},isPointInPath:function(t,e){var n=this,r=n.hasFill(),i=n.hasStroke();return r&&i?n.__isPointInFill(t,e)||n.__isPointInStroke(t,e):r?n.__isPointInFill(t,e):!!i&&n.__isPointInStroke(t,e)},__isPointInFill:function(t,e){var n=this,r=n.__attrs,i=(r.x,r.y,r.width,r.height,r.radius,n.get("context"));return!!i&&(n.createPath(),i.isPointInPath(t,e))},__isPointInStroke:function(t,e){var n=this,r=n.__attrs,i=r.x,s=r.y,o=r.width,u=r.height,c=r.radius,l=r.lineWidth;if(0===c){var h=l/2;return a.line(i-h,s,i+o+h,s,l,t,e)||a.line(i+o,s-h,i+o,s+u+h,l,t,e)||a.line(i+o+h,s+u,i-h,s+u,l,t,e)||a.line(i,s+u+h,i,s-h,l,t,e)}return a.line(i+c,s,i+o-c,s,l,t,e)||a.line(i+o,s+c,i+o,s+u-c,l,t,e)||a.line(i+o-c,s+u,i+c,s+u,l,t,e)||a.line(i,s+u-c,i,s+c,l,t,e)||a.arcline(i+o-c,s+c,c,1.5*Math.PI,2*Math.PI,!1,l,t,e)||a.arcline(i+o-c,s+u-c,c,0,.5*Math.PI,!1,l,t,e)||a.arcline(i+c,s+u-c,c,.5*Math.PI,Math.PI,!1,l,t,e)||a.arcline(i+c,s+c,c,Math.PI,1.5*Math.PI,!1,l,t,e)},createPath:function(){var t=this,e=t.get("context"),n=t.__attrs,r=n.x,i=n.y,a=n.width,s=n.height,o=n.radius;e.beginPath(),0===o?(e.moveTo(r,i),e.lineTo(r+a,i),e.lineTo(r+a,i+s),e.lineTo(r,i+s),e.lineTo(r,i)):(e.moveTo(r+o,i),e.lineTo(r+a-o,i),e.arc(r+a-o,i+o,o,-Math.PI/2,0,!1),e.lineTo(r+a,i+s-o),e.arc(r+a-o,i+s-o,o,0,Math.PI/2,!1),e.lineTo(r+o,i+s),e.arc(r+o,i+s-o,o,Math.PI/2,Math.PI,!1),e.lineTo(r,i+o),e.arc(r+o,i+o,o,Math.PI,3*Math.PI/2,!1)),e.closePath()}}),t.exports=o},function(t,e,n){"use strict";var r=n(6),i=n(8),a=n(7),s=n(13),o=function(t){o.superclass.constructor.call(this,t)};o.ATTRS={x:0,y:0,text:null,fontSize:12,fontFamily:"sans-serif",fontStyle:"normal",fontWeight:"normal",fontVariant:"normal",textAlign:"start",textBaseline:"bottom",
	lineWidth:1};var u={start:1,right:1,left:1,end:1,center:1},c={top:1,middle:1,bottom:1},l={normal:1,italic:1,oblique:1},h={normal:1,"small-caps":1},f={normal:1,bold:1,bolder:1,lighter:1,100:1,200:1,300:1,400:1,500:1,600:1,700:1,800:1,900:1};r.extend(o,i),r.augment(o,{canFill:!0,canStroke:!0,type:"text",__setAttrTextAlign:function(t,e){return t in u?t:e},__setAttrTextBaseline:function(t,e){return t in c?t:e},__setAttrFontSize:function(t,e){return t>=12?t:e},__setAttrFontStyle:function(t,e){return t in l?t:e},__setAttrFontVariant:function(t,e){return t in h?t:e},__setAttrFontWeight:function(t,e){return t in f?t:e},__assembleFont:function(){var t=this,e=t.attr("fontSize"),n=t.attr("fontFamily"),r=t.attr("fontWeight"),i=t.attr("fontStyle"),a=t.attr("fontVariant");t.attr("font",[i,a,r,e+"px",n].join(" "))},__afterSetAttrFontSize:function(t){var e=this;e.attr({height:t}),e.__assembleFont()},__afterSetAttrFontFamily:function(){this.__assembleFont()},__afterSetAttrFontWeight:function(){this.__assembleFont()},__afterSetAttrFontStyle:function(){this.__assembleFont()},__afterSetAttrFontVariant:function(){this.__assembleFont()},__afterSetAttrFont:function(){this.attr("width",this.measureText())},__afterSetAttrText:function(){this.attr("width",this.measureText())},__afterSetAttrTextAlign:function(){this.__calculateBox()},__afterSetAttrTextBaseline:function(){this.__calculateBox()},__afterSetAttrX:function(){this.__calculateBox()},__afterSetAttrY:function(){this.__calculateBox()},__afterSetAttrWidth:function(){this.__calculateBox()},__afterSetAttrLineWidth:function(){this.__calculateBox()},__afterSetAttrAll:function(t){var e=this;"fontSize"in t&&e.attr("height",t.fontSize),("fontSize"in t||"fontWeight"in t||"fontStyle"in t||"fontVariant"in t||"fontFamily"in t)&&e.__assembleFont(),"text"in t&&e.__afterSetAttrText(t.text),e.__calculateBox()},__calculateBox:function(){var t=this,e=t.__attrs,n=e.x,r=e.y,i=e.width;if(i){var a=e.height,s=e.textAlign,o=e.textBaseline,u=e.lineWidth,c={x:n,y:r-a};s&&("end"===s||"right"===s?c.x-=i:"center"===s&&(c.x-=i/2)),o&&("top"===o?c.y+=a:"middle"===o&&(c.y+=a/2)),this.set("startPoint",c);var l=u/2;this.set("box",{minX:c.x-l,minY:c.y-l,maxX:c.x+i+l,maxY:c.y+a+l})}},isPointInPath:function(t,e){var n=this,r=n.getBBox();if(n.hasFill()||n.hasStroke())return a.box(r.minX,r.maxX,r.minY,r.maxY,t,e)},drawInner:function(){var t=this,e=t.get("context"),n=t.__attrs,i=n.text,a=n.x,s=n.y;r.isNull(i)||(e.beginPath(),t.hasFill()&&e.fillText(i,a,s),t.hasStroke()&&e.strokeText(i,a,s))},measureText:function(){var t=this,e=t.__attrs,n=e.text,i=e.font;if(!r.isNull(n)){var a=s.backupContext;a.save(),a.font=i;var o=a.measureText(n).width;return a.restore(),o}}}),t.exports=o},function(t,e,n){"use strict";function r(t,e){this.preSegment=e,this.init(t,e)}function i(t,e,n){return{x:n.x+t,y:n.y+e}}function a(t,e){return{x:e.x+(e.x-t.x),y:e.y+(e.y-t.y)}}function s(t){return Math.sqrt(t[0]*t[0]+t[1]*t[1])}function o(t,e){return(t[0]*e[0]+t[1]*e[1])/(s(t)*s(e))}function u(t,e){return(t[0]*e[1]<t[1]*e[0]?-1:1)*Math.acos(o(t,e))}function c(t,e,n,r,i,a,s){var c=h.mod(h.degreeToRad(s),2*Math.PI),l=t.x,f=t.y,g=e.x,p=e.y,v=Math.cos(c)*(l-g)/2+Math.sin(c)*(f-p)/2,d=-1*Math.sin(c)*(l-g)/2+Math.cos(c)*(f-p)/2,x=v*v/(i*i)+d*d/(a*a);x>1&&(i*=Math.sqrt(x),a*=Math.sqrt(x));var m=Math.sqrt((i*i*(a*a)-i*i*(d*d)-a*a*(v*v))/(i*i*(d*d)+a*a*(v*v)));n===r&&(m*=-1),isNaN(m)&&(m=0);var y=m*i*d/a,_=m*-a*v/i,S=(l+g)/2+Math.cos(c)*y-Math.sin(c)*_,w=(f+p)/2+Math.sin(c)*y+Math.cos(c)*_,b=u([1,0],[(v-y)/i,(d-_)/a]),M=[(v-y)/i,(d-_)/a],A=[(-1*v-y)/i,(-1*d-_)/a],C=u(M,A);return o(M,A)<=-1&&(C=Math.PI),o(M,A)>=1&&(C=0),0===r&&C>0&&(C-=2*Math.PI),1===r&&C<0&&(C+=2*Math.PI),[t,S,w,i,a,b,C,c,r]}var l=n(6),h=n(4),f=n(3),g=n(7),p=n(57),v=n(58),d=n(278),x=f.Vector3,m=f.Matrix3;l.augment(r,{init:function(t,e){var n=t[0];e=e||{endPoint:{x:0,y:0}};var r=/[a-z]/.test(n),s=n.toUpperCase(),o=t;switch(s){case"M":if(r)var u=i(o[1],o[2],e.endPoint);else var u={x:o[1],y:o[2]};this.command="M",this.params=[e.endPoint,u],this.subStart=u,this.endPoint=u;break;case"L":if(r)var u=i(o[1],o[2],e.endPoint);else var u={x:o[1],y:o[2]};this.command="L",this.params=[e.endPoint,u],this.subStart=e.subStart,this.endPoint=u;break;case"H":if(r)var u=i(o[1],0,e.endPoint);else var u={x:o[1],y:e.endPoint.y};this.command="L",this.params=[e.endPoint,u],this.subStart=e.subStart,this.endPoint=u;break;case"V":if(r)var u=i(0,o[1],e.endPoint);else var u={x:e.endPoint.x,y:o[1]};this.command="L",this.params=[e.endPoint,u],this.subStart=e.subStart,this.endPoint=u;break;case"Q":if(r)var l=i(o[1],o[2],e.endPoint),h=i(o[3],o[4],e.endPoint);else var l={x:o[1],y:o[2]},h={x:o[3],y:o[4]};this.command="Q",this.params=[e.endPoint,l,h],this.subStart=e.subStart,this.endPoint=h;break;case"T":if(r)var h=i(o[1],o[2],e.endPoint);else var h={x:o[1],y:o[2]};if("Q"===e.command){var l=a(e.params[1],e.endPoint);this.command="Q",this.params=[e.endPoint,l,h],this.subStart=e.subStart,this.endPoint=h}else this.command="TL",this.params=[e.endPoint,h],this.subStart=e.subStart,this.endPoint=h;break;case"C":if(r)var l=i(o[1],o[2],e.endPoint),h=i(o[3],o[4],e.endPoint),f=i(o[5],o[6],e.endPoint);else var l={x:o[1],y:o[2]},h={x:o[3],y:o[4]},f={x:o[5],y:o[6]};this.command="C",this.params=[e.endPoint,l,h,f],this.subStart=e.subStart,this.endPoint=f;break;case"S":if(r)var h=i(o[1],o[2],e.endPoint),f=i(o[3],o[4],e.endPoint);else var h={x:o[1],y:o[2]},f={x:o[3],y:o[4]};if("C"===e.command){var l=a(e.params[2],e.endPoint);this.command="C",this.params=[e.endPoint,l,h,f],this.subStart=e.subStart,this.endPoint=f}else this.command="SQ",this.params=[e.endPoint,h,f],this.subStart=e.subStart,this.endPoint=f;break;case"A":var g=o[1],p=o[2],v=o[3],d=o[4],x=o[5];if(r)var u=i(o[6],o[7],e.endPoint);else var u={x:o[6],y:o[7]};this.command="A",this.params=c(e.endPoint,u,d,x,g,p,v),this.subStart=e.subStart,this.endPoint=u;break;case"Z":this.command="Z",this.params=[e.endPoint,e.subStart],this.subStart=e.subStart,this.endPoint=e.subStart}},isInside:function(t,e,n){var r=this,i=r.command,a=r.params,s=r.box;if(s&&!g.box(s.minX,s.maxX,s.minY,s.maxY,t,e))return!1;switch(i){case"M":return!1;case"TL":case"L":case"Z":return g.line(a[0].x,a[0].y,a[1].x,a[1].y,n,t,e);case"SQ":case"Q":return g.quadraticline(a[0].x,a[0].y,a[1].x,a[1].y,a[2].x,a[2].y,n,t,e);case"C":return g.cubicline(a[0].x,a[0].y,a[1].x,a[1].y,a[2].x,a[2].y,a[3].x,a[3].y,n,t,e);case"A":var o=a,u=o[1],c=o[2],l=o[3],h=o[4],f=o[5],p=o[6],v=o[7],d=o[8],y=l>h?l:h,_=l>h?1:l/h,S=l>h?h/l:1,o=new x(t,e,1),w=new m;return w.translate(-u,-c),w.rotate(-v),w.scale(1/_,1/S),o.applyMatrix(w),g.arcline(0,0,y,f,f+p,1-d,n,o.x,o.y)}return!1},draw:function(t){var e=this.command,n=this.params;switch(e){case"M":t.moveTo(n[1].x,n[1].y);break;case"TL":case"L":t.lineTo(n[1].x,n[1].y);break;case"SQ":case"Q":var r=n[1],i=n[2];t.quadraticCurveTo(r.x,r.y,i.x,i.y);break;case"C":var r=n[1],i=n[2],a=n[3];t.bezierCurveTo(r.x,r.y,i.x,i.y,a.x,a.y);break;case"A":var s=n,o=s[1],u=s[2],c=s[3],l=s[4],h=s[5],f=s[6],g=s[7],p=s[8],v=c>l?c:l,d=c>l?1:c/l,x=c>l?l/c:1;t.translate(o,u),t.rotate(g),t.scale(d,x),t.arc(0,0,v,h,h+f,1-p),t.scale(1/d,1/x),t.rotate(-g),t.translate(-o,-u);break;case"Z":t.closePath()}},getBBox:function(t){var e=t/2,n=this.params;switch(this.command){case"M":case"Z":break;case"TL":case"L":this.box={minX:Math.min(n[0].x,n[1].x)-e,maxX:Math.max(n[0].x,n[1].x)+e,minY:Math.min(n[0].y,n[1].y)-e,maxY:Math.max(n[0].y,n[1].y)+e};break;case"SQ":case"Q":for(var r=v.extrema(n[0].x,n[1].x,n[2].x),i=0,a=r.length;i<a;i++)r[i]=v.at(n[0].x,n[1].x,n[2].x,r[i]);r.push(n[0].x,n[2].x);for(var s=v.extrema(n[0].y,n[1].y,n[2].y),i=0,a=s.length;i<a;i++)s[i]=v.at(n[0].y,n[1].y,n[2].y,s);s.push(n[0].y,n[2].y),this.box={minX:Math.min.apply(Math,r)-e,maxX:Math.max.apply(Math,r)+e,minY:Math.min.apply(Math,s)-e,maxY:Math.max.apply(Math,s)+e};break;case"C":for(var r=p.extrema(n[0].x,n[1].x,n[2].x,n[3].x),i=0,a=r.length;i<a;i++)r[i]=p.at(n[0].x,n[1].x,n[2].x,n[3].x,r[i]);for(var s=p.extrema(n[0].y,n[1].y,n[2].y,n[3].y),i=0,a=s.length;i<a;i++)s[i]=p.at(n[0].y,n[1].y,n[2].y,n[3].y,s[i]);r.push(n[0].x,n[3].x),s.push(n[0].y,n[3].y),this.box={minX:Math.min.apply(Math,r)-e,maxX:Math.max.apply(Math,r)+e,minY:Math.min.apply(Math,s)-e,maxY:Math.max.apply(Math,s)+e};break;case"A":for(var o=n,u=o[1],c=o[2],l=o[3],h=o[4],f=o[5],g=o[6],x=o[7],m=o[8],y=f,_=f+g,S=d.xExtrema(x,l,h),w=1/0,b=-(1/0),M=[y,_],i=2*-Math.PI;i<=2*Math.PI;i+=Math.PI){var A=S+i;1===m?y<A&&A<_&&M.push(A):_<A&&A<y&&M.push(A)}for(var i=0,a=M.length;i<a;i++){var C=d.xAt(x,l,h,u,M[i]);C<w&&(w=C),C>b&&(b=C)}for(var k=d.yExtrema(x,l,h),T=1/0,P=-(1/0),I=[y,_],i=2*-Math.PI;i<=2*Math.PI;i+=Math.PI){var D=k+i;1===m?y<D&&D<_&&I.push(D):_<D&&D<y&&I.push(D)}for(var i=0,a=I.length;i<a;i++){var L=d.yAt(x,l,h,c,I[i]);L<T&&(T=L),L>P&&(P=L)}this.box={minX:w-e,maxX:b+e,minY:T-e,maxY:P+e}}}}),t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(19),s=n(90),o=n(91);i.extend(r,a),i.mixin(r,[o,s]),r.ATTRS={type:"area"},i.augment(r,{drawFrame:function(t){var e,n,r,a=this,s=t.toJSON(),o=this.splitData(s),u=this.get("container"),c=this.get("shapeObj"),l=s[0],h=this.getDrawCfg(l);i.each(o,function(t){n=[];for(var i=0;i<t.length;i++)r=t[i],n.push(r.points);0!==n.length&&(h.points=n,e=a.getDrawShape(h.shape),c.drawShape(e,h,u))})}}),t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(19);r.ATTRS={type:"interval"},i.extend(r,a),i.mixin(r),i.augment(r,{getDrawCfg:function(t){var e=this,n=r.superclass.getDrawCfg.call(e,t),i=e.getCoord();if(i.isPolar){if(i.isTransposed){var a=n.points;n.points=[a[0],a[3],a[2],a[1]]}n.z=!0,n.center=i.get("center")}return n}}),t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(92),s=n(90);i.extend(r,a),i.mixin(r,[s]),r.ATTRS={type:"line"},t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(19);i.extend(r,a),r.ATTRS={type:"point"},t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(19);i.extend(r,a),r.ATTRS={type:"polygon"},i.augment(r,{getShapePointInfo:function(t){var e,n=a.prototype.getShapePointInfo.call(this,t),r=this,s=n.x,o=n.y;if(!i.isArray(s)||!i.isArray(o)){var u=r.getXScale(),c=r.getYScale(),l=.5/u.ticks.length,h=.5/c.ticks.length;u.isCategory&&c.isCategory?(s=[s-l,s-l,s+l,s+l],o=[o-h,o+h,o+h,o-h]):i.isArray(s)?(e=s,s=[e[0],e[0],e[1],e[1]],o=[o-h/2,o+h/2,o+h/2,o-h/2]):i.isArray(o)&&(e=o,o=[e[0],e[1],e[1],e[0]],s=[s-l/2,s-l/2,s+l/2,s+l/2])}var n=i.mix({},t,{x:s,y:o});return n}}),t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(19);i.extend(r,a),r.ATTRS={type:"schema"},t.exports=r},function(t,e,n){"use strict";function r(t){var e=t.slice(0),n=e[0],r=e[e.length-1];return 0!==n.value&&e.unshift({value:0}),1!==r.value&&e.push({value:1}),e}var i=n(1),a=n(11),s=a.Components.Axis,o=n(3),u=o.Vector2,c=n(5),l=["..x","..y","..long","..lant","..pieX"],h=function(t){this.axisCfg={},i.mix(this,t)};i.augment(h,{axisCfg:null,enable:!0,container:null,chart:null,_isHide:function(t){var e=this.axisCfg;return!(!i.inArray(l,t)||!i.isNull(e[t]))||e&&e[t]===!1},_getMiddleValue:function(t,e,n){var r=e.length;if(n===r-1)return null;var i=e[n+1].value;return(t+i)/2},_getLineRange:function(t,e,n,r){var i,a,s,o=e.dim,u=this.axisCfg,c="";return u[o]&&u[o].position&&(c=u[o].position),"x"===n?(i={x:0,y:"top"===c?1:0},a={x:1,y:"top"===c?1:0},s=!1):(r?(i={x:"right"===c?0:1,y:0},a={x:"right"===c?0:1,y:1}):(i={x:"right"===c?1:0,y:0},a={x:"right"===c?1:0,y:1}),s=!0),i=t.convert(i),a=t.convert(a),{start:i,end:a,isVertical:s}},_getLineCfg:function(t,e,n,r){var i,a=this._getLineRange(t,e,n,r),s=a.isVertical,o=a.start,u=a.end,c=t.get("center");return t.isTransposed&&(s=!s),i=s&&o.x>c.x||!s&&o.y>c.y?1:-1,{isVertical:s,factor:i,start:o,end:u}},_getCircleCfg:function(t){var e,n={},r=t.get("x"),i=t.get("y"),a=i.start>i.end;e=t.isTransposed?{x:a?0:1,y:0}:{x:0,y:a?0:1},e=t.convert(e);var s,o=t.get("circleCentre"),c=new u(e.x-o.x,e.y-o.y),l=new u(1,0);s=e.y>o.y?u.angle(c,l):u.angle(c,l)*-1;var h=s+(r.end-r.start);return n.startAngle=s,n.endAngle=h,n.center=o,n.radius=Math.sqrt(Math.pow(e.x-o.x,2)+Math.pow(e.y-o.y,2)),n.inner=t.get("inner")||0,n},_getRadiusCfg:function(t){var e,n,r=t.get("x").start,i=r<0?-1:1;return t.isTransposed?(e={x:0,y:0},n={x:1,y:0}):(e={x:0,y:0},n={x:0,y:1}),{factor:i,start:t.convert(e),end:t.convert(n)}},_getMultiLineCfg:function(t,e,n){var r=e.getTicks(),a=[],s=this._getLineRange(t,e,n),o=s.isVertical;return i.each(r,function(e){var n=t.convert({x:o?0:e.value,y:o?e.value:0});a.push(n)}),{start:s.start,end:s.end,tickPoints:a}},_getAxisPosition:function(t,e,n){var r=t.type,i="";return t.isRect?(this.facet&&"mirror"===this.facet.type?"x"===e&&(i="bottom"):"x"===e&&(i="bottom"),"y"===e&&(i=n?"right":"left")):i="clock"===r?"clock":"gauge"===r?"gauge":"x"===e?t.isTransposed?"radius":"circle":t.isTransposed?"circle":"radius",i},_getAxisDefaultCfg:function(t,e,n,r){var a={},s=this,o=s.facet,u=s.axisCfg,l=t.getHeight(),h=t.type;if("cartesian"!==h||i.isNull(o)||o&&1===o.rows&&1===o.cols)"cartesian"===h&&(a.title={text:e.alias||e.dim});else{var f=o.rows,g=o.cols,p=o.rowIndex,v=o.colIndex,d=o.type;a.title={text:e.alias||e.dim},"tree"===d?("y"===n&&0!==o.originColIndex&&0!==v||"x"===n&&o.children)&&(a.labels=null,a.title=null):"circle"===d?(a.labels=null,a.title=null):("mirror"!==d&&"y"===n&&(0!==v&&"left"===r||v!==g-1&&"right"===r)&&(a.labels=null,a.title=null),"rect"===d?"x"===n&&0!==p&&(a.labels=null,a.title=null):"list"===d?"x"===n&&p!==f-1&&g*p+v+1+g<=o.count&&(a.labels=null,a.title=null):"mirror"===d&&"x"===n&&(1===f&&1===v||2===f&&0===p)&&(a.labels=null,a.title=null)),"y"===n&&a.title&&p!==Math.floor(f/2)&&(a.title=null),"x"===n&&a.title&&v!==Math.floor(g/2)&&(a.title=null)}if(a=i.mix(!0,{},c.axis[r],a,u[e.dim]),a.ticks=e.getTicks(),t.isPolar&&!e.isCategory&&"x"===n&&("clock"===t.type?a.ticks[0].text="":"gauge"!==t.type&&a.ticks.pop()),"y"===n){var x=a.ticks,m=x.length,y=16;if(l/m<y){var _=[],S=Math.floor(l/y)+1,w=Math.floor(m/S);w<1&&(w=1),_.push(x[0]);for(var b=w;b<=m-2;b+=w)_.push(x[b]);_.push(x[m-1]),a.ticks=_}}return a.coord=t,a.labels&&i.isNull(a.labels.autoRotate)&&(a.labels.autoRotate=!0),a},_getAxisCfg:function(t,e,n,a,s){var o=this,u={},c=o._getAxisPosition(t,a,s);if(u=o._getAxisDefaultCfg(t,e,a,c),u.grid&&n){var l=[],h=r(n.getTicks()),f=u.ticks;i.each(f,function(e,n){var r=[],s=e.value;if("middle"===u.gridAlign&&(s=o._getMiddleValue(s,f,n)),s){var c=t.get("x"),g=t.get("y");i.each(h,function(e){var n="x"===a?s:e.value,i="x"===a?e.value:s,o=t.convert({x:n,y:i});if(t.isPolar){var u=t.get("circleCentre");g.start>g.end&&(i=1-i),o.flag=c.start>c.end?0:1,o.radius=Math.sqrt(Math.pow(o.x-u.x,2)+Math.pow(o.y-u.y,2))}r.push(o)}),l.push(r)}}),u.grid.items=l}return u},_drawAxis:function(t,e,n,r,a,o){var u,c,l=this.container;t.isRect?"map"===t.type&&"x"===r?(u=s.MultLine,c=this._getMultiLineCfg(t,e,r)):(u=s,c=this._getLineCfg(t,e,r,o)):"x"===r?(u=s.Circle,c=this._getCircleCfg(t)):(u=s,c=this._getRadiusCfg(t));var h=this._getAxisCfg(t,e,n,r,o);return h=i.mix(!0,{},h,c),"y"===r&&a&&"circle"===a.get("type")&&(h.circle=a),l.addGroup(u,h)},createAxis:function(t,e,n){var r=this;if(r.enable){var a=t.get("coord"),s=a.type;if(this.facet=t.get("facet"),"theta"!==s&&("polar"!==s||!a.isTransposed)){var o;e&&!r._isHide(e.dim)&&(o=r._drawAxis(a,e,n[0],"x")),n&&n.length&&i.each(n,function(t,n){r._isHide(t.dim)||r._drawAxis(a,t,e,"y",o,n)})}}}}),t.exports=h},function(t,e,n){"use strict";var r=n(1),i=n(71),a=function(t){r.mix(this,t),this.resetActions()};r.augment(a,{type:"rect",coordCfg:{},actions:[],_execActions:function(t){var e=this.actions;r.each(e,function(e){var n=e[0];t[n](e[1],e[2])})},hasAction:function(t){var e=this.actions,n=!1;return r.each(e,function(e){if(t===e[0])return n=!0,!1}),n},createCoord:function(t,e){var n,a,s=this,o=s.type||"rect",u=r.mix({start:t,end:e},s.coordCfg);return"theta"===o?(n=i.Polar,s.hasAction("transpose")||s.transpose(),a=new n(u),a.type=o):(n=i[r.ucfirst(o)]||i.Rect,a=new n(u)),s._execActions(a),a},rotate:function(t){var e=this.actions;return t=t*Math.PI/180,e.push(["rotate",t]),this},reflect:function(t){var e=this.actions;return e.push(["reflect",t]),this},scale:function(t,e){var n=this.actions;return n.push(["scale",t,e]),this},transpose:function(){var t=this.actions;return t.push(["transpose"]),this},resetActions:function(){return this.actions=[],this}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=r.getRatio(),a=function(t){r.mix(this,t)};r.augment(a,{chart:null,_getCanvas:function(){var t=this.chart;return t.get("frontCanvas")},_getPointInfo:function(t){var e=this.chart,n={x:t.x/i,y:t.y/i},r=e.getViewsByPoint(n);return n.views=r,n},_getEventObj:function(t,e,n){return{x:e.x,y:e.y,target:t.target,toElement:t.event.toElement,views:n}},bindEvents:function(){var t=this,e=t._getCanvas();e.on("canvas-mousemove",r.wrapBehavior(t,"onMove")),e.on("canvas-mouseleave",r.wrapBehavior(t,"onOut")),e.on("canvas-click",r.wrapBehavior(t,"onClick"))},onOut:function(t){var e=this,n=e.chart,r=e._getPointInfo(t);n.fire("plotleave",e._getEventObj(t,r,e.curViews))},onMove:function(t){var e=this,n=e.chart,r=e._getPointInfo(t),i=e.curViews||[];0===i.length&&r.views.length&&n.fire("plotenter",e._getEventObj(t,r,r.views)),i.length&&0===r.views.length&&n.fire("plotleave",e._getEventObj(t,r,i)),r.views.length&&n.fire("plotmove",e._getEventObj(t,r,r.views)),e.curViews=r.views},onClick:function(t){var e=this,n=e.chart,r=e._getPointInfo(t),i=r.views;if(i&&i.length){for(var a=e._getEventObj(t,r,i),s=null,o=i.length-1;o>=0;o--){for(var u,c=i[o],l=c.get("geoms"),h=l.length-1;h>=0&&(u=l[h],!(s=u.getSingleShape(r)));h--);if(s){u&&s&&u.allowSelected()&&(s.get("selected")?u.setSelected(null,c):u.setSelected(s.get("origin"),c)),a.geom=u;break}}s&&(a.shape=s,a.data=s.get("origin")),n.fire("plotclick",a)}},clearEvents:function(){var t=this,e=t._getCanvas();e.off("canvas-mousemove",r.getWrapBehavior(t,"onMove")),e.off("canvas-mouseleave",r.getWrapBehavior(t,"onClick"))}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(162),a=n(5),s=function(t){r.mix(this,t)};r.augment(s,{plotContainer:null,facetCfg:{},_getFacetClass:function(t){return t=r.ucfirst(t),i[t]},createFacets:function(t){var e=this.facetCfg;e=r.mix({},a.facetCfg,e),e.facetTitle=r.mix({},a.facetCfg.facetTitle,e.facetTitle);var n=this._getFacetClass(e.type),i=new n(e),s=i.generateFacets(t),o=this.plotContainer,u=o.addGroup();return i.drawTitles(s,u),s}}),t.exports=s},function(t,e,n){"use strict";var r=n(1),i=n(169),a=n(5),s=["text","tag"],o=function(t){r.mix(this,t),this.guides=[]};r.augment(o,{guides:null,xScale:null,yScale:null,backPlot:null,frontPlot:null,_addGuide:function(t){this.guides.push(t)},_getDefault:function(){return{xScale:this.xScale,yScale:this.yScale}},setScale:function(t,e){var n=this.guides;this.xScale=t,this.yScale=e,r.each(n,function(n){n.xScale=t,n.yScale=e})},line:function(t,e,n){var s={type:"line",from:t,to:e,cfg:r.mix({},a.guide.line,n)};r.mix(s,this._getDefault());var o=new i.Line(s);return this._addGuide(o),this},text:function(t,e,n){var s={type:"text",position:t,text:e,cfg:r.mix({},a.guide.text,n)};r.mix(s,this._getDefault());var o=new i.Text(s);return this._addGuide(o),this},image:function(t,e,n){var a={type:"image",start:t};r.isArray(e)&&(a.end=e),r.isObject(e)&&(n=e),n&&(a.cfg=n),r.mix(a,this._getDefault());var s=new i.Image(a);return this._addGuide(s),this},rect:function(t,e,n){var s={type:"rect",start:t,end:e,cfg:r.mix({},a.guide.rect,n)};r.mix(s,this._getDefault());var o=new i.Rect(s);return this._addGuide(o),this},arc:function(t,e,n){var s={type:"arc",start:t,end:e,cfg:r.mix({},a.guide.arc,n)};r.mix(s,this._getDefault());var o=new i.Arc(s);return this._addGuide(o),this},tag:function(t,e,n,s){var o={type:"tag",from:t,to:e,text:n,cfg:r.mix({},a.guide.tag,s)};r.mix(o,this._getDefault());var u=new i.Tag(o);return this._addGuide(u),this},paint:function(t,e,n){var i=this.guides;e=e||this.backPlot,n=n||this.frontPlot,r.each(i,function(i){r.inArray(s,i.type)?i.paint(t,n):i.paint(t,e)})},clear:function(){return this.guides=[],this}}),t.exports=o},function(t,e,n){"use strict";function r(t){for(var e=!0,n=t[0],r=n.attrValue,i=1;i<t.length;i++)if(t[i].attrValue!==r){e=!1;break}return e}function i(t,e){var n=[];return u.each(t,function(t){t[v].endsWith(e)&&n.push(t)}),n}function a(t,e){return t+"\uff08"+e+"\uff09"}function s(t){return t.dim||t.alias}function o(t,e,n){n&&u.each(t,function(t){t.checked=n.indexOf(t.value)!==-1})}var u=n(1),c=n(11),l=c.Components.Legend,h=n(5),f=n(98),g=16,p=16,v="value",d=function(t){u.mix(this,t),this.legendCfg={},this.reset();var e=this.chart;this.container=e.get("frontCanvas"),this.plotRange=e.get("plotRange")};u.augment(d,{plotRange:null,container:null,chart:null,enable:!0,position:"right",legendCfg:{},_isFiltered:function(t,e,n){if(!t.isCategory)return!0;var r=!1;return n=t.invert(n),u.each(e,function(e){if(r=r||t.getText(e)===t.getText(n))return!1}),r},_getFilterVals:function(t){var e=this.chart,n=e.get("filters");return n[t]},_getLayoutType:function(t){return"right"===t||"left"===t?"vertical":"horizontal"},_bindEvent:function(t,e){var n=this,r=n.chart,i=[],a=t.get("items");u.each(a,function(t){i.push(t[v])}),t.on("itemchecked",function(t){var i=t.item.value,a=n._getFilterVals(e);a.push(i),r.repaint()}),t.on("itemunchecked",function(t){var a=t.item.value,s=n._getFilterVals(e);s||(s=i.slice(0)),u.remove(s,a),r.filter(e,s),r.repaint()})},_getRegion:function(t){var e=0,n=0;return u.each(t,function(t){var r=t.getBBBox();e<r.width&&(e=r.width),n+=r.width}),{maxWidth:e,totalWidth:n}},_alignLegend:function(t,e,n,r){var i=this,a=i.container,s=a.get("canvas"),o=s.get("width"),u=s.get("height"),c=i.plotRange,l=0,h=0,f=t.get("dx")||0,v=t.get("dy")||0,d=t.getBBBox();if("left"===r||"right"===r){var x=n.maxWidth;c?(u=c.br.y,l="left"===r?g:c.br.x+g):l="left"===r?g:o-x+g,h=u-d.height,e&&(h=e.get("y")-d.height-p)}else{var m=0;c&&(m=c.bl.x+(c.getWidth()-n.totalWidth)/2),l=m,h="top"===r?g:u-d.height-g,e&&(l=e.get("x")+e.getBBBox().width+p)}t.move(l+f,h+v)},addMixedLegend:function(t){var e=this;if(!e.enable)return null;var n=e.container,r=e.position,i=e.legendCfg,a=e.legends;a[r]=a[r]||[];var s=f.getShape("point");u.each(t,function(t){t.type=null,t.marker=s.getMarkerCfg("circle",t),t.checked=!0});var o=n.addGroup(l,u.mix({},{checkable:!1,layout:e._getLayoutType(r),items:t,word:{fill:"#333"}},h.legend[r],i));return a[r].push(o),o},addLegend:function(t,e,n,c){var l=this;if(l.enable){var f=l.legendCfg,g=t.dim;if(!f||f[g]!==!1){var p=f.position||l.position,d=u.mix({titleText:s(t),attrType:e.type});f[g]&&f[g].position&&(p=f[g].position),d=u.mix(d,h.legend[p],f,f[g]);var x,m,y=e.scales,_=[];if(1===y.length||t.isLinear)_=l._getLegendItems(t,e,n,c),m=t.dim,d.checkable=t.isCategory,x=l._addLegend(t,d,_,p);else{var S=y[1],w=t.getTicks(),b=[];if(m=t.dim+"*"+S.dim,d.titleText&&(d.titleText=a(s(S),s(t))),S.isLinear&&(d.checkable=!1),u.each(w,function(i){var a=t.invert(i.value),s=l._getCategoryItems(S,e,n,c,a);if(r(s)){var o=s[0];o[v]=a,o.name=t.getText(a),o.attrValue=a,_.push(o)}else b=b.concat(s)}),b.length){var M=S.getTicks();u.each(M,function(t){var e=S.invert(t.value),n=i(b,e);if(n.length===w.length&&r(n)){var a=n[0];a[v]="*"+e,a.name=S.getText(e),a.attrValue=e,_.push(a)}else _=_.concat(n)})}o(_,m,c),x=l._addLegend(t,d,_,p)}x.get("checkable")&&l._bindEvent(x,m)}}},_getLegendItems:function(t,e,n,r,i){var a=this;return t.isLinear?a._getContinuousItems(t,e,i):a._getCategoryItems(t,e,n,r,i)},_getContinuousItems:function(t,e,n){var r,i,a=this,s=[],o=t.getTicks();return u.each(o,function(o){var u=o.value,c=t.invert(u),l=a._mappingValues(c,e,n);s.push({name:o.text,color:l,value:u}),0===u&&(r=!0),1===u&&(i=!0)}),r||s.push({name:t.getText(t.invert(0)),color:a._mappingValues(t.invert(0),e,n),value:0}),i||s.push({name:t.getText(t.invert(1)),color:a._mappingValues(t.invert(1),e,n),value:1}),s},_getCategoryItems:function(t,e,n,r,i){var s,o,c=this,l=t.getTicks(),h=[],g="point",p="circle";return u.each(l,function(l){var v=l.text;o=v;var d=l.value,x=t.invert(d),m={isInCircle:n.isInCircle()},y=c._mappingValues(x,e,i);"color"===e.type?m.color=y:"shape"===e.type?(g=n.get("shapeType")||n.get("type"),p=y):"size"===e.type&&(s=y);var _=f.getShape(g),S=_.getMarkerCfg(p,m);u.isNull(s)||(S.radius=s);var w=!0;u.isNull(i)?w=!r||c._isFiltered(t,r,d):(x=i+"*"+x,o=a(o,i)),h.push({name:o,checked:w,type:null,marker:S,attrValue:y,value:x})}),h},_mappingValues:function(t,e,n){var r;if(u.isNull(n))r=e.mappingValues(t).join("");else{var i=[n,t];r=e.mappingValues.apply(e,i).join("")}return r},_addLegend:function(t,e,n,r){var i,a,s=this,o=s._getLayoutType(r);if(t.isLinear)a=l.Continuous,i=u.mix({layout:o},h.legend.size,e);else{a=l.Category;var c=s.plotRange,f="right"===r||"left"===r?c.bl.y-c.tr.y:c.tr.x-c.bl.x;i=u.mix({maxLength:f,layout:o,items:n,word:{fill:"#333"}},e)}i.items=n;var g=s.container,p=s.legends,v=g.addGroup(a,i);return p[r]=p[r]||[],p[r].push(v),v},alignLegends:function(){var t=this,e=t.legends;return u.each(e,function(e,n){var r=t._getRegion(e);u.each(e,function(i,a){var s=e[a-1];t._alignLegend(i,s,r,n)})}),this},reset:function(){var t=this,e=t.legends;u.each(e,function(t){u.each(t,function(t){t.remove()})}),this.legends={}}}),t.exports=d},function(t,e,n){"use strict";var r=n(1),i=n(79),a=n(40),s=n(2),o=n(5),u={LINEAR:"linear",CAT:"cat",TIME:"time"},c=function(t){r.mix(this,t),this.defs=this.defs||{}};r.augment(c,{defs:null,_addNewCol:function(t,e,n){var i=this,a=e.dims,s=[];r.each(a,function(t){var e=i._getDefaultType(t,n);if(0===s.length)s.push(e);else if(!r.inArray(s,e))throw new Error('Sorry, the values that are involved in "+" must be of the same type.')}),e.type=s[0];var o=[];r.each(a,function(t){o.push(n.colArray(t))});for(var u=[],c=0;c<o[0].length;c++){u[c]=[];for(var l=0;l<a.length;l++)u[c].push(o[l][c])}n.addCol(t,u)},_getDefs:function(){var t=this.defs;return r.mix(!0,{},o.scales,t)},_getScaleCfg:function(t,e,n){var r={dim:e};if(n.contains(e)){var a=s.values(n,e);r.values=a,i.isCategory(t)||"time"===t||(r.min=s.min(n,e),r.max=s.max(n,e),r.nice=!0),"time"===t&&(r.nice=!1)}return r},_getDefaultType:function(t,e){var n=u.LINEAR,i=s.values(e,t),o=i[0];return r.isArray(o)&&(o=o[0]),a.isDateString(o)?n=u.TIME:r.isString(o)&&(n=u.CAT),n},_syncScales:function(t,e){t.isCategory?t.change({values:e.values,ticks:e.ticks}):"identity"!==t.type&&t.change({min:e.min,max:e.max,ticks:e.ticks,values:e.values})},createDefaultScale:function(t,e){var n=this._getDefaultType(t,e),r=this._getScaleCfg(n,t,e);return i[n](r)},createScale:function(t,e){var n,a=this,s=a._getDefs();if(r.isNumber(t))n=i.I({value:t,dim:t.toString()});else if(s[t]||r.indexOf(e.colNames(),t)!==-1)if(s[t]){var o=s[t];o.dims&&!e.contains(t)&&a._addNewCol(t,o,e);var u=o.type||a._getDefaultType(t,e),c=a._getScaleCfg(u,t,e);r.mix(c,o),n=i[u](c)}else n=a.createDefaultScale(t,e);else n=i.I({value:t,dim:t});return n},sortScales:function(t,e,n){var i=this;return n?(t=s.sortBy(t,n),void r.each(e,function(e,n){var r=e.type;if("identity"!==r&&t.contains(n)){var a=i.createScale(n,t);e.values=a.values}})):null},trainScales:function(t,e){var n=this;r.each(e,function(e){var r=e.type,i=e.dim;if("identity"!==r&&t.contains(i)){var a=n.createScale(i,t);n._syncScales(e,a)}})},resetScales:function(t,e){var n=this;r.each(e,function(e,r){var i=n.createScale(r,t);n._syncScales(e,i)})},_getFilterFunction:function(t,e){var n,i=t.dim;return n=t.isCategory?function(n){var a=!1;return r.each(e,function(e){var r=n[i];if(a=a||t.getText(e)===t.getText(r))return!1}),a}:function(t){var n=t[i];return r.inArray(e,n)}},_getMultpleFilterFunction:function(t,e){var n=function(n){var i=!1;return r.each(e,function(e){var a=e.split("*"),s=!0;if(r.each(a,function(e,r){if(e){var i=t[r],a=n[i.dim];s=s&&i.getText(e)===i.getText(a)}}),i=i||s)return!1}),i};return n},filterData:function(t,e,n){var i=this,a=[];r.each(e,function(t,e){var r;if(e.indexOf("*")!==-1){var s=e.split("*"),o=s.map(function(t){return n[t]});t&&o.length&&(r=i._getMultpleFilterFunction(o,t),a.push(r))}else{var u=n[e];t&&u&&(r=i._getFilterFunction(u,t),a.push(r))}});var o=t;return a.length&&(o=s.filter(t,function(t){var e=!0;return r.each(a,function(n){e=e&&n(t)}),e})),o},processCatScale:function(t,e){var n=this,i=n._getDefs();return r.each(e,function(e,n){var a=e.type;if(e.isCategory&&"timeCat"!==a&&t.contains(n)){var s=i[n];if(s&&!s.hasOwnProperty("values")||!s){var o=t.colArray(n);r.each(o,function(t,e){o[e]=t.toString()}),t.colReplace(n,o)}}}),t}}),t.exports=c},function(t,e,n){"use strict";function r(t,e){var n=-1;return a.each(t,function(t,r){if(t.title===e.title&&t.name===e.name&&t.value===e.value&&t.color===e.color)return n=r,!1}),n}function i(t){var e=[];return a.each(t,function(t){var n=r(e,t);n===-1?e.push(t):e[n]=t}),e}var a=n(1),s=n(5),o=n(11),u=o.Components,c=u.Tooltip,l=["line","area","path","areaStack"],h=["line","area"],f=function(t){a.mix(this,t)};a.augment(f,{enable:!0,cfg:null,tooltip:null,markerGroup:null,chart:null,timeStamp:0,get:function(t){return this[t]},set:function(t,e){this[t]=e},_setTooltipCrosshairs:function(){var t=this,e=a.mix({},s.tooltip),n=t.get("chart"),r=n.getAllGeoms(),i=[];return a.each(r,function(t){var e=t.get("type");a.indexOf(i,e)===-1&&i.push(e)}),r.length&&"cartesian"===r[0].get("coord").type&&1===i.length&&a.indexOf(h,i[0])>-1&&a.mix(e,{crosshairs:!0}),e},_showMarkers:function(t,e){var n=this,r=n.get("markerGroup");r.setMatrix(e.get("matrix").clone()),r.clear(),a.each(t,function(t){var e=t.point,n=a.mix({},r.get("marker"),{x:a.isArray(e.x)?e.x[e.x.length-1]:e.x,y:a.isArray(e.y)?e.y[e.y.length-1]:e.y,stroke:t.color});r.addShape("Marker",{attrs:n})}),r.show()},_getCanvas:function(){return this.chart.get("frontCanvas")},_setTooltip:function(t,e,n){var r=this,s=r.get("tooltip"),o=r.get("prePoint");if(!o||o.x!==e.x||o.y!==e.y){n=i(n),r.set("prePoint",e);var u=r.chart,c=a.isArray(e.x)?e.x[e.x.length-1]:e.x,l=a.isArray(e.y)?e.y[e.y.length-1]:e.y;s.get("visible")||u.fire("tooltipshow",{x:c,y:l,tooltip:s}),u.fire("tooltipchange",{tooltip:s,x:c,y:l,items:n}),s.setContent(t,n),s.setPosition(c,l)}},_clearActive:function(){var t=this,e=t.get("chart"),n=e.getAllGeoms();a.each(n,function(t){t.clearShapeActived()})},_bindEvent:function(){var t=this,e=t.chart;e.on("plotmove",a.wrapBehavior(t,"onMouseMove")),e.on("plotleave",a.wrapBehavior(t,"onMouseOut"))},_offEvent:function(){var t=this,e=t.chart;e.off("plotmove",a.getWrapBehavior(t,"onMouseMove")),e.off("plotleave",a.getWrapBehavior(t,"onMouseOut"))},renderTooltip:function(){var t=this;if(!t.get("tooltip")){var e=t.get("chart"),n=t.get("cfg"),r=t._setTooltipCrosshairs();n=a.mix({plotRange:e.get("plotRange"),visible:!1,capture:!1},r,n);var i=t._getCanvas();if(!t.get("markerGroup")){var o=i.addGroup({zIndex:11,capture:!1,marker:s.tooltipMarker});t.set("markerGroup",o)}var u=i.addGroup(c,n);i.sort(),t.set("tooltip",u),t._bindEvent()}},showTooltip:function(t,e){var n=this;if((!e||e.length)&&t){var r=n.get("cfg"),i=r&&r.map,s=[],o=[];if(a.each(e,function(e){if(!e.get("tooltipEnable"))return!0;var r=e.get("geoms"),u=e.get("coord");a.each(r,function(e){var n=e.get("frames");if(e.isShareTooltip()){var r=[];a.each(n,function(n){var u=e.findPoint(t,n);if(u){r.push(u);var c=e.getTipItems(u,i);o=o.concat(c);var h=e.get("type");a.indexOf(l,h)!==-1&&(s=s.concat(c))}}),r.length&&e.setActiveByPoint(r[0])}else{var u=e.getSingleShape(t,n);u&&(o=e.getTipItems(u.get("origin"),i),e.setShapesActive([u]))}}),s.length&&n._showMarkers(s,u)}),o.length){var u=o[0];if(s.length){t=u.point;var c=a.isArray(t.x)?t.x[t.x.length-1]:t.x,h=a.isArray(t.y)?t.y[t.y.length-1]:t.y,f=e[0].get("coord");t=f.trans(c,h,1)}var g=u.title||u.name;n._setTooltip(g,t,o)}}},
	hideTooltip:function(){var t=this,e=t.get("tooltip"),n=t.chart,r=t.get("markerGroup"),i=t._getCanvas();t.set("prePoint",null),e.hide(),r.hide(),t._clearActive(),n.fire("tooltiphide",{tooltip:e}),i.draw()},onMouseMove:function(t){var e=this.get("timeStamp"),n=+new Date;if(this.enable&&t.views&&t.views.length){var r=this,i={x:t.x,y:t.y};n-e>16&&(r.showTooltip(i,t.views),this.set("timeStamp",n))}},onMouseOut:function(t){var e=this,n=e.get("tooltip"),r=e._getCanvas();n.get("visible")&&(t&&t.target!==r||e.hideTooltip())},clear:function(){var t=this,e=t.get("tooltip"),n=t.get("markerGroup");e&&e.remove(),n&&n.remove(),t.set("tooltip",null),t.set("markerGroup",null),t.set("prePoint",null),t._offEvent()}}),t.exports=f},function(t,e,n){"use strict";function r(t,e,n){var r=(t-e)/(n-e);return r>=0&&r<=1}function i(t,e){var n=!1;if(t){var i=t.type;if("theta"===i){var a=t.get("start"),s=t.get("end");n=r(e.x,a.x,s.x)&&r(e.y,a.y,s.y)}else{var o=t.invert(e);n=o.x>=0&&o.y>=0&&o.x<=1&&o.y<=1}}return n}var a=n(1),s=n(327),o=n(326),u=n(93),c=n(295),l=function h(t){t=o.initContainer(t),h.superclass.constructor.call(this,t),this.init()};l.ATTRS={id:null,width:null,height:null,plotCfg:null,facetCfg:null,forceFit:!1,views:[]},a.extend(l,s),a.augment(l,{init:function(){var t=this.get("plotRange");this.set("region",{start:t.start,end:t.end}),this.set("views",[]),this.set("facetCfg",a.mix({},this.get("facetCfg"))),this.get("forceFit")&&window.addEventListener("resize",a.wrapBehavior(this,"_initForceFitEvent")),u.initEvent(this),u.initLegend(this),u.initTooltip(this)},_initForceFitEvent:function(){var t=setTimeout(a.wrapBehavior(this,"forceFit"),200);clearTimeout(this.get("resizeTimer")),this.set("resizeTimer",t)},_getYScale:function(){var t=this.getAllGeoms(),e=[];return a.each(t,function(t){var n=t.getYScale();n&&a.indexOf(e,n)===-1&&e.push(n)}),e},_renderLegends:function(){var t=this.get("legendAssist"),e=this.getAllGeoms(),n=this.get("filters"),r=this._getYScale(),i=[];if(a.each(e,function(e){var r=e.getLegendAttr();a.each(r,function(r){var s=r.type,o=r.getScale(s);if("identity"!==o.type&&a.indexOf(i,o)===-1){i.push(o);var u,c=r.scales,l=1===c.length?o.dim:o.dim+"*"+c[1].dim;n&&n[l]&&(u=n[l]),t.addLegend(o,r,e,u)}})}),!i.length&&r.length>1){var s=[];a.each(r,function(t){a.each(e,function(e){if(e.getYScale()===t){var n={name:t.alias||t.dim,color:e.getDefaultValue("color")};return s.push(n),!1}})}),t.addMixedLegend(s)}t.alignLegends()},_renderTooltip:function(){var t=this.get("tooltipAssist");t.renderTooltip()},_creatFacets:function(){var t=this.get("data");t=this._filterData(t);var e=this.get("scaleAssist"),n=this.get("facetCfg");if(n.defs=e.defs,n.plotRange=this.get("plotRange"),!this.get("plotContainer")){var r=this.get("canvas"),i=r.addGroup();this.set("plotContainer",i)}var a=new c({plotContainer:this.get("plotContainer"),facetCfg:n});return a.createFacets(t)},_createFacetViews:function(t){var e=new s({index:t.index,data:t.frame,region:t.region});return e.set("backCanvas",this.get("backCanvas")),e.set("frontCanvas",this.get("frontCanvas")),e.set("canvas",this.get("canvas")),e.set("animate",this.get("animate")),e.set("axisAssist",this.get("axisAssist")),e.set("guideAssist",this.get("guideAssist")),e.set("coordAssist",this.get("coordAssist")),e.set("filters",this.get("filters")),e.set("layers",this.get("layers")),e.set("facet",t),e},legend:function(t,e){var n=this.get("legendAssist"),r=n.legendCfg;return n.enable=!0,a.isBoolean(t)?n.enable=t:a.isObject(t)?(r=t,n.position=r.position?r.position:"right"):r[t]=e,n.legendCfg=r,this},tooltip:function(t,e){var n=this.get("tooltipAssist");return a.isObject(t)&&(e=t,t=!0),n.enable=t,n.cfg=e,this},facet:function(t,e){var n=this.get("facetCfg");return n.dims=a.isString(t)?[t]:t,a.mix(n,e),this},animate:function(t){return this.set("animate",t),this},render:function(){var t=this,e=t.get("views"),n=t.get("facetCfg");if(t.set("painting",!0),n.dims&&n.dims.length>0){e=[];var r=t._creatFacets();a.each(r,function(n){e.push(t._createFacetViews(n))}),t.set("views",e),t.set("coord",t._createCoord())}else l.superclass.render.call(t);return e.length&&a.each(e,function(t){t.render()}),t._renderLegends(),t._renderTooltip(),t.set("painting",!1),t.get("backCanvas").draw(),t.get("canvas").draw(),t.get("frontCanvas").draw(),t},changeSize:function(t,e){var n=this,r=n.get("backCanvas"),i=n.get("canvas"),s=n.get("frontCanvas");r.changeSize(t,e),i.changeSize(t,e),s.changeSize(t,e),n.set("width",t),n.set("height",e);var o=n.get("backPlotBg");o.repaint();var u=o.get("plotRange");n.set("region",{start:u.start,end:u.end});var c=n.get("views");return a.each(c,function(t){var e=n._getRegion(t);t.set("region",e)}),n.repaint(),n},repaint:function(){var t=this.get("animate");t!==!1&&this.animate(!1),this.get("legendAssist").reset(),this.get("tooltipAssist").clear(),l.superclass._clearInner.call(this);var e=this.get("views");return a.each(e,function(t){t._clearInner()}),this.render(),t!==!1&&this.animate(t),this},clear:function(){var t=this.get("views");return a.each(t,function(t){t.clear()}),this.set("views",[]),this.get("legendAssist").reset(),this.get("tooltipAssist").clear(),l.superclass.clear.call(this),this.get("frontCanvas").clear(),this.get("frontCanvas").draw(),this.set("plotContainer",null),this.set("backPlot",null),this.set("frontPlot",null),this},destroy:function(){if(!this.destroyed){var t=this.get("container");this.fire("destroy"),this.clear(),this.get("backCanvas").destroy(),this.get("canvas").destroy(),this.get("frontCanvas").destroy(),this._attrs={},this.events={},this.destroyed=!0,t.parentNode.removeChild(t),window.removeEventListener("resize",a.getWrapBehavior(this,"_initForceFitEvent"))}},getAllGeoms:function(){var t=[];t=t.concat(this.getGeoms());var e=this.get("views");return a.each(e,function(e){t=t.concat(e.getGeoms())}),t},showTooltip:function(t){var e=this,n=e.getViewsByPoint(t);if(n.length){var r=e.get("tooltipAssist");r.showTooltip(t,n)}return e},hideTooltip:function(){var t=this.get("tooltipAssist");t.hideTooltip()},getTooltipItems:function(t){var e=this,n=e.getViewsByPoint(t),r=[];return a.each(n,function(n){var i=n.getGeoms(),s=e.get("tooltipAssist"),o=s.cfg&&s.cfg.map;a.each(i,function(e){var n=e.get("frames"),i=[];a.each(n,function(n){var r=e.findPoint(t,n);if(r){var a=e.getTipItems(r,o);i=i.concat(a)}}),r=r.concat(i)})}),r},getViewsByPoint:function(t){var e=[],n=this.get("views");return i(this.get("coord"),t)&&e.push(this),a.each(n,function(n){i(n.get("coord"),t)&&e.push(n)}),e},getViews:function(){return this.get("views")},createView:function(t){var e=new s(t);e.get("region")||e.set("region",this._getRegion(e)),e.set("backCanvas",this.get("backCanvas")),e.set("frontCanvas",this.get("frontCanvas")),e.set("canvas",this.get("canvas")),e.set("animate",this.get("animate")),e.set("parent",this);var n=this.get("views");return n.push(e),this.set("views",n),e},removeView:function(t){for(var e=[],n=this.get("views"),r=null,i=0;i<n.length;i++)r=n[i],r!==t?e.push(r):r.clear();this.set("views",e),this.repaint()},getView:function(t){return this.get("views")[t]},_getRegion:function(t){var e=this.get("plotRange"),n=t.get("start"),r=t.get("end"),i=e.tl,a=e.br,s={x:n.x*(a.x-i.x)+i.x,y:r.y*(a.y-i.y)+i.y},o={x:r.x*(a.x-i.x)+i.x,y:n.y*(a.y-i.y)+i.y};return{start:s,end:o}},forceFit:function(){var t=this.get("container"),e=a.getWidth(t),n=this.get("height");e!==this.get("width")&&this.changeSize(e,n)}}),t.exports=l},function(t,e,n){"use strict";var r=n(1),i=n(118),a=n(304),s=n(5),o=function(t){r.mix(this,t),this._init()};r.augment(o,{type:"point",adjusts:null,chart:null,attrs:null,styleCfg:null,labelCfg:null,scales:null,tooltipDims:null,_init:function(){this.attrs=[],this.scales={},this.stats=[];var t=this.adjusts;t&&(r.each(t,function(e,n){t[n]=r.ucfirst(e)}),this.adjusts=t)},_createScale:function(t){var e=this.scales,n=this.chart;return e[t]||(e[t]=n.createScale(t)),e[t]},_addStat:function(t){this.stats.push(t)},_addAttr:function(t,e){var n=this.attrs;t=r.ucfirst(t);var a=i[t],s=new a(e);n.push(s)},_getDefaultShapes:function(){var t=this.type,e=/[A-Z].*$/;return t=t.replace(e),s.shapes[t]},_getDefaultColors:function(){var t,e=this.adjusts;return t=e&&1===e.length?this.type+e[0]:this.type,s.colors[t]||s.colors["default"]},_parseDims:function(t,e){var n,i=this,a=i.chart;if(t.isStat&&(n=t,n.init(),t=n.getDims(),i._addStat(n)),r.isString(t)&&t.indexOf("+")!==-1){var s=[],o=a.get("scaleAssist"),u=t.replace(/\s+/g,"").split("*");r.each(u,function(t){var e=t.replace(/\(|\)|\s+/g,"").split("+"),n=e.join("+");s.push(n),e.length>1&&(o.defs[n]=r.mix({},o.defs[n],{dims:e}))}),t=s}else r.isString(t)&&t.indexOf("*")!==-1?t=t.replace(/\s+/g,"").split("*"):(r.isNumber(t)||r.isString(t))&&(t=[t]);var c=a.get("coordAssist");"position"===e&&"theta"===c.type&&"interval"===i.type&&"Stack"===i.adjusts[0]&&t.unshift("..pieX"),"position"===e&&1===t.length&&(r.inArray(i.adjusts,"Jitter")||r.inArray(i.adjusts,"Stack"))&&t.push("..y");var l=[];return r.each(t,function(t){var e=i._createScale(t);l.push(e)}),{dims:t,stat:n,scales:l}},createGeom:function(){var t=this.type;return t=r.ucfirst(t),new a({type:this.type,chart:this.chart,attrs:this.attrs,stats:this.stats,scales:this.scales,styleCfg:this.styleCfg,labelCfg:this.labelCfg,tooltipDims:this.tooltipDims,adjusts:this.adjusts})},position:function(t){var e=this._parseDims(t,"position");return this._addAttr("position",{scales:e.scales,stat:e.stat}),this},color:function(t,e){var n=this._parseDims(t),i={scales:n.scales,stat:n.stat};return"heatmap"!==this.type||e||(e=s.heatmapColors),r.isFunction(e)?i.callback=e:r.isArray(e)?i.arr=e:e?i.methodType=e:i.arr=this._getDefaultColors(),this._addAttr("color",i),this},shape:function(t,e){var n=this._parseDims(t),i={scales:n.scales,stat:n.stat};return r.isFunction(e)?i.callback=e:i.arr=e||this._getDefaultShapes(),this._addAttr("shape",i),this},opacity:function(t,e){var n=this._parseDims(t),i={scales:n.scales,stat:n.stat};return r.isFunction(e)&&(i.callback=e),this._addAttr("opacity",i),this},size:function(t,e,n){var i=this._parseDims(t),a={scales:i.scales,stat:i.stat,min:r.isNull(n)?1:n};return r.isFunction(e)?a.callback=e:a.max=e||10,this._addAttr("size",a),this},label:function(t,e,n){var i=this._parseDims(t);r.isObject(e)&&(n=e,e=null);var a={scales:i.scales,cfg:n,stat:i.stat,callback:e};return this.labelCfg=a,this},tooltip:function(t){var e=this._parseDims(t);return this.tooltipDims=e.dims,this},style:function(t){return this.styleCfg=t,this}}),t.exports=o},function(t,e,n){"use strict";var r=n(1),i=n(11),a=n(101),s=function o(t){o.superclass.constructor.call(this,t)};s.ATTRS={gemo:null},r.extend(s,i.Group),r.mixin(s,[a.Group]),r.augment(s,{isItemActived:function(t){return t.get("actived")},setItemActived:function(t,e){e?t.set("actived",!0):t.set("actived",!1)}}),t.exports=s},function(t,e,n){"use strict";var r=n(109),i=n(1),a={};a.getDefault=function(t){var e=t.geom,n=t.fn,a=e.get("coord"),s=r,o=e.get("type"),u=e.get("adjusts")||"";switch(o+=u,a.type){case"cartesian":switch(o){case"interval":case"intervalStack":case"intervalDodge":s=a.isTransposed?r.scaleX:r.scaleY;break;case"intervalSymmetric":s=r.scaleX;break;default:s=r.waves}break;case"polar":switch(o){case"area":case"areaStack":case"interval":case"intervalStack":case"intervalDodge":s=r.scaleXY;break;default:s=r.angle}break;case"theta":s=r.angle;break;case"plus":s=r.scaleXY}var c=a.get("start"),l=a.get("end"),h=l.x-c.x,f=c.y-l.y,g={group:e.get("group"),rect:{x:c.x,y:l.y,width:h,height:f},before:n};return a.isPolar&&i.mix(g,{circle:{center:a.getCenter(),startAngle:a.get("startAngle"),endAngle:a.get("endAngle"),r:Math.max(h,f)/2}}),new s(g)},t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(27),a=n(303),s=n(305),o=n(312),u=n(314),c=n(315),l=n(313),h=n(302),f=n(96),g=n(5),p=["size","shape","color"],v=function d(t){d.superclass.constructor.call(this,t),this._init()};v.ATTRS={type:"point",chart:null,attrs:null,stats:null,scales:null,styleCfg:null,labelCfg:null,animate:g.animate},r.extend(v,i),r.mixin(v,[l,c,o,u]),r.augment(v,{_init:function(){var t=this.get("type"),e=this.get("chart"),n=e.get("plotContainer");n||(n=e.get("canvas").addGroup());var i=n.addGroup({zIndex:10});this.set("container",i),r.inArray(["interval","point","schema"],t)&&this.set("animate",!0)},_addLabels:function(t){var e=this,n=e.get("type"),i=e.get("coord"),a=s.getLabelsClass(i.type,n),o=e.get("container"),u=o.addGroup(a,{labelsCfg:e.get("labelCfg"),coord:i,geom:e,geomType:n}),c=[];r.each(t,function(t){c=c.concat(t.toJSON())}),u.showLabels(c)},_draw:function(t){var e=this.get("group"),n=this.get("type");n=r.ucfirst(n);var i=new f[n]({container:e,attrs:this.get("attrs"),styleCfg:this.get("styleCfg"),adjusts:this.get("adjusts"),frames:t}),a=i.draw(t);return this.set("geomShape",i.get("shapeObj")),this.set("shapeType",i.get("shapeType")),a},paint:function(t,e,n){function i(){var r=s._draw(e);n&&n(t,r),s.get("labelCfg")&&s._addLabels(r)}var s=this;if("map"===t.type){var o=s.get("scales"),u=o["..long"],c=o["..lant"];t.set("originMin",[u.min,c.min]),t.set("originMax",[u.max,c.max]),s.set("coord",t)}var l=s.getAttr("position");l.coord=t;var f=s.get("container"),g=f.addGroup(h,{geom:s,coord:t,multipleActive:s.isShareTooltip(),capture:!1});g.setMatrix(t.get("matrix").clone()),s.set("group",g);var p=s.get("chart"),v=p.get("animate");if(v=r.isNull(v)?s.get("animate"):v){var d=a.getDefault({geom:s,fn:function(){i()}});d.start()}else i();return s},getDefaultValue:function(t){var e=this,n=e.get(t),r=e.getAttr(t);if(r){var i=r.getScale(t);"identity"===i.type&&(n=i.value)}return n},getLegendAttr:function(){var t=this,e=t.get("attrs"),n=[];return r.each(e,function(t){r.indexOf(p,t.type)!==-1&&n.push(t)}),n},getScales:function(){return this.get("scales")},destroy:function(){var t=this.get("group");t.get("destroyed")||(t.clear(),t.remove()),this._attrs={},this.events={}},getXDistance:function(){var t,e=this,n=e.getXScale();return t=n.isCategory?1:(n.max-n.min)/n.values.length},getAttr:function(t){var e=this.get("attrs"),n=null;return r.each(e,function(e){e.type===t&&(n=e)}),n},getXDim:function(){var t=this.getXScale();return t.dim},getYDim:function(){var t=this.getYScale();return t?t.dim:"y"},getXScale:function(){return this.getAttr("position").scales[0]},getYScale:function(){return this.getAttr("position").scales[1]},isInCircle:function(){return this.get("coord").isPolar}}),t.exports=v},function(t,e,n){"use strict";var r=n(95),i=n(94),a=n(306),s={getLabelsClass:function(t){var e=r;return"polar"===t||"plus"===t?e=i:"theta"===t&&(e=a),e}};t.exports=s},function(t,e,n){"use strict";function r(t){return l.equal(t,-Math.PI/2)||l.equal(t,Math.PI/2)||l.equal(t,3*Math.PI/2)}function i(t,e,n){return{x:t.x+n*Math.cos(e),y:t.y+n*Math.sin(e)}}function a(t,e,n,r,i,a){var s=Math.acos((r-e)/r),o=a?n-Math.PI+s:n-s;t.orignAngle=t.angle,t.angle=o,t.orignX=t.x,t.orignY=t.y,t.x=i.x+(r+2.5)*Math.cos(t.angle),t.y=i.y+(r+2.5)*Math.sin(t.angle),l.equal(o,-Math.PI/2)?t.x+=g:l.equal(o,3*Math.PI/2)?t.x-=g:l.equal(o,Math.PI/2)&&(o>=t.orignAngle?t.x+=g:t.x-=g)}function s(t,e,n,r,i,s){var o=parseInt(2*e/s,10),u=t.y+e,c=t.y-e;o<n.length&&n.splice(o,n.length-o);for(var l,h,f,g=0,p=n.length,v=0,d=0;d<p;d++){var x=n[d],m=x.y;h=p-d,l=i>0?(u-m)/h:(m-c)/h,d>0&&(v=i>0?(m-c)/d:(u-m)/d);var y;if(y=i>0?h<p?m-n[d-1].y:m-c:h<p-1?n[d-1].y-m:u-m,g=d,l<s){0!==g&&(g=d+1);break}(v>0&&v<s||y>0&&y<s)&&(f=d)}if(f)for(var _=0;_<=f;_++){var S=_*s;a(n[_],S,r,e,t,!0)}var w=i<0&&g<=p-1||i>0&&g<p-1;if(p>1&&w){var b=0===g?0:g-1,M=n[b],A=M.y,C=i>0?u:c;if(h=p-b-1,l=Math.abs(C-A)/h,h>1||l<=s){l<s&&(l=s);for(var k=p-1;k>=b;k--){var T=(p-1-k)*l;a(n[k],T,r,e,t,!1)}}for(var P=i>0?c:u,I=!1,D=b-1;D>0;D--){var L=n[D];if(!I&&Math.abs(P-L.y)/(D+1)<s&&(I=!0),I){var R=Math.abs(n[D+1].y-C)+s;a(n[D],R,r,e,t)}}}}var o=n(1),u=n(94),c=n(20),l=n(4),h=n(5),f=5,g=1,p=function v(t){v.superclass.constructor.call(this,t)};p.CFG={labels:h.thetaLabels},o.extend(p,u),o.augment(p,{adjustItems:function(t){var e=this,n=e.getDefaultOffset();return n>0&&(t=e._adjustItems(t,n)),t},_adjustItems:function(t){var e=this,n=e.getDefaultOffset(),r=[],i=e.get("coord"),a=i.getCenter(),u=i.getRadius(),c=u+n,l=i.get("startAngle"),h=e.get("labels").labelHeight,f=[],g=[];if(o.each(t,function(t){t.x>a.x?f.push(t):r.push(t)}),r.length){var p=l>=-Math.PI/2?3*Math.PI/2:-Math.PI/2;s(a,c,r,p,-1,h)}return f.length&&s(a,c,f,Math.PI/2,1,h),g=g.concat(f,r)},drawLines:function(t,e){var n=this,r=n.getDefaultOffset();r>0&&o.each(t,function(t){n.lineToLabel(t,e)})},lineToLabel:function(t,e){var n,a=this,s=a.get("coord"),u=s.getRadius(),c=a.getDefaultOffset(),h=a.get("labels"),g=t.orignAngle||t.angle,p=s.getCenter(),v=i(p,g,u+f/2),d=h.labelHeight,x=a.get("lineGroup"),m=[],y=r(t.angle),_=1;y&&(c-=d/2,l.equal(t.angle,Math.PI/2)&&(_=-1)),m.push(["M",v.x,v.y]),n=i(p,g,u+c/2);var S=y?t.y+d/2*_:t.y;m.push(["R",n.x,n.y,t.x,S]),m=o.path2Absolute(m),x||(x=a.addGroup({elCls:"x-line-group"}),a.set("lineGroup",x)),x.addShape("path",{attrs:o.mix({path:m,fill:null,stroke:t.color},e)})},getLabelRotate:function(t,e){var n;return e<0&&(n=180*t/Math.PI,n>90&&(n-=180),n<-90&&(n+=180)),n},getLabelAlign:function(t){var e,n=this,r=n.get("coord"),i=r.getCenter();e=t.x===i.x?"center":t.x>i.x?"left":"right";var a=n.getDefaultOffset();return a<=0&&(e="right"===e?"left":"right"),e},getArcPoint:function(t){return t},getPointAngle:function(t){var e,n,r=this,i=r.get("coord");e={x:t.x[0],y:t.y[0]},n={x:t.x[1],y:t.y[1]};var a=c.getPointAngle(i,e),s=c.getPointAngle(i,n);a>=s&&(s+=2*Math.PI);var o=a+(s-a)/2;return o},getCirclePoint:function(t,e){var n=this,r=n.get("coord"),i=r.getCenter(),a=r.getRadius()+e;return{x:i.x+a*Math.cos(t),y:i.y+a*Math.sin(t),angle:t,r:a}}}),t.exports=p},function(t,e,n){"use strict";var r=n(1),i=n(153),a=n(2),s=n(24),o=function u(t){u.superclass.constructor.call(this,t)};o.ATTRS={type:"contour"},r.extend(o,s.Path),r.augment(o,{_beql:function(t,e){return Math.abs(t-e)<1e-6},_getZScale:function(){return this.getAttr("position").getScale("z")},_getData:function(t){var e=this,n=[],i=e.getAttr("position"),s=i.getDims(),o=s[0],u=s[1],c=s[2],l=a.values(t,o),h=a.values(t,u),f=0,g=0,p=null;return r.each(l,function(t){p&&e._beql(p,t)||f++,p=t}),p=null,r.each(h,function(t){p&&e._beql(p,t)||g++,p=t}),t.each(function(t,e){var r=Math.floor(e/g),i=Math.floor(e%g),a=[t[o],t[u],t[c]];Array.isArray(n[r])||(n[r]=[]),n[r][i]=a}),n},processFrames:function(t){var e=this,n=e.getXDim(),s=e.getYDim(),o=e._getZScale(),u=o.dim,c=a.merge.apply(null,t),l=c.rowObject(0),h=e._getData(c),f=o.ticks,g=i(h,f),p=[];return r.each(g,function(t){var e=t.path,i=t.value,o=[];r.each(e,function(t){var e=r.mix({},l);e[n]=t[0],e[s]=t[1],e[u]=i,o.push(e)}),p.push(new a(o))}),p}}),t.exports=o},function(t,e,n){"use strict";var r=n(1),i=n(24),a=function s(t){s.superclass.constructor.call(this,t)};a.ATTRS={type:"edge"},r.extend(a,i.Base),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(176),a=n(24),s=n(5),o=function u(t){u.superclass.constructor.call(this,t)};o.ATTRS={type:"heatmap"},r.extend(o,a.Base),r.augment(o,{_getHeatmapData:function(t){var e=this,n=[],r=e.getAttr("color"),i=r.getDims(),a=i[0];return t.each(function(t){var e=[t.x,t.y,t[a]];n.push(e)}),n},_getImageRegion:function(){var t=this,e=t.getCoord(),n=e.get("start"),r=e.get("end"),i={x:n.x,y:r.y,width:r.x-n.x,height:n.y-r.y};return i},_getColorScale:function(){return this.getAttr("color").getScale("color")},_getRadius:function(){var t=this,e=t.getAttr("position"),n=t.getCoord(),r=e.stat,i=null;if(r){var a=r.bandWidth;i=Math.min(n.getWidth(),n.getHeight())*a}return 2*i},drawFrame:function(t){if(t.rowCount()){var e=this,n=e.get("container"),a=e._getHeatmapData(t),o=e._getImageRegion(),u=e._getColorScale(),c=t.rowObject(0).size,l=e.getAttr("color"),h=r.mix({min:u.min,max:u.max,formatter:function(t){return u.scale(t)}},s.heatmap,o);h.colors=[l.mappingValues(u.invert(0)).join(""),l.mappingValues(u.invert(.25)).join(""),l.mappingValues(u.invert(.5)).join(""),l.mappingValues(u.invert(.75)).join(""),l.mappingValues(u.invert(1)).join("")];var f=c?parseInt(c,10):e._getRadius();f&&(h.radius=f);var g=new i(h),p=g.getData(a),v=document.createElement("canvas"),d=v.getContext("2d");v.width=o.width,v.height=o.height,d.putImageData(p,0,0);var x=n.addShape("Image",{attrs:o});x.attr("img",v)}}}),t.exports=o},function(t,e,n){"use strict";var r=n(1),i=n(24),a=n(97),s="_origin",o=function u(t){u.superclass.constructor.call(this,t)};o.ATTRS={adjusts:null,frames:null},r.extend(o,i.Interval),r.mixin(o,[a]),r.augment(o,{processFrames:function(t){var e=this.getCoord(),n=e.type;if("theta"===n||"polar"===n&&e.isTransposed&&"Stack"===this.adjusts){var i=[],a=this.getYDim();return r.each(t,function(t){var e=t.colArray(s);e[0][a]>0&&i.push(t)}),i}return t}}),t.exports=o},function(t,e,n){"use strict";var r=n(1),i=n(24),a=n(97),s=function o(t){o.superclass.constructor.call(this,t)};s.ATTRS={adjusts:null,frames:null},r.extend(s,i.Schema),r.mixin(s,[a]),t.exports=s},function(t,e,n){"use strict";function r(t,e){if(!t)return!0;if(t.length!==e.length)return!0;var n=!1;return a.each(e,function(e,r){if(e!==t[r])return n=!0,!1}),n}function i(t,e){for(var n=t.x,r=t.y,i=n[0],a=r[0],s=n[0],o=r[0],u=0;u<n.length;u++){var c=n[u],l=r[u];c<=i&&(i=c),c>=s&&(s=c),l<=a&&(a=l),l>=o&&(o=l)}var h=e.x>=i&&e.x<=s&&e.y>=a&&e.y<=o;return h}var a=n(1),s=n(2),o=Math.abs,u=function(){};u.ATTRS={localRefresh:!1,allowActiveShape:!0,snapAll:!0,snapDistance:10},a.augment(u,{isAllowActiveShape:function(){var t=this.get("type");return"contour"!==t&&"path"!==t&&this.get("allowActiveShape")},isSnapAll:function(){var t=this.get("type");return"interval"!==t&&"schema"!==t&&this.get("snapAll")},setActiveByPoint:function(t){var e=this,n=e.get("coord"),i=null;if(!e.isAllowActiveShape())return[];if(e.isShareTooltip())i=e._getSharedShapes(t,n);else{i=[];var a=e.getSingleShape(t);a&&i.push(a)}var s=e.get("preShapes");return r(s,i)&&e.setShapesActive(i),e.set("preShapes",i),i},_getSharedShapes:function(t){var e=this,n=e.get("group"),r=[];if(n){var i=e.getXDim(),s=n.get("children");a.each(s,function(e){var n=e.get("origin");n&&n._origin[i]===t._origin[i]&&r.push(e)})}return r},getSingleShape:function(t){var e=this,n=null;if("contour"===e.get("type")){var r=s.forceMerge.apply(null,e.get("frames")),i=e.findPoint(t,r);return n={origin:i,get:function(t){return this[t]}}}var o=e.get("group"),u=e.get("coord"),c=o.get("canvas"),l=c.get("pixelRatio");if(o){var h=o.get("children"),f=[];h.length>30?a.each(h,function(n){var r=n.get("origin");r&&e.isSnapPoint(t,r,u)&&f.push(n)}):f=h;for(var g=f.length-1;g>=0;g--){var p=f[g];if(p.get("origin")&&p.isHit(t.x*l,t.y*l)){n=p;break}}}return n},_isSnapPointOfPolygon:function(t,e,n){var r,s=this,u=s.get("snapDistance"),c=s.getXScale(),l=s.getYScale(),h=n.invert(t);if(a.isArray(e.x)&&a.isArray(e.y))r=i(e,t);else{var f=n.trans(e.x,e.y,1),g=!1,p=!1;g=c.isCategory?c.translate(c.invert(h.x))===e[c.dim]:o(f.x-t.x)<u,p=l&&l.isCategory?l.translate(l.invert(h.y))===e[l.dim]:o(f.y-t.y)<u,r=g&&p}return r},isSnapPoint:function(t,e,n){var r=this,i=this.get("snapDistance"),a=!1;if("polygon"===r.get("type"))a=r._isSnapPointOfPolygon(t,e,n);else if(this.isSnapAll()){var s=n.trans(e.x,e.y,1);a=o(s.x-t.x)<i&&o(s.y-t.y)<i}else{var u=n.invert(t),c=r.getXScale(),l=c.dim,h=c.translate(c.invert(u.x));i=r.getXDistance(),a=o(h-e[l])<i}return a},setShapesActive:function(t){var e=this;if(e.isAllowActiveShape()){var n=e.get("coord"),r=e.get("activeGroup"),i=e.get("chart"),s=i.get("frontCanvas");r?r.clear():(r=s.addGroup(),e.set("activeGroup",r)),r.setMatrix(n.get("matrix").clone()),a.each(t,function(t){e._activeShape(t,r)}),e.set("activeShapes",t),s.sort()}},_activeShape:function(t,e){var n=this,r=t.get("type"),i=t.get("origin"),s=i.shape||n.getDefaultValue("shape"),o=n.get("geomShape"),u=o.getActiveCfg(s,i),c=a.mix({},t.__attrs,u,{fill:"white",fillOpacity:.15}),l=e.addShape(r,{attrs:c});l.setMatrix(t.getMatrix()),l.set("origin",i)},clearShapeActived:function(){var t=this,e=t.get("activeGroup");e&&e.clear(),t.set("activeShapes",null)}}),t.exports=u},function(t,e,n){"use strict";function r(t){return t.binWidth||t.bandWidth}var i=n(1),a=n(2),s=n(104),o=["size","shape","color"],u="_origin",c=["Dodge","Jitter","Stack","Symmetric"],l=function(){};l.ATTRS={adjusts:null},i.augment(l,{_getScale:function(t){var e=this,n=e.get("scales"),r=null;return i.each(n,function(e){if(e.dim===t)return r=e,!1}),r},_getGroupScales:function(){var t=this,e=[];return i.each(o,function(n){var r=t.getAttr(n);if(r){var a=r.scales;i.each(a,function(t){t.isCategory&&i.indexOf(e,t)===-1&&e.push(t)})}}),e},_saveOriginData:function(t){return i.each(t,function(t){var e=t.toJSON();t.addCol(u,e)}),t},_setStatRange:function(t){var e=this,n=t.getDims(),r=[];i.each(n,function(n){var i=e._getScale(n);i.isCategory||"identity"===i.type||(isNaN(i.min)||isNaN(i.max)||t.setRange(n,{min:i.min,max:i.max}),"bin"===t.type&&r.push(n))}),r.length&&(t.binDims=r)},_getBinStat:function(t){var e=null;if(r(t))e=t;else if(t.stat){for(var n=t.stat;n&&!r(n);)n=n.stat;n&&r(n)&&(e=n)}return e},_execStat:function(t,e){var n=this,r=n._getBinStat(t);return r&&n._setStatRange(r),(t.isRegression||t.setRange)&&n._setStatRange(t),t.exec(e)},_execStats:function(t){var e=this,n=t;if(i.isNull(t)||t&&0===t.length)return n;var r=e.get("attrs"),s=e.getAttr("position"),o=s.stat,u=[];i.each(r,function(t){"position"!==t.type&&t.stat&&u.push(t.stat)}),o&&(n=e._execStat(o,n));var c=e.get("labelCfg");if(c&&c.stat&&(n=e._execStat(c.stat,n)),u.length){var l=[],h=s.getDims();i.each(n,function(t){l=l.concat(a.group(t,h))}),n=l,i.each(u,function(t){n=e._execStat(t,n)}),n=[a.merge.apply(this,n)]}return n},_getGroupDims:function(){var t=[],e=this._getGroupScales();return i.each(e,function(e){t.push(e.dim)}),t},_groupFrames:function(t){var e=this._getGroupDims();return a.group(t,e)},_filterNullValue:function(t){var e=this.getXDim();return a.filter(t,function(t){return i.isArray(t[e])||!i.isNull(t[e])})},_createFrame:function(t){var e=this,n=e.get("scales"),r=[],s=[];i.each(n,function(e){var n=e.dim;r.push(n);var i;if(t.contains(n))i=t.colArray(n);else{var o=e.value||0;i=a.Array.repeat(o,t.rowCount())}s.push(i)});var o=new a(s,{names:r});return o},processData:function(t){var e=this._createFrame(t);return e=this._filterNullValue(e),t=this._groupFrames(e),t=this._execStats(t),t=this._saveOriginData(t)},numbericFrames:function(t){var e=this,n=e.get("scales");return i.each(t,function(t){i.each(n,function(e){var n=e.dim;if(e.isCategory||"time"===e.type){var r=t.colArray(n);i.each(r,function(t,n){r[n]=e.translate(t)}),t.colReplace(n,r)}})}),t},_paddingNullValue:function(t){var e=this,n=e.getXDim(),r=e.getYDim(),s=a.merge.apply(null,t),o=a.values(s,n);i.each(t,function(t){if(t.rowCount()<o.length){var e={},a=t.rowObject(0),s=t.colArray(n);i.each(s,function(t){e[t]=!0});var u=!0;i.each(o,function(s){if(e[s])u=!0;else if(u===!0){var o=i.mix({},a);o[n]=s,o[r]=null;var c={};c[n]=s,o[r]=null,o._origin=c,t.addRow(o),u=!1}})}})},processAdjust:function(t){var e=this,n=e.get("adjusts");return i.isNull(n)||i.each(n,function(n){if(!i.inArray(c,n))throw new Error(i.ucfirst(n)+" is not supported, please use "+c.toString());var r={},a=e.getYScale(),o=e.getXScale();if("Dodge"===n){var u=[];if(o.isCategory)u.push("x");else{if(a)throw new Error("dodge is not support linear attribute, please use category attribute!");u.push("y")}var l=e._getGroupDims();r={xDim:e.getXDim(),yDim:a?a.dim:null,adjustNames:u,groupDims:l},e.isInCircle()&&(r.dodgeRatio=1,r.marginRatio=0)}else if("Stack"===n){var h=e.getDefaultValue("size")||3;if(r={xDim:e.getXDim(),size:h},"area"===e.get("type")&&e._paddingNullValue(t),a&&"..y"!==a.dim)r.yDim=e.getYDim();else{var f=e.get("coord");r.height=f.getHeight()}}else r={xDim:e.getXDim(),yDim:e.getYDim()};var g=new s[n](r);"Stack"===n&&a&&"..y"===a.dim?(g.yDim="..y",t=g.processOneDimStack(t)):t=g.processAdjust(t)}),t}}),t.exports=l},function(t,e,n){"use strict";var r=n(1),i=r.MatrixUtil,a=function(){};a.ATTRS={allowSelected:!1},r.augment(a,{allowSelected:function s(){var t=this.get("type"),e=this.get("coord"),n=e&&e.type,s=this.get("allowSelected");return"interval"===t&&"theta"===n&&(s=!0),s},getSelectShapes:function(){var t=this,e=t.get("container"),n=[],i=e.get("children");return r.each(i,function(t){var e=t.get("children");r.each(e,function(t){t.get("origin")&&n.push(t)})}),n},getData:function(){var t=this,e=t.getSelectShapes(),n=[];return r.each(e,function(t){var e=t.get("origin");e&&n.push(e)}),n},getShapeByObj:function(t,e){var n=null;return t&&r.each(e,function(e){if(e.get("origin")===t)return n=e,!1}),n},getSelectedShape:function(t){var e=this;t=t||e.getSelectShapes();var n=null;return r.each(t,function(t){if(t.get("selected"))return n=t,!1}),n},setShapeSelected:function(t,e){var n=this;t.set("selected",e),n.setSelectedStatus(t,e)},setSelectedStatus:function(t,e){var n=this,i=n.get("activeGroup"),a={};if(e){var s=t.get("origin"),o=n.get("geomShape"),u=s.shape||n.getDefaultValue("shape"),c={geom:n,coord:t.get("parent").get("coord"),point:s},l=o.getSelectedCfg(u,c);t.get("originSelectCfg")?a=t.get("originSelectCfg"):(r.each(l,function(e,n){if("transform"===n||"matrix"===n)a.matrix=t.getMatrix().clone();else{var r=t.attr(n);r!==e&&(a[n]=r)}}),t.set("originSelectCfg",a)),l=this.parseCfg(a.matrix,l),t.animate(l,300)}else a=t.get("originSelectCfg"),t.animate(a,300);n.clearShapeActived(),i&&i.get("canvas").draw()},parseCfg:function(t,e){return e.transform&&(e.matrix=i.transform(t,e.transform),delete e.transform),e},setSelected:function(t){var e=this,n=e.get("chart"),r=e.getSelectShapes(),i=e.getSelectedShape(r),a=e.getShapeByObj(t,r);i!==a&&(i&&(e.setShapeSelected(i,!1),n.fire("itemunselected",{shape:i,data:i.get("origin"),view:e,geom:e})),a&&(e.setShapeSelected(a,!0),n.fire("itemselected",{shape:a,data:t,view:e,geom:e})),n.fire("itemselectedchange",{shape:a,data:t,view:e,geom:e,preShape:i,preData:i?i.get("origin"):null}))},getSelected:function(){var t=this,e=t.getSelectedShape(null),n=null;return e&&(n=e.get("origin")),n},clearSelected:function(){this.setSelected(null)}}),t.exports=a},function(t,e,n){"use strict";function r(t){return t.alias||t.dim}var i=n(1),a=n(5),s="_origin",o=function(){};o.ATTRS={tooltipMap:{},tooltipDims:null,shareTooltip:!0},i.augment(o,{_snapEqual:function(t,e,n){var r;return t=n.translate(t),e=n.translate(e),r=n.isCategory?t===e:Math.abs(t-e)<=.001},_getScaleValueByPoint:function(t){var e=0,n=this.get("coord"),r=this.getXScale(),i=n.invert(t),a=i.x;return this.isInCircle()&&a>(1+r.rangeMax())/2&&(a=r.rangeMin()),e=r.invert(a),r.isCategory&&(e=r.translate(e)),e},_getTipMapScale:function(t){var e=this.get("tooltipMap"),n=e&&e[t];return this._getScale(n)},_getTipValueScale:function(){var t=this._getTipMapScale("value");if(!t){var e=this.getLegendAttr();i.each(e,function(e){var n=e.getScale(e.type);if(n.isLinear)return t=n,!1})}var n=this.getXScale(),r=this.getYScale();return!t&&r&&"..y"===r.dim?n:t||r||n},_getTipTitleScale:function(){var t=this,e=t._getTipMapScale("title");if(!e){var n,r=t.getAttr("position"),a=r.getDims();i.each(a,function(t){if(t.indexOf("..")===-1)return n=t,!1}),e=t._getScale(n)}return e},findPoint:function(t,e){var n=this,r=null,a=e.toJSON(),o=n.getXScale(),u=o.dim,c=n.get("type");if("heatmap"===c||"contour"===c||"point"===c){var l,h=n.get("coord"),f=h.invert(t),g=n.getYScale(),p=g.dim,v=o.invert(f.x),d=g.invert(f.y),x={};i.each(a,function(t){var e=(t._origin[u]-v)*(t._origin[u]-v)+(t._origin[p]-d)*(t._origin[p]-d);(!l||e<l)&&(l=e,x=t)}),r=x}else{var m=a[0],y=a[a.length-1];if(!m)return r;var _=n._getScaleValueByPoint(t),S=m[s][u],w=y[s][u];if(i.isArray(S))i.each(a,function(t){var e=t[s];if(o.translate(e[u][0])<=_&&o.translate(e[u][1])>=_)return r=t,!1});else{if(i.isNumber(_)&&(_>o.translate(w)||_<o.translate(S)))return null;var b;i.each(a,function(t,e){var c=t[s];return n._snapEqual(c[u],_,o)?(r=t,!1):void(i.isNumber(_)&&o.translate(c[u])<=_&&(y=t,
	b=a[e+1]))}),y&&b&&Math.abs(o.translate(y[s][u])-_)>Math.abs(o.translate(b[s][u])-_)&&(y=b)}var M=n.getXDistance();!r&&Math.abs(o.translate(y[s][u])-_)<M/2&&(r=y)}return r},getTipTitle:function(t){var e,n="",r=this.get("tooltipMap"),i=r.title;if(i){if(e=this._getScale(i),!e)return i}else e=this._getTipTitleScale();if(e){var a=t[e.dim];n=e.getText(a)}else if("heatmap"===this.get("type")){var s=this.getXScale(),o=this.getYScale(),u=s.getText(t[s.dim]),c=o.getText(t[o.dim]);n="( "+u+", "+c+" )"}return n},getTipValue:function(t){var e,n=this,r=n._getTipValueScale(),a=r.dim;if(e=t[a],i.isArray(e)){var s=[];i.each(e,function(t){s.push(r.getText(t))}),e=s.join("-")}else e=r.getText(e);return e},getTipName:function(t){var e,n,a=this.get("tooltipMap"),s=a.name;if(s&&(n=this._getScale(s),!n))return s;var o=this._getGroupScales();if(!n&&o.length&&i.each(o,function(t){return n=t,!1}),n){var u=n.dim;e=n.getText(t[u])}else{var c=this._getTipValueScale();e=r(c)}return e},getTipItems:function(t,e){function n(e,n){i.isNull(n)||""===n||g.push({title:h,point:t,name:e||h,value:n,color:t.color||a.defaultColor,marker:!0})}var o=this,u=t[s];e&&o.set("tooltipMap",e);var c,l,h=o.getTipTitle(u),f=o.get("tooltipDims"),g=[];return f?i.each(f,function(t){var e=o._getScale(t);c=r(e),l=e.getText(u[t]),n(c,l)}):(l=o.getTipValue(u),c=o.getTipName(u),n(c,l)),g},isShareTooltip:function(){var t=this.get("shareTooltip"),e=this.get("type");if("interval"===e){var n=this.get("coord"),r=n.type;("theta"===r||"polar"===r&&n.isTransposed)&&(t=!1)}else this.getYScale()&&!i.inArray(["contour","point","polygon"],e)||(t=!1);return t}}),t.exports=o},function(t,e,n){"use strict";function r(t){var e=g.shape.hollowArea,n=l.mix(!0,{},e,{stroke:t.color,lineWidth:t.size,strokeOpacity:t.opacity},t.style);return n}function i(t){var e=g.shape.area,n=l.mix(!0,{},e,{fill:t.color,stroke:t.color,lineWidth:t.size,fillOpacity:t.opacity},t.style);return n}function a(t,e){var n="",r=[],i=[],a=[],s=t.isInCircle;return l.each(t.points,function(t){i.push(t[0]),a.push(t[1])}),a=a.reverse(),r.push(i,a),l.each(r,function(t,r){var i="";if(i=e?f.getSplinePath(t,!1):f.getLinePath(t,!1),s){var a=t[0];i+=l.substitute("L {x} {y}",a)}else r>0&&(i=i.replace("M","L"));n+=i}),n+="z"}function s(t,e,n){return[["M",t-n,e+n],["L",t-n,e-n],["L",t,e],["L",t+n,e-n],["L",t+n,e+n],["z"]]}function o(t,e,n){return l.path2Absolute([["M",t-n,e+n],["L",t-n,e],["R",t-n/2,e-n/2,t,e,t+n/2,e+n/2,t+n,e],["L",t+n,e+n],["z"]])}function u(t,e,n){var a=n?r(t):i(t);return l.mix({symbol:e?o:s},a)}function c(t){return t&&t.indexOf("line")!==-1?g.activeShape.hollowArea:g.activeShape.area}var l=n(1),h=n(15),f=n(20),g=n(5),p=[2,1],v=h.registGeom("area",{defaultShapeType:"area",getActiveCfg:function(t){return c(t)}});h.registShape("area","area",{getShapePoints:function(t){var e=[],n=t.x,r=t.y,i=t.y0;return r=l.isArray(r)?r:[i,r],l.each(r,function(t){e.push({x:n,y:t})}),e},drawShape:function(t,e){var n=i(t),r=a(t,!1);return r=this.parsePath(r,!1),e.addShape("path",{attrs:l.mix(n,{path:r})})},getMarkerCfg:function(t){return u(t,!1,!1)}}),h.registShape("area","smooth",{drawShape:function(t,e){var n=i(t),r=a(t,!0);return r=this.parsePath(r,!1),e.addShape("path",{attrs:l.mix(n,{path:r})})},getMarkerCfg:function(t){return u(t,!0,!1)}}),h.registShape("area","line",{drawShape:function(t,e){var n=r(t),i=a(t,!1);return i=this.parsePath(i,!1),e.addShape("path",{attrs:l.mix(n,{path:i})})},getMarkerCfg:function(t){return u(t,!1,!0)}}),h.registShape("area","dotLine",{drawShape:function(t,e){var n=r(t),i=a(t,!1);return n.lineDash=p,i=this.parsePath(i),e.addShape("path",{attrs:l.mix(n,{path:i})})},getMarkerCfg:function(t){var e=u(t,!1,!0);return e.lineDash=p,e}}),h.registShape("area","smoothLine",{drawShape:function(t,e){var n=r(t),i=a(t,!0);return i=this.parsePath(i,!1),e.addShape("path",{attrs:l.mix(n,{path:i})})},getMarkerCfg:function(t){return u(t,!0,!0)}}),h.registShape("area","dotSmoothLine",{drawShape:function(t,e){var n=r(t),i=a(t,!0);return n.lineDash=p,i=this.parsePath(i,!1),e.addShape("path",{attrs:l.mix(n,{path:i})})},getMarkerCfg:function(t){var e=u(t,!0,!0);return e.lineDash=p,e}}),v.spline=v.smooth,t.exports=v},function(t,e,n){"use strict";function r(t){var e=c.shape.line,n=s.mix(!0,{},e,{stroke:t.color,lineWidth:t.size,strokeOpacity:t.opacity,opacity:t.opacity},t.style);return n}function i(t,e){var n=[];n.push({x:t.x,y:.5*t.y+1*e.y/2}),n.push({y:.5*t.y+1*e.y/2,x:e.x}),n.push(e);var r=[["M",t.x,t.y]],i=["C"];return s.each(n,function(t){i.push(t.x,t.y)}),r.push(i),r}function a(t,e){var n=[];n.push({y:t.y*(1-h)+e.y*h,x:t.x}),n.push({y:t.y*(1-h)+e.y*h,x:e.x}),n.push(e);var r=[["M",t.x,t.y]];return s.each(n,function(t){r.push(["L",t.x,t.y])}),r}var s=n(1),o=n(15),u=n(59),c=n(5),l=n(20),h=1/3,f=o.registGeom("edge",{defaultShapeType:"line",getShapePoints:function(t,e){return u.splitPoints(e)},getActiveCfg:function(){return{strokeOpacity:.7}}});o.registShape("edge","line",{drawShape:function(t,e){var n=this.parsePoints(t.points),i=r(t),a=l.getLinePath(n),o=e.addShape("path",{attrs:s.mix(i,{path:a})});return o}}),o.registShape("edge","vhv",{drawShape:function(t,e){var n=t.points,i=r(t),o=a(n[0],n[1]);o=this.parsePath(o);var u=e.addShape("path",{attrs:s.mix(i,{path:o})});return u}}),o.registShape("edge","smooth",{drawShape:function(t,e){var n=t.points,a=r(t),o=i(n[0],n[1]);o=this.parsePath(o);var u=e.addShape("path",{attrs:s.mix(a,{path:o})});return u}}),t.exports=f},function(t,e,n){"use strict";function r(t,e){var n=t.x,r=t.y,i=t.y0,a=t.size,s=i,o=r;p.isArray(r)&&(o=r[1],s=r[0]);var u,c;p.isArray(n)?(u=n[0],c=n[1]):(u=n-a/2,c=n+a/2);var l=[];return l.push({x:u,y:s},{x:u,y:o}),e?l.push({x:c,y:(o+s)/2}):l.push({x:c,y:o},{x:c,y:s}),l}function i(t){for(var e=[],n=0;n<t.length;n++){var r=t[n];if(r){var i=0===n?"M":"L";e.push([i,r.x,r.y])}}var a=t[0];return e.push(["L",a.x,a.y]),e.push(["z"]),e}function a(t){var e=t.x,n=t.y,r=t.y0,i=[];return p.isArray(n)?p.each(n,function(t,n){i.push({x:p.isArray(e)?e[n]:e,y:t})}):i.push({x:e,y:n},{x:e,y:r}),i}function s(t){var e=t.x,n=p.isArray(t.y)?t.y[1]:t.y,r=p.isArray(t.y)?t.y[0]:t.y0,i=t.size,a=[];return a.push({x:e-i/2,y:n},{x:e+i/2,y:n},{x:e,y:n},{x:e,y:r},{x:e-i/2,y:r},{x:e+i/2,y:r}),a}function o(t){var e=[];return e.push(["M",t[0].x,t[0].y],["L",t[1].x,t[1].y],["M",t[2].x,t[2].y],["L",t[3].x,t[3].y],["M",t[4].x,t[4].y],["L",t[5].x,t[5].y]),e}function u(t){var e=x.shape.interval,n=p.mix(!0,{},e,{fill:t.color,stroke:t.color,fillOpacity:t.opacity},t.style);return n}function c(t){var e=x.shape.hollowInterval,n=p.mix(!0,{},e,{stroke:t.color,strokeOpacity:t.opacity},t.style);return n}function l(t,e){var n=[],r=t.points,i=t.nextPoints;return p.isNull(i)?e?n.push(["M",r[0].x,r[0].y],["L",r[1].x,r[1].y],["L",r[2].x,r[2].y],["L",r[3].x,r[3].y],["Z"]):n.push(["M",r[0].x,r[0].y],["L",r[1].x,r[1].y],["L",r[2].x,r[2].y],["Z"]):n.push(["M",r[0].x,r[0].y],["L",r[1].x,r[1].y],["L",i[1].x,i[1].y],["L",i[0].x,i[0].y],["Z"]),n}function h(t){return t&&"rect"!==t?x.activeShape.hollowInterval:x.activeShape.interval}function f(t,e){var n,r,i,a,s=e.getRadius(),o=e.get("inner"),u=s*o;return!p.isArray(t.x)&&p.isArray(t.y)&&(t.x=[t.x,t.x]),p.isArray(t.x)?(i={x:t.x[0],y:t.y[0]},a={x:t.x[1],y:t.y[1]},n=d.getPointAngle(e,i),r=d.getPointAngle(e,a),r<=n&&(r+=2*Math.PI)):(a=t,n=e.get("startAngle"),r=d.getPointAngle(e,a)),{r:s,ir:u,startAngle:n,endAngle:r}}function g(t,e){var n=e.coord,r=e.point,i=7.5;if(n&&"theta"===n.type){var a=f(r,n),s=(a.endAngle-a.startAngle)/2+a.startAngle,o=i*Math.cos(s),u=i*Math.sin(s);e={transform:[["t",o,u]]}}return e}var p=n(1),v=n(15),d=n(20),x=n(5),m=v.registGeom("interval",{defaultShapeType:"rect",getActiveCfg:function(t){return h(t)},getSelectedCfg:function(t,e){return g(t,e)}});v.registShape("interval","rect",{getShapePoints:function(t){return r(t)},drawShape:function(t,e){var n=u(t),r=i(t.points);return r=this.parsePath(r),e.addShape("path",{attrs:p.mix(n,{path:r})})},getMarkerCfg:function(t){var e=u(t),n=t.isInCircle,r=n?"circle":"square";return p.mix({symbol:r},e)}}),v.registShape("interval","hollowRect",{getShapePoints:function(t){return r(t)},drawShape:function(t,e){var n=c(t),r=i(t.points);return r=this.parsePath(r),e.addShape("path",{attrs:p.mix(n,{path:r})})},getMarkerCfg:function(t){var e=c(t),n=t.isInCircle,r=n?"circle":"square";return p.mix({symbol:r},e)}}),v.registShape("interval","line",{getShapePoints:function(t){return a(t)},drawShape:function(t,e){var n=c(t);n.lineWidth=t.size||1;var r=i(t.points);return r=this.parsePath(r),e.addShape("path",{attrs:p.mix(n,{path:r})})},getMarkerCfg:function(t){var e=c(t);return p.mix({symbol:"line"},e)}}),v.registShape("interval","tick",{getShapePoints:function(t){return s(t)},drawShape:function(t,e){var n=c(t),r=o(t.points);return r=this.parsePath(r),e.addShape("path",{attrs:p.mix(n,{path:r})})},getMarkerCfg:function(t){var e=c(t);return p.mix({symbol:"tick"},e)}}),v.registShape("interval","funnel",{getShapePoints:function(t){return t.size=2*t.size,r(t)},drawShape:function(t,e){var n=u(t),r=l(t,!0);return r=this.parsePath(r),e.addShape("path",{attrs:p.mix(n,{path:r})})},getMarkerCfg:function(t){var e=u(t);return p.mix({symbol:"square"},e)}}),v.registShape("interval","pyramid",{getShapePoints:function(t){return t.size=2*t.size,r(t,!0)},drawShape:function(t,e){var n=u(t),r=l(t,!1);return r=this.parsePath(r),e.addShape("path",{attrs:p.mix(n,{path:r})})},getMarkerCfg:function(t){var e=u(t);return p.mix({symbol:"square"},e)}}),t.exports=m},function(t,e,n){"use strict";function r(t){var e=d.shape.line,n=f.mix(!0,{},e,{stroke:t.color,lineWidth:t.size,strokeOpacity:t.opacity,opacity:t.opacity},t.style);return n}function i(t,e){var n="",r=t.points,i=t.isInCircle;return n+=e?g.getSplinePath(r,i):g.getLinePath(r,i),f.path2Absolute(n)}function a(t,e){var n=[];return f.each(t,function(r,i){var a=t[i+1];n.push(r),a&&(n=n.concat(e(r,a)))}),n}function s(t){var e="";return f.each(t,function(t,n){var r=0===n?"M {x} {y}":"L {x} {y}";e+=f.substitute(r,t)}),e}function o(t,e){var n=a(t.points,e);return s(n)}function u(t,e,n){return[["M",t-n,e],["L",t+n,e]]}function c(t,e,n){return f.path2Absolute([["M",t-n,e],["R",t-n/2,e-n/2,t,e,t+n/2,e+n/2,t+n,e]])}function l(t,e){return f.mix({symbol:e?c:u},r(t))}function h(t,e){return f.mix({symbol:e},r(t))}var f=n(1),g=n(20),p=n(59),v=n(15),d=n(5),x=[2,1],m=[10,5],y=v.registGeom("line",{defaultShapeType:"line",getMarkerCfg:function(t,e){var n=y[t]||y.line;return n.getMarkerCfg(e)},getActiveCfg:function(){return d.activeShape.line}});v.registShape("line","line",{getShapePoints:function(t){return p.splitPoints(t)},drawShape:function(t,e){var n=r(t),a=i(t,!1);return a=this.parsePath(a,!1),e.addShape("path",{attrs:f.mix(n,{path:a})})},getMarkerCfg:function(t){return l(t)}}),v.registShape("line","dot",{drawShape:function(t,e){var n=r(t),a=i(t,!1);return a=this.parsePath(a,!1),e.addShape("path",{attrs:f.mix(n,{path:a,lineDash:x})})},getMarkerCfg:function(t){var e=l(t,!1);return e.lineDash=x,e}}),v.registShape("line","fill",{drawShape:function(t,e){var n=r(t),a=i(t,!1);return a=this.parsePath(a,!1),a.push(["z"]),e.addShape("path",{attrs:f.mix(n,{path:a,fill:n.stroke})})},getMarkerCfg:function(t){var e=l(t,!1);return e.fill=e.stroke,e}}),v.registShape("line","dash",{drawShape:function(t,e){var n=r(t),a=i(t,!1);return a=this.parsePath(a,!1),e.addShape("path",{attrs:f.mix(n,{path:a,lineDash:m})})},getMarkerCfg:function(t){var e=l(t,!1);return e.lineDash=m,e}}),v.registShape("line","smooth",{drawShape:function(t,e){var n=r(t),a=i(t,!0);return a=this.parsePath(a,!1),e.addShape("path",{attrs:f.mix(n,{path:a})})},getMarkerCfg:function(t){return l(t,!0)}}),v.registShape("line","dotSmooth",{drawShape:function(t,e){var n=r(t),a=i(t,!0);return a=this.parsePath(a,!1),e.addShape("path",{attrs:f.mix(n,{path:a,lineDash:x})})},getMarkerCfg:function(t){var e=l(t,!0);return e.lineDash=x,e}}),v.registShape("line","hv",{drawShape:function(t,e){var n=r(t),i=o(t,function(t,e){var n=[];return n.push({x:e.x,y:t.y}),n});return i=this.parsePath(i,!1),e.addShape("path",{attrs:f.mix(n,{path:i})})},getMarkerCfg:function(t){return h(t,function(t,e,n){return[["M",t-n,e-n],["L",t,e-n],["L",t,e],["L",t+n,e]]})}}),v.registShape("line","vh",{drawShape:function(t,e){var n=r(t),i=o(t,function(t,e){var n=[];return n.push({x:t.x,y:e.y}),n});return i=this.parsePath(i,!1),e.addShape("path",{attrs:f.mix(n,{path:i})})},getMarkerCfg:function(t){return h(t,function(t,e,n){return[["M",t-n,e],["L",t,e],["L",t,e-n],["L",t+n,e-n]]})}}),v.registShape("line","hvh",{drawShape:function(t,e){var n=r(t),i=o(t,function(t,e){var n=[],r=(e.x-t.x)/2+t.x;return n.push({x:r,y:t.y}),n.push({x:r,y:e.y}),n});return i=this.parsePath(i,!1),e.addShape("path",{attrs:f.mix(n,{path:i})})},getMarkerCfg:function(t){return h(t,function(t,e,n){return[["M",t-3*n/2,e],["L",t-n/2,e],["L",t-n/2,e-n/2],["L",t+n/2,e-n/2],["L",t+n/2,e],["L",t+3*n/2,e]]})}}),v.registShape("line","vhv",{drawShape:function(t,e){var n=r(t),i=o(t,function(t,e){var n=[],r=(e.y-t.y)/2+t.y;return n.push({x:t.x,y:r}),n.push({x:e.x,y:r}),n});return i=this.parsePath(i,!1),e.addShape("path",{attrs:f.mix(n,{path:i})})},getMarkerCfg:function(t){return h(t,function(t,e,n){return[["M",t-n,e],["L",t-n,e-n/2],["L",t,e-n/2],["L",t,e-n],["L",t,e+n/2],["L",t+n,e+n/2]]})}}),y.spline=y.smooth,t.exports=y},function(t,e,n){"use strict";function r(t){var e=c.shape.point,n=s.mix(!0,{},e,{fill:t.color,fillOpacity:t.opacity,radius:t.size},t.style);return n}function i(t){var e=c.shape.hollowPoint,n=s.mix(!0,{},e,{stroke:t.color,strokeOpacity:t.opacity,radius:t.size},t.style);return n}function a(t){return!t||0!==t.indexOf("hollow")&&s.indexOf(f,t)===-1?c.activeShape.point:c.activeShape.hollowPoint}var s=n(1),o=n(59),u=n(11),c=n(5),l=n(15),h=["circle","square","bowtie","diamond","hexagon","triangle","triangle-down"],f=["cross","tick","plus","hyphen","line","pointerLine","pointerArrow"],g=Math.sqrt(3);s.mix(u.Shape.Marker.Symbols,{hexagon:function(t,e,n){var r=n/2*g;return[["M",t,e-n],["L",t+r,e-n/2],["L",t+r,e+n/2],["L",t,e+n],["L",t-r,e+n/2],["L",t-r,e-n/2],["z"]]},bowtie:function(t,e,n){return[["M",t-n,e-n],["L",t+n,e+n],["L",t+n,e-n],["L",t-n,e+n],["z"]]},cross:function(t,e,n){return[["M",t-n,e-n],["L",t+n,e+n],["M",t+n,e-n],["L",t-n,e+n]]},tick:function(t,e,n){return[["M",t-n/2,e-n],["L",t+n/2,e-n],["M",t,e-n],["L",t,e+n],["M",t-n/2,e+n],["L",t+n/2,e+n]]},plus:function(t,e,n){return[["M",t-n,e],["L",t+n,e],["M",t,e-n],["L",t,e+n]]},hyphen:function(t,e,n){return[["M",t-n,e],["L",t+n,e]]},line:function(t,e,n){return[["M",t,e-n],["L",t,e+n]]}});var p=l.registGeom("point",{defaultShapeType:"hollowCircle",getActiveCfg:function(t,e){var n=a(t);return e&&e.size&&delete n.radius,n},getShapePoints:function(t,e){return o.splitPoints(e)}});s.each(h,function(t){l.registShape("point",t,{drawShape:function(e,n){e.points=this.parsePoints(e.points);var i=r(e);return n.addShape("Marker",{attrs:s.mix(i,{x:e.points[0].x,y:e.points[0].y,symbol:t})})},getMarkerCfg:function(e){var n=r(e);return n.symbol=t,n}}),l.registShape("point","hollow"+s.ucfirst(t),{drawShape:function(e,n){e.points=this.parsePoints(e.points);var r=i(e);return n.addShape("Marker",{attrs:s.mix(r,{x:e.points[0].x,y:e.points[0].y,symbol:t})})},getMarkerCfg:function(e){var n=i(e);return n.symbol=t,n}})}),s.each(f,function(t){l.registShape("point",t,{drawShape:function(e,n){e.points=this.parsePoints(e.points);var r=i(e);return n.addShape("Marker",{attrs:s.mix(r,{x:e.points[0].x,y:e.points[0].y,symbol:t})})},getMarkerCfg:function(e){var n=i(e);return n.symbol=t,n}})}),t.exports=p},function(t,e,n){"use strict";function r(){return u.activeShape.polygon}function i(t){var e=u.shape.polygon,n=s.mix(!0,{},e,{stroke:t.color,fill:t.color,fillOpacity:t.opacity},t.style);return n}function a(t){var e="",n=[t[0].x,t[0].y],r=0,i=t[0];return s.each(t,function(a,o){var u=0===o?"M {x} {y} ":"L {x} {y} ";if(e+=s.substitute(u,a),r!==o&&o<t.length-1&&s.equalsArray(n,[a.x,a.y])){var c=t[o+1];e+="z"+s.substitute("M {x} {y}",c),i=c,r=o+1,n=[c.x,c.y]}}),e+=s.substitute("L {x} {y}",i),e+="z",s.path2Absolute(e)}var s=n(1),o=n(15),u=n(5),c=o.registGeom("polygon",{defaultShapeType:"polygon",getMarkerCfg:function(){return{symbol:"rect"}},getActiveCfg:function(t){return r(t)}});o.registShape("polygon","polygon",{getShapePoints:function(t){var e=[];return s.each(t.x,function(n,r){var i=t.y[r];e.push({x:n,y:i})}),e},drawShape:function(t,e){var n=i(t),r=a(t.points);return r=this.parsePath(r),e.addShape("path",{attrs:s.mix(n,{path:r})})}}),o.registShape("polygon","hollow",{drawShape:function(t,e){var n=i(t),r=a(t.points);return r=this.parsePath(r),e.addShape("path",{attrs:s.mix(n,{path:r})})}}),t.exports=c},function(t,e,n){"use strict";function r(t){f.isArray(t)||(t=[t]);var e=t[0],n=t[t.length-1],r=t.length>1?t[1]:e,i=t.length>3?t[3]:n,a=t.length>2?t[2]:r;return{min:e,max:n,min1:r,max1:i,median:a}}function i(t,e){f.each(t,function(t){e.push({x:t[0],y:t[1]})})}function a(t){var e=p.shape.line,n=f.mix(!0,{},e,{stroke:t.color,fill:"#fff",fillOpacity:0,strokeOpacity:t.opacity});return n}function s(t,e,n){var a,s,o=[];return f.isArray(e)?(s=r(e),a=[[t-n/2,s.max],[t+n/2,s.max],[t,s.max],[t,s.max1],[t-n/2,s.min1],[t-n/2,s.max1],[t+n/2,s.max1],[t+n/2,s.min1],[t,s.min1],[t,s.min],[t-n/2,s.min],[t+n/2,s.min],[t-n/2,s.median],[t+n/2,s.median]]):(e=e||.5,s=r(t),a=[[s.min,e-n/2],[s.min,e+n/2],[s.min,e],[s.min1,e],[s.min1,e-n/2],[s.min1,e+n/2],[s.max1,e+n/2],[s.max1,e-n/2],[s.max1,e],[s.max,e],[s.max,e-n/2],[s.max,e+n/2],[s.median,e-n/2],[s.median,e+n/2]]),i(a,o),o}function o(t){f.isArray(t)||(t=[t]);var e=t.sort(function(t,e){return t<e?1:-1}),n=e.length;if(n<4)for(var r=e[n-1],i=0;i<4-n;i++)e.push(r);return e}function u(t,e,n){var r=o(e),i=[{x:t,y:r[0]},{x:t,y:r[1]},{x:t-n/2,y:r[2]},{x:t-n/2,y:r[1]},{x:t+n/2,y:r[1]},{x:t+n/2,y:r[2]},{x:t,y:r[2]},{x:t,y:r[3]}];return i}function c(t){var e=[["M",t[0].x,t[0].y],["L",t[1].x,t[1].y],["M",t[2].x,t[2].y],["L",t[3].x,t[3].y],["M",t[4].x,t[4].y],["L",t[5].x,t[5].y],["L",t[6].x,t[6].y],["L",t[7].x,t[7].y],["L",t[4].x,t[4].y],["Z"],["M",t[8].x,t[8].y],["L",t[9].x,t[9].y],["M",t[10].x,t[10].y],["L",t[11].x,t[11].y],["M",t[12].x,t[12].y],["L",t[13].x,t[13].y]];return e}function l(t){var e=[["M",t[0].x,t[0].y],["L",t[1].x,t[1].y],["M",t[2].x,t[2].y],["L",t[3].x,t[3].y],["L",t[4].x,t[4].y],["L",t[5].x,t[5].y],["Z"],["M",t[6].x,t[6].y],["L",t[7].x,t[7].y]];return e}function h(t,e){return f.mix({symbol:e},a(t))}var f=n(1),g=n(15),p=n(5),v=g.registGeom("schema",{defaultShapeType:"",getActiveCfg:function(){return p.activeShape.line}});g.registShape("schema","box",{getShapePoints:function(t){return s(t.x,t.y,t.size)},drawShape:function(t,e){var n=a(t),r=c(t.points);return r=this.parsePath(r),e.addShape("path",{attrs:f.mix(n,{path:r})})},getMarkerCfg:function(t){return h(t,function(t,e,n){var r=[e-n,e-n/2,e,e+n/2,e+n],i=s(t,r,2*n);return c(i)})}}),g.registShape("schema","candle",{getShapePoints:function(t){return u(t.x,t.y,t.size)},drawShape:function(t,e){var n=a(t),r=l(t.points);return r=this.parsePath(r),e.addShape("path",{attrs:f.mix(n,{path:r,fill:t.color,fillOpacity:t.opacity,lineWidth:1})})},getMarkerCfg:function(t){var e=h(t,function(t,e,n){e=[e+1.5*n,e+n/2,e-n/2,e-1.5*n];var r=u(t,e,n);return l(r)});return e.fill=t.color,e.fillOpacity=t.opacity,e}}),t.exports=v},function(t,e,n){"use strict";var r=n(1),i=n(46),a="#62a4e8",s=r.mix(!0,{},i,{defaultColor:a,colors:{"default":["#61A5E8","#7ECF51","#EECB5F","#E4925D","#E16757","#9570E5","#605FF0"],intervalStack:["#61A5E8","#7ECF51","#EECB5F","#E4925D","#E16757","#9570E5","#605FF0","#605ff0","#85ca36","#1c9925","#0d8b5f","#0f9cd3","#2f7e9b","#2f677d","#9b7fed","#7453d6","#3b1d98","#27abb1","#017377","#015f63","#b86868","#5669b7","#e5aab4","#60b65f","#98d2b2","#c9c8bc","#45c3dc","#e17979","#5baa5a","#eaccc2","#ffaa74"]},shape:{point:{fill:a},hollowPoint:{stroke:a},interval:{fill:a},hollowInterval:{stroke:a},area:{fill:a},polygon:{fill:a},hollowPolygon:{stroke:a},hollowArea:{stroke:a},line:{stroke:a}},guide:{line:{stroke:a},rect:{fill:a},tag:{line:{stroke:a},rect:{fill:a}}},tooltipMarker:{stroke:a}});t.exports=s},function(t,e,n){"use strict";var r=n(1),i=n(46),a=r.mix(!0,{},i,{plotCfg:{margin:[20,80,60,80],border:{fill:"#18242E"}},axis:{top:{labels:{label:{fill:"#D5D4D4"}},tickLine:{stroke:"#46525F"}},bottom:{labels:{label:{fill:"#999"}},line:{stroke:"#46525F"},tickLine:{stroke:"#46525F"}},left:{labels:{label:{fill:"#999"}},line:{stroke:"#46525F"},tickLine:{stroke:"#46525F"},grid:{line:{stroke:"#46525F"}}},right:{labels:{label:{fill:"#999"}},line:{stroke:"#46525F"},tickLine:{stroke:"#46525F"}},circle:{line:{stroke:"#46525F"},grid:{line:{stroke:"#46525F"}},labels:{label:{fill:"#999"}}},gauge:{tickLine:{stroke:"#46525F"},labels:{label:{fill:"#999"}}},clock:{tickLine:{stroke:"#46525F"},subTick:5,labels:{label:{fill:"#999"}}},radius:{labels:{label:{fill:"#999"}},line:{stroke:"#46525F"},grid:{line:{stroke:"#46525F"}}}},legend:{right:{word:{fill:"#999"},title:{fill:"#999"}},left:{word:{fill:"#999"},title:{fill:"#999"}},top:{word:{fill:"#999"}},bottom:{word:{fill:"#999"}}},guide:{text:{fill:"#999"},tag:{text:{fill:"#999"}}}});t.exports=a},function(t,e,n){"use strict";var r={"default":n(46),dark:n(324),cheery:n(323)};t.exports=r},function(t,e,n){"use strict";function r(t){var e=t.get("el");e.style.position="absolute",e.style.top=0,e.style.left=0}function i(t,e){var n=new c(t);return e&&r(n),n.set("fontFamily",f.fontFamily),n}function a(t){var e=t.id,n=document.getElementById(e),r=t.container;if(!n&&!r)throw new Error("please specify the canvas container Id !");if(n&&r)throw new Error('please specify the "container" or "id" property !');if(!r){var i=u.guid("g-chart");r=u.createDom("<div></div>"),r.id=i,n.appendChild(r)}return r}function s(t){var e=t.container,n=u.getWidth(e);return t.width=n,t}function o(t){var e=t.width,n=t.height,r=t.container,a={width:e,height:n,containerDOM:r,capture:!1},s=i(a,!1),o=i(a,!0),u=i(a,!0);return t.backCanvas=s,t.canvas=o,t.frontCanvas=u,t}var u=n(1),c=n(11),l=c.Components,h=l.Plot,f=n(5),g={initContainer:function(t){var e=u.mix({},f.plotCfg,t.plotCfg),n=a(t);t.plotCfg=e,t.container=n,t.forceFit&&(t=s(t)),t=o(t);var r=t.backCanvas,i=r.addGroup(h.Back,e);return t.backPlotBg=i,t.plotRange=i.get("plotRange"),t}};t.exports=g},function(t,e,n){"use strict";function r(t){var e=["polar","plus","theta"];return o.inArray(e,t.type)}function i(t){var e=t.coordCfg;return!(e&&!o.isNull(e.startAngle)&&!o.isNull(e.endAngle)&&e.endAngle-e.startAngle<2*Math.PI)}function a(t,e){var n=!!t[e];return n||o.each(t,function(t,r){var i=r.split("*");if(i.indexOf(e)!==-1)return n=!0,!1}),n}function s(t,e){return function(n){var r=this,i=[];e&&(i=i.concat(e)),n&&(i=i.concat(n));var a=new g({chart:r,type:t,adjusts:i});return r._addLayer(a),a}}var o=n(1),u=n(27),c=n(2),l=n(5),h=n(93),f=n(96),g=n(301),p=function x(t){x.superclass.constructor.call(this,t),this._init()};p.ATTRS={start:null,end:null,tooltipEnable:!0,index:0,data:null,layers:[],geoms:[],filters:{},scales:{}},o.extend(p,u),o.augment(p,{_init:function(){var t=this.get("data");this._initData(t),h.initScale(this),h.initCoord(this),h.initAxis(this),h.initGuide(this),this.get("start")||this.set("start",{x:0,y:0}),this.get("end")||this.set("end",{x:1,y:1}),this.set("geoms",[]),this.set("layers",[]),this.set("scales",{}),this.set("axisCfg",{}),this.set("filters",{})},_initData:function(t){t&&(t instanceof c||(t=new c(t)),this.set("data",t))},_addLayer:function(t){this.get("layers").push(t)},_trainScales:function(t,e){var n=this.get("scales"),r=[];o.each(n,function(t){e(t)&&r.push(t)});var i=this.get("scaleAssist");i.trainScales(t,r)},_trainLinearScales:function(t){this._trainScales(t,function(t){return t.isLinear})},_trainCatScales:function(t){var e=this,n=e.get("filters");e._trainScales(t,function(t){return t.isCategory&&!a(n,t.dim)})},_processScales:function(){var t=this,e=t.get("coordAssist"),n=t.getXScale(),a=t.getYScales(),s=[];n&&s.push(n),s=s.concat(a);var u=r(e)&&i(e);o.each(s,function(t){if(t.isCategory){var n,r=t.values.length;if(1===r)n=[.5,1];else{var i=1,a=0;u?e.hasAction("transpose")?(i=l.widthRatio.multiplePie,a=1/r*i,n=[a/2,1-a/2]):n=[0,1-1/r]:(i=l.widthRatio.column,a=1/r*i,n=[a,1-a])}t.range=n}})},_createCoord:function(){var t=this.get("coordAssist"),e=this.get("region"),n=e.start,r=e.end,i=t.createCoord(n,r);if(this.get("facet")){var a=this.get("facet");"mirror"===a.type&&(1===a.rows?(i.transpose(),0===a.colIndex&&i.scale(-1,1)):1===a.rowIndex&&i.scale(1,-1))}return this.set("coord",i),i},_createGeoms:function(){var t=this.get("layers"),e=this.get("coord"),n=[];return o.each(t,function(t){var r=t.createGeom();r.set("coord",e),n.push(r)}),this.set("geoms",n),n},_renderAxis:function(){var t=this.get("axisAssist");t.container=this.get("backPlot");var e=this.getXScale(),n=this.getYScales();t.createAxis(this,e,n)},_renderGuide:function(){var t=this.get("guideAssist");if(t.guides.length){if(!this.get("frontPlot")){var e=this.get("frontCanvas"),n=e.addGroup();this.set("frontPlot",n)}t.backPlot=this.get("backPlot"),t.frontPlot=this.get("frontPlot");var r=this.get("coord"),i=this.getXScale(),a=this.getYScales()[0];t.setScale(i,a),t.paint(r)}},_initPlot:function(){if(!this.get("plotContainer")){var t=this.get("canvas"),e=t.addGroup();this.set("plotContainer",e)}if(!this.get("backPlot")){var n=this.get("backCanvas"),r=n.addGroup();this.set("backPlot",r)}},_clearInner:function(){var t=this.get("geoms");return t.length&&o.each(t,function(t){t.destroy()}),this.set("geoms",[]),this.get("plotContainer")&&this.get("plotContainer").clear(),this.get("backPlot")&&this.get("backPlot").clear(),this.get("frontPlot")&&this.get("frontPlot").clear(),this},_filterData:function(t){var e=this.get("scaleAssist"),n=this.get("scales"),r=this.get("filters");return e.filterData(t,r,n)},source:function(t,e){if(e){var n=this.get("scaleAssist");n.defs=e}return this._initData(t),this},coord:function(t,e){var n=this.get("coordAssist");return n.type=t,n.coordCfg=e,n.resetActions(),n},axis:function(t,e){var n=this.get("axisAssist");if(t===!1)n.enable=!1;else{var r=n.axisCfg;n.enable=!0,r[t]=e}return this},guide:function(){return this.get("guideAssist")},filter:function(t,e){var n=this.get("filters");return n[t]=e,this.set("filters",n),this},col:function(t,e){var n=this.get("scaleAssist"),r=n.defs;return r[t]=e,this},render:function(){var t=this;t._initPlot();var e=t.get("scaleAssist"),n=t.get("data"),r=t.get("scales");n=e.processCatScale(n,r),n=t._filterData(n);var i=this._createCoord(),a=this._createGeoms(),s=[];o.each(a,function(t){var e=t.processData(n);t.set("frames",e),s=s.concat(e)});var u=c.forceMerge.apply(null,s);t._trainCatScales(u),t._processScales(),s=[],o.each(a,function(t){var e=t.get("frames");e=t.numbericFrames(e),e=t.processAdjust(e),t.set("frames",e),s=s.concat(e)});var l=c.forceMerge.apply(null,s);t._trainLinearScales(l),t.fire("beforepaint",{chart:t}),o.each(a,function(t){t.paint(i,t.get("frames"),function(e,n){if(t.isShareTooltip()){var r=[],i=t.getXScale().dim;o.each(n,function(t){r.push(c.sort(t,i))}),t.set("frames",r)}})}),t._renderGuide();var h=t.getXScale();h&&t._renderAxis(),t.fire("afterpaint"),t.get("plotContainer").sort();var f=t.get("parent");f&&!f.get("painting")&&(t.get("backCanvas").draw(),t.get("canvas").draw())},tooltip:function(t){this.set("tooltipEnable",t)},changeData:function(t){var e=this.get("scales"),n=this.get("scaleAssist");return this._initData(t),t=this.get("data"),n.resetScales(t,e),this.repaint(),this},clear:function(){return this.get("guideAssist").clear(),this.set("layers",[]),this.set("scales",{}),this.set("filters",{}),this._clearInner(),this.get("backCanvas").draw(),this.get("canvas").draw(),this.get("frontCanvas").draw(),this},repaint:function(){return this._clearInner(),this.render(),this},getActiveShape:function(){var t=this,e=t.get("geoms"),n=null;return o.each(e,function(t){var e=t.get("activeShapes");if(e&&e.length)return n=e[0],!1}),n},getSnapRecords:function(t){var e=this,n=e.get("geoms"),r=[];return o.each(n,function(e){var n,i=e.get("frames");if("point"===e.get("type")){var a=c.merge.apply(null,i);n=e.findPoint(t,a),n&&r.push(n)}else o.each(i,function(i){n=e.findPoint(t,i),n&&r.push(n)})}),r},getPosition:function(t){var e,n,r,i=this,a=i.get("coord"),s=i.getXScale();s&&(r=s.dim,e=s.scale(t[r]));var u=this.get("scales");return o.each(u,function(e){if(e&&e.dim!==r&&t[e.dim]){var i=e.dim;return void(n=e.scale(t[i]))}}),a.convert({x:e,y:n})},getXScale:function(){var t=this.get("geoms"),e=null;return t.length&&(e=t[0].getXScale()),e},getYScales:function(){var t=this.get("geoms"),e=[];return o.each(t,function(t){var n=t.getYScale();n&&o.indexOf(e,n)===-1&&e.push(n)}),e},getGeoms:function(){return this.get("geoms")},getScale:function(t){var e=this.get("scales");return e[t]},createScale:function(t,e){e=e||this.get("data");var n=this.get("scaleAssist"),r=this.get("scales");return r[t]||(r[t]=n.createScale(t,e)),r[t]}});for(var v in f)f.hasOwnProperty(v)&&(v=v.toLowerCase(),p.prototype[v]=s(v));var d=["pointStack","pointJitter","pointDodge","intervalStack","intervalDodge","intervalSymmetric","areaStack","schemaDodge"];o.each(d,function(t){var e=t.replace(/([a-z](?=[A-Z]))/g,"$1 "),n=e.split(" "),r=n[0],i=o.ucfirst(n[1]);"pointDodge"===t&&(i=["Dodge","Stack"]),p.prototype[t]=s(r,i)}),t.exports=p},[332,329,99],function(t,e,n){"use strict";function r(t,e,n,r){var i=t[r]+(e[r]-t[r])*n;return i}var i=n(99),a=n(1);t.exports={calColor:function(t,e,n){var a,s=t.length-1,o=Math.floor(s*e),u=s*e-o,c=t[o],l=o===s?c:t[o+1];return"hsl"===n?a=i.hsl2Rgb([r(c,l,u,0),r(c,l,u,1),r(c,l,u,2)]):(a={r:r(c,l,u,0),g:r(c,l,u,1),b:r(c,l,u,2)},a="#"+i.toHex(a.r)+i.toHex(a.g)+i.toHex(a.b)),a},lightness:function(t,e){e=e||0;var n=[[e,1,.9],[e,1,.5]];return this.calColor(n,t,"hsl")},red:function(t){return this.lightness(t,0)},blue:function(t){return this.lightness(t,.66)},green:function(t){return this.lightness(t,.33)},gradient:function(t){var e=this,n=[];return a.isString(t)&&(t=t.split("-")),a.each(t,function(t){t.indexOf("#")===-1&&(t=i.toRGB(t)),n.push(i.rgb2arr(t))}),function(t){return e.calColor(n,t)}},gradientHsl:function(t){var e=this,n=[];return a.isString(t)&&(t=t.split("-")),a.each(t,function(t){t.indexOf("#")===-1&&(t=i.toRGB(t)),n.push(i.rgb2hsl(t))}),function(t){return e.calColor(n,t,"hsl")}},saturation:function(t,e){e=e||0;var n=[[e,0,.5],[e,1,.5]];return this.calColor(n,t,"hsl")},hue:function(t){var e=[[0,1,.5],[1,1,.5]];return this.calColor(e,t,"hsl")},brightness:function(t){var e=[[255,255,255],[0,0,0]];return this.calColor(e,t)},heat:function(t){var e=[[255,255,255],[255,127.5,0],[0,0,0]];return this.calColor(e,t)},rainbow:function(t){var e=[[0,255,255],[0,0,255],[0,255,0],[255,0,0]];return this.calColor(e,t)},circular:function(t){var e=[[0,0,255],[0,255,0],[255,255,0],[255,0,0],[0,0,255]];return this.calColor(e,t)},bipolar:function(t){var e=[[0,255,0],[0,0,0],[255,0,0]];return this.calColor(e,t)}}},function(t,e){/**
		* @license
		*
		* Regression.JS - Regression functions for javascript
		* http://tom-alexander.github.com/regression-js/
		*
		* copyright(c) 2013 Tom Alexander
		* Licensed under the MIT license.
		*
		**/
	"use strict";var n=function(t,e){var n=0,r=0,i=0,a=0,s=0,o=t.length-1,u=new Array(e);for(n=0;n<o;n++){for(a=n,r=n+1;r<o;r++)Math.abs(t[n][r])>Math.abs(t[n][a])&&(a=r);for(i=n;i<o+1;i++)s=t[i][n],t[i][n]=t[i][a],t[i][a]=s;for(r=n+1;r<o;r++)for(i=o;i>=n;i--)t[i][r]-=t[i][n]*t[n][r]/t[n][n]}for(r=o-1;r>=0;r--){for(s=0,i=r+1;i<o;i++)s+=t[i][r]*u[i];u[r]=(t[o][r]-s)/t[r][r]}return u},r={linear:function(t){for(var e=[0,0,0,0,0],n=0,r=[];n<t.length;n++)null!=t[n][1]&&(e[0]+=t[n][0],e[1]+=t[n][1],e[2]+=t[n][0]*t[n][0],e[3]+=t[n][0]*t[n][1],e[4]+=t[n][1]*t[n][1]);for(var i=(n*e[3]-e[0]*e[1])/(n*e[2]-e[0]*e[0]),a=e[1]/n-i*e[0]/n,s=0,o=t.length;s<o;s++){var u=[t[s][0],t[s][0]*i+a];r.push(u)}var c="y = "+Math.round(100*i)/100+"x + "+Math.round(100*a)/100;return{equation:[i,a],points:r,string:c}},linearThroughOrigin:function(t){for(var e=[0,0],n=0,r=[];n<t.length;n++)null!=t[n][1]&&(e[0]+=t[n][0]*t[n][0],e[1]+=t[n][0]*t[n][1]);for(var i=e[1]/e[0],a=0,s=t.length;a<s;a++){var o=[t[a][0],t[a][0]*i];r.push(o)}var u="y = "+Math.round(100*i)/100+"x";return{equation:[i],points:r,string:u}},exponential:function(t){var e=[0,0,0,0,0,0],n=0,r=[];for(u=t.length;n<u;n++)null!=t[n][1]&&(e[0]+=t[n][0],e[1]+=t[n][1],e[2]+=t[n][0]*t[n][0]*t[n][1],e[3]+=t[n][1]*Math.log(t[n][1]),e[4]+=t[n][0]*t[n][1]*Math.log(t[n][1]),e[5]+=t[n][0]*t[n][1]);for(var i=e[1]*e[2]-e[5]*e[5],a=Math.pow(Math.E,(e[2]*e[3]-e[5]*e[4])/i),s=(e[1]*e[4]-e[5]*e[3])/i,o=0,u=t.length;o<u;o++){var c=[t[o][0],a*Math.pow(Math.E,s*t[o][0])];r.push(c)}var l="y = "+Math.round(100*a)/100+"e^("+Math.round(100*s)/100+"x)";return{equation:[a,s],points:r,string:l}},logarithmic:function(t){var e=[0,0,0,0],n=0,r=[];for(o=t.length;n<o;n++)null!=t[n][1]&&(e[0]+=Math.log(t[n][0]),e[1]+=t[n][1]*Math.log(t[n][0]),e[2]+=t[n][1],e[3]+=Math.pow(Math.log(t[n][0]),2));for(var i=(n*e[1]-e[2]*e[0])/(n*e[3]-e[0]*e[0]),a=(e[2]-i*e[0])/n,s=0,o=t.length;s<o;s++){var u=[t[s][0],a+i*Math.log(t[s][0])];r.push(u)}var c="y = "+Math.round(100*a)/100+" + "+Math.round(100*i)/100+" ln(x)";return{equation:[a,i],points:r,string:c}},power:function(t){var e=[0,0,0,0],n=0,r=[];for(o=t.length;n<o;n++)null!=t[n][1]&&(e[0]+=Math.log(t[n][0]),e[1]+=Math.log(t[n][1])*Math.log(t[n][0]),e[2]+=Math.log(t[n][1]),e[3]+=Math.pow(Math.log(t[n][0]),2));for(var i=(n*e[1]-e[2]*e[0])/(n*e[3]-e[0]*e[0]),a=Math.pow(Math.E,(e[2]-i*e[0])/n),s=0,o=t.length;s<o;s++){var u=[t[s][0],a*Math.pow(t[s][0],i)];r.push(u)}var c="y = "+Math.round(100*a)/100+"x^"+Math.round(100*i)/100;return{equation:[a,i],points:r,string:c}},polynomial:function(t,e){"undefined"==typeof e&&(e=2);for(var r=[],i=[],a=[],s=0,o=0,u=0,c=e+1;u<c;u++){for(var l=0,h=t.length;l<h;l++)null!=t[l][1]&&(s+=Math.pow(t[l][0],u)*t[l][1]);r.push(s),s=0;for(var f=[],g=0;g<c;g++){for(var l=0,h=t.length;l<h;l++)null!=t[l][1]&&(o+=Math.pow(t[l][0],u+g));f.push(o),o=0}i.push(f)}i.push(r);for(var p=n(i,c),u=0,h=t.length;u<h;u++){for(var v=0,d=0;d<p.length;d++)v+=p[d]*Math.pow(t[u][0],d);a.push([t[u][0],v])}for(var x="y = ",u=p.length-1;u>=0;u--)x+=u>1?Math.round(p[u]*Math.pow(10,u))/Math.pow(10,u)+"x^"+u+" + ":1==u?Math.round(100*p[u])/100+"x + ":Math.round(100*p[u])/100;return{equation:p,points:a,string:x}},lastvalue:function(t){for(var e=[],n=null,r=0;r<t.length;r++)t[r][1]?(n=t[r][1],e.push([t[r][0],t[r][1]])):e.push([t[r][0],n]);return{equation:[n],points:e,string:""+n}}},i=function(t,e,n){if("string"==typeof t)return r[t](e,n)};t.exports=i},function(t,e,n){!function(){function e(){var t={},e=[];return t.data=function(n){return arguments.length?(e=n.slice(),t):e},t.mb=function(){var t,n,r=e.length;if(1===r)t=0,n=e[0][1];else{for(var i,a,s,o=0,u=0,c=0,l=0,h=0;h<r;h++)i=e[h],a=i[0],s=i[1],o+=a,u+=s,c+=a*a,l+=a*s;t=(r*l-o*u)/(r*c-o*o),n=u/r-t*o/r}return{m:t,b:n}},t.m=function(){return t.mb().m},t.b=function(){return t.mb().b},t.line=function(){var e=t.mb(),n=e.m,r=e.b;return function(t){return r+n*t}},t}function n(t,e){if(t.length<2)return 1;for(var n,r=0,i=0;i<t.length;i++)r+=t[i][1];n=r/t.length;for(var a=0,s=0;s<t.length;s++)a+=Math.pow(n-t[s][1],2);for(var o=0,u=0;u<t.length;u++)o+=Math.pow(t[u][1]-e(t[u][0]),2);return 1-o/a}function r(){var t={},e=0,n={};return t.train=function(t,r){n[r]||(n[r]={});for(var i in t){var a=t[i];void 0===n[r][i]&&(n[r][i]={}),void 0===n[r][i][a]&&(n[r][i][a]=0),n[r][i][t[i]]++}e++},t.score=function(t){var r,i={};for(var a in t){var s=t[a];for(r in n)void 0===i[r]&&(i[r]={}),n[r][a]?i[r][a+"_"+s]=(n[r][a][s]||0)/e:i[r][a+"_"+s]=0}var o={};for(r in i)for(var u in i[r])void 0===o[r]&&(o[r]=0),o[r]+=i[r][u];return o},t}function i(t){for(var e=0,n=0;n<t.length;n++)e+=t[n];return e}function a(t){return 0===t.length?null:i(t)/t.length}function s(t){if(0===t.length)return null;for(var e=1,n=0;n<t.length;n++){if(t[n]<=0)return null;e*=t[n]}return Math.pow(e,1/t.length)}function o(t){if(0===t.length)return null;for(var e=0,n=0;n<t.length;n++){if(t[n]<=0)return null;e+=1/t[n]}return t.length/e}function u(t){if(0===t.length)return null;for(var e=0,n=0;n<t.length;n++)e+=Math.pow(t[n],2);return Math.sqrt(e/t.length)}function c(t){for(var e,n=0;n<t.length;n++)(t[n]<e||void 0===e)&&(e=t[n]);return e}function l(t){for(var e,n=0;n<t.length;n++)(t[n]>e||void 0===e)&&(e=t[n]);return e}function h(t){if(0===t.length)return null;for(var e=a(t),n=[],r=0;r<t.length;r++)n.push(Math.pow(t[r]-e,2));return a(n)}function f(t){return 0===t.length?null:Math.sqrt(h(t))}function g(t,e){for(var n=a(t),r=0,i=0;i<t.length;i++)r+=Math.pow(t[i]-n,e);return r}function p(t){if(t.length<=1)return null;var e=g(t,2);return e/(t.length-1)}function v(t){return t.length<=1?null:Math.sqrt(p(t))}function d(t,e){if(t.length<=1||t.length!=e.length)return null;for(var n=a(t),r=a(e),i=0,s=0;s<t.length;s++)i+=(t[s]-n)*(e[s]-r);return i/(t.length-1)}function x(t,e){var n=d(t,e),r=v(t),i=v(e);return null===n||null===r||null===i?null:n/r/i}function m(t){if(0===t.length)return null;var e=t.slice().sort(function(t,e){return t-e});if(e.length%2===1)return e[(e.length-1)/2];var n=e[e.length/2-1],r=e[e.length/2];return(n+r)/2}function y(t){if(0===t.length)return null;if(1===t.length)return t[0];for(var e,n=t.slice().sort(function(t,e){return t-e}),r=n[0],i=0,a=1,s=1;s<n.length+1;s++)n[s]!==r?(a>i&&(i=a,e=r),a=1,r=n[s]):a++;return e}function _(t,e){var n=a(t),r=f(t),i=Math.sqrt(t.length);return(n-e)/(r/i)}function S(t,e,n){var r=t.length,i=e.length;if(!r||!i)return null;n||(n=0);var s=a(t),o=a(e),u=((r-1)*p(t)+(i-1)*p(e))/(r+i-2);return(s-o-n)/Math.sqrt(u*(1/r+1/i))}function w(t,e){var n=[];if(e<=0)return null;for(var r=0;r<t.length;r+=e)n.push(t.slice(r,r+e));return n}function b(t,e){e=e||Math.random;for(var n,r,i=t.length;i>0;)r=Math.floor(e()*i--),n=t[i],t[i]=t[r],t[r]=n;return t}function M(t,e){return t=t.slice(),b(t.slice(),e)}function A(t,e,n){var r=M(t,n);return r.slice(0,e)}function C(t,e){if(0===t.length)return null;var n=t.slice().sort(function(t,e){return t-e});if(e.length){for(var r=[],i=0;i<e.length;i++)r[i]=k(n,e[i]);return r}return k(n,e)}function k(t,e){var n=t.length*e;return e<0||e>1?null:1===e?t[t.length-1]:0===e?t[0]:n%1!==0?t[Math.ceil(n)-1]:t.length%2===0?(t[n-1]+t[n])/2:t[n]}function T(t){return 0===t.length?null:C(t,.75)-C(t,.25)}function P(t){if(!t||0===t.length)return null;for(var e=m(t),n=[],r=0;r<t.length;r++)n.push(Math.abs(t[r]-e));return m(n)}function I(t,e){var n,r,i=[],a=[],s=0;for(n=0;n<t.length+1;n++){var o=[],u=[];for(r=0;r<e+1;r++)o.push(0),u.push(0);i.push(o),a.push(u)}for(n=1;n<e+1;n++)for(i[1][n]=1,a[1][n]=0,r=2;r<t.length+1;r++)a[r][n]=1/0;for(var c=2;c<t.length+1;c++){for(var l=0,h=0,f=0,g=0,p=1;p<c+1;p++){var v=c-p+1,d=t[v-1];if(f++,l+=d,h+=d*d,s=h-l*l/f,g=v-1,0!==g)for(r=2;r<e+1;r++)a[c][r]>=s+a[g][r-1]&&(i[c][r]=v,a[c][r]=s+a[g][r-1])}i[c][1]=1,a[c][1]=s}return{lower_class_limits:i,variance_combinations:a}}function D(t,e,n){var r=t.length-1,i=[],a=n;for(i[n]=t[t.length-1],i[0]=t[0];a>1;)i[a-1]=t[e[r][a]-2],r=e[r][a]-1,a--;return i}function L(t,e){if(e>t.length)return null;t=t.slice().sort(function(t,e){return t-e});var n=I(t,e),r=n.lower_class_limits;return D(t,r,e)}function R(t){if(t.length<3)return null;var e=t.length,n=Math.pow(v(t),3),r=g(t,3);return e*r/((e-1)*(e-2)*n)}function B(t){var e=Math.abs(t),n=Math.floor(10*e),r=10*(Math.floor(100*e)/10-Math.floor(100*e/10)),i=Math.min(10*n+r,W.length-1);return t>=0?W[i]:+(1-W[i]).toFixed(4)}function F(t,e,n){return(t-e)/n}function O(t){if(t<0)return null;for(var e=1,n=2;n<=t;n++)e*=n;return e}function G(t){return t<0||t>1?null:N(1,t)}function N(t,e){function n(t,e,n){return O(e)/(O(t)*O(e-t))*(Math.pow(n,t)*Math.pow(1-n,e-t))}if(e<0||e>1||t<=0||t%1!==0)return null;var r=0,i=0,a={};do a[r]=n(r,t,e),i+=a[r],r++;while(i<1-V);return a}function z(t){function e(t,e){return Math.pow(Math.E,-e)*Math.pow(e,t)/O(t)}if(t<=0)return null;var n=0,r=0,i={};do i[n]=e(n,t),r+=i[n],n++;while(r<1-V);return i}function j(t,e,n){for(var r,i,s=a(t),o=0,u=1,c=e(s),l=[],h=[],f=0;f<t.length;f++)void 0===l[t[f]]&&(l[t[f]]=0),l[t[f]]++;for(f=0;f<l.length;f++)void 0===l[f]&&(l[f]=0);for(i in c)i in l&&(h[i]=c[i]*t.length);for(i=h.length-1;i>=0;i--)h[i]<3&&(h[i-1]+=h[i],h.pop(),l[i-1]+=l[i],l.pop());for(i=0;i<l.length;i++)o+=Math.pow(l[i]-h[i],2)/h[i];return r=l.length-u-1,E[r][n]<o}function X(t){function e(t){return function(){var e=Array.prototype.slice.apply(arguments);return e.unshift(this),Y[t].apply(Y,e)}}var n=!(!Object.defineProperty||!Object.defineProperties);if(!n)throw new Error("without defineProperty, simple-statistics cannot be mixed in");var r,i=["median","standard_deviation","sum","sample_skewness","mean","min","max","quantile","geometric_mean","harmonic_mean","root_mean_square"];r=t?t.slice():Array.prototype;for(var a=0;a<i.length;a++)Object.defineProperty(r,i[a],{value:e(i[a]),configurable:!0,enumerable:!1,writable:!0});return r}var Y={};t.exports=Y;var W=[.5,.504,.508,.512,.516,.5199,.5239,.5279,.5319,.5359,.5398,.5438,.5478,.5517,.5557,.5596,.5636,.5675,.5714,.5753,.5793,.5832,.5871,.591,.5948,.5987,.6026,.6064,.6103,.6141,.6179,.6217,.6255,.6293,.6331,.6368,.6406,.6443,.648,.6517,.6554,.6591,.6628,.6664,.67,.6736,.6772,.6808,.6844,.6879,.6915,.695,.6985,.7019,.7054,.7088,.7123,.7157,.719,.7224,.7257,.7291,.7324,.7357,.7389,.7422,.7454,.7486,.7517,.7549,.758,.7611,.7642,.7673,.7704,.7734,.7764,.7794,.7823,.7852,.7881,.791,.7939,.7967,.7995,.8023,.8051,.8078,.8106,.8133,.8159,.8186,.8212,.8238,.8264,.8289,.8315,.834,.8365,.8389,.8413,.8438,.8461,.8485,.8508,.8531,.8554,.8577,.8599,.8621,.8643,.8665,.8686,.8708,.8729,.8749,.877,.879,.881,.883,.8849,.8869,.8888,.8907,.8925,.8944,.8962,.898,.8997,.9015,.9032,.9049,.9066,.9082,.9099,.9115,.9131,.9147,.9162,.9177,.9192,.9207,.9222,.9236,.9251,.9265,.9279,.9292,.9306,.9319,.9332,.9345,.9357,.937,.9382,.9394,.9406,.9418,.9429,.9441,.9452,.9463,.9474,.9484,.9495,.9505,.9515,.9525,.9535,.9545,.9554,.9564,.9573,.9582,.9591,.9599,.9608,.9616,.9625,.9633,.9641,.9649,.9656,.9664,.9671,.9678,.9686,.9693,.9699,.9706,.9713,.9719,.9726,.9732,.9738,.9744,.975,.9756,.9761,.9767,.9772,.9778,.9783,.9788,.9793,.9798,.9803,.9808,.9812,.9817,.9821,.9826,.983,.9834,.9838,.9842,.9846,.985,.9854,.9857,.9861,.9864,.9868,.9871,.9875,.9878,.9881,.9884,.9887,.989,.9893,.9896,.9898,.9901,.9904,.9906,.9909,.9911,.9913,.9916,.9918,.992,.9922,.9925,.9927,.9929,.9931,.9932,.9934,.9936,.9938,.994,.9941,.9943,.9945,.9946,.9948,.9949,.9951,.9952,.9953,.9955,.9956,.9957,.9959,.996,.9961,.9962,.9963,.9964,.9965,.9966,.9967,.9968,.9969,.997,.9971,.9972,.9973,.9974,.9974,.9975,.9976,.9977,.9977,.9978,.9979,.9979,.998,.9981,.9981,.9982,.9982,.9983,.9984,.9984,.9985,.9985,.9986,.9986,.9987,.9987,.9987,.9988,.9988,.9989,.9989,.9989,.999,.999],V=1e-4,E={1:{.995:0,.99:0,.975:0,.95:0,.9:.02,.5:.45,.1:2.71,.05:3.84,.025:5.02,.01:6.63,.005:7.88},2:{.995:.01,.99:.02,.975:.05,.95:.1,.9:.21,.5:1.39,.1:4.61,.05:5.99,.025:7.38,.01:9.21,.005:10.6},3:{.995:.07,.99:.11,.975:.22,.95:.35,.9:.58,.5:2.37,.1:6.25,.05:7.81,.025:9.35,.01:11.34,.005:12.84},4:{.995:.21,.99:.3,.975:.48,.95:.71,.9:1.06,.5:3.36,.1:7.78,.05:9.49,.025:11.14,.01:13.28,.005:14.86},5:{.995:.41,.99:.55,.975:.83,.95:1.15,.9:1.61,.5:4.35,.1:9.24,.05:11.07,.025:12.83,.01:15.09,.005:16.75},6:{.995:.68,.99:.87,.975:1.24,.95:1.64,.9:2.2,.5:5.35,.1:10.65,.05:12.59,.025:14.45,.01:16.81,.005:18.55},7:{.995:.99,.99:1.25,.975:1.69,.95:2.17,.9:2.83,.5:6.35,.1:12.02,.05:14.07,.025:16.01,.01:18.48,.005:20.28},8:{.995:1.34,.99:1.65,.975:2.18,.95:2.73,.9:3.49,.5:7.34,.1:13.36,.05:15.51,.025:17.53,.01:20.09,.005:21.96},9:{.995:1.73,.99:2.09,.975:2.7,.95:3.33,.9:4.17,.5:8.34,.1:14.68,.05:16.92,.025:19.02,.01:21.67,.005:23.59},10:{.995:2.16,.99:2.56,.975:3.25,.95:3.94,.9:4.87,.5:9.34,.1:15.99,.05:18.31,.025:20.48,.01:23.21,.005:25.19},11:{.995:2.6,.99:3.05,.975:3.82,.95:4.57,.9:5.58,.5:10.34,.1:17.28,.05:19.68,.025:21.92,.01:24.72,.005:26.76},12:{.995:3.07,.99:3.57,.975:4.4,.95:5.23,.9:6.3,.5:11.34,.1:18.55,.05:21.03,.025:23.34,.01:26.22,.005:28.3},13:{.995:3.57,.99:4.11,.975:5.01,.95:5.89,.9:7.04,.5:12.34,.1:19.81,.05:22.36,.025:24.74,.01:27.69,.005:29.82},14:{.995:4.07,.99:4.66,.975:5.63,.95:6.57,.9:7.79,.5:13.34,.1:21.06,.05:23.68,.025:26.12,.01:29.14,.005:31.32},15:{.995:4.6,.99:5.23,.975:6.27,.95:7.26,.9:8.55,.5:14.34,.1:22.31,.05:25,.025:27.49,.01:30.58,.005:32.8},16:{.995:5.14,.99:5.81,.975:6.91,.95:7.96,.9:9.31,.5:15.34,.1:23.54,.05:26.3,.025:28.85,.01:32,.005:34.27},17:{.995:5.7,.99:6.41,.975:7.56,.95:8.67,.9:10.09,.5:16.34,.1:24.77,.05:27.59,.025:30.19,.01:33.41,.005:35.72},18:{.995:6.26,.99:7.01,.975:8.23,.95:9.39,.9:10.87,.5:17.34,.1:25.99,.05:28.87,.025:31.53,.01:34.81,.005:37.16},19:{.995:6.84,.99:7.63,.975:8.91,.95:10.12,.9:11.65,.5:18.34,.1:27.2,.05:30.14,.025:32.85,.01:36.19,.005:38.58},20:{.995:7.43,.99:8.26,.975:9.59,.95:10.85,.9:12.44,.5:19.34,.1:28.41,.05:31.41,.025:34.17,.01:37.57,.005:40},21:{.995:8.03,.99:8.9,.975:10.28,.95:11.59,.9:13.24,.5:20.34,.1:29.62,.05:32.67,.025:35.48,.01:38.93,.005:41.4},22:{.995:8.64,.99:9.54,.975:10.98,.95:12.34,.9:14.04,.5:21.34,.1:30.81,.05:33.92,.025:36.78,.01:40.29,.005:42.8},23:{.995:9.26,.99:10.2,.975:11.69,.95:13.09,.9:14.85,.5:22.34,.1:32.01,.05:35.17,.025:38.08,.01:41.64,.005:44.18},24:{.995:9.89,.99:10.86,.975:12.4,.95:13.85,.9:15.66,.5:23.34,.1:33.2,.05:36.42,.025:39.36,.01:42.98,.005:45.56},25:{.995:10.52,.99:11.52,.975:13.12,.95:14.61,.9:16.47,.5:24.34,.1:34.28,.05:37.65,.025:40.65,.01:44.31,.005:46.93},26:{.995:11.16,.99:12.2,.975:13.84,.95:15.38,.9:17.29,.5:25.34,.1:35.56,.05:38.89,.025:41.92,.01:45.64,.005:48.29},27:{.995:11.81,.99:12.88,.975:14.57,.95:16.15,.9:18.11,.5:26.34,.1:36.74,.05:40.11,.025:43.19,.01:46.96,.005:49.65},28:{.995:12.46,.99:13.57,.975:15.31,.95:16.93,.9:18.94,.5:27.34,.1:37.92,.05:41.34,.025:44.46,.01:48.28,.005:50.99},29:{.995:13.12,.99:14.26,.975:16.05,.95:17.71,.9:19.77,.5:28.34,.1:39.09,.05:42.56,.025:45.72,.01:49.59,.005:52.34},30:{.995:13.79,.99:14.95,.975:16.79,.95:18.49,.9:20.6,.5:29.34,.1:40.26,.05:43.77,.025:46.98,.01:50.89,.005:53.67},40:{.995:20.71,.99:22.16,.975:24.43,.95:26.51,.9:29.05,.5:39.34,.1:51.81,.05:55.76,.025:59.34,.01:63.69,.005:66.77},50:{.995:27.99,.99:29.71,.975:32.36,.95:34.76,.9:37.69,.5:49.33,.1:63.17,.05:67.5,.025:71.42,.01:76.15,.005:79.49},60:{.995:35.53,.99:37.48,.975:40.48,.95:43.19,.9:46.46,.5:59.33,.1:74.4,.05:79.08,.025:83.3,.01:88.38,.005:91.95},70:{.995:43.28,.99:45.44,.975:48.76,.95:51.74,.9:55.33,.5:69.33,.1:85.53,.05:90.53,.025:95.02,.01:100.42,.005:104.22},80:{.995:51.17,.99:53.54,.975:57.15,.95:60.39,.9:64.28,.5:79.33,.1:96.58,.05:101.88,.025:106.63,.01:112.33,.005:116.32},90:{.995:59.2,.99:61.75,.975:65.65,.95:69.13,.9:73.29,.5:89.33,.1:107.57,.05:113.14,.025:118.14,.01:124.12,.005:128.3},100:{.995:67.33,.99:70.06,.975:74.22,.95:77.93,.9:82.36,.5:99.33,.1:118.5,.05:124.34,.025:129.56,.01:135.81,.005:140.17}};Y.linear_regression=e,Y.standard_deviation=f,Y.r_squared=n,Y.median=m,Y.mean=a,Y.mode=y,Y.min=c,Y.max=l,Y.sum=i,Y.quantile=C,Y.quantile_sorted=k,Y.iqr=T,Y.mad=P,Y.chunk=w,Y.shuffle=M,Y.shuffle_in_place=b,Y.sample=A,Y.sample_covariance=d,Y.sample_correlation=x,Y.sample_variance=p,Y.sample_standard_deviation=v,Y.sample_skewness=R,Y.geometric_mean=s,Y.harmonic_mean=o,Y.root_mean_square=u,Y.variance=h,Y.t_test=_,Y.t_test_two_sample=S,Y.jenksMatrices=I,Y.jenksBreaks=D,Y.jenks=L,Y.bayesian=r,Y.epsilon=V,Y.factorial=O,Y.bernoulli_distribution=G,Y.binomial_distribution=N,Y.poisson_distribution=z,Y.chi_squared_goodness_of_fit=j,Y.z_score=F,Y.cumulative_std_normal_probability=B,Y.standard_normal_table=W,Y.average=a,Y.interquartile_range=T,Y.mixin=X,Y.median_absolute_deviation=P,Y.rms=u}(this)},function(t,e,n,r,i){var a=n(r);a.Util=n(i),t.exports=a}]))});

/***/ },
/* 2 */,
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * jQuery JavaScript Library v2.1.4
	 * http://jquery.com/
	 *
	 * Includes Sizzle.js
	 * http://sizzlejs.com/
	 *
	 * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors
	 * Released under the MIT license
	 * http://jquery.org/license
	 *
	 * Date: 2015-04-28T16:01Z
	 */

	(function( global, factory ) {

		if ( typeof module === "object" && typeof module.exports === "object" ) {
			// For CommonJS and CommonJS-like environments where a proper `window`
			// is present, execute the factory and get jQuery.
			// For environments that do not have a `window` with a `document`
			// (such as Node.js), expose a factory as module.exports.
			// This accentuates the need for the creation of a real `window`.
			// e.g. var jQuery = require("jquery")(window);
			// See ticket #14549 for more info.
			module.exports = global.document ?
				factory( global, true ) :
				function( w ) {
					if ( !w.document ) {
						throw new Error( "jQuery requires a window with a document" );
					}
					return factory( w );
				};
		} else {
			factory( global );
		}

	// Pass this if window is not defined yet
	}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

	// Support: Firefox 18+
	// Can't be in strict mode, several libs including ASP.NET trace
	// the stack via arguments.caller.callee and Firefox dies if
	// you try to trace through "use strict" call chains. (#13335)
	//

	var arr = [];

	var slice = arr.slice;

	var concat = arr.concat;

	var push = arr.push;

	var indexOf = arr.indexOf;

	var class2type = {};

	var toString = class2type.toString;

	var hasOwn = class2type.hasOwnProperty;

	var support = {};



	var
		// Use the correct document accordingly with window argument (sandbox)
		document = window.document,

		version = "2.1.4",

		// Define a local copy of jQuery
		jQuery = function( selector, context ) {
			// The jQuery object is actually just the init constructor 'enhanced'
			// Need init if jQuery is called (just allow error to be thrown if not included)
			return new jQuery.fn.init( selector, context );
		},

		// Support: Android<4.1
		// Make sure we trim BOM and NBSP
		rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

		// Matches dashed string for camelizing
		rmsPrefix = /^-ms-/,
		rdashAlpha = /-([\da-z])/gi,

		// Used by jQuery.camelCase as callback to replace()
		fcamelCase = function( all, letter ) {
			return letter.toUpperCase();
		};

	jQuery.fn = jQuery.prototype = {
		// The current version of jQuery being used
		jquery: version,

		constructor: jQuery,

		// Start with an empty selector
		selector: "",

		// The default length of a jQuery object is 0
		length: 0,

		toArray: function() {
			return slice.call( this );
		},

		// Get the Nth element in the matched element set OR
		// Get the whole matched element set as a clean array
		get: function( num ) {
			return num != null ?

				// Return just the one element from the set
				( num < 0 ? this[ num + this.length ] : this[ num ] ) :

				// Return all the elements in a clean array
				slice.call( this );
		},

		// Take an array of elements and push it onto the stack
		// (returning the new matched element set)
		pushStack: function( elems ) {

			// Build a new jQuery matched element set
			var ret = jQuery.merge( this.constructor(), elems );

			// Add the old object onto the stack (as a reference)
			ret.prevObject = this;
			ret.context = this.context;

			// Return the newly-formed element set
			return ret;
		},

		// Execute a callback for every element in the matched set.
		// (You can seed the arguments with an array of args, but this is
		// only used internally.)
		each: function( callback, args ) {
			return jQuery.each( this, callback, args );
		},

		map: function( callback ) {
			return this.pushStack( jQuery.map(this, function( elem, i ) {
				return callback.call( elem, i, elem );
			}));
		},

		slice: function() {
			return this.pushStack( slice.apply( this, arguments ) );
		},

		first: function() {
			return this.eq( 0 );
		},

		last: function() {
			return this.eq( -1 );
		},

		eq: function( i ) {
			var len = this.length,
				j = +i + ( i < 0 ? len : 0 );
			return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
		},

		end: function() {
			return this.prevObject || this.constructor(null);
		},

		// For internal use only.
		// Behaves like an Array's method, not like a jQuery method.
		push: push,
		sort: arr.sort,
		splice: arr.splice
	};

	jQuery.extend = jQuery.fn.extend = function() {
		var options, name, src, copy, copyIsArray, clone,
			target = arguments[0] || {},
			i = 1,
			length = arguments.length,
			deep = false;

		// Handle a deep copy situation
		if ( typeof target === "boolean" ) {
			deep = target;

			// Skip the boolean and the target
			target = arguments[ i ] || {};
			i++;
		}

		// Handle case when target is a string or something (possible in deep copy)
		if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
			target = {};
		}

		// Extend jQuery itself if only one argument is passed
		if ( i === length ) {
			target = this;
			i--;
		}

		for ( ; i < length; i++ ) {
			// Only deal with non-null/undefined values
			if ( (options = arguments[ i ]) != null ) {
				// Extend the base object
				for ( name in options ) {
					src = target[ name ];
					copy = options[ name ];

					// Prevent never-ending loop
					if ( target === copy ) {
						continue;
					}

					// Recurse if we're merging plain objects or arrays
					if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
						if ( copyIsArray ) {
							copyIsArray = false;
							clone = src && jQuery.isArray(src) ? src : [];

						} else {
							clone = src && jQuery.isPlainObject(src) ? src : {};
						}

						// Never move original objects, clone them
						target[ name ] = jQuery.extend( deep, clone, copy );

					// Don't bring in undefined values
					} else if ( copy !== undefined ) {
						target[ name ] = copy;
					}
				}
			}
		}

		// Return the modified object
		return target;
	};

	jQuery.extend({
		// Unique for each copy of jQuery on the page
		expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

		// Assume jQuery is ready without the ready module
		isReady: true,

		error: function( msg ) {
			throw new Error( msg );
		},

		noop: function() {},

		isFunction: function( obj ) {
			return jQuery.type(obj) === "function";
		},

		isArray: Array.isArray,

		isWindow: function( obj ) {
			return obj != null && obj === obj.window;
		},

		isNumeric: function( obj ) {
			// parseFloat NaNs numeric-cast false positives (null|true|false|"")
			// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
			// subtraction forces infinities to NaN
			// adding 1 corrects loss of precision from parseFloat (#15100)
			return !jQuery.isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;
		},

		isPlainObject: function( obj ) {
			// Not plain objects:
			// - Any object or value whose internal [[Class]] property is not "[object Object]"
			// - DOM nodes
			// - window
			if ( jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
				return false;
			}

			if ( obj.constructor &&
					!hasOwn.call( obj.constructor.prototype, "isPrototypeOf" ) ) {
				return false;
			}

			// If the function hasn't returned already, we're confident that
			// |obj| is a plain object, created by {} or constructed with new Object
			return true;
		},

		isEmptyObject: function( obj ) {
			var name;
			for ( name in obj ) {
				return false;
			}
			return true;
		},

		type: function( obj ) {
			if ( obj == null ) {
				return obj + "";
			}
			// Support: Android<4.0, iOS<6 (functionish RegExp)
			return typeof obj === "object" || typeof obj === "function" ?
				class2type[ toString.call(obj) ] || "object" :
				typeof obj;
		},

		// Evaluates a script in a global context
		globalEval: function( code ) {
			var script,
				indirect = eval;

			code = jQuery.trim( code );

			if ( code ) {
				// If the code includes a valid, prologue position
				// strict mode pragma, execute code by injecting a
				// script tag into the document.
				if ( code.indexOf("use strict") === 1 ) {
					script = document.createElement("script");
					script.text = code;
					document.head.appendChild( script ).parentNode.removeChild( script );
				} else {
				// Otherwise, avoid the DOM node creation, insertion
				// and removal by using an indirect global eval
					indirect( code );
				}
			}
		},

		// Convert dashed to camelCase; used by the css and data modules
		// Support: IE9-11+
		// Microsoft forgot to hump their vendor prefix (#9572)
		camelCase: function( string ) {
			return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
		},

		nodeName: function( elem, name ) {
			return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
		},

		// args is for internal usage only
		each: function( obj, callback, args ) {
			var value,
				i = 0,
				length = obj.length,
				isArray = isArraylike( obj );

			if ( args ) {
				if ( isArray ) {
					for ( ; i < length; i++ ) {
						value = callback.apply( obj[ i ], args );

						if ( value === false ) {
							break;
						}
					}
				} else {
					for ( i in obj ) {
						value = callback.apply( obj[ i ], args );

						if ( value === false ) {
							break;
						}
					}
				}

			// A special, fast, case for the most common use of each
			} else {
				if ( isArray ) {
					for ( ; i < length; i++ ) {
						value = callback.call( obj[ i ], i, obj[ i ] );

						if ( value === false ) {
							break;
						}
					}
				} else {
					for ( i in obj ) {
						value = callback.call( obj[ i ], i, obj[ i ] );

						if ( value === false ) {
							break;
						}
					}
				}
			}

			return obj;
		},

		// Support: Android<4.1
		trim: function( text ) {
			return text == null ?
				"" :
				( text + "" ).replace( rtrim, "" );
		},

		// results is for internal usage only
		makeArray: function( arr, results ) {
			var ret = results || [];

			if ( arr != null ) {
				if ( isArraylike( Object(arr) ) ) {
					jQuery.merge( ret,
						typeof arr === "string" ?
						[ arr ] : arr
					);
				} else {
					push.call( ret, arr );
				}
			}

			return ret;
		},

		inArray: function( elem, arr, i ) {
			return arr == null ? -1 : indexOf.call( arr, elem, i );
		},

		merge: function( first, second ) {
			var len = +second.length,
				j = 0,
				i = first.length;

			for ( ; j < len; j++ ) {
				first[ i++ ] = second[ j ];
			}

			first.length = i;

			return first;
		},

		grep: function( elems, callback, invert ) {
			var callbackInverse,
				matches = [],
				i = 0,
				length = elems.length,
				callbackExpect = !invert;

			// Go through the array, only saving the items
			// that pass the validator function
			for ( ; i < length; i++ ) {
				callbackInverse = !callback( elems[ i ], i );
				if ( callbackInverse !== callbackExpect ) {
					matches.push( elems[ i ] );
				}
			}

			return matches;
		},

		// arg is for internal usage only
		map: function( elems, callback, arg ) {
			var value,
				i = 0,
				length = elems.length,
				isArray = isArraylike( elems ),
				ret = [];

			// Go through the array, translating each of the items to their new values
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback( elems[ i ], i, arg );

					if ( value != null ) {
						ret.push( value );
					}
				}

			// Go through every key on the object,
			} else {
				for ( i in elems ) {
					value = callback( elems[ i ], i, arg );

					if ( value != null ) {
						ret.push( value );
					}
				}
			}

			// Flatten any nested arrays
			return concat.apply( [], ret );
		},

		// A global GUID counter for objects
		guid: 1,

		// Bind a function to a context, optionally partially applying any
		// arguments.
		proxy: function( fn, context ) {
			var tmp, args, proxy;

			if ( typeof context === "string" ) {
				tmp = fn[ context ];
				context = fn;
				fn = tmp;
			}

			// Quick check to determine if target is callable, in the spec
			// this throws a TypeError, but we will just return undefined.
			if ( !jQuery.isFunction( fn ) ) {
				return undefined;
			}

			// Simulated bind
			args = slice.call( arguments, 2 );
			proxy = function() {
				return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
			};

			// Set the guid of unique handler to the same of original handler, so it can be removed
			proxy.guid = fn.guid = fn.guid || jQuery.guid++;

			return proxy;
		},

		now: Date.now,

		// jQuery.support is not used in Core but other projects attach their
		// properties to it so it needs to exist.
		support: support
	});

	// Populate the class2type map
	jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	});

	function isArraylike( obj ) {

		// Support: iOS 8.2 (not reproducible in simulator)
		// `in` check used to prevent JIT error (gh-2145)
		// hasOwn isn't used here due to false negatives
		// regarding Nodelist length in IE
		var length = "length" in obj && obj.length,
			type = jQuery.type( obj );

		if ( type === "function" || jQuery.isWindow( obj ) ) {
			return false;
		}

		if ( obj.nodeType === 1 && length ) {
			return true;
		}

		return type === "array" || length === 0 ||
			typeof length === "number" && length > 0 && ( length - 1 ) in obj;
	}
	var Sizzle =
	/*!
	 * Sizzle CSS Selector Engine v2.2.0-pre
	 * http://sizzlejs.com/
	 *
	 * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors
	 * Released under the MIT license
	 * http://jquery.org/license
	 *
	 * Date: 2014-12-16
	 */
	(function( window ) {

	var i,
		support,
		Expr,
		getText,
		isXML,
		tokenize,
		compile,
		select,
		outermostContext,
		sortInput,
		hasDuplicate,

		// Local document vars
		setDocument,
		document,
		docElem,
		documentIsHTML,
		rbuggyQSA,
		rbuggyMatches,
		matches,
		contains,

		// Instance-specific data
		expando = "sizzle" + 1 * new Date(),
		preferredDoc = window.document,
		dirruns = 0,
		done = 0,
		classCache = createCache(),
		tokenCache = createCache(),
		compilerCache = createCache(),
		sortOrder = function( a, b ) {
			if ( a === b ) {
				hasDuplicate = true;
			}
			return 0;
		},

		// General-purpose constants
		MAX_NEGATIVE = 1 << 31,

		// Instance methods
		hasOwn = ({}).hasOwnProperty,
		arr = [],
		pop = arr.pop,
		push_native = arr.push,
		push = arr.push,
		slice = arr.slice,
		// Use a stripped-down indexOf as it's faster than native
		// http://jsperf.com/thor-indexof-vs-for/5
		indexOf = function( list, elem ) {
			var i = 0,
				len = list.length;
			for ( ; i < len; i++ ) {
				if ( list[i] === elem ) {
					return i;
				}
			}
			return -1;
		},

		booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

		// Regular expressions

		// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
		whitespace = "[\\x20\\t\\r\\n\\f]",
		// http://www.w3.org/TR/css3-syntax/#characters
		characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

		// Loosely modeled on CSS identifier characters
		// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
		// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
		identifier = characterEncoding.replace( "w", "w#" ),

		// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
		attributes = "\\[" + whitespace + "*(" + characterEncoding + ")(?:" + whitespace +
			// Operator (capture 2)
			"*([*^$|!~]?=)" + whitespace +
			// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
			"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
			"*\\]",

		pseudos = ":(" + characterEncoding + ")(?:\\((" +
			// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
			// 1. quoted (capture 3; capture 4 or capture 5)
			"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
			// 2. simple (capture 6)
			"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
			// 3. anything else (capture 2)
			".*" +
			")\\)|)",

		// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
		rwhitespace = new RegExp( whitespace + "+", "g" ),
		rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

		rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
		rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

		rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

		rpseudo = new RegExp( pseudos ),
		ridentifier = new RegExp( "^" + identifier + "$" ),

		matchExpr = {
			"ID": new RegExp( "^#(" + characterEncoding + ")" ),
			"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
			"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
			"ATTR": new RegExp( "^" + attributes ),
			"PSEUDO": new RegExp( "^" + pseudos ),
			"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
				"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
				"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
			"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
			// For use in libraries implementing .is()
			// We use this for POS matching in `select`
			"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
				whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
		},

		rinputs = /^(?:input|select|textarea|button)$/i,
		rheader = /^h\d$/i,

		rnative = /^[^{]+\{\s*\[native \w/,

		// Easily-parseable/retrievable ID or TAG or CLASS selectors
		rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

		rsibling = /[+~]/,
		rescape = /'|\\/g,

		// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
		runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
		funescape = function( _, escaped, escapedWhitespace ) {
			var high = "0x" + escaped - 0x10000;
			// NaN means non-codepoint
			// Support: Firefox<24
			// Workaround erroneous numeric interpretation of +"0x"
			return high !== high || escapedWhitespace ?
				escaped :
				high < 0 ?
					// BMP codepoint
					String.fromCharCode( high + 0x10000 ) :
					// Supplemental Plane codepoint (surrogate pair)
					String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
		},

		// Used for iframes
		// See setDocument()
		// Removing the function wrapper causes a "Permission Denied"
		// error in IE
		unloadHandler = function() {
			setDocument();
		};

	// Optimize for push.apply( _, NodeList )
	try {
		push.apply(
			(arr = slice.call( preferredDoc.childNodes )),
			preferredDoc.childNodes
		);
		// Support: Android<4.0
		// Detect silently failing push.apply
		arr[ preferredDoc.childNodes.length ].nodeType;
	} catch ( e ) {
		push = { apply: arr.length ?

			// Leverage slice if possible
			function( target, els ) {
				push_native.apply( target, slice.call(els) );
			} :

			// Support: IE<9
			// Otherwise append directly
			function( target, els ) {
				var j = target.length,
					i = 0;
				// Can't trust NodeList.length
				while ( (target[j++] = els[i++]) ) {}
				target.length = j - 1;
			}
		};
	}

	function Sizzle( selector, context, results, seed ) {
		var match, elem, m, nodeType,
			// QSA vars
			i, groups, old, nid, newContext, newSelector;

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}

		context = context || document;
		results = results || [];
		nodeType = context.nodeType;

		if ( typeof selector !== "string" || !selector ||
			nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

			return results;
		}

		if ( !seed && documentIsHTML ) {

			// Try to shortcut find operations when possible (e.g., not under DocumentFragment)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {
				// Speed-up: Sizzle("#ID")
				if ( (m = match[1]) ) {
					if ( nodeType === 9 ) {
						elem = context.getElementById( m );
						// Check parentNode to catch when Blackberry 4.6 returns
						// nodes that are no longer in the document (jQuery #6963)
						if ( elem && elem.parentNode ) {
							// Handle the case where IE, Opera, and Webkit return items
							// by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}
					} else {
						// Context is not a document
						if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
							contains( context, elem ) && elem.id === m ) {
							results.push( elem );
							return results;
						}
					}

				// Speed-up: Sizzle("TAG")
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Speed-up: Sizzle(".CLASS")
				} else if ( (m = match[3]) && support.getElementsByClassName ) {
					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// QSA path
			if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
				nid = old = expando;
				newContext = context;
				newSelector = nodeType !== 1 && selector;

				// qSA works strangely on Element-rooted queries
				// We can work around this by specifying an extra ID on the root
				// and working up from there (Thanks to Andrew Dupont for the technique)
				// IE 8 doesn't work on object elements
				if ( nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
					groups = tokenize( selector );

					if ( (old = context.getAttribute("id")) ) {
						nid = old.replace( rescape, "\\$&" );
					} else {
						context.setAttribute( "id", nid );
					}
					nid = "[id='" + nid + "'] ";

					i = groups.length;
					while ( i-- ) {
						groups[i] = nid + toSelector( groups[i] );
					}
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;
					newSelector = groups.join(",");
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch(qsaError) {
					} finally {
						if ( !old ) {
							context.removeAttribute("id");
						}
					}
				}
			}
		}

		// All others
		return select( selector.replace( rtrim, "$1" ), context, results, seed );
	}

	/**
	 * Create key-value caches of limited size
	 * @returns {Function(string, Object)} Returns the Object data after storing it on itself with
	 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
	 *	deleting the oldest entry
	 */
	function createCache() {
		var keys = [];

		function cache( key, value ) {
			// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
			if ( keys.push( key + " " ) > Expr.cacheLength ) {
				// Only keep the most recent entries
				delete cache[ keys.shift() ];
			}
			return (cache[ key + " " ] = value);
		}
		return cache;
	}

	/**
	 * Mark a function for special use by Sizzle
	 * @param {Function} fn The function to mark
	 */
	function markFunction( fn ) {
		fn[ expando ] = true;
		return fn;
	}

	/**
	 * Support testing using an element
	 * @param {Function} fn Passed the created div and expects a boolean result
	 */
	function assert( fn ) {
		var div = document.createElement("div");

		try {
			return !!fn( div );
		} catch (e) {
			return false;
		} finally {
			// Remove from its parent by default
			if ( div.parentNode ) {
				div.parentNode.removeChild( div );
			}
			// release memory in IE
			div = null;
		}
	}

	/**
	 * Adds the same handler for all of the specified attrs
	 * @param {String} attrs Pipe-separated list of attributes
	 * @param {Function} handler The method that will be applied
	 */
	function addHandle( attrs, handler ) {
		var arr = attrs.split("|"),
			i = attrs.length;

		while ( i-- ) {
			Expr.attrHandle[ arr[i] ] = handler;
		}
	}

	/**
	 * Checks document order of two siblings
	 * @param {Element} a
	 * @param {Element} b
	 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
	 */
	function siblingCheck( a, b ) {
		var cur = b && a,
			diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
				( ~b.sourceIndex || MAX_NEGATIVE ) -
				( ~a.sourceIndex || MAX_NEGATIVE );

		// Use IE sourceIndex if available on both nodes
		if ( diff ) {
			return diff;
		}

		// Check if b follows a
		if ( cur ) {
			while ( (cur = cur.nextSibling) ) {
				if ( cur === b ) {
					return -1;
				}
			}
		}

		return a ? 1 : -1;
	}

	/**
	 * Returns a function to use in pseudos for input types
	 * @param {String} type
	 */
	function createInputPseudo( type ) {
		return function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === type;
		};
	}

	/**
	 * Returns a function to use in pseudos for buttons
	 * @param {String} type
	 */
	function createButtonPseudo( type ) {
		return function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return (name === "input" || name === "button") && elem.type === type;
		};
	}

	/**
	 * Returns a function to use in pseudos for positionals
	 * @param {Function} fn
	 */
	function createPositionalPseudo( fn ) {
		return markFunction(function( argument ) {
			argument = +argument;
			return markFunction(function( seed, matches ) {
				var j,
					matchIndexes = fn( [], seed.length, argument ),
					i = matchIndexes.length;

				// Match elements found at the specified indexes
				while ( i-- ) {
					if ( seed[ (j = matchIndexes[i]) ] ) {
						seed[j] = !(matches[j] = seed[j]);
					}
				}
			});
		});
	}

	/**
	 * Checks a node for validity as a Sizzle context
	 * @param {Element|Object=} context
	 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
	 */
	function testContext( context ) {
		return context && typeof context.getElementsByTagName !== "undefined" && context;
	}

	// Expose support vars for convenience
	support = Sizzle.support = {};

	/**
	 * Detects XML nodes
	 * @param {Element|Object} elem An element or a document
	 * @returns {Boolean} True iff elem is a non-HTML XML node
	 */
	isXML = Sizzle.isXML = function( elem ) {
		// documentElement is verified for cases where it doesn't yet exist
		// (such as loading iframes in IE - #4833)
		var documentElement = elem && (elem.ownerDocument || elem).documentElement;
		return documentElement ? documentElement.nodeName !== "HTML" : false;
	};

	/**
	 * Sets document-related variables once based on the current document
	 * @param {Element|Object} [doc] An element or document object to use to set the document
	 * @returns {Object} Returns the current document
	 */
	setDocument = Sizzle.setDocument = function( node ) {
		var hasCompare, parent,
			doc = node ? node.ownerDocument || node : preferredDoc;

		// If no document and documentElement is available, return
		if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
			return document;
		}

		// Set our document
		document = doc;
		docElem = doc.documentElement;
		parent = doc.defaultView;

		// Support: IE>8
		// If iframe document is assigned to "document" variable and if iframe has been reloaded,
		// IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936
		// IE6-8 do not support the defaultView property so parent will be undefined
		if ( parent && parent !== parent.top ) {
			// IE11 does not have attachEvent, so all must suffer
			if ( parent.addEventListener ) {
				parent.addEventListener( "unload", unloadHandler, false );
			} else if ( parent.attachEvent ) {
				parent.attachEvent( "onunload", unloadHandler );
			}
		}

		/* Support tests
		---------------------------------------------------------------------- */
		documentIsHTML = !isXML( doc );

		/* Attributes
		---------------------------------------------------------------------- */

		// Support: IE<8
		// Verify that getAttribute really returns attributes and not properties
		// (excepting IE8 booleans)
		support.attributes = assert(function( div ) {
			div.className = "i";
			return !div.getAttribute("className");
		});

		/* getElement(s)By*
		---------------------------------------------------------------------- */

		// Check if getElementsByTagName("*") returns only elements
		support.getElementsByTagName = assert(function( div ) {
			div.appendChild( doc.createComment("") );
			return !div.getElementsByTagName("*").length;
		});

		// Support: IE<9
		support.getElementsByClassName = rnative.test( doc.getElementsByClassName );

		// Support: IE<10
		// Check if getElementById returns elements by name
		// The broken getElementById methods don't pick up programatically-set names,
		// so use a roundabout getElementsByName test
		support.getById = assert(function( div ) {
			docElem.appendChild( div ).id = expando;
			return !doc.getElementsByName || !doc.getElementsByName( expando ).length;
		});

		// ID find and filter
		if ( support.getById ) {
			Expr.find["ID"] = function( id, context ) {
				if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
					var m = context.getElementById( id );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					return m && m.parentNode ? [ m ] : [];
				}
			};
			Expr.filter["ID"] = function( id ) {
				var attrId = id.replace( runescape, funescape );
				return function( elem ) {
					return elem.getAttribute("id") === attrId;
				};
			};
		} else {
			// Support: IE6/7
			// getElementById is not reliable as a find shortcut
			delete Expr.find["ID"];

			Expr.filter["ID"] =  function( id ) {
				var attrId = id.replace( runescape, funescape );
				return function( elem ) {
					var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
					return node && node.value === attrId;
				};
			};
		}

		// Tag
		Expr.find["TAG"] = support.getElementsByTagName ?
			function( tag, context ) {
				if ( typeof context.getElementsByTagName !== "undefined" ) {
					return context.getElementsByTagName( tag );

				// DocumentFragment nodes don't have gEBTN
				} else if ( support.qsa ) {
					return context.querySelectorAll( tag );
				}
			} :

			function( tag, context ) {
				var elem,
					tmp = [],
					i = 0,
					// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
					results = context.getElementsByTagName( tag );

				// Filter out possible comments
				if ( tag === "*" ) {
					while ( (elem = results[i++]) ) {
						if ( elem.nodeType === 1 ) {
							tmp.push( elem );
						}
					}

					return tmp;
				}
				return results;
			};

		// Class
		Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
			if ( documentIsHTML ) {
				return context.getElementsByClassName( className );
			}
		};

		/* QSA/matchesSelector
		---------------------------------------------------------------------- */

		// QSA and matchesSelector support

		// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
		rbuggyMatches = [];

		// qSa(:focus) reports false when true (Chrome 21)
		// We allow this because of a bug in IE8/9 that throws an error
		// whenever `document.activeElement` is accessed on an iframe
		// So, we allow :focus to pass through QSA all the time to avoid the IE error
		// See http://bugs.jquery.com/ticket/13378
		rbuggyQSA = [];

		if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {
			// Build QSA regex
			// Regex strategy adopted from Diego Perini
			assert(function( div ) {
				// Select is set to empty string on purpose
				// This is to test IE's treatment of not explicitly
				// setting a boolean content attribute,
				// since its presence should be enough
				// http://bugs.jquery.com/ticket/12359
				docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
					"<select id='" + expando + "-\f]' msallowcapture=''>" +
					"<option selected=''></option></select>";

				// Support: IE8, Opera 11-12.16
				// Nothing should be selected when empty strings follow ^= or $= or *=
				// The test attribute must be unknown in Opera but "safe" for WinRT
				// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
				if ( div.querySelectorAll("[msallowcapture^='']").length ) {
					rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
				}

				// Support: IE8
				// Boolean attributes and "value" are not treated correctly
				if ( !div.querySelectorAll("[selected]").length ) {
					rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
				}

				// Support: Chrome<29, Android<4.2+, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.7+
				if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
					rbuggyQSA.push("~=");
				}

				// Webkit/Opera - :checked should return selected option elements
				// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
				// IE8 throws error here and will not see later tests
				if ( !div.querySelectorAll(":checked").length ) {
					rbuggyQSA.push(":checked");
				}

				// Support: Safari 8+, iOS 8+
				// https://bugs.webkit.org/show_bug.cgi?id=136851
				// In-page `selector#id sibing-combinator selector` fails
				if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
					rbuggyQSA.push(".#.+[+~]");
				}
			});

			assert(function( div ) {
				// Support: Windows 8 Native Apps
				// The type and name attributes are restricted during .innerHTML assignment
				var input = doc.createElement("input");
				input.setAttribute( "type", "hidden" );
				div.appendChild( input ).setAttribute( "name", "D" );

				// Support: IE8
				// Enforce case-sensitivity of name attribute
				if ( div.querySelectorAll("[name=d]").length ) {
					rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
				}

				// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
				// IE8 throws error here and will not see later tests
				if ( !div.querySelectorAll(":enabled").length ) {
					rbuggyQSA.push( ":enabled", ":disabled" );
				}

				// Opera 10-11 does not throw on post-comma invalid pseudos
				div.querySelectorAll("*,:x");
				rbuggyQSA.push(",.*:");
			});
		}

		if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
			docElem.webkitMatchesSelector ||
			docElem.mozMatchesSelector ||
			docElem.oMatchesSelector ||
			docElem.msMatchesSelector) )) ) {

			assert(function( div ) {
				// Check to see if it's possible to do matchesSelector
				// on a disconnected node (IE 9)
				support.disconnectedMatch = matches.call( div, "div" );

				// This should fail with an exception
				// Gecko does not error, returns false instead
				matches.call( div, "[s!='']:x" );
				rbuggyMatches.push( "!=", pseudos );
			});
		}

		rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
		rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

		/* Contains
		---------------------------------------------------------------------- */
		hasCompare = rnative.test( docElem.compareDocumentPosition );

		// Element contains another
		// Purposefully does not implement inclusive descendent
		// As in, an element does not contain itself
		contains = hasCompare || rnative.test( docElem.contains ) ?
			function( a, b ) {
				var adown = a.nodeType === 9 ? a.documentElement : a,
					bup = b && b.parentNode;
				return a === bup || !!( bup && bup.nodeType === 1 && (
					adown.contains ?
						adown.contains( bup ) :
						a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
				));
			} :
			function( a, b ) {
				if ( b ) {
					while ( (b = b.parentNode) ) {
						if ( b === a ) {
							return true;
						}
					}
				}
				return false;
			};

		/* Sorting
		---------------------------------------------------------------------- */

		// Document order sorting
		sortOrder = hasCompare ?
		function( a, b ) {

			// Flag for duplicate removal
			if ( a === b ) {
				hasDuplicate = true;
				return 0;
			}

			// Sort on method existence if only one input has compareDocumentPosition
			var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
			if ( compare ) {
				return compare;
			}

			// Calculate position if both inputs belong to the same document
			compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
				a.compareDocumentPosition( b ) :

				// Otherwise we know they are disconnected
				1;

			// Disconnected nodes
			if ( compare & 1 ||
				(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

				// Choose the first element that is related to our preferred document
				if ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
					return -1;
				}
				if ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
					return 1;
				}

				// Maintain original order
				return sortInput ?
					( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
					0;
			}

			return compare & 4 ? -1 : 1;
		} :
		function( a, b ) {
			// Exit early if the nodes are identical
			if ( a === b ) {
				hasDuplicate = true;
				return 0;
			}

			var cur,
				i = 0,
				aup = a.parentNode,
				bup = b.parentNode,
				ap = [ a ],
				bp = [ b ];

			// Parentless nodes are either documents or disconnected
			if ( !aup || !bup ) {
				return a === doc ? -1 :
					b === doc ? 1 :
					aup ? -1 :
					bup ? 1 :
					sortInput ?
					( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
					0;

			// If the nodes are siblings, we can do a quick check
			} else if ( aup === bup ) {
				return siblingCheck( a, b );
			}

			// Otherwise we need full lists of their ancestors for comparison
			cur = a;
			while ( (cur = cur.parentNode) ) {
				ap.unshift( cur );
			}
			cur = b;
			while ( (cur = cur.parentNode) ) {
				bp.unshift( cur );
			}

			// Walk down the tree looking for a discrepancy
			while ( ap[i] === bp[i] ) {
				i++;
			}

			return i ?
				// Do a sibling check if the nodes have a common ancestor
				siblingCheck( ap[i], bp[i] ) :

				// Otherwise nodes in our document sort first
				ap[i] === preferredDoc ? -1 :
				bp[i] === preferredDoc ? 1 :
				0;
		};

		return doc;
	};

	Sizzle.matches = function( expr, elements ) {
		return Sizzle( expr, null, null, elements );
	};

	Sizzle.matchesSelector = function( elem, expr ) {
		// Set document vars if needed
		if ( ( elem.ownerDocument || elem ) !== document ) {
			setDocument( elem );
		}

		// Make sure that attribute selectors are quoted
		expr = expr.replace( rattributeQuotes, "='$1']" );

		if ( support.matchesSelector && documentIsHTML &&
			( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
			( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

			try {
				var ret = matches.call( elem, expr );

				// IE 9's matchesSelector returns false on disconnected nodes
				if ( ret || support.disconnectedMatch ||
						// As well, disconnected nodes are said to be in a document
						// fragment in IE 9
						elem.document && elem.document.nodeType !== 11 ) {
					return ret;
				}
			} catch (e) {}
		}

		return Sizzle( expr, document, null, [ elem ] ).length > 0;
	};

	Sizzle.contains = function( context, elem ) {
		// Set document vars if needed
		if ( ( context.ownerDocument || context ) !== document ) {
			setDocument( context );
		}
		return contains( context, elem );
	};

	Sizzle.attr = function( elem, name ) {
		// Set document vars if needed
		if ( ( elem.ownerDocument || elem ) !== document ) {
			setDocument( elem );
		}

		var fn = Expr.attrHandle[ name.toLowerCase() ],
			// Don't get fooled by Object.prototype properties (jQuery #13807)
			val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
				fn( elem, name, !documentIsHTML ) :
				undefined;

		return val !== undefined ?
			val :
			support.attributes || !documentIsHTML ?
				elem.getAttribute( name ) :
				(val = elem.getAttributeNode(name)) && val.specified ?
					val.value :
					null;
	};

	Sizzle.error = function( msg ) {
		throw new Error( "Syntax error, unrecognized expression: " + msg );
	};

	/**
	 * Document sorting and removing duplicates
	 * @param {ArrayLike} results
	 */
	Sizzle.uniqueSort = function( results ) {
		var elem,
			duplicates = [],
			j = 0,
			i = 0;

		// Unless we *know* we can detect duplicates, assume their presence
		hasDuplicate = !support.detectDuplicates;
		sortInput = !support.sortStable && results.slice( 0 );
		results.sort( sortOrder );

		if ( hasDuplicate ) {
			while ( (elem = results[i++]) ) {
				if ( elem === results[ i ] ) {
					j = duplicates.push( i );
				}
			}
			while ( j-- ) {
				results.splice( duplicates[ j ], 1 );
			}
		}

		// Clear input after sorting to release objects
		// See https://github.com/jquery/sizzle/pull/225
		sortInput = null;

		return results;
	};

	/**
	 * Utility function for retrieving the text value of an array of DOM nodes
	 * @param {Array|Element} elem
	 */
	getText = Sizzle.getText = function( elem ) {
		var node,
			ret = "",
			i = 0,
			nodeType = elem.nodeType;

		if ( !nodeType ) {
			// If no nodeType, this is expected to be an array
			while ( (node = elem[i++]) ) {
				// Do not traverse comment nodes
				ret += getText( node );
			}
		} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
			// Use textContent for elements
			// innerText usage removed for consistency of new lines (jQuery #11153)
			if ( typeof elem.textContent === "string" ) {
				return elem.textContent;
			} else {
				// Traverse its children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					ret += getText( elem );
				}
			}
		} else if ( nodeType === 3 || nodeType === 4 ) {
			return elem.nodeValue;
		}
		// Do not include comment or processing instruction nodes

		return ret;
	};

	Expr = Sizzle.selectors = {

		// Can be adjusted by the user
		cacheLength: 50,

		createPseudo: markFunction,

		match: matchExpr,

		attrHandle: {},

		find: {},

		relative: {
			">": { dir: "parentNode", first: true },
			" ": { dir: "parentNode" },
			"+": { dir: "previousSibling", first: true },
			"~": { dir: "previousSibling" }
		},

		preFilter: {
			"ATTR": function( match ) {
				match[1] = match[1].replace( runescape, funescape );

				// Move the given value to match[3] whether quoted or unquoted
				match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

				if ( match[2] === "~=" ) {
					match[3] = " " + match[3] + " ";
				}

				return match.slice( 0, 4 );
			},

			"CHILD": function( match ) {
				/* matches from matchExpr["CHILD"]
					1 type (only|nth|...)
					2 what (child|of-type)
					3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
					4 xn-component of xn+y argument ([+-]?\d*n|)
					5 sign of xn-component
					6 x of xn-component
					7 sign of y-component
					8 y of y-component
				*/
				match[1] = match[1].toLowerCase();

				if ( match[1].slice( 0, 3 ) === "nth" ) {
					// nth-* requires argument
					if ( !match[3] ) {
						Sizzle.error( match[0] );
					}

					// numeric x and y parameters for Expr.filter.CHILD
					// remember that false/true cast respectively to 0/1
					match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
					match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

				// other types prohibit arguments
				} else if ( match[3] ) {
					Sizzle.error( match[0] );
				}

				return match;
			},

			"PSEUDO": function( match ) {
				var excess,
					unquoted = !match[6] && match[2];

				if ( matchExpr["CHILD"].test( match[0] ) ) {
					return null;
				}

				// Accept quoted arguments as-is
				if ( match[3] ) {
					match[2] = match[4] || match[5] || "";

				// Strip excess characters from unquoted arguments
				} else if ( unquoted && rpseudo.test( unquoted ) &&
					// Get excess from tokenize (recursively)
					(excess = tokenize( unquoted, true )) &&
					// advance to the next closing parenthesis
					(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

					// excess is a negative index
					match[0] = match[0].slice( 0, excess );
					match[2] = unquoted.slice( 0, excess );
				}

				// Return only captures needed by the pseudo filter method (type and argument)
				return match.slice( 0, 3 );
			}
		},

		filter: {

			"TAG": function( nodeNameSelector ) {
				var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
				return nodeNameSelector === "*" ?
					function() { return true; } :
					function( elem ) {
						return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
					};
			},

			"CLASS": function( className ) {
				var pattern = classCache[ className + " " ];

				return pattern ||
					(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
					classCache( className, function( elem ) {
						return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
					});
			},

			"ATTR": function( name, operator, check ) {
				return function( elem ) {
					var result = Sizzle.attr( elem, name );

					if ( result == null ) {
						return operator === "!=";
					}
					if ( !operator ) {
						return true;
					}

					result += "";

					return operator === "=" ? result === check :
						operator === "!=" ? result !== check :
						operator === "^=" ? check && result.indexOf( check ) === 0 :
						operator === "*=" ? check && result.indexOf( check ) > -1 :
						operator === "$=" ? check && result.slice( -check.length ) === check :
						operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
						operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
						false;
				};
			},

			"CHILD": function( type, what, argument, first, last ) {
				var simple = type.slice( 0, 3 ) !== "nth",
					forward = type.slice( -4 ) !== "last",
					ofType = what === "of-type";

				return first === 1 && last === 0 ?

					// Shortcut for :nth-*(n)
					function( elem ) {
						return !!elem.parentNode;
					} :

					function( elem, context, xml ) {
						var cache, outerCache, node, diff, nodeIndex, start,
							dir = simple !== forward ? "nextSibling" : "previousSibling",
							parent = elem.parentNode,
							name = ofType && elem.nodeName.toLowerCase(),
							useCache = !xml && !ofType;

						if ( parent ) {

							// :(first|last|only)-(child|of-type)
							if ( simple ) {
								while ( dir ) {
									node = elem;
									while ( (node = node[ dir ]) ) {
										if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {
											return false;
										}
									}
									// Reverse direction for :only-* (if we haven't yet done so)
									start = dir = type === "only" && !start && "nextSibling";
								}
								return true;
							}

							start = [ forward ? parent.firstChild : parent.lastChild ];

							// non-xml :nth-child(...) stores cache data on `parent`
							if ( forward && useCache ) {
								// Seek `elem` from a previously-cached index
								outerCache = parent[ expando ] || (parent[ expando ] = {});
								cache = outerCache[ type ] || [];
								nodeIndex = cache[0] === dirruns && cache[1];
								diff = cache[0] === dirruns && cache[2];
								node = nodeIndex && parent.childNodes[ nodeIndex ];

								while ( (node = ++nodeIndex && node && node[ dir ] ||

									// Fallback to seeking `elem` from the start
									(diff = nodeIndex = 0) || start.pop()) ) {

									// When found, cache indexes on `parent` and break
									if ( node.nodeType === 1 && ++diff && node === elem ) {
										outerCache[ type ] = [ dirruns, nodeIndex, diff ];
										break;
									}
								}

							// Use previously-cached element index if available
							} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {
								diff = cache[1];

							// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)
							} else {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {
										// Cache the index of each encountered element
										if ( useCache ) {
											(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}

							// Incorporate the offset, then check against cycle size
							diff -= last;
							return diff === first || ( diff % first === 0 && diff / first >= 0 );
						}
					};
			},

			"PSEUDO": function( pseudo, argument ) {
				// pseudo-class names are case-insensitive
				// http://www.w3.org/TR/selectors/#pseudo-classes
				// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
				// Remember that setFilters inherits from pseudos
				var args,
					fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
						Sizzle.error( "unsupported pseudo: " + pseudo );

				// The user may use createPseudo to indicate that
				// arguments are needed to create the filter function
				// just as Sizzle does
				if ( fn[ expando ] ) {
					return fn( argument );
				}

				// But maintain support for old signatures
				if ( fn.length > 1 ) {
					args = [ pseudo, pseudo, "", argument ];
					return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
						markFunction(function( seed, matches ) {
							var idx,
								matched = fn( seed, argument ),
								i = matched.length;
							while ( i-- ) {
								idx = indexOf( seed, matched[i] );
								seed[ idx ] = !( matches[ idx ] = matched[i] );
							}
						}) :
						function( elem ) {
							return fn( elem, 0, args );
						};
				}

				return fn;
			}
		},

		pseudos: {
			// Potentially complex pseudos
			"not": markFunction(function( selector ) {
				// Trim the selector passed to compile
				// to avoid treating leading and trailing
				// spaces as combinators
				var input = [],
					results = [],
					matcher = compile( selector.replace( rtrim, "$1" ) );

				return matcher[ expando ] ?
					markFunction(function( seed, matches, context, xml ) {
						var elem,
							unmatched = matcher( seed, null, xml, [] ),
							i = seed.length;

						// Match elements unmatched by `matcher`
						while ( i-- ) {
							if ( (elem = unmatched[i]) ) {
								seed[i] = !(matches[i] = elem);
							}
						}
					}) :
					function( elem, context, xml ) {
						input[0] = elem;
						matcher( input, null, xml, results );
						// Don't keep the element (issue #299)
						input[0] = null;
						return !results.pop();
					};
			}),

			"has": markFunction(function( selector ) {
				return function( elem ) {
					return Sizzle( selector, elem ).length > 0;
				};
			}),

			"contains": markFunction(function( text ) {
				text = text.replace( runescape, funescape );
				return function( elem ) {
					return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
				};
			}),

			// "Whether an element is represented by a :lang() selector
			// is based solely on the element's language value
			// being equal to the identifier C,
			// or beginning with the identifier C immediately followed by "-".
			// The matching of C against the element's language value is performed case-insensitively.
			// The identifier C does not have to be a valid language name."
			// http://www.w3.org/TR/selectors/#lang-pseudo
			"lang": markFunction( function( lang ) {
				// lang value must be a valid identifier
				if ( !ridentifier.test(lang || "") ) {
					Sizzle.error( "unsupported lang: " + lang );
				}
				lang = lang.replace( runescape, funescape ).toLowerCase();
				return function( elem ) {
					var elemLang;
					do {
						if ( (elemLang = documentIsHTML ?
							elem.lang :
							elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

							elemLang = elemLang.toLowerCase();
							return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
						}
					} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
					return false;
				};
			}),

			// Miscellaneous
			"target": function( elem ) {
				var hash = window.location && window.location.hash;
				return hash && hash.slice( 1 ) === elem.id;
			},

			"root": function( elem ) {
				return elem === docElem;
			},

			"focus": function( elem ) {
				return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
			},

			// Boolean properties
			"enabled": function( elem ) {
				return elem.disabled === false;
			},

			"disabled": function( elem ) {
				return elem.disabled === true;
			},

			"checked": function( elem ) {
				// In CSS3, :checked should return both checked and selected elements
				// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
				var nodeName = elem.nodeName.toLowerCase();
				return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
			},

			"selected": function( elem ) {
				// Accessing this property makes selected-by-default
				// options in Safari work properly
				if ( elem.parentNode ) {
					elem.parentNode.selectedIndex;
				}

				return elem.selected === true;
			},

			// Contents
			"empty": function( elem ) {
				// http://www.w3.org/TR/selectors/#empty-pseudo
				// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
				//   but not by others (comment: 8; processing instruction: 7; etc.)
				// nodeType < 6 works because attributes (2) do not appear as children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					if ( elem.nodeType < 6 ) {
						return false;
					}
				}
				return true;
			},

			"parent": function( elem ) {
				return !Expr.pseudos["empty"]( elem );
			},

			// Element/input types
			"header": function( elem ) {
				return rheader.test( elem.nodeName );
			},

			"input": function( elem ) {
				return rinputs.test( elem.nodeName );
			},

			"button": function( elem ) {
				var name = elem.nodeName.toLowerCase();
				return name === "input" && elem.type === "button" || name === "button";
			},

			"text": function( elem ) {
				var attr;
				return elem.nodeName.toLowerCase() === "input" &&
					elem.type === "text" &&

					// Support: IE<8
					// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
					( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
			},

			// Position-in-collection
			"first": createPositionalPseudo(function() {
				return [ 0 ];
			}),

			"last": createPositionalPseudo(function( matchIndexes, length ) {
				return [ length - 1 ];
			}),

			"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
				return [ argument < 0 ? argument + length : argument ];
			}),

			"even": createPositionalPseudo(function( matchIndexes, length ) {
				var i = 0;
				for ( ; i < length; i += 2 ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"odd": createPositionalPseudo(function( matchIndexes, length ) {
				var i = 1;
				for ( ; i < length; i += 2 ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
				var i = argument < 0 ? argument + length : argument;
				for ( ; --i >= 0; ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
				var i = argument < 0 ? argument + length : argument;
				for ( ; ++i < length; ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			})
		}
	};

	Expr.pseudos["nth"] = Expr.pseudos["eq"];

	// Add button/input type pseudos
	for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
		Expr.pseudos[ i ] = createInputPseudo( i );
	}
	for ( i in { submit: true, reset: true } ) {
		Expr.pseudos[ i ] = createButtonPseudo( i );
	}

	// Easy API for creating new setFilters
	function setFilters() {}
	setFilters.prototype = Expr.filters = Expr.pseudos;
	Expr.setFilters = new setFilters();

	tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
		var matched, match, tokens, type,
			soFar, groups, preFilters,
			cached = tokenCache[ selector + " " ];

		if ( cached ) {
			return parseOnly ? 0 : cached.slice( 0 );
		}

		soFar = selector;
		groups = [];
		preFilters = Expr.preFilter;

		while ( soFar ) {

			// Comma and first run
			if ( !matched || (match = rcomma.exec( soFar )) ) {
				if ( match ) {
					// Don't consume trailing commas as valid
					soFar = soFar.slice( match[0].length ) || soFar;
				}
				groups.push( (tokens = []) );
			}

			matched = false;

			// Combinators
			if ( (match = rcombinators.exec( soFar )) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					// Cast descendant combinators to space
					type: match[0].replace( rtrim, " " )
				});
				soFar = soFar.slice( matched.length );
			}

			// Filters
			for ( type in Expr.filter ) {
				if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
					(match = preFilters[ type ]( match ))) ) {
					matched = match.shift();
					tokens.push({
						value: matched,
						type: type,
						matches: match
					});
					soFar = soFar.slice( matched.length );
				}
			}

			if ( !matched ) {
				break;
			}
		}

		// Return the length of the invalid excess
		// if we're just parsing
		// Otherwise, throw an error or return tokens
		return parseOnly ?
			soFar.length :
			soFar ?
				Sizzle.error( selector ) :
				// Cache the tokens
				tokenCache( selector, groups ).slice( 0 );
	};

	function toSelector( tokens ) {
		var i = 0,
			len = tokens.length,
			selector = "";
		for ( ; i < len; i++ ) {
			selector += tokens[i].value;
		}
		return selector;
	}

	function addCombinator( matcher, combinator, base ) {
		var dir = combinator.dir,
			checkNonElements = base && dir === "parentNode",
			doneName = done++;

		return combinator.first ?
			// Check against closest ancestor/preceding element
			function( elem, context, xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						return matcher( elem, context, xml );
					}
				}
			} :

			// Check against all ancestor/preceding elements
			function( elem, context, xml ) {
				var oldCache, outerCache,
					newCache = [ dirruns, doneName ];

				// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
				if ( xml ) {
					while ( (elem = elem[ dir ]) ) {
						if ( elem.nodeType === 1 || checkNonElements ) {
							if ( matcher( elem, context, xml ) ) {
								return true;
							}
						}
					}
				} else {
					while ( (elem = elem[ dir ]) ) {
						if ( elem.nodeType === 1 || checkNonElements ) {
							outerCache = elem[ expando ] || (elem[ expando ] = {});
							if ( (oldCache = outerCache[ dir ]) &&
								oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

								// Assign to newCache so results back-propagate to previous elements
								return (newCache[ 2 ] = oldCache[ 2 ]);
							} else {
								// Reuse newcache so results back-propagate to previous elements
								outerCache[ dir ] = newCache;

								// A match means we're done; a fail means we have to keep checking
								if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
									return true;
								}
							}
						}
					}
				}
			};
	}

	function elementMatcher( matchers ) {
		return matchers.length > 1 ?
			function( elem, context, xml ) {
				var i = matchers.length;
				while ( i-- ) {
					if ( !matchers[i]( elem, context, xml ) ) {
						return false;
					}
				}
				return true;
			} :
			matchers[0];
	}

	function multipleContexts( selector, contexts, results ) {
		var i = 0,
			len = contexts.length;
		for ( ; i < len; i++ ) {
			Sizzle( selector, contexts[i], results );
		}
		return results;
	}

	function condense( unmatched, map, filter, context, xml ) {
		var elem,
			newUnmatched = [],
			i = 0,
			len = unmatched.length,
			mapped = map != null;

		for ( ; i < len; i++ ) {
			if ( (elem = unmatched[i]) ) {
				if ( !filter || filter( elem, context, xml ) ) {
					newUnmatched.push( elem );
					if ( mapped ) {
						map.push( i );
					}
				}
			}
		}

		return newUnmatched;
	}

	function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
		if ( postFilter && !postFilter[ expando ] ) {
			postFilter = setMatcher( postFilter );
		}
		if ( postFinder && !postFinder[ expando ] ) {
			postFinder = setMatcher( postFinder, postSelector );
		}
		return markFunction(function( seed, results, context, xml ) {
			var temp, i, elem,
				preMap = [],
				postMap = [],
				preexisting = results.length,

				// Get initial elements from seed or context
				elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

				// Prefilter to get matcher input, preserving a map for seed-results synchronization
				matcherIn = preFilter && ( seed || !selector ) ?
					condense( elems, preMap, preFilter, context, xml ) :
					elems,

				matcherOut = matcher ?
					// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
					postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

						// ...intermediate processing is necessary
						[] :

						// ...otherwise use results directly
						results :
					matcherIn;

			// Find primary matches
			if ( matcher ) {
				matcher( matcherIn, matcherOut, context, xml );
			}

			// Apply postFilter
			if ( postFilter ) {
				temp = condense( matcherOut, postMap );
				postFilter( temp, [], context, xml );

				// Un-match failing elements by moving them back to matcherIn
				i = temp.length;
				while ( i-- ) {
					if ( (elem = temp[i]) ) {
						matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
					}
				}
			}

			if ( seed ) {
				if ( postFinder || preFilter ) {
					if ( postFinder ) {
						// Get the final matcherOut by condensing this intermediate into postFinder contexts
						temp = [];
						i = matcherOut.length;
						while ( i-- ) {
							if ( (elem = matcherOut[i]) ) {
								// Restore matcherIn since elem is not yet a final match
								temp.push( (matcherIn[i] = elem) );
							}
						}
						postFinder( null, (matcherOut = []), temp, xml );
					}

					// Move matched elements from seed to results to keep them synchronized
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) &&
							(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

							seed[temp] = !(results[temp] = elem);
						}
					}
				}

			// Add elements to results, through postFinder if defined
			} else {
				matcherOut = condense(
					matcherOut === results ?
						matcherOut.splice( preexisting, matcherOut.length ) :
						matcherOut
				);
				if ( postFinder ) {
					postFinder( null, results, matcherOut, xml );
				} else {
					push.apply( results, matcherOut );
				}
			}
		});
	}

	function matcherFromTokens( tokens ) {
		var checkContext, matcher, j,
			len = tokens.length,
			leadingRelative = Expr.relative[ tokens[0].type ],
			implicitRelative = leadingRelative || Expr.relative[" "],
			i = leadingRelative ? 1 : 0,

			// The foundational matcher ensures that elements are reachable from top-level context(s)
			matchContext = addCombinator( function( elem ) {
				return elem === checkContext;
			}, implicitRelative, true ),
			matchAnyContext = addCombinator( function( elem ) {
				return indexOf( checkContext, elem ) > -1;
			}, implicitRelative, true ),
			matchers = [ function( elem, context, xml ) {
				var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
					(checkContext = context).nodeType ?
						matchContext( elem, context, xml ) :
						matchAnyContext( elem, context, xml ) );
				// Avoid hanging onto element (issue #299)
				checkContext = null;
				return ret;
			} ];

		for ( ; i < len; i++ ) {
			if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
				matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
			} else {
				matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

				// Return special upon seeing a positional matcher
				if ( matcher[ expando ] ) {
					// Find the next relative operator (if any) for proper handling
					j = ++i;
					for ( ; j < len; j++ ) {
						if ( Expr.relative[ tokens[j].type ] ) {
							break;
						}
					}
					return setMatcher(
						i > 1 && elementMatcher( matchers ),
						i > 1 && toSelector(
							// If the preceding token was a descendant combinator, insert an implicit any-element `*`
							tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
						).replace( rtrim, "$1" ),
						matcher,
						i < j && matcherFromTokens( tokens.slice( i, j ) ),
						j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
						j < len && toSelector( tokens )
					);
				}
				matchers.push( matcher );
			}
		}

		return elementMatcher( matchers );
	}

	function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
		var bySet = setMatchers.length > 0,
			byElement = elementMatchers.length > 0,
			superMatcher = function( seed, context, xml, results, outermost ) {
				var elem, j, matcher,
					matchedCount = 0,
					i = "0",
					unmatched = seed && [],
					setMatched = [],
					contextBackup = outermostContext,
					// We must always have either seed elements or outermost context
					elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
					// Use integer dirruns iff this is the outermost matcher
					dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
					len = elems.length;

				if ( outermost ) {
					outermostContext = context !== document && context;
				}

				// Add elements passing elementMatchers directly to results
				// Keep `i` a string if there are no elements so `matchedCount` will be "00" below
				// Support: IE<9, Safari
				// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
				for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
					if ( byElement && elem ) {
						j = 0;
						while ( (matcher = elementMatchers[j++]) ) {
							if ( matcher( elem, context, xml ) ) {
								results.push( elem );
								break;
							}
						}
						if ( outermost ) {
							dirruns = dirrunsUnique;
						}
					}

					// Track unmatched elements for set filters
					if ( bySet ) {
						// They will have gone through all possible matchers
						if ( (elem = !matcher && elem) ) {
							matchedCount--;
						}

						// Lengthen the array for every element, matched or not
						if ( seed ) {
							unmatched.push( elem );
						}
					}
				}

				// Apply set filters to unmatched elements
				matchedCount += i;
				if ( bySet && i !== matchedCount ) {
					j = 0;
					while ( (matcher = setMatchers[j++]) ) {
						matcher( unmatched, setMatched, context, xml );
					}

					if ( seed ) {
						// Reintegrate element matches to eliminate the need for sorting
						if ( matchedCount > 0 ) {
							while ( i-- ) {
								if ( !(unmatched[i] || setMatched[i]) ) {
									setMatched[i] = pop.call( results );
								}
							}
						}

						// Discard index placeholder values to get only actual matches
						setMatched = condense( setMatched );
					}

					// Add matches to results
					push.apply( results, setMatched );

					// Seedless set matches succeeding multiple successful matchers stipulate sorting
					if ( outermost && !seed && setMatched.length > 0 &&
						( matchedCount + setMatchers.length ) > 1 ) {

						Sizzle.uniqueSort( results );
					}
				}

				// Override manipulation of globals by nested matchers
				if ( outermost ) {
					dirruns = dirrunsUnique;
					outermostContext = contextBackup;
				}

				return unmatched;
			};

		return bySet ?
			markFunction( superMatcher ) :
			superMatcher;
	}

	compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
		var i,
			setMatchers = [],
			elementMatchers = [],
			cached = compilerCache[ selector + " " ];

		if ( !cached ) {
			// Generate a function of recursive functions that can be used to check each element
			if ( !match ) {
				match = tokenize( selector );
			}
			i = match.length;
			while ( i-- ) {
				cached = matcherFromTokens( match[i] );
				if ( cached[ expando ] ) {
					setMatchers.push( cached );
				} else {
					elementMatchers.push( cached );
				}
			}

			// Cache the compiled function
			cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

			// Save selector and tokenization
			cached.selector = selector;
		}
		return cached;
	};

	/**
	 * A low-level selection function that works with Sizzle's compiled
	 *  selector functions
	 * @param {String|Function} selector A selector or a pre-compiled
	 *  selector function built with Sizzle.compile
	 * @param {Element} context
	 * @param {Array} [results]
	 * @param {Array} [seed] A set of elements to match against
	 */
	select = Sizzle.select = function( selector, context, results, seed ) {
		var i, tokens, token, type, find,
			compiled = typeof selector === "function" && selector,
			match = !seed && tokenize( (selector = compiled.selector || selector) );

		results = results || [];

		// Try to minimize operations if there is no seed and only one group
		if ( match.length === 1 ) {

			// Take a shortcut and set the context if the root selector is an ID
			tokens = match[0] = match[0].slice( 0 );
			if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
					support.getById && context.nodeType === 9 && documentIsHTML &&
					Expr.relative[ tokens[1].type ] ) {

				context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
				if ( !context ) {
					return results;

				// Precompiled matchers will still verify ancestry, so step up a level
				} else if ( compiled ) {
					context = context.parentNode;
				}

				selector = selector.slice( tokens.shift().value.length );
			}

			// Fetch a seed set for right-to-left matching
			i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
			while ( i-- ) {
				token = tokens[i];

				// Abort if we hit a combinator
				if ( Expr.relative[ (type = token.type) ] ) {
					break;
				}
				if ( (find = Expr.find[ type ]) ) {
					// Search, expanding context for leading sibling combinators
					if ( (seed = find(
						token.matches[0].replace( runescape, funescape ),
						rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
					)) ) {

						// If seed is empty or no tokens remain, we can return early
						tokens.splice( i, 1 );
						selector = seed.length && toSelector( tokens );
						if ( !selector ) {
							push.apply( results, seed );
							return results;
						}

						break;
					}
				}
			}
		}

		// Compile and execute a filtering function if one is not provided
		// Provide `match` to avoid retokenization if we modified the selector above
		( compiled || compile( selector, match ) )(
			seed,
			context,
			!documentIsHTML,
			results,
			rsibling.test( selector ) && testContext( context.parentNode ) || context
		);
		return results;
	};

	// One-time assignments

	// Sort stability
	support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

	// Support: Chrome 14-35+
	// Always assume duplicates if they aren't passed to the comparison function
	support.detectDuplicates = !!hasDuplicate;

	// Initialize against the default document
	setDocument();

	// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
	// Detached nodes confoundingly follow *each other*
	support.sortDetached = assert(function( div1 ) {
		// Should return 1, but returns 4 (following)
		return div1.compareDocumentPosition( document.createElement("div") ) & 1;
	});

	// Support: IE<8
	// Prevent attribute/property "interpolation"
	// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
	if ( !assert(function( div ) {
		div.innerHTML = "<a href='#'></a>";
		return div.firstChild.getAttribute("href") === "#" ;
	}) ) {
		addHandle( "type|href|height|width", function( elem, name, isXML ) {
			if ( !isXML ) {
				return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
			}
		});
	}

	// Support: IE<9
	// Use defaultValue in place of getAttribute("value")
	if ( !support.attributes || !assert(function( div ) {
		div.innerHTML = "<input/>";
		div.firstChild.setAttribute( "value", "" );
		return div.firstChild.getAttribute( "value" ) === "";
	}) ) {
		addHandle( "value", function( elem, name, isXML ) {
			if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
				return elem.defaultValue;
			}
		});
	}

	// Support: IE<9
	// Use getAttributeNode to fetch booleans when getAttribute lies
	if ( !assert(function( div ) {
		return div.getAttribute("disabled") == null;
	}) ) {
		addHandle( booleans, function( elem, name, isXML ) {
			var val;
			if ( !isXML ) {
				return elem[ name ] === true ? name.toLowerCase() :
						(val = elem.getAttributeNode( name )) && val.specified ?
						val.value :
					null;
			}
		});
	}

	return Sizzle;

	})( window );



	jQuery.find = Sizzle;
	jQuery.expr = Sizzle.selectors;
	jQuery.expr[":"] = jQuery.expr.pseudos;
	jQuery.unique = Sizzle.uniqueSort;
	jQuery.text = Sizzle.getText;
	jQuery.isXMLDoc = Sizzle.isXML;
	jQuery.contains = Sizzle.contains;



	var rneedsContext = jQuery.expr.match.needsContext;

	var rsingleTag = (/^<(\w+)\s*\/?>(?:<\/\1>|)$/);



	var risSimple = /^.[^:#\[\.,]*$/;

	// Implement the identical functionality for filter and not
	function winnow( elements, qualifier, not ) {
		if ( jQuery.isFunction( qualifier ) ) {
			return jQuery.grep( elements, function( elem, i ) {
				/* jshint -W018 */
				return !!qualifier.call( elem, i, elem ) !== not;
			});

		}

		if ( qualifier.nodeType ) {
			return jQuery.grep( elements, function( elem ) {
				return ( elem === qualifier ) !== not;
			});

		}

		if ( typeof qualifier === "string" ) {
			if ( risSimple.test( qualifier ) ) {
				return jQuery.filter( qualifier, elements, not );
			}

			qualifier = jQuery.filter( qualifier, elements );
		}

		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) >= 0 ) !== not;
		});
	}

	jQuery.filter = function( expr, elems, not ) {
		var elem = elems[ 0 ];

		if ( not ) {
			expr = ":not(" + expr + ")";
		}

		return elems.length === 1 && elem.nodeType === 1 ?
			jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
			jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
				return elem.nodeType === 1;
			}));
	};

	jQuery.fn.extend({
		find: function( selector ) {
			var i,
				len = this.length,
				ret = [],
				self = this;

			if ( typeof selector !== "string" ) {
				return this.pushStack( jQuery( selector ).filter(function() {
					for ( i = 0; i < len; i++ ) {
						if ( jQuery.contains( self[ i ], this ) ) {
							return true;
						}
					}
				}) );
			}

			for ( i = 0; i < len; i++ ) {
				jQuery.find( selector, self[ i ], ret );
			}

			// Needed because $( selector, context ) becomes $( context ).find( selector )
			ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
			ret.selector = this.selector ? this.selector + " " + selector : selector;
			return ret;
		},
		filter: function( selector ) {
			return this.pushStack( winnow(this, selector || [], false) );
		},
		not: function( selector ) {
			return this.pushStack( winnow(this, selector || [], true) );
		},
		is: function( selector ) {
			return !!winnow(
				this,

				// If this is a positional/relative selector, check membership in the returned set
				// so $("p:first").is("p:last") won't return true for a doc with two "p".
				typeof selector === "string" && rneedsContext.test( selector ) ?
					jQuery( selector ) :
					selector || [],
				false
			).length;
		}
	});


	// Initialize a jQuery object


	// A central reference to the root jQuery(document)
	var rootjQuery,

		// A simple way to check for HTML strings
		// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
		// Strict HTML recognition (#11290: must start with <)
		rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

		init = jQuery.fn.init = function( selector, context ) {
			var match, elem;

			// HANDLE: $(""), $(null), $(undefined), $(false)
			if ( !selector ) {
				return this;
			}

			// Handle HTML strings
			if ( typeof selector === "string" ) {
				if ( selector[0] === "<" && selector[ selector.length - 1 ] === ">" && selector.length >= 3 ) {
					// Assume that strings that start and end with <> are HTML and skip the regex check
					match = [ null, selector, null ];

				} else {
					match = rquickExpr.exec( selector );
				}

				// Match html or make sure no context is specified for #id
				if ( match && (match[1] || !context) ) {

					// HANDLE: $(html) -> $(array)
					if ( match[1] ) {
						context = context instanceof jQuery ? context[0] : context;

						// Option to run scripts is true for back-compat
						// Intentionally let the error be thrown if parseHTML is not present
						jQuery.merge( this, jQuery.parseHTML(
							match[1],
							context && context.nodeType ? context.ownerDocument || context : document,
							true
						) );

						// HANDLE: $(html, props)
						if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
							for ( match in context ) {
								// Properties of context are called as methods if possible
								if ( jQuery.isFunction( this[ match ] ) ) {
									this[ match ]( context[ match ] );

								// ...and otherwise set as attributes
								} else {
									this.attr( match, context[ match ] );
								}
							}
						}

						return this;

					// HANDLE: $(#id)
					} else {
						elem = document.getElementById( match[2] );

						// Support: Blackberry 4.6
						// gEBID returns nodes no longer in the document (#6963)
						if ( elem && elem.parentNode ) {
							// Inject the element directly into the jQuery object
							this.length = 1;
							this[0] = elem;
						}

						this.context = document;
						this.selector = selector;
						return this;
					}

				// HANDLE: $(expr, $(...))
				} else if ( !context || context.jquery ) {
					return ( context || rootjQuery ).find( selector );

				// HANDLE: $(expr, context)
				// (which is just equivalent to: $(context).find(expr)
				} else {
					return this.constructor( context ).find( selector );
				}

			// HANDLE: $(DOMElement)
			} else if ( selector.nodeType ) {
				this.context = this[0] = selector;
				this.length = 1;
				return this;

			// HANDLE: $(function)
			// Shortcut for document ready
			} else if ( jQuery.isFunction( selector ) ) {
				return typeof rootjQuery.ready !== "undefined" ?
					rootjQuery.ready( selector ) :
					// Execute immediately if ready is not present
					selector( jQuery );
			}

			if ( selector.selector !== undefined ) {
				this.selector = selector.selector;
				this.context = selector.context;
			}

			return jQuery.makeArray( selector, this );
		};

	// Give the init function the jQuery prototype for later instantiation
	init.prototype = jQuery.fn;

	// Initialize central reference
	rootjQuery = jQuery( document );


	var rparentsprev = /^(?:parents|prev(?:Until|All))/,
		// Methods guaranteed to produce a unique set when starting from a unique set
		guaranteedUnique = {
			children: true,
			contents: true,
			next: true,
			prev: true
		};

	jQuery.extend({
		dir: function( elem, dir, until ) {
			var matched = [],
				truncate = until !== undefined;

			while ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {
				if ( elem.nodeType === 1 ) {
					if ( truncate && jQuery( elem ).is( until ) ) {
						break;
					}
					matched.push( elem );
				}
			}
			return matched;
		},

		sibling: function( n, elem ) {
			var matched = [];

			for ( ; n; n = n.nextSibling ) {
				if ( n.nodeType === 1 && n !== elem ) {
					matched.push( n );
				}
			}

			return matched;
		}
	});

	jQuery.fn.extend({
		has: function( target ) {
			var targets = jQuery( target, this ),
				l = targets.length;

			return this.filter(function() {
				var i = 0;
				for ( ; i < l; i++ ) {
					if ( jQuery.contains( this, targets[i] ) ) {
						return true;
					}
				}
			});
		},

		closest: function( selectors, context ) {
			var cur,
				i = 0,
				l = this.length,
				matched = [],
				pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
					jQuery( selectors, context || this.context ) :
					0;

			for ( ; i < l; i++ ) {
				for ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {
					// Always skip document fragments
					if ( cur.nodeType < 11 && (pos ?
						pos.index(cur) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector(cur, selectors)) ) {

						matched.push( cur );
						break;
					}
				}
			}

			return this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );
		},

		// Determine the position of an element within the set
		index: function( elem ) {

			// No argument, return index in parent
			if ( !elem ) {
				return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
			}

			// Index in selector
			if ( typeof elem === "string" ) {
				return indexOf.call( jQuery( elem ), this[ 0 ] );
			}

			// Locate the position of the desired element
			return indexOf.call( this,

				// If it receives a jQuery object, the first element is used
				elem.jquery ? elem[ 0 ] : elem
			);
		},

		add: function( selector, context ) {
			return this.pushStack(
				jQuery.unique(
					jQuery.merge( this.get(), jQuery( selector, context ) )
				)
			);
		},

		addBack: function( selector ) {
			return this.add( selector == null ?
				this.prevObject : this.prevObject.filter(selector)
			);
		}
	});

	function sibling( cur, dir ) {
		while ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}
		return cur;
	}

	jQuery.each({
		parent: function( elem ) {
			var parent = elem.parentNode;
			return parent && parent.nodeType !== 11 ? parent : null;
		},
		parents: function( elem ) {
			return jQuery.dir( elem, "parentNode" );
		},
		parentsUntil: function( elem, i, until ) {
			return jQuery.dir( elem, "parentNode", until );
		},
		next: function( elem ) {
			return sibling( elem, "nextSibling" );
		},
		prev: function( elem ) {
			return sibling( elem, "previousSibling" );
		},
		nextAll: function( elem ) {
			return jQuery.dir( elem, "nextSibling" );
		},
		prevAll: function( elem ) {
			return jQuery.dir( elem, "previousSibling" );
		},
		nextUntil: function( elem, i, until ) {
			return jQuery.dir( elem, "nextSibling", until );
		},
		prevUntil: function( elem, i, until ) {
			return jQuery.dir( elem, "previousSibling", until );
		},
		siblings: function( elem ) {
			return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
		},
		children: function( elem ) {
			return jQuery.sibling( elem.firstChild );
		},
		contents: function( elem ) {
			return elem.contentDocument || jQuery.merge( [], elem.childNodes );
		}
	}, function( name, fn ) {
		jQuery.fn[ name ] = function( until, selector ) {
			var matched = jQuery.map( this, fn, until );

			if ( name.slice( -5 ) !== "Until" ) {
				selector = until;
			}

			if ( selector && typeof selector === "string" ) {
				matched = jQuery.filter( selector, matched );
			}

			if ( this.length > 1 ) {
				// Remove duplicates
				if ( !guaranteedUnique[ name ] ) {
					jQuery.unique( matched );
				}

				// Reverse order for parents* and prev-derivatives
				if ( rparentsprev.test( name ) ) {
					matched.reverse();
				}
			}

			return this.pushStack( matched );
		};
	});
	var rnotwhite = (/\S+/g);



	// String to Object options format cache
	var optionsCache = {};

	// Convert String-formatted options into Object-formatted ones and store in cache
	function createOptions( options ) {
		var object = optionsCache[ options ] = {};
		jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
			object[ flag ] = true;
		});
		return object;
	}

	/*
	 * Create a callback list using the following parameters:
	 *
	 *	options: an optional list of space-separated options that will change how
	 *			the callback list behaves or a more traditional option object
	 *
	 * By default a callback list will act like an event callback list and can be
	 * "fired" multiple times.
	 *
	 * Possible options:
	 *
	 *	once:			will ensure the callback list can only be fired once (like a Deferred)
	 *
	 *	memory:			will keep track of previous values and will call any callback added
	 *					after the list has been fired right away with the latest "memorized"
	 *					values (like a Deferred)
	 *
	 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
	 *
	 *	stopOnFalse:	interrupt callings when a callback returns false
	 *
	 */
	jQuery.Callbacks = function( options ) {

		// Convert options from String-formatted to Object-formatted if needed
		// (we check in cache first)
		options = typeof options === "string" ?
			( optionsCache[ options ] || createOptions( options ) ) :
			jQuery.extend( {}, options );

		var // Last fire value (for non-forgettable lists)
			memory,
			// Flag to know if list was already fired
			fired,
			// Flag to know if list is currently firing
			firing,
			// First callback to fire (used internally by add and fireWith)
			firingStart,
			// End of the loop when firing
			firingLength,
			// Index of currently firing callback (modified by remove if needed)
			firingIndex,
			// Actual callback list
			list = [],
			// Stack of fire calls for repeatable lists
			stack = !options.once && [],
			// Fire callbacks
			fire = function( data ) {
				memory = options.memory && data;
				fired = true;
				firingIndex = firingStart || 0;
				firingStart = 0;
				firingLength = list.length;
				firing = true;
				for ( ; list && firingIndex < firingLength; firingIndex++ ) {
					if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
						memory = false; // To prevent further calls using add
						break;
					}
				}
				firing = false;
				if ( list ) {
					if ( stack ) {
						if ( stack.length ) {
							fire( stack.shift() );
						}
					} else if ( memory ) {
						list = [];
					} else {
						self.disable();
					}
				}
			},
			// Actual Callbacks object
			self = {
				// Add a callback or a collection of callbacks to the list
				add: function() {
					if ( list ) {
						// First, we save the current length
						var start = list.length;
						(function add( args ) {
							jQuery.each( args, function( _, arg ) {
								var type = jQuery.type( arg );
								if ( type === "function" ) {
									if ( !options.unique || !self.has( arg ) ) {
										list.push( arg );
									}
								} else if ( arg && arg.length && type !== "string" ) {
									// Inspect recursively
									add( arg );
								}
							});
						})( arguments );
						// Do we need to add the callbacks to the
						// current firing batch?
						if ( firing ) {
							firingLength = list.length;
						// With memory, if we're not firing then
						// we should call right away
						} else if ( memory ) {
							firingStart = start;
							fire( memory );
						}
					}
					return this;
				},
				// Remove a callback from the list
				remove: function() {
					if ( list ) {
						jQuery.each( arguments, function( _, arg ) {
							var index;
							while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
								list.splice( index, 1 );
								// Handle firing indexes
								if ( firing ) {
									if ( index <= firingLength ) {
										firingLength--;
									}
									if ( index <= firingIndex ) {
										firingIndex--;
									}
								}
							}
						});
					}
					return this;
				},
				// Check if a given callback is in the list.
				// If no argument is given, return whether or not list has callbacks attached.
				has: function( fn ) {
					return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );
				},
				// Remove all callbacks from the list
				empty: function() {
					list = [];
					firingLength = 0;
					return this;
				},
				// Have the list do nothing anymore
				disable: function() {
					list = stack = memory = undefined;
					return this;
				},
				// Is it disabled?
				disabled: function() {
					return !list;
				},
				// Lock the list in its current state
				lock: function() {
					stack = undefined;
					if ( !memory ) {
						self.disable();
					}
					return this;
				},
				// Is it locked?
				locked: function() {
					return !stack;
				},
				// Call all callbacks with the given context and arguments
				fireWith: function( context, args ) {
					if ( list && ( !fired || stack ) ) {
						args = args || [];
						args = [ context, args.slice ? args.slice() : args ];
						if ( firing ) {
							stack.push( args );
						} else {
							fire( args );
						}
					}
					return this;
				},
				// Call all the callbacks with the given arguments
				fire: function() {
					self.fireWith( this, arguments );
					return this;
				},
				// To know if the callbacks have already been called at least once
				fired: function() {
					return !!fired;
				}
			};

		return self;
	};


	jQuery.extend({

		Deferred: function( func ) {
			var tuples = [
					// action, add listener, listener list, final state
					[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
					[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
					[ "notify", "progress", jQuery.Callbacks("memory") ]
				],
				state = "pending",
				promise = {
					state: function() {
						return state;
					},
					always: function() {
						deferred.done( arguments ).fail( arguments );
						return this;
					},
					then: function( /* fnDone, fnFail, fnProgress */ ) {
						var fns = arguments;
						return jQuery.Deferred(function( newDefer ) {
							jQuery.each( tuples, function( i, tuple ) {
								var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
								// deferred[ done | fail | progress ] for forwarding actions to newDefer
								deferred[ tuple[1] ](function() {
									var returned = fn && fn.apply( this, arguments );
									if ( returned && jQuery.isFunction( returned.promise ) ) {
										returned.promise()
											.done( newDefer.resolve )
											.fail( newDefer.reject )
											.progress( newDefer.notify );
									} else {
										newDefer[ tuple[ 0 ] + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );
									}
								});
							});
							fns = null;
						}).promise();
					},
					// Get a promise for this deferred
					// If obj is provided, the promise aspect is added to the object
					promise: function( obj ) {
						return obj != null ? jQuery.extend( obj, promise ) : promise;
					}
				},
				deferred = {};

			// Keep pipe for back-compat
			promise.pipe = promise.then;

			// Add list-specific methods
			jQuery.each( tuples, function( i, tuple ) {
				var list = tuple[ 2 ],
					stateString = tuple[ 3 ];

				// promise[ done | fail | progress ] = list.add
				promise[ tuple[1] ] = list.add;

				// Handle state
				if ( stateString ) {
					list.add(function() {
						// state = [ resolved | rejected ]
						state = stateString;

					// [ reject_list | resolve_list ].disable; progress_list.lock
					}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
				}

				// deferred[ resolve | reject | notify ]
				deferred[ tuple[0] ] = function() {
					deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );
					return this;
				};
				deferred[ tuple[0] + "With" ] = list.fireWith;
			});

			// Make the deferred a promise
			promise.promise( deferred );

			// Call given func if any
			if ( func ) {
				func.call( deferred, deferred );
			}

			// All done!
			return deferred;
		},

		// Deferred helper
		when: function( subordinate /* , ..., subordinateN */ ) {
			var i = 0,
				resolveValues = slice.call( arguments ),
				length = resolveValues.length,

				// the count of uncompleted subordinates
				remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

				// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
				deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

				// Update function for both resolve and progress values
				updateFunc = function( i, contexts, values ) {
					return function( value ) {
						contexts[ i ] = this;
						values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
						if ( values === progressValues ) {
							deferred.notifyWith( contexts, values );
						} else if ( !( --remaining ) ) {
							deferred.resolveWith( contexts, values );
						}
					};
				},

				progressValues, progressContexts, resolveContexts;

			// Add listeners to Deferred subordinates; treat others as resolved
			if ( length > 1 ) {
				progressValues = new Array( length );
				progressContexts = new Array( length );
				resolveContexts = new Array( length );
				for ( ; i < length; i++ ) {
					if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
						resolveValues[ i ].promise()
							.done( updateFunc( i, resolveContexts, resolveValues ) )
							.fail( deferred.reject )
							.progress( updateFunc( i, progressContexts, progressValues ) );
					} else {
						--remaining;
					}
				}
			}

			// If we're not waiting on anything, resolve the master
			if ( !remaining ) {
				deferred.resolveWith( resolveContexts, resolveValues );
			}

			return deferred.promise();
		}
	});


	// The deferred used on DOM ready
	var readyList;

	jQuery.fn.ready = function( fn ) {
		// Add the callback
		jQuery.ready.promise().done( fn );

		return this;
	};

	jQuery.extend({
		// Is the DOM ready to be used? Set to true once it occurs.
		isReady: false,

		// A counter to track how many items to wait for before
		// the ready event fires. See #6781
		readyWait: 1,

		// Hold (or release) the ready event
		holdReady: function( hold ) {
			if ( hold ) {
				jQuery.readyWait++;
			} else {
				jQuery.ready( true );
			}
		},

		// Handle when the DOM is ready
		ready: function( wait ) {

			// Abort if there are pending holds or we're already ready
			if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
				return;
			}

			// Remember that the DOM is ready
			jQuery.isReady = true;

			// If a normal DOM Ready event fired, decrement, and wait if need be
			if ( wait !== true && --jQuery.readyWait > 0 ) {
				return;
			}

			// If there are functions bound, to execute
			readyList.resolveWith( document, [ jQuery ] );

			// Trigger any bound ready events
			if ( jQuery.fn.triggerHandler ) {
				jQuery( document ).triggerHandler( "ready" );
				jQuery( document ).off( "ready" );
			}
		}
	});

	/**
	 * The ready event handler and self cleanup method
	 */
	function completed() {
		document.removeEventListener( "DOMContentLoaded", completed, false );
		window.removeEventListener( "load", completed, false );
		jQuery.ready();
	}

	jQuery.ready.promise = function( obj ) {
		if ( !readyList ) {

			readyList = jQuery.Deferred();

			// Catch cases where $(document).ready() is called after the browser event has already occurred.
			// We once tried to use readyState "interactive" here, but it caused issues like the one
			// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
			if ( document.readyState === "complete" ) {
				// Handle it asynchronously to allow scripts the opportunity to delay ready
				setTimeout( jQuery.ready );

			} else {

				// Use the handy event callback
				document.addEventListener( "DOMContentLoaded", completed, false );

				// A fallback to window.onload, that will always work
				window.addEventListener( "load", completed, false );
			}
		}
		return readyList.promise( obj );
	};

	// Kick off the DOM ready check even if the user does not
	jQuery.ready.promise();




	// Multifunctional method to get and set values of a collection
	// The value/s can optionally be executed if it's a function
	var access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
		var i = 0,
			len = elems.length,
			bulk = key == null;

		// Sets many values
		if ( jQuery.type( key ) === "object" ) {
			chainable = true;
			for ( i in key ) {
				jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );
			}

		// Sets one value
		} else if ( value !== undefined ) {
			chainable = true;

			if ( !jQuery.isFunction( value ) ) {
				raw = true;
			}

			if ( bulk ) {
				// Bulk operations run against the entire set
				if ( raw ) {
					fn.call( elems, value );
					fn = null;

				// ...except when executing function values
				} else {
					bulk = fn;
					fn = function( elem, key, value ) {
						return bulk.call( jQuery( elem ), value );
					};
				}
			}

			if ( fn ) {
				for ( ; i < len; i++ ) {
					fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
				}
			}
		}

		return chainable ?
			elems :

			// Gets
			bulk ?
				fn.call( elems ) :
				len ? fn( elems[0], key ) : emptyGet;
	};


	/**
	 * Determines whether an object can have data
	 */
	jQuery.acceptData = function( owner ) {
		// Accepts only:
		//  - Node
		//    - Node.ELEMENT_NODE
		//    - Node.DOCUMENT_NODE
		//  - Object
		//    - Any
		/* jshint -W018 */
		return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
	};


	function Data() {
		// Support: Android<4,
		// Old WebKit does not have Object.preventExtensions/freeze method,
		// return new empty object instead with no [[set]] accessor
		Object.defineProperty( this.cache = {}, 0, {
			get: function() {
				return {};
			}
		});

		this.expando = jQuery.expando + Data.uid++;
	}

	Data.uid = 1;
	Data.accepts = jQuery.acceptData;

	Data.prototype = {
		key: function( owner ) {
			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return the key for a frozen object.
			if ( !Data.accepts( owner ) ) {
				return 0;
			}

			var descriptor = {},
				// Check if the owner object already has a cache key
				unlock = owner[ this.expando ];

			// If not, create one
			if ( !unlock ) {
				unlock = Data.uid++;

				// Secure it in a non-enumerable, non-writable property
				try {
					descriptor[ this.expando ] = { value: unlock };
					Object.defineProperties( owner, descriptor );

				// Support: Android<4
				// Fallback to a less secure definition
				} catch ( e ) {
					descriptor[ this.expando ] = unlock;
					jQuery.extend( owner, descriptor );
				}
			}

			// Ensure the cache object
			if ( !this.cache[ unlock ] ) {
				this.cache[ unlock ] = {};
			}

			return unlock;
		},
		set: function( owner, data, value ) {
			var prop,
				// There may be an unlock assigned to this node,
				// if there is no entry for this "owner", create one inline
				// and set the unlock as though an owner entry had always existed
				unlock = this.key( owner ),
				cache = this.cache[ unlock ];

			// Handle: [ owner, key, value ] args
			if ( typeof data === "string" ) {
				cache[ data ] = value;

			// Handle: [ owner, { properties } ] args
			} else {
				// Fresh assignments by object are shallow copied
				if ( jQuery.isEmptyObject( cache ) ) {
					jQuery.extend( this.cache[ unlock ], data );
				// Otherwise, copy the properties one-by-one to the cache object
				} else {
					for ( prop in data ) {
						cache[ prop ] = data[ prop ];
					}
				}
			}
			return cache;
		},
		get: function( owner, key ) {
			// Either a valid cache is found, or will be created.
			// New caches will be created and the unlock returned,
			// allowing direct access to the newly created
			// empty data object. A valid owner object must be provided.
			var cache = this.cache[ this.key( owner ) ];

			return key === undefined ?
				cache : cache[ key ];
		},
		access: function( owner, key, value ) {
			var stored;
			// In cases where either:
			//
			//   1. No key was specified
			//   2. A string key was specified, but no value provided
			//
			// Take the "read" path and allow the get method to determine
			// which value to return, respectively either:
			//
			//   1. The entire cache object
			//   2. The data stored at the key
			//
			if ( key === undefined ||
					((key && typeof key === "string") && value === undefined) ) {

				stored = this.get( owner, key );

				return stored !== undefined ?
					stored : this.get( owner, jQuery.camelCase(key) );
			}

			// [*]When the key is not a string, or both a key and value
			// are specified, set or extend (existing objects) with either:
			//
			//   1. An object of properties
			//   2. A key and value
			//
			this.set( owner, key, value );

			// Since the "set" path can have two possible entry points
			// return the expected data based on which path was taken[*]
			return value !== undefined ? value : key;
		},
		remove: function( owner, key ) {
			var i, name, camel,
				unlock = this.key( owner ),
				cache = this.cache[ unlock ];

			if ( key === undefined ) {
				this.cache[ unlock ] = {};

			} else {
				// Support array or space separated string of keys
				if ( jQuery.isArray( key ) ) {
					// If "name" is an array of keys...
					// When data is initially created, via ("key", "val") signature,
					// keys will be converted to camelCase.
					// Since there is no way to tell _how_ a key was added, remove
					// both plain key and camelCase key. #12786
					// This will only penalize the array argument path.
					name = key.concat( key.map( jQuery.camelCase ) );
				} else {
					camel = jQuery.camelCase( key );
					// Try the string as a key before any manipulation
					if ( key in cache ) {
						name = [ key, camel ];
					} else {
						// If a key with the spaces exists, use it.
						// Otherwise, create an array by matching non-whitespace
						name = camel;
						name = name in cache ?
							[ name ] : ( name.match( rnotwhite ) || [] );
					}
				}

				i = name.length;
				while ( i-- ) {
					delete cache[ name[ i ] ];
				}
			}
		},
		hasData: function( owner ) {
			return !jQuery.isEmptyObject(
				this.cache[ owner[ this.expando ] ] || {}
			);
		},
		discard: function( owner ) {
			if ( owner[ this.expando ] ) {
				delete this.cache[ owner[ this.expando ] ];
			}
		}
	};
	var data_priv = new Data();

	var data_user = new Data();



	//	Implementation Summary
	//
	//	1. Enforce API surface and semantic compatibility with 1.9.x branch
	//	2. Improve the module's maintainability by reducing the storage
	//		paths to a single mechanism.
	//	3. Use the same single mechanism to support "private" and "user" data.
	//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
	//	5. Avoid exposing implementation details on user objects (eg. expando properties)
	//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

	var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
		rmultiDash = /([A-Z])/g;

	function dataAttr( elem, key, data ) {
		var name;

		// If nothing was found internally, try to fetch any
		// data from the HTML5 data-* attribute
		if ( data === undefined && elem.nodeType === 1 ) {
			name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();
			data = elem.getAttribute( name );

			if ( typeof data === "string" ) {
				try {
					data = data === "true" ? true :
						data === "false" ? false :
						data === "null" ? null :
						// Only convert to a number if it doesn't change the string
						+data + "" === data ? +data :
						rbrace.test( data ) ? jQuery.parseJSON( data ) :
						data;
				} catch( e ) {}

				// Make sure we set the data so it isn't changed later
				data_user.set( elem, key, data );
			} else {
				data = undefined;
			}
		}
		return data;
	}

	jQuery.extend({
		hasData: function( elem ) {
			return data_user.hasData( elem ) || data_priv.hasData( elem );
		},

		data: function( elem, name, data ) {
			return data_user.access( elem, name, data );
		},

		removeData: function( elem, name ) {
			data_user.remove( elem, name );
		},

		// TODO: Now that all calls to _data and _removeData have been replaced
		// with direct calls to data_priv methods, these can be deprecated.
		_data: function( elem, name, data ) {
			return data_priv.access( elem, name, data );
		},

		_removeData: function( elem, name ) {
			data_priv.remove( elem, name );
		}
	});

	jQuery.fn.extend({
		data: function( key, value ) {
			var i, name, data,
				elem = this[ 0 ],
				attrs = elem && elem.attributes;

			// Gets all values
			if ( key === undefined ) {
				if ( this.length ) {
					data = data_user.get( elem );

					if ( elem.nodeType === 1 && !data_priv.get( elem, "hasDataAttrs" ) ) {
						i = attrs.length;
						while ( i-- ) {

							// Support: IE11+
							// The attrs elements can be null (#14894)
							if ( attrs[ i ] ) {
								name = attrs[ i ].name;
								if ( name.indexOf( "data-" ) === 0 ) {
									name = jQuery.camelCase( name.slice(5) );
									dataAttr( elem, name, data[ name ] );
								}
							}
						}
						data_priv.set( elem, "hasDataAttrs", true );
					}
				}

				return data;
			}

			// Sets multiple values
			if ( typeof key === "object" ) {
				return this.each(function() {
					data_user.set( this, key );
				});
			}

			return access( this, function( value ) {
				var data,
					camelKey = jQuery.camelCase( key );

				// The calling jQuery object (element matches) is not empty
				// (and therefore has an element appears at this[ 0 ]) and the
				// `value` parameter was not undefined. An empty jQuery object
				// will result in `undefined` for elem = this[ 0 ] which will
				// throw an exception if an attempt to read a data cache is made.
				if ( elem && value === undefined ) {
					// Attempt to get data from the cache
					// with the key as-is
					data = data_user.get( elem, key );
					if ( data !== undefined ) {
						return data;
					}

					// Attempt to get data from the cache
					// with the key camelized
					data = data_user.get( elem, camelKey );
					if ( data !== undefined ) {
						return data;
					}

					// Attempt to "discover" the data in
					// HTML5 custom data-* attrs
					data = dataAttr( elem, camelKey, undefined );
					if ( data !== undefined ) {
						return data;
					}

					// We tried really hard, but the data doesn't exist.
					return;
				}

				// Set the data...
				this.each(function() {
					// First, attempt to store a copy or reference of any
					// data that might've been store with a camelCased key.
					var data = data_user.get( this, camelKey );

					// For HTML5 data-* attribute interop, we have to
					// store property names with dashes in a camelCase form.
					// This might not apply to all properties...*
					data_user.set( this, camelKey, value );

					// *... In the case of properties that might _actually_
					// have dashes, we need to also store a copy of that
					// unchanged property.
					if ( key.indexOf("-") !== -1 && data !== undefined ) {
						data_user.set( this, key, value );
					}
				});
			}, null, value, arguments.length > 1, null, true );
		},

		removeData: function( key ) {
			return this.each(function() {
				data_user.remove( this, key );
			});
		}
	});


	jQuery.extend({
		queue: function( elem, type, data ) {
			var queue;

			if ( elem ) {
				type = ( type || "fx" ) + "queue";
				queue = data_priv.get( elem, type );

				// Speed up dequeue by getting out quickly if this is just a lookup
				if ( data ) {
					if ( !queue || jQuery.isArray( data ) ) {
						queue = data_priv.access( elem, type, jQuery.makeArray(data) );
					} else {
						queue.push( data );
					}
				}
				return queue || [];
			}
		},

		dequeue: function( elem, type ) {
			type = type || "fx";

			var queue = jQuery.queue( elem, type ),
				startLength = queue.length,
				fn = queue.shift(),
				hooks = jQuery._queueHooks( elem, type ),
				next = function() {
					jQuery.dequeue( elem, type );
				};

			// If the fx queue is dequeued, always remove the progress sentinel
			if ( fn === "inprogress" ) {
				fn = queue.shift();
				startLength--;
			}

			if ( fn ) {

				// Add a progress sentinel to prevent the fx queue from being
				// automatically dequeued
				if ( type === "fx" ) {
					queue.unshift( "inprogress" );
				}

				// Clear up the last queue stop function
				delete hooks.stop;
				fn.call( elem, next, hooks );
			}

			if ( !startLength && hooks ) {
				hooks.empty.fire();
			}
		},

		// Not public - generate a queueHooks object, or return the current one
		_queueHooks: function( elem, type ) {
			var key = type + "queueHooks";
			return data_priv.get( elem, key ) || data_priv.access( elem, key, {
				empty: jQuery.Callbacks("once memory").add(function() {
					data_priv.remove( elem, [ type + "queue", key ] );
				})
			});
		}
	});

	jQuery.fn.extend({
		queue: function( type, data ) {
			var setter = 2;

			if ( typeof type !== "string" ) {
				data = type;
				type = "fx";
				setter--;
			}

			if ( arguments.length < setter ) {
				return jQuery.queue( this[0], type );
			}

			return data === undefined ?
				this :
				this.each(function() {
					var queue = jQuery.queue( this, type, data );

					// Ensure a hooks for this queue
					jQuery._queueHooks( this, type );

					if ( type === "fx" && queue[0] !== "inprogress" ) {
						jQuery.dequeue( this, type );
					}
				});
		},
		dequeue: function( type ) {
			return this.each(function() {
				jQuery.dequeue( this, type );
			});
		},
		clearQueue: function( type ) {
			return this.queue( type || "fx", [] );
		},
		// Get a promise resolved when queues of a certain type
		// are emptied (fx is the type by default)
		promise: function( type, obj ) {
			var tmp,
				count = 1,
				defer = jQuery.Deferred(),
				elements = this,
				i = this.length,
				resolve = function() {
					if ( !( --count ) ) {
						defer.resolveWith( elements, [ elements ] );
					}
				};

			if ( typeof type !== "string" ) {
				obj = type;
				type = undefined;
			}
			type = type || "fx";

			while ( i-- ) {
				tmp = data_priv.get( elements[ i ], type + "queueHooks" );
				if ( tmp && tmp.empty ) {
					count++;
					tmp.empty.add( resolve );
				}
			}
			resolve();
			return defer.promise( obj );
		}
	});
	var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;

	var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

	var isHidden = function( elem, el ) {
			// isHidden might be called from jQuery#filter function;
			// in that case, element will be second argument
			elem = el || elem;
			return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
		};

	var rcheckableType = (/^(?:checkbox|radio)$/i);



	(function() {
		var fragment = document.createDocumentFragment(),
			div = fragment.appendChild( document.createElement( "div" ) ),
			input = document.createElement( "input" );

		// Support: Safari<=5.1
		// Check state lost if the name is set (#11217)
		// Support: Windows Web Apps (WWA)
		// `name` and `type` must use .setAttribute for WWA (#14901)
		input.setAttribute( "type", "radio" );
		input.setAttribute( "checked", "checked" );
		input.setAttribute( "name", "t" );

		div.appendChild( input );

		// Support: Safari<=5.1, Android<4.2
		// Older WebKit doesn't clone checked state correctly in fragments
		support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

		// Support: IE<=11+
		// Make sure textarea (and checkbox) defaultValue is properly cloned
		div.innerHTML = "<textarea>x</textarea>";
		support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
	})();
	var strundefined = typeof undefined;



	support.focusinBubbles = "onfocusin" in window;


	var
		rkeyEvent = /^key/,
		rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,
		rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
		rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;

	function returnTrue() {
		return true;
	}

	function returnFalse() {
		return false;
	}

	function safeActiveElement() {
		try {
			return document.activeElement;
		} catch ( err ) { }
	}

	/*
	 * Helper functions for managing events -- not part of the public interface.
	 * Props to Dean Edwards' addEvent library for many of the ideas.
	 */
	jQuery.event = {

		global: {},

		add: function( elem, types, handler, data, selector ) {

			var handleObjIn, eventHandle, tmp,
				events, t, handleObj,
				special, handlers, type, namespaces, origType,
				elemData = data_priv.get( elem );

			// Don't attach events to noData or text/comment nodes (but allow plain objects)
			if ( !elemData ) {
				return;
			}

			// Caller can pass in an object of custom data in lieu of the handler
			if ( handler.handler ) {
				handleObjIn = handler;
				handler = handleObjIn.handler;
				selector = handleObjIn.selector;
			}

			// Make sure that the handler has a unique ID, used to find/remove it later
			if ( !handler.guid ) {
				handler.guid = jQuery.guid++;
			}

			// Init the element's event structure and main handler, if this is the first
			if ( !(events = elemData.events) ) {
				events = elemData.events = {};
			}
			if ( !(eventHandle = elemData.handle) ) {
				eventHandle = elemData.handle = function( e ) {
					// Discard the second event of a jQuery.event.trigger() and
					// when an event is called after a page has unloaded
					return typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ?
						jQuery.event.dispatch.apply( elem, arguments ) : undefined;
				};
			}

			// Handle multiple events separated by a space
			types = ( types || "" ).match( rnotwhite ) || [ "" ];
			t = types.length;
			while ( t-- ) {
				tmp = rtypenamespace.exec( types[t] ) || [];
				type = origType = tmp[1];
				namespaces = ( tmp[2] || "" ).split( "." ).sort();

				// There *must* be a type, no attaching namespace-only handlers
				if ( !type ) {
					continue;
				}

				// If event changes its type, use the special event handlers for the changed type
				special = jQuery.event.special[ type ] || {};

				// If selector defined, determine special event api type, otherwise given type
				type = ( selector ? special.delegateType : special.bindType ) || type;

				// Update special based on newly reset type
				special = jQuery.event.special[ type ] || {};

				// handleObj is passed to all event handlers
				handleObj = jQuery.extend({
					type: type,
					origType: origType,
					data: data,
					handler: handler,
					guid: handler.guid,
					selector: selector,
					needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
					namespace: namespaces.join(".")
				}, handleObjIn );

				// Init the event handler queue if we're the first
				if ( !(handlers = events[ type ]) ) {
					handlers = events[ type ] = [];
					handlers.delegateCount = 0;

					// Only use addEventListener if the special events handler returns false
					if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
						if ( elem.addEventListener ) {
							elem.addEventListener( type, eventHandle, false );
						}
					}
				}

				if ( special.add ) {
					special.add.call( elem, handleObj );

					if ( !handleObj.handler.guid ) {
						handleObj.handler.guid = handler.guid;
					}
				}

				// Add to the element's handler list, delegates in front
				if ( selector ) {
					handlers.splice( handlers.delegateCount++, 0, handleObj );
				} else {
					handlers.push( handleObj );
				}

				// Keep track of which events have ever been used, for event optimization
				jQuery.event.global[ type ] = true;
			}

		},

		// Detach an event or set of events from an element
		remove: function( elem, types, handler, selector, mappedTypes ) {

			var j, origCount, tmp,
				events, t, handleObj,
				special, handlers, type, namespaces, origType,
				elemData = data_priv.hasData( elem ) && data_priv.get( elem );

			if ( !elemData || !(events = elemData.events) ) {
				return;
			}

			// Once for each type.namespace in types; type may be omitted
			types = ( types || "" ).match( rnotwhite ) || [ "" ];
			t = types.length;
			while ( t-- ) {
				tmp = rtypenamespace.exec( types[t] ) || [];
				type = origType = tmp[1];
				namespaces = ( tmp[2] || "" ).split( "." ).sort();

				// Unbind all events (on this namespace, if provided) for the element
				if ( !type ) {
					for ( type in events ) {
						jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
					}
					continue;
				}

				special = jQuery.event.special[ type ] || {};
				type = ( selector ? special.delegateType : special.bindType ) || type;
				handlers = events[ type ] || [];
				tmp = tmp[2] && new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );

				// Remove matching events
				origCount = j = handlers.length;
				while ( j-- ) {
					handleObj = handlers[ j ];

					if ( ( mappedTypes || origType === handleObj.origType ) &&
						( !handler || handler.guid === handleObj.guid ) &&
						( !tmp || tmp.test( handleObj.namespace ) ) &&
						( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
						handlers.splice( j, 1 );

						if ( handleObj.selector ) {
							handlers.delegateCount--;
						}
						if ( special.remove ) {
							special.remove.call( elem, handleObj );
						}
					}
				}

				// Remove generic event handler if we removed something and no more handlers exist
				// (avoids potential for endless recursion during removal of special event handlers)
				if ( origCount && !handlers.length ) {
					if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
						jQuery.removeEvent( elem, type, elemData.handle );
					}

					delete events[ type ];
				}
			}

			// Remove the expando if it's no longer used
			if ( jQuery.isEmptyObject( events ) ) {
				delete elemData.handle;
				data_priv.remove( elem, "events" );
			}
		},

		trigger: function( event, data, elem, onlyHandlers ) {

			var i, cur, tmp, bubbleType, ontype, handle, special,
				eventPath = [ elem || document ],
				type = hasOwn.call( event, "type" ) ? event.type : event,
				namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];

			cur = tmp = elem = elem || document;

			// Don't do events on text and comment nodes
			if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
				return;
			}

			// focus/blur morphs to focusin/out; ensure we're not firing them right now
			if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
				return;
			}

			if ( type.indexOf(".") >= 0 ) {
				// Namespaced trigger; create a regexp to match event type in handle()
				namespaces = type.split(".");
				type = namespaces.shift();
				namespaces.sort();
			}
			ontype = type.indexOf(":") < 0 && "on" + type;

			// Caller can pass in a jQuery.Event object, Object, or just an event type string
			event = event[ jQuery.expando ] ?
				event :
				new jQuery.Event( type, typeof event === "object" && event );

			// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
			event.isTrigger = onlyHandlers ? 2 : 3;
			event.namespace = namespaces.join(".");
			event.namespace_re = event.namespace ?
				new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :
				null;

			// Clean up the event in case it is being reused
			event.result = undefined;
			if ( !event.target ) {
				event.target = elem;
			}

			// Clone any incoming data and prepend the event, creating the handler arg list
			data = data == null ?
				[ event ] :
				jQuery.makeArray( data, [ event ] );

			// Allow special events to draw outside the lines
			special = jQuery.event.special[ type ] || {};
			if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
				return;
			}

			// Determine event propagation path in advance, per W3C events spec (#9951)
			// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
			if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

				bubbleType = special.delegateType || type;
				if ( !rfocusMorph.test( bubbleType + type ) ) {
					cur = cur.parentNode;
				}
				for ( ; cur; cur = cur.parentNode ) {
					eventPath.push( cur );
					tmp = cur;
				}

				// Only add window if we got to document (e.g., not plain obj or detached DOM)
				if ( tmp === (elem.ownerDocument || document) ) {
					eventPath.push( tmp.defaultView || tmp.parentWindow || window );
				}
			}

			// Fire handlers on the event path
			i = 0;
			while ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {

				event.type = i > 1 ?
					bubbleType :
					special.bindType || type;

				// jQuery handler
				handle = ( data_priv.get( cur, "events" ) || {} )[ event.type ] && data_priv.get( cur, "handle" );
				if ( handle ) {
					handle.apply( cur, data );
				}

				// Native handler
				handle = ontype && cur[ ontype ];
				if ( handle && handle.apply && jQuery.acceptData( cur ) ) {
					event.result = handle.apply( cur, data );
					if ( event.result === false ) {
						event.preventDefault();
					}
				}
			}
			event.type = type;

			// If nobody prevented the default action, do it now
			if ( !onlyHandlers && !event.isDefaultPrevented() ) {

				if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&
					jQuery.acceptData( elem ) ) {

					// Call a native DOM method on the target with the same name name as the event.
					// Don't do default actions on window, that's where global variables be (#6170)
					if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

						// Don't re-trigger an onFOO event when we call its FOO() method
						tmp = elem[ ontype ];

						if ( tmp ) {
							elem[ ontype ] = null;
						}

						// Prevent re-triggering of the same event, since we already bubbled it above
						jQuery.event.triggered = type;
						elem[ type ]();
						jQuery.event.triggered = undefined;

						if ( tmp ) {
							elem[ ontype ] = tmp;
						}
					}
				}
			}

			return event.result;
		},

		dispatch: function( event ) {

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( event );

			var i, j, ret, matched, handleObj,
				handlerQueue = [],
				args = slice.call( arguments ),
				handlers = ( data_priv.get( this, "events" ) || {} )[ event.type ] || [],
				special = jQuery.event.special[ event.type ] || {};

			// Use the fix-ed jQuery.Event rather than the (read-only) native event
			args[0] = event;
			event.delegateTarget = this;

			// Call the preDispatch hook for the mapped type, and let it bail if desired
			if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
				return;
			}

			// Determine handlers
			handlerQueue = jQuery.event.handlers.call( this, event, handlers );

			// Run delegates first; they may want to stop propagation beneath us
			i = 0;
			while ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {
				event.currentTarget = matched.elem;

				j = 0;
				while ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {

					// Triggered event must either 1) have no namespace, or 2) have namespace(s)
					// a subset or equal to those in the bound event (both can have no namespace).
					if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {

						event.handleObj = handleObj;
						event.data = handleObj.data;

						ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
								.apply( matched.elem, args );

						if ( ret !== undefined ) {
							if ( (event.result = ret) === false ) {
								event.preventDefault();
								event.stopPropagation();
							}
						}
					}
				}
			}

			// Call the postDispatch hook for the mapped type
			if ( special.postDispatch ) {
				special.postDispatch.call( this, event );
			}

			return event.result;
		},

		handlers: function( event, handlers ) {
			var i, matches, sel, handleObj,
				handlerQueue = [],
				delegateCount = handlers.delegateCount,
				cur = event.target;

			// Find delegate handlers
			// Black-hole SVG <use> instance trees (#13180)
			// Avoid non-left-click bubbling in Firefox (#3861)
			if ( delegateCount && cur.nodeType && (!event.button || event.type !== "click") ) {

				for ( ; cur !== this; cur = cur.parentNode || this ) {

					// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
					if ( cur.disabled !== true || event.type !== "click" ) {
						matches = [];
						for ( i = 0; i < delegateCount; i++ ) {
							handleObj = handlers[ i ];

							// Don't conflict with Object.prototype properties (#13203)
							sel = handleObj.selector + " ";

							if ( matches[ sel ] === undefined ) {
								matches[ sel ] = handleObj.needsContext ?
									jQuery( sel, this ).index( cur ) >= 0 :
									jQuery.find( sel, this, null, [ cur ] ).length;
							}
							if ( matches[ sel ] ) {
								matches.push( handleObj );
							}
						}
						if ( matches.length ) {
							handlerQueue.push({ elem: cur, handlers: matches });
						}
					}
				}
			}

			// Add the remaining (directly-bound) handlers
			if ( delegateCount < handlers.length ) {
				handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });
			}

			return handlerQueue;
		},

		// Includes some event props shared by KeyEvent and MouseEvent
		props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

		fixHooks: {},

		keyHooks: {
			props: "char charCode key keyCode".split(" "),
			filter: function( event, original ) {

				// Add which for key events
				if ( event.which == null ) {
					event.which = original.charCode != null ? original.charCode : original.keyCode;
				}

				return event;
			}
		},

		mouseHooks: {
			props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
			filter: function( event, original ) {
				var eventDoc, doc, body,
					button = original.button;

				// Calculate pageX/Y if missing and clientX/Y available
				if ( event.pageX == null && original.clientX != null ) {
					eventDoc = event.target.ownerDocument || document;
					doc = eventDoc.documentElement;
					body = eventDoc.body;

					event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
					event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
				}

				// Add which for click: 1 === left; 2 === middle; 3 === right
				// Note: button is not normalized, so don't use it
				if ( !event.which && button !== undefined ) {
					event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
				}

				return event;
			}
		},

		fix: function( event ) {
			if ( event[ jQuery.expando ] ) {
				return event;
			}

			// Create a writable copy of the event object and normalize some properties
			var i, prop, copy,
				type = event.type,
				originalEvent = event,
				fixHook = this.fixHooks[ type ];

			if ( !fixHook ) {
				this.fixHooks[ type ] = fixHook =
					rmouseEvent.test( type ) ? this.mouseHooks :
					rkeyEvent.test( type ) ? this.keyHooks :
					{};
			}
			copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

			event = new jQuery.Event( originalEvent );

			i = copy.length;
			while ( i-- ) {
				prop = copy[ i ];
				event[ prop ] = originalEvent[ prop ];
			}

			// Support: Cordova 2.5 (WebKit) (#13255)
			// All events should have a target; Cordova deviceready doesn't
			if ( !event.target ) {
				event.target = document;
			}

			// Support: Safari 6.0+, Chrome<28
			// Target should not be a text node (#504, #13143)
			if ( event.target.nodeType === 3 ) {
				event.target = event.target.parentNode;
			}

			return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
		},

		special: {
			load: {
				// Prevent triggered image.load events from bubbling to window.load
				noBubble: true
			},
			focus: {
				// Fire native event if possible so blur/focus sequence is correct
				trigger: function() {
					if ( this !== safeActiveElement() && this.focus ) {
						this.focus();
						return false;
					}
				},
				delegateType: "focusin"
			},
			blur: {
				trigger: function() {
					if ( this === safeActiveElement() && this.blur ) {
						this.blur();
						return false;
					}
				},
				delegateType: "focusout"
			},
			click: {
				// For checkbox, fire native event so checked state will be right
				trigger: function() {
					if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
						this.click();
						return false;
					}
				},

				// For cross-browser consistency, don't fire native .click() on links
				_default: function( event ) {
					return jQuery.nodeName( event.target, "a" );
				}
			},

			beforeunload: {
				postDispatch: function( event ) {

					// Support: Firefox 20+
					// Firefox doesn't alert if the returnValue field is not set.
					if ( event.result !== undefined && event.originalEvent ) {
						event.originalEvent.returnValue = event.result;
					}
				}
			}
		},

		simulate: function( type, elem, event, bubble ) {
			// Piggyback on a donor event to simulate a different one.
			// Fake originalEvent to avoid donor's stopPropagation, but if the
			// simulated event prevents default then we do the same on the donor.
			var e = jQuery.extend(
				new jQuery.Event(),
				event,
				{
					type: type,
					isSimulated: true,
					originalEvent: {}
				}
			);
			if ( bubble ) {
				jQuery.event.trigger( e, null, elem );
			} else {
				jQuery.event.dispatch.call( elem, e );
			}
			if ( e.isDefaultPrevented() ) {
				event.preventDefault();
			}
		}
	};

	jQuery.removeEvent = function( elem, type, handle ) {
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle, false );
		}
	};

	jQuery.Event = function( src, props ) {
		// Allow instantiation without the 'new' keyword
		if ( !(this instanceof jQuery.Event) ) {
			return new jQuery.Event( src, props );
		}

		// Event object
		if ( src && src.type ) {
			this.originalEvent = src;
			this.type = src.type;

			// Events bubbling up the document may have been marked as prevented
			// by a handler lower down the tree; reflect the correct value.
			this.isDefaultPrevented = src.defaultPrevented ||
					src.defaultPrevented === undefined &&
					// Support: Android<4.0
					src.returnValue === false ?
				returnTrue :
				returnFalse;

		// Event type
		} else {
			this.type = src;
		}

		// Put explicitly provided properties onto the event object
		if ( props ) {
			jQuery.extend( this, props );
		}

		// Create a timestamp if incoming event doesn't have one
		this.timeStamp = src && src.timeStamp || jQuery.now();

		// Mark it as fixed
		this[ jQuery.expando ] = true;
	};

	// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
	// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
	jQuery.Event.prototype = {
		isDefaultPrevented: returnFalse,
		isPropagationStopped: returnFalse,
		isImmediatePropagationStopped: returnFalse,

		preventDefault: function() {
			var e = this.originalEvent;

			this.isDefaultPrevented = returnTrue;

			if ( e && e.preventDefault ) {
				e.preventDefault();
			}
		},
		stopPropagation: function() {
			var e = this.originalEvent;

			this.isPropagationStopped = returnTrue;

			if ( e && e.stopPropagation ) {
				e.stopPropagation();
			}
		},
		stopImmediatePropagation: function() {
			var e = this.originalEvent;

			this.isImmediatePropagationStopped = returnTrue;

			if ( e && e.stopImmediatePropagation ) {
				e.stopImmediatePropagation();
			}

			this.stopPropagation();
		}
	};

	// Create mouseenter/leave events using mouseover/out and event-time checks
	// Support: Chrome 15+
	jQuery.each({
		mouseenter: "mouseover",
		mouseleave: "mouseout",
		pointerenter: "pointerover",
		pointerleave: "pointerout"
	}, function( orig, fix ) {
		jQuery.event.special[ orig ] = {
			delegateType: fix,
			bindType: fix,

			handle: function( event ) {
				var ret,
					target = this,
					related = event.relatedTarget,
					handleObj = event.handleObj;

				// For mousenter/leave call the handler if related is outside the target.
				// NB: No relatedTarget if the mouse left/entered the browser window
				if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
					event.type = handleObj.origType;
					ret = handleObj.handler.apply( this, arguments );
					event.type = fix;
				}
				return ret;
			}
		};
	});

	// Support: Firefox, Chrome, Safari
	// Create "bubbling" focus and blur events
	if ( !support.focusinBubbles ) {
		jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

			// Attach a single capturing handler on the document while someone wants focusin/focusout
			var handler = function( event ) {
					jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
				};

			jQuery.event.special[ fix ] = {
				setup: function() {
					var doc = this.ownerDocument || this,
						attaches = data_priv.access( doc, fix );

					if ( !attaches ) {
						doc.addEventListener( orig, handler, true );
					}
					data_priv.access( doc, fix, ( attaches || 0 ) + 1 );
				},
				teardown: function() {
					var doc = this.ownerDocument || this,
						attaches = data_priv.access( doc, fix ) - 1;

					if ( !attaches ) {
						doc.removeEventListener( orig, handler, true );
						data_priv.remove( doc, fix );

					} else {
						data_priv.access( doc, fix, attaches );
					}
				}
			};
		});
	}

	jQuery.fn.extend({

		on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
			var origFn, type;

			// Types can be a map of types/handlers
			if ( typeof types === "object" ) {
				// ( types-Object, selector, data )
				if ( typeof selector !== "string" ) {
					// ( types-Object, data )
					data = data || selector;
					selector = undefined;
				}
				for ( type in types ) {
					this.on( type, selector, data, types[ type ], one );
				}
				return this;
			}

			if ( data == null && fn == null ) {
				// ( types, fn )
				fn = selector;
				data = selector = undefined;
			} else if ( fn == null ) {
				if ( typeof selector === "string" ) {
					// ( types, selector, fn )
					fn = data;
					data = undefined;
				} else {
					// ( types, data, fn )
					fn = data;
					data = selector;
					selector = undefined;
				}
			}
			if ( fn === false ) {
				fn = returnFalse;
			} else if ( !fn ) {
				return this;
			}

			if ( one === 1 ) {
				origFn = fn;
				fn = function( event ) {
					// Can use an empty set, since event contains the info
					jQuery().off( event );
					return origFn.apply( this, arguments );
				};
				// Use same guid so caller can remove using origFn
				fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
			}
			return this.each( function() {
				jQuery.event.add( this, types, fn, data, selector );
			});
		},
		one: function( types, selector, data, fn ) {
			return this.on( types, selector, data, fn, 1 );
		},
		off: function( types, selector, fn ) {
			var handleObj, type;
			if ( types && types.preventDefault && types.handleObj ) {
				// ( event )  dispatched jQuery.Event
				handleObj = types.handleObj;
				jQuery( types.delegateTarget ).off(
					handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
					handleObj.selector,
					handleObj.handler
				);
				return this;
			}
			if ( typeof types === "object" ) {
				// ( types-object [, selector] )
				for ( type in types ) {
					this.off( type, selector, types[ type ] );
				}
				return this;
			}
			if ( selector === false || typeof selector === "function" ) {
				// ( types [, fn] )
				fn = selector;
				selector = undefined;
			}
			if ( fn === false ) {
				fn = returnFalse;
			}
			return this.each(function() {
				jQuery.event.remove( this, types, fn, selector );
			});
		},

		trigger: function( type, data ) {
			return this.each(function() {
				jQuery.event.trigger( type, data, this );
			});
		},
		triggerHandler: function( type, data ) {
			var elem = this[0];
			if ( elem ) {
				return jQuery.event.trigger( type, data, elem, true );
			}
		}
	});


	var
		rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
		rtagName = /<([\w:]+)/,
		rhtml = /<|&#?\w+;/,
		rnoInnerhtml = /<(?:script|style|link)/i,
		// checked="checked" or checked
		rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
		rscriptType = /^$|\/(?:java|ecma)script/i,
		rscriptTypeMasked = /^true\/(.*)/,
		rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,

		// We have to close these tags to support XHTML (#13200)
		wrapMap = {

			// Support: IE9
			option: [ 1, "<select multiple='multiple'>", "</select>" ],

			thead: [ 1, "<table>", "</table>" ],
			col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
			tr: [ 2, "<table><tbody>", "</tbody></table>" ],
			td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

			_default: [ 0, "", "" ]
		};

	// Support: IE9
	wrapMap.optgroup = wrapMap.option;

	wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
	wrapMap.th = wrapMap.td;

	// Support: 1.x compatibility
	// Manipulating tables requires a tbody
	function manipulationTarget( elem, content ) {
		return jQuery.nodeName( elem, "table" ) &&
			jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

			elem.getElementsByTagName("tbody")[0] ||
				elem.appendChild( elem.ownerDocument.createElement("tbody") ) :
			elem;
	}

	// Replace/restore the type attribute of script elements for safe DOM manipulation
	function disableScript( elem ) {
		elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
		return elem;
	}
	function restoreScript( elem ) {
		var match = rscriptTypeMasked.exec( elem.type );

		if ( match ) {
			elem.type = match[ 1 ];
		} else {
			elem.removeAttribute("type");
		}

		return elem;
	}

	// Mark scripts as having already been evaluated
	function setGlobalEval( elems, refElements ) {
		var i = 0,
			l = elems.length;

		for ( ; i < l; i++ ) {
			data_priv.set(
				elems[ i ], "globalEval", !refElements || data_priv.get( refElements[ i ], "globalEval" )
			);
		}
	}

	function cloneCopyEvent( src, dest ) {
		var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

		if ( dest.nodeType !== 1 ) {
			return;
		}

		// 1. Copy private data: events, handlers, etc.
		if ( data_priv.hasData( src ) ) {
			pdataOld = data_priv.access( src );
			pdataCur = data_priv.set( dest, pdataOld );
			events = pdataOld.events;

			if ( events ) {
				delete pdataCur.handle;
				pdataCur.events = {};

				for ( type in events ) {
					for ( i = 0, l = events[ type ].length; i < l; i++ ) {
						jQuery.event.add( dest, type, events[ type ][ i ] );
					}
				}
			}
		}

		// 2. Copy user data
		if ( data_user.hasData( src ) ) {
			udataOld = data_user.access( src );
			udataCur = jQuery.extend( {}, udataOld );

			data_user.set( dest, udataCur );
		}
	}

	function getAll( context, tag ) {
		var ret = context.getElementsByTagName ? context.getElementsByTagName( tag || "*" ) :
				context.querySelectorAll ? context.querySelectorAll( tag || "*" ) :
				[];

		return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
			jQuery.merge( [ context ], ret ) :
			ret;
	}

	// Fix IE bugs, see support tests
	function fixInput( src, dest ) {
		var nodeName = dest.nodeName.toLowerCase();

		// Fails to persist the checked state of a cloned checkbox or radio button.
		if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
			dest.checked = src.checked;

		// Fails to return the selected option to the default selected state when cloning options
		} else if ( nodeName === "input" || nodeName === "textarea" ) {
			dest.defaultValue = src.defaultValue;
		}
	}

	jQuery.extend({
		clone: function( elem, dataAndEvents, deepDataAndEvents ) {
			var i, l, srcElements, destElements,
				clone = elem.cloneNode( true ),
				inPage = jQuery.contains( elem.ownerDocument, elem );

			// Fix IE cloning issues
			if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
					!jQuery.isXMLDoc( elem ) ) {

				// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
				destElements = getAll( clone );
				srcElements = getAll( elem );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					fixInput( srcElements[ i ], destElements[ i ] );
				}
			}

			// Copy the events from the original to the clone
			if ( dataAndEvents ) {
				if ( deepDataAndEvents ) {
					srcElements = srcElements || getAll( elem );
					destElements = destElements || getAll( clone );

					for ( i = 0, l = srcElements.length; i < l; i++ ) {
						cloneCopyEvent( srcElements[ i ], destElements[ i ] );
					}
				} else {
					cloneCopyEvent( elem, clone );
				}
			}

			// Preserve script evaluation history
			destElements = getAll( clone, "script" );
			if ( destElements.length > 0 ) {
				setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
			}

			// Return the cloned set
			return clone;
		},

		buildFragment: function( elems, context, scripts, selection ) {
			var elem, tmp, tag, wrap, contains, j,
				fragment = context.createDocumentFragment(),
				nodes = [],
				i = 0,
				l = elems.length;

			for ( ; i < l; i++ ) {
				elem = elems[ i ];

				if ( elem || elem === 0 ) {

					// Add nodes directly
					if ( jQuery.type( elem ) === "object" ) {
						// Support: QtWebKit, PhantomJS
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

					// Convert non-html into a text node
					} else if ( !rhtml.test( elem ) ) {
						nodes.push( context.createTextNode( elem ) );

					// Convert html into DOM nodes
					} else {
						tmp = tmp || fragment.appendChild( context.createElement("div") );

						// Deserialize a standard representation
						tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
						wrap = wrapMap[ tag ] || wrapMap._default;
						tmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, "<$1></$2>" ) + wrap[ 2 ];

						// Descend through wrappers to the right content
						j = wrap[ 0 ];
						while ( j-- ) {
							tmp = tmp.lastChild;
						}

						// Support: QtWebKit, PhantomJS
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( nodes, tmp.childNodes );

						// Remember the top-level container
						tmp = fragment.firstChild;

						// Ensure the created nodes are orphaned (#12392)
						tmp.textContent = "";
					}
				}
			}

			// Remove wrapper from fragment
			fragment.textContent = "";

			i = 0;
			while ( (elem = nodes[ i++ ]) ) {

				// #4087 - If origin and destination elements are the same, and this is
				// that element, do not do anything
				if ( selection && jQuery.inArray( elem, selection ) !== -1 ) {
					continue;
				}

				contains = jQuery.contains( elem.ownerDocument, elem );

				// Append to fragment
				tmp = getAll( fragment.appendChild( elem ), "script" );

				// Preserve script evaluation history
				if ( contains ) {
					setGlobalEval( tmp );
				}

				// Capture executables
				if ( scripts ) {
					j = 0;
					while ( (elem = tmp[ j++ ]) ) {
						if ( rscriptType.test( elem.type || "" ) ) {
							scripts.push( elem );
						}
					}
				}
			}

			return fragment;
		},

		cleanData: function( elems ) {
			var data, elem, type, key,
				special = jQuery.event.special,
				i = 0;

			for ( ; (elem = elems[ i ]) !== undefined; i++ ) {
				if ( jQuery.acceptData( elem ) ) {
					key = elem[ data_priv.expando ];

					if ( key && (data = data_priv.cache[ key ]) ) {
						if ( data.events ) {
							for ( type in data.events ) {
								if ( special[ type ] ) {
									jQuery.event.remove( elem, type );

								// This is a shortcut to avoid jQuery.event.remove's overhead
								} else {
									jQuery.removeEvent( elem, type, data.handle );
								}
							}
						}
						if ( data_priv.cache[ key ] ) {
							// Discard any remaining `private` data
							delete data_priv.cache[ key ];
						}
					}
				}
				// Discard any remaining `user` data
				delete data_user.cache[ elem[ data_user.expando ] ];
			}
		}
	});

	jQuery.fn.extend({
		text: function( value ) {
			return access( this, function( value ) {
				return value === undefined ?
					jQuery.text( this ) :
					this.empty().each(function() {
						if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
							this.textContent = value;
						}
					});
			}, null, value, arguments.length );
		},

		append: function() {
			return this.domManip( arguments, function( elem ) {
				if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
					var target = manipulationTarget( this, elem );
					target.appendChild( elem );
				}
			});
		},

		prepend: function() {
			return this.domManip( arguments, function( elem ) {
				if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
					var target = manipulationTarget( this, elem );
					target.insertBefore( elem, target.firstChild );
				}
			});
		},

		before: function() {
			return this.domManip( arguments, function( elem ) {
				if ( this.parentNode ) {
					this.parentNode.insertBefore( elem, this );
				}
			});
		},

		after: function() {
			return this.domManip( arguments, function( elem ) {
				if ( this.parentNode ) {
					this.parentNode.insertBefore( elem, this.nextSibling );
				}
			});
		},

		remove: function( selector, keepData /* Internal Use Only */ ) {
			var elem,
				elems = selector ? jQuery.filter( selector, this ) : this,
				i = 0;

			for ( ; (elem = elems[i]) != null; i++ ) {
				if ( !keepData && elem.nodeType === 1 ) {
					jQuery.cleanData( getAll( elem ) );
				}

				if ( elem.parentNode ) {
					if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {
						setGlobalEval( getAll( elem, "script" ) );
					}
					elem.parentNode.removeChild( elem );
				}
			}

			return this;
		},

		empty: function() {
			var elem,
				i = 0;

			for ( ; (elem = this[i]) != null; i++ ) {
				if ( elem.nodeType === 1 ) {

					// Prevent memory leaks
					jQuery.cleanData( getAll( elem, false ) );

					// Remove any remaining nodes
					elem.textContent = "";
				}
			}

			return this;
		},

		clone: function( dataAndEvents, deepDataAndEvents ) {
			dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
			deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

			return this.map(function() {
				return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
			});
		},

		html: function( value ) {
			return access( this, function( value ) {
				var elem = this[ 0 ] || {},
					i = 0,
					l = this.length;

				if ( value === undefined && elem.nodeType === 1 ) {
					return elem.innerHTML;
				}

				// See if we can take a shortcut and just use innerHTML
				if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
					!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

					value = value.replace( rxhtmlTag, "<$1></$2>" );

					try {
						for ( ; i < l; i++ ) {
							elem = this[ i ] || {};

							// Remove element nodes and prevent memory leaks
							if ( elem.nodeType === 1 ) {
								jQuery.cleanData( getAll( elem, false ) );
								elem.innerHTML = value;
							}
						}

						elem = 0;

					// If using innerHTML throws an exception, use the fallback method
					} catch( e ) {}
				}

				if ( elem ) {
					this.empty().append( value );
				}
			}, null, value, arguments.length );
		},

		replaceWith: function() {
			var arg = arguments[ 0 ];

			// Make the changes, replacing each context element with the new content
			this.domManip( arguments, function( elem ) {
				arg = this.parentNode;

				jQuery.cleanData( getAll( this ) );

				if ( arg ) {
					arg.replaceChild( elem, this );
				}
			});

			// Force removal if there was no new content (e.g., from empty arguments)
			return arg && (arg.length || arg.nodeType) ? this : this.remove();
		},

		detach: function( selector ) {
			return this.remove( selector, true );
		},

		domManip: function( args, callback ) {

			// Flatten any nested arrays
			args = concat.apply( [], args );

			var fragment, first, scripts, hasScripts, node, doc,
				i = 0,
				l = this.length,
				set = this,
				iNoClone = l - 1,
				value = args[ 0 ],
				isFunction = jQuery.isFunction( value );

			// We can't cloneNode fragments that contain checked, in WebKit
			if ( isFunction ||
					( l > 1 && typeof value === "string" &&
						!support.checkClone && rchecked.test( value ) ) ) {
				return this.each(function( index ) {
					var self = set.eq( index );
					if ( isFunction ) {
						args[ 0 ] = value.call( this, index, self.html() );
					}
					self.domManip( args, callback );
				});
			}

			if ( l ) {
				fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );
				first = fragment.firstChild;

				if ( fragment.childNodes.length === 1 ) {
					fragment = first;
				}

				if ( first ) {
					scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
					hasScripts = scripts.length;

					// Use the original fragment for the last item instead of the first because it can end up
					// being emptied incorrectly in certain situations (#8070).
					for ( ; i < l; i++ ) {
						node = fragment;

						if ( i !== iNoClone ) {
							node = jQuery.clone( node, true, true );

							// Keep references to cloned scripts for later restoration
							if ( hasScripts ) {
								// Support: QtWebKit
								// jQuery.merge because push.apply(_, arraylike) throws
								jQuery.merge( scripts, getAll( node, "script" ) );
							}
						}

						callback.call( this[ i ], node, i );
					}

					if ( hasScripts ) {
						doc = scripts[ scripts.length - 1 ].ownerDocument;

						// Reenable scripts
						jQuery.map( scripts, restoreScript );

						// Evaluate executable scripts on first document insertion
						for ( i = 0; i < hasScripts; i++ ) {
							node = scripts[ i ];
							if ( rscriptType.test( node.type || "" ) &&
								!data_priv.access( node, "globalEval" ) && jQuery.contains( doc, node ) ) {

								if ( node.src ) {
									// Optional AJAX dependency, but won't run scripts if not present
									if ( jQuery._evalUrl ) {
										jQuery._evalUrl( node.src );
									}
								} else {
									jQuery.globalEval( node.textContent.replace( rcleanScript, "" ) );
								}
							}
						}
					}
				}
			}

			return this;
		}
	});

	jQuery.each({
		appendTo: "append",
		prependTo: "prepend",
		insertBefore: "before",
		insertAfter: "after",
		replaceAll: "replaceWith"
	}, function( name, original ) {
		jQuery.fn[ name ] = function( selector ) {
			var elems,
				ret = [],
				insert = jQuery( selector ),
				last = insert.length - 1,
				i = 0;

			for ( ; i <= last; i++ ) {
				elems = i === last ? this : this.clone( true );
				jQuery( insert[ i ] )[ original ]( elems );

				// Support: QtWebKit
				// .get() because push.apply(_, arraylike) throws
				push.apply( ret, elems.get() );
			}

			return this.pushStack( ret );
		};
	});


	var iframe,
		elemdisplay = {};

	/**
	 * Retrieve the actual display of a element
	 * @param {String} name nodeName of the element
	 * @param {Object} doc Document object
	 */
	// Called only from within defaultDisplay
	function actualDisplay( name, doc ) {
		var style,
			elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

			// getDefaultComputedStyle might be reliably used only on attached element
			display = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?

				// Use of this method is a temporary fix (more like optimization) until something better comes along,
				// since it was removed from specification and supported only in FF
				style.display : jQuery.css( elem[ 0 ], "display" );

		// We don't have any data stored on the element,
		// so use "detach" method as fast way to get rid of the element
		elem.detach();

		return display;
	}

	/**
	 * Try to determine the default display value of an element
	 * @param {String} nodeName
	 */
	function defaultDisplay( nodeName ) {
		var doc = document,
			display = elemdisplay[ nodeName ];

		if ( !display ) {
			display = actualDisplay( nodeName, doc );

			// If the simple way fails, read from inside an iframe
			if ( display === "none" || !display ) {

				// Use the already-created iframe if possible
				iframe = (iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" )).appendTo( doc.documentElement );

				// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
				doc = iframe[ 0 ].contentDocument;

				// Support: IE
				doc.write();
				doc.close();

				display = actualDisplay( nodeName, doc );
				iframe.detach();
			}

			// Store the correct default display
			elemdisplay[ nodeName ] = display;
		}

		return display;
	}
	var rmargin = (/^margin/);

	var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

	var getStyles = function( elem ) {
			// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
			// IE throws on elements created in popups
			// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
			if ( elem.ownerDocument.defaultView.opener ) {
				return elem.ownerDocument.defaultView.getComputedStyle( elem, null );
			}

			return window.getComputedStyle( elem, null );
		};



	function curCSS( elem, name, computed ) {
		var width, minWidth, maxWidth, ret,
			style = elem.style;

		computed = computed || getStyles( elem );

		// Support: IE9
		// getPropertyValue is only needed for .css('filter') (#12537)
		if ( computed ) {
			ret = computed.getPropertyValue( name ) || computed[ name ];
		}

		if ( computed ) {

			if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
				ret = jQuery.style( elem, name );
			}

			// Support: iOS < 6
			// A tribute to the "awesome hack by Dean Edwards"
			// iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
			if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {

				// Remember the original values
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				// Put in the new values to get a computed value out
				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				// Revert the changed values
				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		return ret !== undefined ?
			// Support: IE
			// IE returns zIndex value as an integer.
			ret + "" :
			ret;
	}


	function addGetHookIf( conditionFn, hookFn ) {
		// Define the hook, we'll check on the first run if it's really needed.
		return {
			get: function() {
				if ( conditionFn() ) {
					// Hook not needed (or it's not possible to use it due
					// to missing dependency), remove it.
					delete this.get;
					return;
				}

				// Hook needed; redefine it so that the support test is not executed again.
				return (this.get = hookFn).apply( this, arguments );
			}
		};
	}


	(function() {
		var pixelPositionVal, boxSizingReliableVal,
			docElem = document.documentElement,
			container = document.createElement( "div" ),
			div = document.createElement( "div" );

		if ( !div.style ) {
			return;
		}

		// Support: IE9-11+
		// Style of cloned element affects source element cloned (#8908)
		div.style.backgroundClip = "content-box";
		div.cloneNode( true ).style.backgroundClip = "";
		support.clearCloneStyle = div.style.backgroundClip === "content-box";

		container.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;" +
			"position:absolute";
		container.appendChild( div );

		// Executing both pixelPosition & boxSizingReliable tests require only one layout
		// so they're executed at the same time to save the second computation.
		function computePixelPositionAndBoxSizingReliable() {
			div.style.cssText =
				// Support: Firefox<29, Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;" +
				"box-sizing:border-box;display:block;margin-top:1%;top:1%;" +
				"border:1px;padding:1px;width:4px;position:absolute";
			div.innerHTML = "";
			docElem.appendChild( container );

			var divStyle = window.getComputedStyle( div, null );
			pixelPositionVal = divStyle.top !== "1%";
			boxSizingReliableVal = divStyle.width === "4px";

			docElem.removeChild( container );
		}

		// Support: node.js jsdom
		// Don't assume that getComputedStyle is a property of the global object
		if ( window.getComputedStyle ) {
			jQuery.extend( support, {
				pixelPosition: function() {

					// This test is executed only once but we still do memoizing
					// since we can use the boxSizingReliable pre-computing.
					// No need to check if the test was already performed, though.
					computePixelPositionAndBoxSizingReliable();
					return pixelPositionVal;
				},
				boxSizingReliable: function() {
					if ( boxSizingReliableVal == null ) {
						computePixelPositionAndBoxSizingReliable();
					}
					return boxSizingReliableVal;
				},
				reliableMarginRight: function() {

					// Support: Android 2.3
					// Check if div with explicit width and no margin-right incorrectly
					// gets computed margin-right based on width of container. (#3333)
					// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
					// This support function is only executed once so no memoizing is needed.
					var ret,
						marginDiv = div.appendChild( document.createElement( "div" ) );

					// Reset CSS: box-sizing; display; margin; border; padding
					marginDiv.style.cssText = div.style.cssText =
						// Support: Firefox<29, Android 2.3
						// Vendor-prefix box-sizing
						"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
						"box-sizing:content-box;display:block;margin:0;border:0;padding:0";
					marginDiv.style.marginRight = marginDiv.style.width = "0";
					div.style.width = "1px";
					docElem.appendChild( container );

					ret = !parseFloat( window.getComputedStyle( marginDiv, null ).marginRight );

					docElem.removeChild( container );
					div.removeChild( marginDiv );

					return ret;
				}
			});
		}
	})();


	// A method for quickly swapping in/out CSS properties to get correct calculations.
	jQuery.swap = function( elem, options, callback, args ) {
		var ret, name,
			old = {};

		// Remember the old values, and insert the new ones
		for ( name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}

		ret = callback.apply( elem, args || [] );

		// Revert the old values
		for ( name in options ) {
			elem.style[ name ] = old[ name ];
		}

		return ret;
	};


	var
		// Swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
		// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
		rdisplayswap = /^(none|table(?!-c[ea]).+)/,
		rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),
		rrelNum = new RegExp( "^([+-])=(" + pnum + ")", "i" ),

		cssShow = { position: "absolute", visibility: "hidden", display: "block" },
		cssNormalTransform = {
			letterSpacing: "0",
			fontWeight: "400"
		},

		cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];

	// Return a css property mapped to a potentially vendor prefixed property
	function vendorPropName( style, name ) {

		// Shortcut for names that are not vendor prefixed
		if ( name in style ) {
			return name;
		}

		// Check for vendor prefixed names
		var capName = name[0].toUpperCase() + name.slice(1),
			origName = name,
			i = cssPrefixes.length;

		while ( i-- ) {
			name = cssPrefixes[ i ] + capName;
			if ( name in style ) {
				return name;
			}
		}

		return origName;
	}

	function setPositiveNumber( elem, value, subtract ) {
		var matches = rnumsplit.exec( value );
		return matches ?
			// Guard against undefined "subtract", e.g., when used as in cssHooks
			Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
			value;
	}

	function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
		var i = extra === ( isBorderBox ? "border" : "content" ) ?
			// If we already have the right measurement, avoid augmentation
			4 :
			// Otherwise initialize for horizontal or vertical properties
			name === "width" ? 1 : 0,

			val = 0;

		for ( ; i < 4; i += 2 ) {
			// Both box models exclude margin, so add it if we want it
			if ( extra === "margin" ) {
				val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
			}

			if ( isBorderBox ) {
				// border-box includes padding, so remove it if we want content
				if ( extra === "content" ) {
					val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
				}

				// At this point, extra isn't border nor margin, so remove border
				if ( extra !== "margin" ) {
					val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
				}
			} else {
				// At this point, extra isn't content, so add padding
				val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

				// At this point, extra isn't content nor padding, so add border
				if ( extra !== "padding" ) {
					val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
				}
			}
		}

		return val;
	}

	function getWidthOrHeight( elem, name, extra ) {

		// Start with offset property, which is equivalent to the border-box value
		var valueIsBorderBox = true,
			val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
			styles = getStyles( elem ),
			isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Some non-html elements return undefined for offsetWidth, so check for null/undefined
		// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
		// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
		if ( val <= 0 || val == null ) {
			// Fall back to computed then uncomputed css if necessary
			val = curCSS( elem, name, styles );
			if ( val < 0 || val == null ) {
				val = elem.style[ name ];
			}

			// Computed unit is not pixels. Stop here and return.
			if ( rnumnonpx.test(val) ) {
				return val;
			}

			// Check for style in case a browser which returns unreliable values
			// for getComputedStyle silently falls back to the reliable elem.style
			valueIsBorderBox = isBorderBox &&
				( support.boxSizingReliable() || val === elem.style[ name ] );

			// Normalize "", auto, and prepare for extra
			val = parseFloat( val ) || 0;
		}

		// Use the active box-sizing model to add/subtract irrelevant styles
		return ( val +
			augmentWidthOrHeight(
				elem,
				name,
				extra || ( isBorderBox ? "border" : "content" ),
				valueIsBorderBox,
				styles
			)
		) + "px";
	}

	function showHide( elements, show ) {
		var display, elem, hidden,
			values = [],
			index = 0,
			length = elements.length;

		for ( ; index < length; index++ ) {
			elem = elements[ index ];
			if ( !elem.style ) {
				continue;
			}

			values[ index ] = data_priv.get( elem, "olddisplay" );
			display = elem.style.display;
			if ( show ) {
				// Reset the inline display of this element to learn if it is
				// being hidden by cascaded rules or not
				if ( !values[ index ] && display === "none" ) {
					elem.style.display = "";
				}

				// Set elements which have been overridden with display: none
				// in a stylesheet to whatever the default browser style is
				// for such an element
				if ( elem.style.display === "" && isHidden( elem ) ) {
					values[ index ] = data_priv.access( elem, "olddisplay", defaultDisplay(elem.nodeName) );
				}
			} else {
				hidden = isHidden( elem );

				if ( display !== "none" || !hidden ) {
					data_priv.set( elem, "olddisplay", hidden ? display : jQuery.css( elem, "display" ) );
				}
			}
		}

		// Set the display of most of the elements in a second loop
		// to avoid the constant reflow
		for ( index = 0; index < length; index++ ) {
			elem = elements[ index ];
			if ( !elem.style ) {
				continue;
			}
			if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
				elem.style.display = show ? values[ index ] || "" : "none";
			}
		}

		return elements;
	}

	jQuery.extend({

		// Add in style property hooks for overriding the default
		// behavior of getting and setting a style property
		cssHooks: {
			opacity: {
				get: function( elem, computed ) {
					if ( computed ) {

						// We should always get a number back from opacity
						var ret = curCSS( elem, "opacity" );
						return ret === "" ? "1" : ret;
					}
				}
			}
		},

		// Don't automatically add "px" to these possibly-unitless properties
		cssNumber: {
			"columnCount": true,
			"fillOpacity": true,
			"flexGrow": true,
			"flexShrink": true,
			"fontWeight": true,
			"lineHeight": true,
			"opacity": true,
			"order": true,
			"orphans": true,
			"widows": true,
			"zIndex": true,
			"zoom": true
		},

		// Add in properties whose names you wish to fix before
		// setting or getting the value
		cssProps: {
			"float": "cssFloat"
		},

		// Get and set the style property on a DOM Node
		style: function( elem, name, value, extra ) {

			// Don't set styles on text and comment nodes
			if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
				return;
			}

			// Make sure that we're working with the right name
			var ret, type, hooks,
				origName = jQuery.camelCase( name ),
				style = elem.style;

			name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

			// Gets hook for the prefixed version, then unprefixed version
			hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

			// Check if we're setting a value
			if ( value !== undefined ) {
				type = typeof value;

				// Convert "+=" or "-=" to relative numbers (#7345)
				if ( type === "string" && (ret = rrelNum.exec( value )) ) {
					value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
					// Fixes bug #9237
					type = "number";
				}

				// Make sure that null and NaN values aren't set (#7116)
				if ( value == null || value !== value ) {
					return;
				}

				// If a number, add 'px' to the (except for certain CSS properties)
				if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
					value += "px";
				}

				// Support: IE9-11+
				// background-* props affect original clone's values
				if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
					style[ name ] = "inherit";
				}

				// If a hook was provided, use that value, otherwise just set the specified value
				if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
					style[ name ] = value;
				}

			} else {
				// If a hook was provided get the non-computed value from there
				if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
					return ret;
				}

				// Otherwise just get the value from the style object
				return style[ name ];
			}
		},

		css: function( elem, name, extra, styles ) {
			var val, num, hooks,
				origName = jQuery.camelCase( name );

			// Make sure that we're working with the right name
			name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

			// Try prefixed name followed by the unprefixed name
			hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

			// If a hook was provided get the computed value from there
			if ( hooks && "get" in hooks ) {
				val = hooks.get( elem, true, extra );
			}

			// Otherwise, if a way to get the computed value exists, use that
			if ( val === undefined ) {
				val = curCSS( elem, name, styles );
			}

			// Convert "normal" to computed value
			if ( val === "normal" && name in cssNormalTransform ) {
				val = cssNormalTransform[ name ];
			}

			// Make numeric if forced or a qualifier was provided and val looks numeric
			if ( extra === "" || extra ) {
				num = parseFloat( val );
				return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;
			}
			return val;
		}
	});

	jQuery.each([ "height", "width" ], function( i, name ) {
		jQuery.cssHooks[ name ] = {
			get: function( elem, computed, extra ) {
				if ( computed ) {

					// Certain elements can have dimension info if we invisibly show them
					// but it must have a current display style that would benefit
					return rdisplayswap.test( jQuery.css( elem, "display" ) ) && elem.offsetWidth === 0 ?
						jQuery.swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						}) :
						getWidthOrHeight( elem, name, extra );
				}
			},

			set: function( elem, value, extra ) {
				var styles = extra && getStyles( elem );
				return setPositiveNumber( elem, value, extra ?
					augmentWidthOrHeight(
						elem,
						name,
						extra,
						jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
						styles
					) : 0
				);
			}
		};
	});

	// Support: Android 2.3
	jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
		function( elem, computed ) {
			if ( computed ) {
				return jQuery.swap( elem, { "display": "inline-block" },
					curCSS, [ elem, "marginRight" ] );
			}
		}
	);

	// These hooks are used by animate to expand properties
	jQuery.each({
		margin: "",
		padding: "",
		border: "Width"
	}, function( prefix, suffix ) {
		jQuery.cssHooks[ prefix + suffix ] = {
			expand: function( value ) {
				var i = 0,
					expanded = {},

					// Assumes a single number if not a string
					parts = typeof value === "string" ? value.split(" ") : [ value ];

				for ( ; i < 4; i++ ) {
					expanded[ prefix + cssExpand[ i ] + suffix ] =
						parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
				}

				return expanded;
			}
		};

		if ( !rmargin.test( prefix ) ) {
			jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
		}
	});

	jQuery.fn.extend({
		css: function( name, value ) {
			return access( this, function( elem, name, value ) {
				var styles, len,
					map = {},
					i = 0;

				if ( jQuery.isArray( name ) ) {
					styles = getStyles( elem );
					len = name.length;

					for ( ; i < len; i++ ) {
						map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
					}

					return map;
				}

				return value !== undefined ?
					jQuery.style( elem, name, value ) :
					jQuery.css( elem, name );
			}, name, value, arguments.length > 1 );
		},
		show: function() {
			return showHide( this, true );
		},
		hide: function() {
			return showHide( this );
		},
		toggle: function( state ) {
			if ( typeof state === "boolean" ) {
				return state ? this.show() : this.hide();
			}

			return this.each(function() {
				if ( isHidden( this ) ) {
					jQuery( this ).show();
				} else {
					jQuery( this ).hide();
				}
			});
		}
	});


	function Tween( elem, options, prop, end, easing ) {
		return new Tween.prototype.init( elem, options, prop, end, easing );
	}
	jQuery.Tween = Tween;

	Tween.prototype = {
		constructor: Tween,
		init: function( elem, options, prop, end, easing, unit ) {
			this.elem = elem;
			this.prop = prop;
			this.easing = easing || "swing";
			this.options = options;
			this.start = this.now = this.cur();
			this.end = end;
			this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
		},
		cur: function() {
			var hooks = Tween.propHooks[ this.prop ];

			return hooks && hooks.get ?
				hooks.get( this ) :
				Tween.propHooks._default.get( this );
		},
		run: function( percent ) {
			var eased,
				hooks = Tween.propHooks[ this.prop ];

			if ( this.options.duration ) {
				this.pos = eased = jQuery.easing[ this.easing ](
					percent, this.options.duration * percent, 0, 1, this.options.duration
				);
			} else {
				this.pos = eased = percent;
			}
			this.now = ( this.end - this.start ) * eased + this.start;

			if ( this.options.step ) {
				this.options.step.call( this.elem, this.now, this );
			}

			if ( hooks && hooks.set ) {
				hooks.set( this );
			} else {
				Tween.propHooks._default.set( this );
			}
			return this;
		}
	};

	Tween.prototype.init.prototype = Tween.prototype;

	Tween.propHooks = {
		_default: {
			get: function( tween ) {
				var result;

				if ( tween.elem[ tween.prop ] != null &&
					(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
					return tween.elem[ tween.prop ];
				}

				// Passing an empty string as a 3rd parameter to .css will automatically
				// attempt a parseFloat and fallback to a string if the parse fails.
				// Simple values such as "10px" are parsed to Float;
				// complex values such as "rotate(1rad)" are returned as-is.
				result = jQuery.css( tween.elem, tween.prop, "" );
				// Empty strings, null, undefined and "auto" are converted to 0.
				return !result || result === "auto" ? 0 : result;
			},
			set: function( tween ) {
				// Use step hook for back compat.
				// Use cssHook if its there.
				// Use .style if available and use plain properties where available.
				if ( jQuery.fx.step[ tween.prop ] ) {
					jQuery.fx.step[ tween.prop ]( tween );
				} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
					jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
				} else {
					tween.elem[ tween.prop ] = tween.now;
				}
			}
		}
	};

	// Support: IE9
	// Panic based approach to setting things on disconnected nodes
	Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
		set: function( tween ) {
			if ( tween.elem.nodeType && tween.elem.parentNode ) {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	};

	jQuery.easing = {
		linear: function( p ) {
			return p;
		},
		swing: function( p ) {
			return 0.5 - Math.cos( p * Math.PI ) / 2;
		}
	};

	jQuery.fx = Tween.prototype.init;

	// Back Compat <1.8 extension point
	jQuery.fx.step = {};




	var
		fxNow, timerId,
		rfxtypes = /^(?:toggle|show|hide)$/,
		rfxnum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" ),
		rrun = /queueHooks$/,
		animationPrefilters = [ defaultPrefilter ],
		tweeners = {
			"*": [ function( prop, value ) {
				var tween = this.createTween( prop, value ),
					target = tween.cur(),
					parts = rfxnum.exec( value ),
					unit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

					// Starting value computation is required for potential unit mismatches
					start = ( jQuery.cssNumber[ prop ] || unit !== "px" && +target ) &&
						rfxnum.exec( jQuery.css( tween.elem, prop ) ),
					scale = 1,
					maxIterations = 20;

				if ( start && start[ 3 ] !== unit ) {
					// Trust units reported by jQuery.css
					unit = unit || start[ 3 ];

					// Make sure we update the tween properties later on
					parts = parts || [];

					// Iteratively approximate from a nonzero starting point
					start = +target || 1;

					do {
						// If previous iteration zeroed out, double until we get *something*.
						// Use string for doubling so we don't accidentally see scale as unchanged below
						scale = scale || ".5";

						// Adjust and apply
						start = start / scale;
						jQuery.style( tween.elem, prop, start + unit );

					// Update scale, tolerating zero or NaN from tween.cur(),
					// break the loop if scale is unchanged or perfect, or if we've just had enough
					} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
				}

				// Update tween properties
				if ( parts ) {
					start = tween.start = +start || +target || 0;
					tween.unit = unit;
					// If a +=/-= token was provided, we're doing a relative animation
					tween.end = parts[ 1 ] ?
						start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :
						+parts[ 2 ];
				}

				return tween;
			} ]
		};

	// Animations created synchronously will run synchronously
	function createFxNow() {
		setTimeout(function() {
			fxNow = undefined;
		});
		return ( fxNow = jQuery.now() );
	}

	// Generate parameters to create a standard animation
	function genFx( type, includeWidth ) {
		var which,
			i = 0,
			attrs = { height: type };

		// If we include width, step value is 1 to do all cssExpand values,
		// otherwise step value is 2 to skip over Left and Right
		includeWidth = includeWidth ? 1 : 0;
		for ( ; i < 4 ; i += 2 - includeWidth ) {
			which = cssExpand[ i ];
			attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
		}

		if ( includeWidth ) {
			attrs.opacity = attrs.width = type;
		}

		return attrs;
	}

	function createTween( value, prop, animation ) {
		var tween,
			collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
			index = 0,
			length = collection.length;
		for ( ; index < length; index++ ) {
			if ( (tween = collection[ index ].call( animation, prop, value )) ) {

				// We're done with this property
				return tween;
			}
		}
	}

	function defaultPrefilter( elem, props, opts ) {
		/* jshint validthis: true */
		var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
			anim = this,
			orig = {},
			style = elem.style,
			hidden = elem.nodeType && isHidden( elem ),
			dataShow = data_priv.get( elem, "fxshow" );

		// Handle queue: false promises
		if ( !opts.queue ) {
			hooks = jQuery._queueHooks( elem, "fx" );
			if ( hooks.unqueued == null ) {
				hooks.unqueued = 0;
				oldfire = hooks.empty.fire;
				hooks.empty.fire = function() {
					if ( !hooks.unqueued ) {
						oldfire();
					}
				};
			}
			hooks.unqueued++;

			anim.always(function() {
				// Ensure the complete handler is called before this completes
				anim.always(function() {
					hooks.unqueued--;
					if ( !jQuery.queue( elem, "fx" ).length ) {
						hooks.empty.fire();
					}
				});
			});
		}

		// Height/width overflow pass
		if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
			// Make sure that nothing sneaks out
			// Record all 3 overflow attributes because IE9-10 do not
			// change the overflow attribute when overflowX and
			// overflowY are set to the same value
			opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

			// Set display property to inline-block for height/width
			// animations on inline elements that are having width/height animated
			display = jQuery.css( elem, "display" );

			// Test default display if display is currently "none"
			checkDisplay = display === "none" ?
				data_priv.get( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

			if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {
				style.display = "inline-block";
			}
		}

		if ( opts.overflow ) {
			style.overflow = "hidden";
			anim.always(function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			});
		}

		// show/hide pass
		for ( prop in props ) {
			value = props[ prop ];
			if ( rfxtypes.exec( value ) ) {
				delete props[ prop ];
				toggle = toggle || value === "toggle";
				if ( value === ( hidden ? "hide" : "show" ) ) {

					// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden
					if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
						hidden = true;
					} else {
						continue;
					}
				}
				orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

			// Any non-fx value stops us from restoring the original display value
			} else {
				display = undefined;
			}
		}

		if ( !jQuery.isEmptyObject( orig ) ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = data_priv.access( elem, "fxshow", {} );
			}

			// Store state if its toggle - enables .stop().toggle() to "reverse"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}
			if ( hidden ) {
				jQuery( elem ).show();
			} else {
				anim.done(function() {
					jQuery( elem ).hide();
				});
			}
			anim.done(function() {
				var prop;

				data_priv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			});
			for ( prop in orig ) {
				tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

				if ( !( prop in dataShow ) ) {
					dataShow[ prop ] = tween.start;
					if ( hidden ) {
						tween.end = tween.start;
						tween.start = prop === "width" || prop === "height" ? 1 : 0;
					}
				}
			}

		// If this is a noop like .hide().hide(), restore an overwritten display value
		} else if ( (display === "none" ? defaultDisplay( elem.nodeName ) : display) === "inline" ) {
			style.display = display;
		}
	}

	function propFilter( props, specialEasing ) {
		var index, name, easing, value, hooks;

		// camelCase, specialEasing and expand cssHook pass
		for ( index in props ) {
			name = jQuery.camelCase( index );
			easing = specialEasing[ name ];
			value = props[ index ];
			if ( jQuery.isArray( value ) ) {
				easing = value[ 1 ];
				value = props[ index ] = value[ 0 ];
			}

			if ( index !== name ) {
				props[ name ] = value;
				delete props[ index ];
			}

			hooks = jQuery.cssHooks[ name ];
			if ( hooks && "expand" in hooks ) {
				value = hooks.expand( value );
				delete props[ name ];

				// Not quite $.extend, this won't overwrite existing keys.
				// Reusing 'index' because we have the correct "name"
				for ( index in value ) {
					if ( !( index in props ) ) {
						props[ index ] = value[ index ];
						specialEasing[ index ] = easing;
					}
				}
			} else {
				specialEasing[ name ] = easing;
			}
		}
	}

	function Animation( elem, properties, options ) {
		var result,
			stopped,
			index = 0,
			length = animationPrefilters.length,
			deferred = jQuery.Deferred().always( function() {
				// Don't match elem in the :animated selector
				delete tick.elem;
			}),
			tick = function() {
				if ( stopped ) {
					return false;
				}
				var currentTime = fxNow || createFxNow(),
					remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
					// Support: Android 2.3
					// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
					temp = remaining / animation.duration || 0,
					percent = 1 - temp,
					index = 0,
					length = animation.tweens.length;

				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( percent );
				}

				deferred.notifyWith( elem, [ animation, percent, remaining ]);

				if ( percent < 1 && length ) {
					return remaining;
				} else {
					deferred.resolveWith( elem, [ animation ] );
					return false;
				}
			},
			animation = deferred.promise({
				elem: elem,
				props: jQuery.extend( {}, properties ),
				opts: jQuery.extend( true, { specialEasing: {} }, options ),
				originalProperties: properties,
				originalOptions: options,
				startTime: fxNow || createFxNow(),
				duration: options.duration,
				tweens: [],
				createTween: function( prop, end ) {
					var tween = jQuery.Tween( elem, animation.opts, prop, end,
							animation.opts.specialEasing[ prop ] || animation.opts.easing );
					animation.tweens.push( tween );
					return tween;
				},
				stop: function( gotoEnd ) {
					var index = 0,
						// If we are going to the end, we want to run all the tweens
						// otherwise we skip this part
						length = gotoEnd ? animation.tweens.length : 0;
					if ( stopped ) {
						return this;
					}
					stopped = true;
					for ( ; index < length ; index++ ) {
						animation.tweens[ index ].run( 1 );
					}

					// Resolve when we played the last frame; otherwise, reject
					if ( gotoEnd ) {
						deferred.resolveWith( elem, [ animation, gotoEnd ] );
					} else {
						deferred.rejectWith( elem, [ animation, gotoEnd ] );
					}
					return this;
				}
			}),
			props = animation.props;

		propFilter( props, animation.opts.specialEasing );

		for ( ; index < length ; index++ ) {
			result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
			if ( result ) {
				return result;
			}
		}

		jQuery.map( props, createTween, animation );

		if ( jQuery.isFunction( animation.opts.start ) ) {
			animation.opts.start.call( elem, animation );
		}

		jQuery.fx.timer(
			jQuery.extend( tick, {
				elem: elem,
				anim: animation,
				queue: animation.opts.queue
			})
		);

		// attach callbacks from options
		return animation.progress( animation.opts.progress )
			.done( animation.opts.done, animation.opts.complete )
			.fail( animation.opts.fail )
			.always( animation.opts.always );
	}

	jQuery.Animation = jQuery.extend( Animation, {

		tweener: function( props, callback ) {
			if ( jQuery.isFunction( props ) ) {
				callback = props;
				props = [ "*" ];
			} else {
				props = props.split(" ");
			}

			var prop,
				index = 0,
				length = props.length;

			for ( ; index < length ; index++ ) {
				prop = props[ index ];
				tweeners[ prop ] = tweeners[ prop ] || [];
				tweeners[ prop ].unshift( callback );
			}
		},

		prefilter: function( callback, prepend ) {
			if ( prepend ) {
				animationPrefilters.unshift( callback );
			} else {
				animationPrefilters.push( callback );
			}
		}
	});

	jQuery.speed = function( speed, easing, fn ) {
		var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
			complete: fn || !fn && easing ||
				jQuery.isFunction( speed ) && speed,
			duration: speed,
			easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
		};

		opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
			opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

		// Normalize opt.queue - true/undefined/null -> "fx"
		if ( opt.queue == null || opt.queue === true ) {
			opt.queue = "fx";
		}

		// Queueing
		opt.old = opt.complete;

		opt.complete = function() {
			if ( jQuery.isFunction( opt.old ) ) {
				opt.old.call( this );
			}

			if ( opt.queue ) {
				jQuery.dequeue( this, opt.queue );
			}
		};

		return opt;
	};

	jQuery.fn.extend({
		fadeTo: function( speed, to, easing, callback ) {

			// Show any hidden elements after setting opacity to 0
			return this.filter( isHidden ).css( "opacity", 0 ).show()

				// Animate to the value specified
				.end().animate({ opacity: to }, speed, easing, callback );
		},
		animate: function( prop, speed, easing, callback ) {
			var empty = jQuery.isEmptyObject( prop ),
				optall = jQuery.speed( speed, easing, callback ),
				doAnimation = function() {
					// Operate on a copy of prop so per-property easing won't be lost
					var anim = Animation( this, jQuery.extend( {}, prop ), optall );

					// Empty animations, or finishing resolves immediately
					if ( empty || data_priv.get( this, "finish" ) ) {
						anim.stop( true );
					}
				};
				doAnimation.finish = doAnimation;

			return empty || optall.queue === false ?
				this.each( doAnimation ) :
				this.queue( optall.queue, doAnimation );
		},
		stop: function( type, clearQueue, gotoEnd ) {
			var stopQueue = function( hooks ) {
				var stop = hooks.stop;
				delete hooks.stop;
				stop( gotoEnd );
			};

			if ( typeof type !== "string" ) {
				gotoEnd = clearQueue;
				clearQueue = type;
				type = undefined;
			}
			if ( clearQueue && type !== false ) {
				this.queue( type || "fx", [] );
			}

			return this.each(function() {
				var dequeue = true,
					index = type != null && type + "queueHooks",
					timers = jQuery.timers,
					data = data_priv.get( this );

				if ( index ) {
					if ( data[ index ] && data[ index ].stop ) {
						stopQueue( data[ index ] );
					}
				} else {
					for ( index in data ) {
						if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
							stopQueue( data[ index ] );
						}
					}
				}

				for ( index = timers.length; index--; ) {
					if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
						timers[ index ].anim.stop( gotoEnd );
						dequeue = false;
						timers.splice( index, 1 );
					}
				}

				// Start the next in the queue if the last step wasn't forced.
				// Timers currently will call their complete callbacks, which
				// will dequeue but only if they were gotoEnd.
				if ( dequeue || !gotoEnd ) {
					jQuery.dequeue( this, type );
				}
			});
		},
		finish: function( type ) {
			if ( type !== false ) {
				type = type || "fx";
			}
			return this.each(function() {
				var index,
					data = data_priv.get( this ),
					queue = data[ type + "queue" ],
					hooks = data[ type + "queueHooks" ],
					timers = jQuery.timers,
					length = queue ? queue.length : 0;

				// Enable finishing flag on private data
				data.finish = true;

				// Empty the queue first
				jQuery.queue( this, type, [] );

				if ( hooks && hooks.stop ) {
					hooks.stop.call( this, true );
				}

				// Look for any active animations, and finish them
				for ( index = timers.length; index--; ) {
					if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
						timers[ index ].anim.stop( true );
						timers.splice( index, 1 );
					}
				}

				// Look for any animations in the old queue and finish them
				for ( index = 0; index < length; index++ ) {
					if ( queue[ index ] && queue[ index ].finish ) {
						queue[ index ].finish.call( this );
					}
				}

				// Turn off finishing flag
				delete data.finish;
			});
		}
	});

	jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
		var cssFn = jQuery.fn[ name ];
		jQuery.fn[ name ] = function( speed, easing, callback ) {
			return speed == null || typeof speed === "boolean" ?
				cssFn.apply( this, arguments ) :
				this.animate( genFx( name, true ), speed, easing, callback );
		};
	});

	// Generate shortcuts for custom animations
	jQuery.each({
		slideDown: genFx("show"),
		slideUp: genFx("hide"),
		slideToggle: genFx("toggle"),
		fadeIn: { opacity: "show" },
		fadeOut: { opacity: "hide" },
		fadeToggle: { opacity: "toggle" }
	}, function( name, props ) {
		jQuery.fn[ name ] = function( speed, easing, callback ) {
			return this.animate( props, speed, easing, callback );
		};
	});

	jQuery.timers = [];
	jQuery.fx.tick = function() {
		var timer,
			i = 0,
			timers = jQuery.timers;

		fxNow = jQuery.now();

		for ( ; i < timers.length; i++ ) {
			timer = timers[ i ];
			// Checks the timer has not already been removed
			if ( !timer() && timers[ i ] === timer ) {
				timers.splice( i--, 1 );
			}
		}

		if ( !timers.length ) {
			jQuery.fx.stop();
		}
		fxNow = undefined;
	};

	jQuery.fx.timer = function( timer ) {
		jQuery.timers.push( timer );
		if ( timer() ) {
			jQuery.fx.start();
		} else {
			jQuery.timers.pop();
		}
	};

	jQuery.fx.interval = 13;

	jQuery.fx.start = function() {
		if ( !timerId ) {
			timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
		}
	};

	jQuery.fx.stop = function() {
		clearInterval( timerId );
		timerId = null;
	};

	jQuery.fx.speeds = {
		slow: 600,
		fast: 200,
		// Default speed
		_default: 400
	};


	// Based off of the plugin by Clint Helfers, with permission.
	// http://blindsignals.com/index.php/2009/07/jquery-delay/
	jQuery.fn.delay = function( time, type ) {
		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
		type = type || "fx";

		return this.queue( type, function( next, hooks ) {
			var timeout = setTimeout( next, time );
			hooks.stop = function() {
				clearTimeout( timeout );
			};
		});
	};


	(function() {
		var input = document.createElement( "input" ),
			select = document.createElement( "select" ),
			opt = select.appendChild( document.createElement( "option" ) );

		input.type = "checkbox";

		// Support: iOS<=5.1, Android<=4.2+
		// Default value for a checkbox should be "on"
		support.checkOn = input.value !== "";

		// Support: IE<=11+
		// Must access selectedIndex to make default options select
		support.optSelected = opt.selected;

		// Support: Android<=2.3
		// Options inside disabled selects are incorrectly marked as disabled
		select.disabled = true;
		support.optDisabled = !opt.disabled;

		// Support: IE<=11+
		// An input loses its value after becoming a radio
		input = document.createElement( "input" );
		input.value = "t";
		input.type = "radio";
		support.radioValue = input.value === "t";
	})();


	var nodeHook, boolHook,
		attrHandle = jQuery.expr.attrHandle;

	jQuery.fn.extend({
		attr: function( name, value ) {
			return access( this, jQuery.attr, name, value, arguments.length > 1 );
		},

		removeAttr: function( name ) {
			return this.each(function() {
				jQuery.removeAttr( this, name );
			});
		}
	});

	jQuery.extend({
		attr: function( elem, name, value ) {
			var hooks, ret,
				nType = elem.nodeType;

			// don't get/set attributes on text, comment and attribute nodes
			if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
				return;
			}

			// Fallback to prop when attributes are not supported
			if ( typeof elem.getAttribute === strundefined ) {
				return jQuery.prop( elem, name, value );
			}

			// All attributes are lowercase
			// Grab necessary hook if one is defined
			if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
				name = name.toLowerCase();
				hooks = jQuery.attrHooks[ name ] ||
					( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
			}

			if ( value !== undefined ) {

				if ( value === null ) {
					jQuery.removeAttr( elem, name );

				} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
					return ret;

				} else {
					elem.setAttribute( name, value + "" );
					return value;
				}

			} else if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
				return ret;

			} else {
				ret = jQuery.find.attr( elem, name );

				// Non-existent attributes return null, we normalize to undefined
				return ret == null ?
					undefined :
					ret;
			}
		},

		removeAttr: function( elem, value ) {
			var name, propName,
				i = 0,
				attrNames = value && value.match( rnotwhite );

			if ( attrNames && elem.nodeType === 1 ) {
				while ( (name = attrNames[i++]) ) {
					propName = jQuery.propFix[ name ] || name;

					// Boolean attributes get special treatment (#10870)
					if ( jQuery.expr.match.bool.test( name ) ) {
						// Set corresponding property to false
						elem[ propName ] = false;
					}

					elem.removeAttribute( name );
				}
			}
		},

		attrHooks: {
			type: {
				set: function( elem, value ) {
					if ( !support.radioValue && value === "radio" &&
						jQuery.nodeName( elem, "input" ) ) {
						var val = elem.value;
						elem.setAttribute( "type", value );
						if ( val ) {
							elem.value = val;
						}
						return value;
					}
				}
			}
		}
	});

	// Hooks for boolean attributes
	boolHook = {
		set: function( elem, value, name ) {
			if ( value === false ) {
				// Remove boolean attributes when set to false
				jQuery.removeAttr( elem, name );
			} else {
				elem.setAttribute( name, name );
			}
			return name;
		}
	};
	jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
		var getter = attrHandle[ name ] || jQuery.find.attr;

		attrHandle[ name ] = function( elem, name, isXML ) {
			var ret, handle;
			if ( !isXML ) {
				// Avoid an infinite loop by temporarily removing this function from the getter
				handle = attrHandle[ name ];
				attrHandle[ name ] = ret;
				ret = getter( elem, name, isXML ) != null ?
					name.toLowerCase() :
					null;
				attrHandle[ name ] = handle;
			}
			return ret;
		};
	});




	var rfocusable = /^(?:input|select|textarea|button)$/i;

	jQuery.fn.extend({
		prop: function( name, value ) {
			return access( this, jQuery.prop, name, value, arguments.length > 1 );
		},

		removeProp: function( name ) {
			return this.each(function() {
				delete this[ jQuery.propFix[ name ] || name ];
			});
		}
	});

	jQuery.extend({
		propFix: {
			"for": "htmlFor",
			"class": "className"
		},

		prop: function( elem, name, value ) {
			var ret, hooks, notxml,
				nType = elem.nodeType;

			// Don't get/set properties on text, comment and attribute nodes
			if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
				return;
			}

			notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

			if ( notxml ) {
				// Fix name and attach hooks
				name = jQuery.propFix[ name ] || name;
				hooks = jQuery.propHooks[ name ];
			}

			if ( value !== undefined ) {
				return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
					ret :
					( elem[ name ] = value );

			} else {
				return hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ?
					ret :
					elem[ name ];
			}
		},

		propHooks: {
			tabIndex: {
				get: function( elem ) {
					return elem.hasAttribute( "tabindex" ) || rfocusable.test( elem.nodeName ) || elem.href ?
						elem.tabIndex :
						-1;
				}
			}
		}
	});

	if ( !support.optSelected ) {
		jQuery.propHooks.selected = {
			get: function( elem ) {
				var parent = elem.parentNode;
				if ( parent && parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
				return null;
			}
		};
	}

	jQuery.each([
		"tabIndex",
		"readOnly",
		"maxLength",
		"cellSpacing",
		"cellPadding",
		"rowSpan",
		"colSpan",
		"useMap",
		"frameBorder",
		"contentEditable"
	], function() {
		jQuery.propFix[ this.toLowerCase() ] = this;
	});




	var rclass = /[\t\r\n\f]/g;

	jQuery.fn.extend({
		addClass: function( value ) {
			var classes, elem, cur, clazz, j, finalValue,
				proceed = typeof value === "string" && value,
				i = 0,
				len = this.length;

			if ( jQuery.isFunction( value ) ) {
				return this.each(function( j ) {
					jQuery( this ).addClass( value.call( this, j, this.className ) );
				});
			}

			if ( proceed ) {
				// The disjunction here is for better compressibility (see removeClass)
				classes = ( value || "" ).match( rnotwhite ) || [];

				for ( ; i < len; i++ ) {
					elem = this[ i ];
					cur = elem.nodeType === 1 && ( elem.className ?
						( " " + elem.className + " " ).replace( rclass, " " ) :
						" "
					);

					if ( cur ) {
						j = 0;
						while ( (clazz = classes[j++]) ) {
							if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
								cur += clazz + " ";
							}
						}

						// only assign if different to avoid unneeded rendering.
						finalValue = jQuery.trim( cur );
						if ( elem.className !== finalValue ) {
							elem.className = finalValue;
						}
					}
				}
			}

			return this;
		},

		removeClass: function( value ) {
			var classes, elem, cur, clazz, j, finalValue,
				proceed = arguments.length === 0 || typeof value === "string" && value,
				i = 0,
				len = this.length;

			if ( jQuery.isFunction( value ) ) {
				return this.each(function( j ) {
					jQuery( this ).removeClass( value.call( this, j, this.className ) );
				});
			}
			if ( proceed ) {
				classes = ( value || "" ).match( rnotwhite ) || [];

				for ( ; i < len; i++ ) {
					elem = this[ i ];
					// This expression is here for better compressibility (see addClass)
					cur = elem.nodeType === 1 && ( elem.className ?
						( " " + elem.className + " " ).replace( rclass, " " ) :
						""
					);

					if ( cur ) {
						j = 0;
						while ( (clazz = classes[j++]) ) {
							// Remove *all* instances
							while ( cur.indexOf( " " + clazz + " " ) >= 0 ) {
								cur = cur.replace( " " + clazz + " ", " " );
							}
						}

						// Only assign if different to avoid unneeded rendering.
						finalValue = value ? jQuery.trim( cur ) : "";
						if ( elem.className !== finalValue ) {
							elem.className = finalValue;
						}
					}
				}
			}

			return this;
		},

		toggleClass: function( value, stateVal ) {
			var type = typeof value;

			if ( typeof stateVal === "boolean" && type === "string" ) {
				return stateVal ? this.addClass( value ) : this.removeClass( value );
			}

			if ( jQuery.isFunction( value ) ) {
				return this.each(function( i ) {
					jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
				});
			}

			return this.each(function() {
				if ( type === "string" ) {
					// Toggle individual class names
					var className,
						i = 0,
						self = jQuery( this ),
						classNames = value.match( rnotwhite ) || [];

					while ( (className = classNames[ i++ ]) ) {
						// Check each className given, space separated list
						if ( self.hasClass( className ) ) {
							self.removeClass( className );
						} else {
							self.addClass( className );
						}
					}

				// Toggle whole class name
				} else if ( type === strundefined || type === "boolean" ) {
					if ( this.className ) {
						// store className if set
						data_priv.set( this, "__className__", this.className );
					}

					// If the element has a class name or if we're passed `false`,
					// then remove the whole classname (if there was one, the above saved it).
					// Otherwise bring back whatever was previously saved (if anything),
					// falling back to the empty string if nothing was stored.
					this.className = this.className || value === false ? "" : data_priv.get( this, "__className__" ) || "";
				}
			});
		},

		hasClass: function( selector ) {
			var className = " " + selector + " ",
				i = 0,
				l = this.length;
			for ( ; i < l; i++ ) {
				if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
					return true;
				}
			}

			return false;
		}
	});




	var rreturn = /\r/g;

	jQuery.fn.extend({
		val: function( value ) {
			var hooks, ret, isFunction,
				elem = this[0];

			if ( !arguments.length ) {
				if ( elem ) {
					hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

					if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
						return ret;
					}

					ret = elem.value;

					return typeof ret === "string" ?
						// Handle most common string cases
						ret.replace(rreturn, "") :
						// Handle cases where value is null/undef or number
						ret == null ? "" : ret;
				}

				return;
			}

			isFunction = jQuery.isFunction( value );

			return this.each(function( i ) {
				var val;

				if ( this.nodeType !== 1 ) {
					return;
				}

				if ( isFunction ) {
					val = value.call( this, i, jQuery( this ).val() );
				} else {
					val = value;
				}

				// Treat null/undefined as ""; convert numbers to string
				if ( val == null ) {
					val = "";

				} else if ( typeof val === "number" ) {
					val += "";

				} else if ( jQuery.isArray( val ) ) {
					val = jQuery.map( val, function( value ) {
						return value == null ? "" : value + "";
					});
				}

				hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

				// If set returns undefined, fall back to normal setting
				if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
					this.value = val;
				}
			});
		}
	});

	jQuery.extend({
		valHooks: {
			option: {
				get: function( elem ) {
					var val = jQuery.find.attr( elem, "value" );
					return val != null ?
						val :
						// Support: IE10-11+
						// option.text throws exceptions (#14686, #14858)
						jQuery.trim( jQuery.text( elem ) );
				}
			},
			select: {
				get: function( elem ) {
					var value, option,
						options = elem.options,
						index = elem.selectedIndex,
						one = elem.type === "select-one" || index < 0,
						values = one ? null : [],
						max = one ? index + 1 : options.length,
						i = index < 0 ?
							max :
							one ? index : 0;

					// Loop through all the selected options
					for ( ; i < max; i++ ) {
						option = options[ i ];

						// IE6-9 doesn't update selected after form reset (#2551)
						if ( ( option.selected || i === index ) &&
								// Don't return options that are disabled or in a disabled optgroup
								( support.optDisabled ? !option.disabled : option.getAttribute( "disabled" ) === null ) &&
								( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

							// Get the specific value for the option
							value = jQuery( option ).val();

							// We don't need an array for one selects
							if ( one ) {
								return value;
							}

							// Multi-Selects return an array
							values.push( value );
						}
					}

					return values;
				},

				set: function( elem, value ) {
					var optionSet, option,
						options = elem.options,
						values = jQuery.makeArray( value ),
						i = options.length;

					while ( i-- ) {
						option = options[ i ];
						if ( (option.selected = jQuery.inArray( option.value, values ) >= 0) ) {
							optionSet = true;
						}
					}

					// Force browsers to behave consistently when non-matching value is set
					if ( !optionSet ) {
						elem.selectedIndex = -1;
					}
					return values;
				}
			}
		}
	});

	// Radios and checkboxes getter/setter
	jQuery.each([ "radio", "checkbox" ], function() {
		jQuery.valHooks[ this ] = {
			set: function( elem, value ) {
				if ( jQuery.isArray( value ) ) {
					return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
				}
			}
		};
		if ( !support.checkOn ) {
			jQuery.valHooks[ this ].get = function( elem ) {
				return elem.getAttribute("value") === null ? "on" : elem.value;
			};
		}
	});




	// Return jQuery for attributes-only inclusion


	jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
		"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
		"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	});

	jQuery.fn.extend({
		hover: function( fnOver, fnOut ) {
			return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
		},

		bind: function( types, data, fn ) {
			return this.on( types, null, data, fn );
		},
		unbind: function( types, fn ) {
			return this.off( types, null, fn );
		},

		delegate: function( selector, types, data, fn ) {
			return this.on( types, selector, data, fn );
		},
		undelegate: function( selector, types, fn ) {
			// ( namespace ) or ( selector, types [, fn] )
			return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
		}
	});


	var nonce = jQuery.now();

	var rquery = (/\?/);



	// Support: Android 2.3
	// Workaround failure to string-cast null input
	jQuery.parseJSON = function( data ) {
		return JSON.parse( data + "" );
	};


	// Cross-browser xml parsing
	jQuery.parseXML = function( data ) {
		var xml, tmp;
		if ( !data || typeof data !== "string" ) {
			return null;
		}

		// Support: IE9
		try {
			tmp = new DOMParser();
			xml = tmp.parseFromString( data, "text/xml" );
		} catch ( e ) {
			xml = undefined;
		}

		if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
			jQuery.error( "Invalid XML: " + data );
		}
		return xml;
	};


	var
		rhash = /#.*$/,
		rts = /([?&])_=[^&]*/,
		rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
		// #7653, #8125, #8152: local protocol detection
		rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
		rnoContent = /^(?:GET|HEAD)$/,
		rprotocol = /^\/\//,
		rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,

		/* Prefilters
		 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
		 * 2) These are called:
		 *    - BEFORE asking for a transport
		 *    - AFTER param serialization (s.data is a string if s.processData is true)
		 * 3) key is the dataType
		 * 4) the catchall symbol "*" can be used
		 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
		 */
		prefilters = {},

		/* Transports bindings
		 * 1) key is the dataType
		 * 2) the catchall symbol "*" can be used
		 * 3) selection will start with transport dataType and THEN go to "*" if needed
		 */
		transports = {},

		// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
		allTypes = "*/".concat( "*" ),

		// Document location
		ajaxLocation = window.location.href,

		// Segment location into parts
		ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

	// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
	function addToPrefiltersOrTransports( structure ) {

		// dataTypeExpression is optional and defaults to "*"
		return function( dataTypeExpression, func ) {

			if ( typeof dataTypeExpression !== "string" ) {
				func = dataTypeExpression;
				dataTypeExpression = "*";
			}

			var dataType,
				i = 0,
				dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

			if ( jQuery.isFunction( func ) ) {
				// For each dataType in the dataTypeExpression
				while ( (dataType = dataTypes[i++]) ) {
					// Prepend if requested
					if ( dataType[0] === "+" ) {
						dataType = dataType.slice( 1 ) || "*";
						(structure[ dataType ] = structure[ dataType ] || []).unshift( func );

					// Otherwise append
					} else {
						(structure[ dataType ] = structure[ dataType ] || []).push( func );
					}
				}
			}
		};
	}

	// Base inspection function for prefilters and transports
	function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

		var inspected = {},
			seekingTransport = ( structure === transports );

		function inspect( dataType ) {
			var selected;
			inspected[ dataType ] = true;
			jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
				var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
				if ( typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {
					options.dataTypes.unshift( dataTypeOrTransport );
					inspect( dataTypeOrTransport );
					return false;
				} else if ( seekingTransport ) {
					return !( selected = dataTypeOrTransport );
				}
			});
			return selected;
		}

		return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
	}

	// A special extend for ajax options
	// that takes "flat" options (not to be deep extended)
	// Fixes #9887
	function ajaxExtend( target, src ) {
		var key, deep,
			flatOptions = jQuery.ajaxSettings.flatOptions || {};

		for ( key in src ) {
			if ( src[ key ] !== undefined ) {
				( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];
			}
		}
		if ( deep ) {
			jQuery.extend( true, target, deep );
		}

		return target;
	}

	/* Handles responses to an ajax request:
	 * - finds the right dataType (mediates between content-type and expected dataType)
	 * - returns the corresponding response
	 */
	function ajaxHandleResponses( s, jqXHR, responses ) {

		var ct, type, finalDataType, firstDataType,
			contents = s.contents,
			dataTypes = s.dataTypes;

		// Remove auto dataType and get content-type in the process
		while ( dataTypes[ 0 ] === "*" ) {
			dataTypes.shift();
			if ( ct === undefined ) {
				ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
			}
		}

		// Check if we're dealing with a known content-type
		if ( ct ) {
			for ( type in contents ) {
				if ( contents[ type ] && contents[ type ].test( ct ) ) {
					dataTypes.unshift( type );
					break;
				}
			}
		}

		// Check to see if we have a response for the expected dataType
		if ( dataTypes[ 0 ] in responses ) {
			finalDataType = dataTypes[ 0 ];
		} else {
			// Try convertible dataTypes
			for ( type in responses ) {
				if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
					finalDataType = type;
					break;
				}
				if ( !firstDataType ) {
					firstDataType = type;
				}
			}
			// Or just use first one
			finalDataType = finalDataType || firstDataType;
		}

		// If we found a dataType
		// We add the dataType to the list if needed
		// and return the corresponding response
		if ( finalDataType ) {
			if ( finalDataType !== dataTypes[ 0 ] ) {
				dataTypes.unshift( finalDataType );
			}
			return responses[ finalDataType ];
		}
	}

	/* Chain conversions given the request and the original response
	 * Also sets the responseXXX fields on the jqXHR instance
	 */
	function ajaxConvert( s, response, jqXHR, isSuccess ) {
		var conv2, current, conv, tmp, prev,
			converters = {},
			// Work with a copy of dataTypes in case we need to modify it for conversion
			dataTypes = s.dataTypes.slice();

		// Create converters map with lowercased keys
		if ( dataTypes[ 1 ] ) {
			for ( conv in s.converters ) {
				converters[ conv.toLowerCase() ] = s.converters[ conv ];
			}
		}

		current = dataTypes.shift();

		// Convert to each sequential dataType
		while ( current ) {

			if ( s.responseFields[ current ] ) {
				jqXHR[ s.responseFields[ current ] ] = response;
			}

			// Apply the dataFilter if provided
			if ( !prev && isSuccess && s.dataFilter ) {
				response = s.dataFilter( response, s.dataType );
			}

			prev = current;
			current = dataTypes.shift();

			if ( current ) {

			// There's only work to do if current dataType is non-auto
				if ( current === "*" ) {

					current = prev;

				// Convert response if prev dataType is non-auto and differs from current
				} else if ( prev !== "*" && prev !== current ) {

					// Seek a direct converter
					conv = converters[ prev + " " + current ] || converters[ "* " + current ];

					// If none found, seek a pair
					if ( !conv ) {
						for ( conv2 in converters ) {

							// If conv2 outputs current
							tmp = conv2.split( " " );
							if ( tmp[ 1 ] === current ) {

								// If prev can be converted to accepted input
								conv = converters[ prev + " " + tmp[ 0 ] ] ||
									converters[ "* " + tmp[ 0 ] ];
								if ( conv ) {
									// Condense equivalence converters
									if ( conv === true ) {
										conv = converters[ conv2 ];

									// Otherwise, insert the intermediate dataType
									} else if ( converters[ conv2 ] !== true ) {
										current = tmp[ 0 ];
										dataTypes.unshift( tmp[ 1 ] );
									}
									break;
								}
							}
						}
					}

					// Apply converter (if not an equivalence)
					if ( conv !== true ) {

						// Unless errors are allowed to bubble, catch and return them
						if ( conv && s[ "throws" ] ) {
							response = conv( response );
						} else {
							try {
								response = conv( response );
							} catch ( e ) {
								return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
							}
						}
					}
				}
			}
		}

		return { state: "success", data: response };
	}

	jQuery.extend({

		// Counter for holding the number of active queries
		active: 0,

		// Last-Modified header cache for next request
		lastModified: {},
		etag: {},

		ajaxSettings: {
			url: ajaxLocation,
			type: "GET",
			isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
			global: true,
			processData: true,
			async: true,
			contentType: "application/x-www-form-urlencoded; charset=UTF-8",
			/*
			timeout: 0,
			data: null,
			dataType: null,
			username: null,
			password: null,
			cache: null,
			throws: false,
			traditional: false,
			headers: {},
			*/

			accepts: {
				"*": allTypes,
				text: "text/plain",
				html: "text/html",
				xml: "application/xml, text/xml",
				json: "application/json, text/javascript"
			},

			contents: {
				xml: /xml/,
				html: /html/,
				json: /json/
			},

			responseFields: {
				xml: "responseXML",
				text: "responseText",
				json: "responseJSON"
			},

			// Data converters
			// Keys separate source (or catchall "*") and destination types with a single space
			converters: {

				// Convert anything to text
				"* text": String,

				// Text to html (true = no transformation)
				"text html": true,

				// Evaluate text as a json expression
				"text json": jQuery.parseJSON,

				// Parse text as xml
				"text xml": jQuery.parseXML
			},

			// For options that shouldn't be deep extended:
			// you can add your own custom options here if
			// and when you create one that shouldn't be
			// deep extended (see ajaxExtend)
			flatOptions: {
				url: true,
				context: true
			}
		},

		// Creates a full fledged settings object into target
		// with both ajaxSettings and settings fields.
		// If target is omitted, writes into ajaxSettings.
		ajaxSetup: function( target, settings ) {
			return settings ?

				// Building a settings object
				ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

				// Extending ajaxSettings
				ajaxExtend( jQuery.ajaxSettings, target );
		},

		ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
		ajaxTransport: addToPrefiltersOrTransports( transports ),

		// Main method
		ajax: function( url, options ) {

			// If url is an object, simulate pre-1.5 signature
			if ( typeof url === "object" ) {
				options = url;
				url = undefined;
			}

			// Force options to be an object
			options = options || {};

			var transport,
				// URL without anti-cache param
				cacheURL,
				// Response headers
				responseHeadersString,
				responseHeaders,
				// timeout handle
				timeoutTimer,
				// Cross-domain detection vars
				parts,
				// To know if global events are to be dispatched
				fireGlobals,
				// Loop variable
				i,
				// Create the final options object
				s = jQuery.ajaxSetup( {}, options ),
				// Callbacks context
				callbackContext = s.context || s,
				// Context for global events is callbackContext if it is a DOM node or jQuery collection
				globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,
				// Deferreds
				deferred = jQuery.Deferred(),
				completeDeferred = jQuery.Callbacks("once memory"),
				// Status-dependent callbacks
				statusCode = s.statusCode || {},
				// Headers (they are sent all at once)
				requestHeaders = {},
				requestHeadersNames = {},
				// The jqXHR state
				state = 0,
				// Default abort message
				strAbort = "canceled",
				// Fake xhr
				jqXHR = {
					readyState: 0,

					// Builds headers hashtable if needed
					getResponseHeader: function( key ) {
						var match;
						if ( state === 2 ) {
							if ( !responseHeaders ) {
								responseHeaders = {};
								while ( (match = rheaders.exec( responseHeadersString )) ) {
									responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
								}
							}
							match = responseHeaders[ key.toLowerCase() ];
						}
						return match == null ? null : match;
					},

					// Raw string
					getAllResponseHeaders: function() {
						return state === 2 ? responseHeadersString : null;
					},

					// Caches the header
					setRequestHeader: function( name, value ) {
						var lname = name.toLowerCase();
						if ( !state ) {
							name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
							requestHeaders[ name ] = value;
						}
						return this;
					},

					// Overrides response content-type header
					overrideMimeType: function( type ) {
						if ( !state ) {
							s.mimeType = type;
						}
						return this;
					},

					// Status-dependent callbacks
					statusCode: function( map ) {
						var code;
						if ( map ) {
							if ( state < 2 ) {
								for ( code in map ) {
									// Lazy-add the new callback in a way that preserves old ones
									statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
								}
							} else {
								// Execute the appropriate callbacks
								jqXHR.always( map[ jqXHR.status ] );
							}
						}
						return this;
					},

					// Cancel the request
					abort: function( statusText ) {
						var finalText = statusText || strAbort;
						if ( transport ) {
							transport.abort( finalText );
						}
						done( 0, finalText );
						return this;
					}
				};

			// Attach deferreds
			deferred.promise( jqXHR ).complete = completeDeferred.add;
			jqXHR.success = jqXHR.done;
			jqXHR.error = jqXHR.fail;

			// Remove hash character (#7531: and string promotion)
			// Add protocol if not provided (prefilters might expect it)
			// Handle falsy url in the settings object (#10093: consistency with old signature)
			// We also use the url parameter if available
			s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" )
				.replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

			// Alias method option to type as per ticket #12004
			s.type = options.method || options.type || s.method || s.type;

			// Extract dataTypes list
			s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

			// A cross-domain request is in order when we have a protocol:host:port mismatch
			if ( s.crossDomain == null ) {
				parts = rurl.exec( s.url.toLowerCase() );
				s.crossDomain = !!( parts &&
					( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
						( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
							( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
				);
			}

			// Convert data if not already a string
			if ( s.data && s.processData && typeof s.data !== "string" ) {
				s.data = jQuery.param( s.data, s.traditional );
			}

			// Apply prefilters
			inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

			// If request was aborted inside a prefilter, stop there
			if ( state === 2 ) {
				return jqXHR;
			}

			// We can fire global events as of now if asked to
			// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
			fireGlobals = jQuery.event && s.global;

			// Watch for a new set of requests
			if ( fireGlobals && jQuery.active++ === 0 ) {
				jQuery.event.trigger("ajaxStart");
			}

			// Uppercase the type
			s.type = s.type.toUpperCase();

			// Determine if request has content
			s.hasContent = !rnoContent.test( s.type );

			// Save the URL in case we're toying with the If-Modified-Since
			// and/or If-None-Match header later on
			cacheURL = s.url;

			// More options handling for requests with no content
			if ( !s.hasContent ) {

				// If data is available, append data to url
				if ( s.data ) {
					cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
					// #9682: remove data so that it's not used in an eventual retry
					delete s.data;
				}

				// Add anti-cache in url if needed
				if ( s.cache === false ) {
					s.url = rts.test( cacheURL ) ?

						// If there is already a '_' parameter, set its value
						cacheURL.replace( rts, "$1_=" + nonce++ ) :

						// Otherwise add one to the end
						cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
				}
			}

			// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
			if ( s.ifModified ) {
				if ( jQuery.lastModified[ cacheURL ] ) {
					jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
				}
				if ( jQuery.etag[ cacheURL ] ) {
					jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
				}
			}

			// Set the correct header, if data is being sent
			if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
				jqXHR.setRequestHeader( "Content-Type", s.contentType );
			}

			// Set the Accepts header for the server, depending on the dataType
			jqXHR.setRequestHeader(
				"Accept",
				s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
					s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
					s.accepts[ "*" ]
			);

			// Check for headers option
			for ( i in s.headers ) {
				jqXHR.setRequestHeader( i, s.headers[ i ] );
			}

			// Allow custom headers/mimetypes and early abort
			if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
				// Abort if not done already and return
				return jqXHR.abort();
			}

			// Aborting is no longer a cancellation
			strAbort = "abort";

			// Install callbacks on deferreds
			for ( i in { success: 1, error: 1, complete: 1 } ) {
				jqXHR[ i ]( s[ i ] );
			}

			// Get transport
			transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

			// If no transport, we auto-abort
			if ( !transport ) {
				done( -1, "No Transport" );
			} else {
				jqXHR.readyState = 1;

				// Send global event
				if ( fireGlobals ) {
					globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
				}
				// Timeout
				if ( s.async && s.timeout > 0 ) {
					timeoutTimer = setTimeout(function() {
						jqXHR.abort("timeout");
					}, s.timeout );
				}

				try {
					state = 1;
					transport.send( requestHeaders, done );
				} catch ( e ) {
					// Propagate exception as error if not done
					if ( state < 2 ) {
						done( -1, e );
					// Simply rethrow otherwise
					} else {
						throw e;
					}
				}
			}

			// Callback for when everything is done
			function done( status, nativeStatusText, responses, headers ) {
				var isSuccess, success, error, response, modified,
					statusText = nativeStatusText;

				// Called once
				if ( state === 2 ) {
					return;
				}

				// State is "done" now
				state = 2;

				// Clear timeout if it exists
				if ( timeoutTimer ) {
					clearTimeout( timeoutTimer );
				}

				// Dereference transport for early garbage collection
				// (no matter how long the jqXHR object will be used)
				transport = undefined;

				// Cache response headers
				responseHeadersString = headers || "";

				// Set readyState
				jqXHR.readyState = status > 0 ? 4 : 0;

				// Determine if successful
				isSuccess = status >= 200 && status < 300 || status === 304;

				// Get response data
				if ( responses ) {
					response = ajaxHandleResponses( s, jqXHR, responses );
				}

				// Convert no matter what (that way responseXXX fields are always set)
				response = ajaxConvert( s, response, jqXHR, isSuccess );

				// If successful, handle type chaining
				if ( isSuccess ) {

					// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
					if ( s.ifModified ) {
						modified = jqXHR.getResponseHeader("Last-Modified");
						if ( modified ) {
							jQuery.lastModified[ cacheURL ] = modified;
						}
						modified = jqXHR.getResponseHeader("etag");
						if ( modified ) {
							jQuery.etag[ cacheURL ] = modified;
						}
					}

					// if no content
					if ( status === 204 || s.type === "HEAD" ) {
						statusText = "nocontent";

					// if not modified
					} else if ( status === 304 ) {
						statusText = "notmodified";

					// If we have data, let's convert it
					} else {
						statusText = response.state;
						success = response.data;
						error = response.error;
						isSuccess = !error;
					}
				} else {
					// Extract error from statusText and normalize for non-aborts
					error = statusText;
					if ( status || !statusText ) {
						statusText = "error";
						if ( status < 0 ) {
							status = 0;
						}
					}
				}

				// Set data for the fake xhr object
				jqXHR.status = status;
				jqXHR.statusText = ( nativeStatusText || statusText ) + "";

				// Success/Error
				if ( isSuccess ) {
					deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
				} else {
					deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
				}

				// Status-dependent callbacks
				jqXHR.statusCode( statusCode );
				statusCode = undefined;

				if ( fireGlobals ) {
					globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
						[ jqXHR, s, isSuccess ? success : error ] );
				}

				// Complete
				completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

				if ( fireGlobals ) {
					globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
					// Handle the global AJAX counter
					if ( !( --jQuery.active ) ) {
						jQuery.event.trigger("ajaxStop");
					}
				}
			}

			return jqXHR;
		},

		getJSON: function( url, data, callback ) {
			return jQuery.get( url, data, callback, "json" );
		},

		getScript: function( url, callback ) {
			return jQuery.get( url, undefined, callback, "script" );
		}
	});

	jQuery.each( [ "get", "post" ], function( i, method ) {
		jQuery[ method ] = function( url, data, callback, type ) {
			// Shift arguments if data argument was omitted
			if ( jQuery.isFunction( data ) ) {
				type = type || callback;
				callback = data;
				data = undefined;
			}

			return jQuery.ajax({
				url: url,
				type: method,
				dataType: type,
				data: data,
				success: callback
			});
		};
	});


	jQuery._evalUrl = function( url ) {
		return jQuery.ajax({
			url: url,
			type: "GET",
			dataType: "script",
			async: false,
			global: false,
			"throws": true
		});
	};


	jQuery.fn.extend({
		wrapAll: function( html ) {
			var wrap;

			if ( jQuery.isFunction( html ) ) {
				return this.each(function( i ) {
					jQuery( this ).wrapAll( html.call(this, i) );
				});
			}

			if ( this[ 0 ] ) {

				// The elements to wrap the target around
				wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

				if ( this[ 0 ].parentNode ) {
					wrap.insertBefore( this[ 0 ] );
				}

				wrap.map(function() {
					var elem = this;

					while ( elem.firstElementChild ) {
						elem = elem.firstElementChild;
					}

					return elem;
				}).append( this );
			}

			return this;
		},

		wrapInner: function( html ) {
			if ( jQuery.isFunction( html ) ) {
				return this.each(function( i ) {
					jQuery( this ).wrapInner( html.call(this, i) );
				});
			}

			return this.each(function() {
				var self = jQuery( this ),
					contents = self.contents();

				if ( contents.length ) {
					contents.wrapAll( html );

				} else {
					self.append( html );
				}
			});
		},

		wrap: function( html ) {
			var isFunction = jQuery.isFunction( html );

			return this.each(function( i ) {
				jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
			});
		},

		unwrap: function() {
			return this.parent().each(function() {
				if ( !jQuery.nodeName( this, "body" ) ) {
					jQuery( this ).replaceWith( this.childNodes );
				}
			}).end();
		}
	});


	jQuery.expr.filters.hidden = function( elem ) {
		// Support: Opera <= 12.12
		// Opera reports offsetWidths and offsetHeights less than zero on some elements
		return elem.offsetWidth <= 0 && elem.offsetHeight <= 0;
	};
	jQuery.expr.filters.visible = function( elem ) {
		return !jQuery.expr.filters.hidden( elem );
	};




	var r20 = /%20/g,
		rbracket = /\[\]$/,
		rCRLF = /\r?\n/g,
		rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
		rsubmittable = /^(?:input|select|textarea|keygen)/i;

	function buildParams( prefix, obj, traditional, add ) {
		var name;

		if ( jQuery.isArray( obj ) ) {
			// Serialize array item.
			jQuery.each( obj, function( i, v ) {
				if ( traditional || rbracket.test( prefix ) ) {
					// Treat each array item as a scalar.
					add( prefix, v );

				} else {
					// Item is non-scalar (array or object), encode its numeric index.
					buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
				}
			});

		} else if ( !traditional && jQuery.type( obj ) === "object" ) {
			// Serialize object item.
			for ( name in obj ) {
				buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
			}

		} else {
			// Serialize scalar item.
			add( prefix, obj );
		}
	}

	// Serialize an array of form elements or a set of
	// key/values into a query string
	jQuery.param = function( a, traditional ) {
		var prefix,
			s = [],
			add = function( key, value ) {
				// If value is a function, invoke it and return its value
				value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
				s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
			};

		// Set traditional to true for jQuery <= 1.3.2 behavior.
		if ( traditional === undefined ) {
			traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
		}

		// If an array was passed in, assume that it is an array of form elements.
		if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
			// Serialize the form elements
			jQuery.each( a, function() {
				add( this.name, this.value );
			});

		} else {
			// If traditional, encode the "old" way (the way 1.3.2 or older
			// did it), otherwise encode params recursively.
			for ( prefix in a ) {
				buildParams( prefix, a[ prefix ], traditional, add );
			}
		}

		// Return the resulting serialization
		return s.join( "&" ).replace( r20, "+" );
	};

	jQuery.fn.extend({
		serialize: function() {
			return jQuery.param( this.serializeArray() );
		},
		serializeArray: function() {
			return this.map(function() {
				// Can add propHook for "elements" to filter or add form elements
				var elements = jQuery.prop( this, "elements" );
				return elements ? jQuery.makeArray( elements ) : this;
			})
			.filter(function() {
				var type = this.type;

				// Use .is( ":disabled" ) so that fieldset[disabled] works
				return this.name && !jQuery( this ).is( ":disabled" ) &&
					rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
					( this.checked || !rcheckableType.test( type ) );
			})
			.map(function( i, elem ) {
				var val = jQuery( this ).val();

				return val == null ?
					null :
					jQuery.isArray( val ) ?
						jQuery.map( val, function( val ) {
							return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
						}) :
						{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
			}).get();
		}
	});


	jQuery.ajaxSettings.xhr = function() {
		try {
			return new XMLHttpRequest();
		} catch( e ) {}
	};

	var xhrId = 0,
		xhrCallbacks = {},
		xhrSuccessStatus = {
			// file protocol always yields status code 0, assume 200
			0: 200,
			// Support: IE9
			// #1450: sometimes IE returns 1223 when it should be 204
			1223: 204
		},
		xhrSupported = jQuery.ajaxSettings.xhr();

	// Support: IE9
	// Open requests must be manually aborted on unload (#5280)
	// See https://support.microsoft.com/kb/2856746 for more info
	if ( window.attachEvent ) {
		window.attachEvent( "onunload", function() {
			for ( var key in xhrCallbacks ) {
				xhrCallbacks[ key ]();
			}
		});
	}

	support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
	support.ajax = xhrSupported = !!xhrSupported;

	jQuery.ajaxTransport(function( options ) {
		var callback;

		// Cross domain only allowed if supported through XMLHttpRequest
		if ( support.cors || xhrSupported && !options.crossDomain ) {
			return {
				send: function( headers, complete ) {
					var i,
						xhr = options.xhr(),
						id = ++xhrId;

					xhr.open( options.type, options.url, options.async, options.username, options.password );

					// Apply custom fields if provided
					if ( options.xhrFields ) {
						for ( i in options.xhrFields ) {
							xhr[ i ] = options.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( options.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( options.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !options.crossDomain && !headers["X-Requested-With"] ) {
						headers["X-Requested-With"] = "XMLHttpRequest";
					}

					// Set headers
					for ( i in headers ) {
						xhr.setRequestHeader( i, headers[ i ] );
					}

					// Callback
					callback = function( type ) {
						return function() {
							if ( callback ) {
								delete xhrCallbacks[ id ];
								callback = xhr.onload = xhr.onerror = null;

								if ( type === "abort" ) {
									xhr.abort();
								} else if ( type === "error" ) {
									complete(
										// file: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								} else {
									complete(
										xhrSuccessStatus[ xhr.status ] || xhr.status,
										xhr.statusText,
										// Support: IE9
										// Accessing binary-data responseText throws an exception
										// (#11426)
										typeof xhr.responseText === "string" ? {
											text: xhr.responseText
										} : undefined,
										xhr.getAllResponseHeaders()
									);
								}
							}
						};
					};

					// Listen to events
					xhr.onload = callback();
					xhr.onerror = callback("error");

					// Create the abort callback
					callback = xhrCallbacks[ id ] = callback("abort");

					try {
						// Do send the request (this may raise an exception)
						xhr.send( options.hasContent && options.data || null );
					} catch ( e ) {
						// #14683: Only rethrow if this hasn't been notified as an error yet
						if ( callback ) {
							throw e;
						}
					}
				},

				abort: function() {
					if ( callback ) {
						callback();
					}
				}
			};
		}
	});




	// Install script dataType
	jQuery.ajaxSetup({
		accepts: {
			script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
		},
		contents: {
			script: /(?:java|ecma)script/
		},
		converters: {
			"text script": function( text ) {
				jQuery.globalEval( text );
				return text;
			}
		}
	});

	// Handle cache's special case and crossDomain
	jQuery.ajaxPrefilter( "script", function( s ) {
		if ( s.cache === undefined ) {
			s.cache = false;
		}
		if ( s.crossDomain ) {
			s.type = "GET";
		}
	});

	// Bind script tag hack transport
	jQuery.ajaxTransport( "script", function( s ) {
		// This transport only deals with cross domain requests
		if ( s.crossDomain ) {
			var script, callback;
			return {
				send: function( _, complete ) {
					script = jQuery("<script>").prop({
						async: true,
						charset: s.scriptCharset,
						src: s.url
					}).on(
						"load error",
						callback = function( evt ) {
							script.remove();
							callback = null;
							if ( evt ) {
								complete( evt.type === "error" ? 404 : 200, evt.type );
							}
						}
					);
					document.head.appendChild( script[ 0 ] );
				},
				abort: function() {
					if ( callback ) {
						callback();
					}
				}
			};
		}
	});




	var oldCallbacks = [],
		rjsonp = /(=)\?(?=&|$)|\?\?/;

	// Default jsonp settings
	jQuery.ajaxSetup({
		jsonp: "callback",
		jsonpCallback: function() {
			var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
			this[ callback ] = true;
			return callback;
		}
	});

	// Detect, normalize options and install callbacks for jsonp requests
	jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

		var callbackName, overwritten, responseContainer,
			jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
				"url" :
				typeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) && "data"
			);

		// Handle iff the expected data type is "jsonp" or we have a parameter to set
		if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

			// Get callback name, remembering preexisting value associated with it
			callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
				s.jsonpCallback() :
				s.jsonpCallback;

			// Insert callback into url or form data
			if ( jsonProp ) {
				s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
			} else if ( s.jsonp !== false ) {
				s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
			}

			// Use data converter to retrieve json after script execution
			s.converters["script json"] = function() {
				if ( !responseContainer ) {
					jQuery.error( callbackName + " was not called" );
				}
				return responseContainer[ 0 ];
			};

			// force json dataType
			s.dataTypes[ 0 ] = "json";

			// Install callback
			overwritten = window[ callbackName ];
			window[ callbackName ] = function() {
				responseContainer = arguments;
			};

			// Clean-up function (fires after converters)
			jqXHR.always(function() {
				// Restore preexisting value
				window[ callbackName ] = overwritten;

				// Save back as free
				if ( s[ callbackName ] ) {
					// make sure that re-using the options doesn't screw things around
					s.jsonpCallback = originalSettings.jsonpCallback;

					// save the callback name for future use
					oldCallbacks.push( callbackName );
				}

				// Call if it was a function and we have a response
				if ( responseContainer && jQuery.isFunction( overwritten ) ) {
					overwritten( responseContainer[ 0 ] );
				}

				responseContainer = overwritten = undefined;
			});

			// Delegate to script
			return "script";
		}
	});




	// data: string of html
	// context (optional): If specified, the fragment will be created in this context, defaults to document
	// keepScripts (optional): If true, will include scripts passed in the html string
	jQuery.parseHTML = function( data, context, keepScripts ) {
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		if ( typeof context === "boolean" ) {
			keepScripts = context;
			context = false;
		}
		context = context || document;

		var parsed = rsingleTag.exec( data ),
			scripts = !keepScripts && [];

		// Single tag
		if ( parsed ) {
			return [ context.createElement( parsed[1] ) ];
		}

		parsed = jQuery.buildFragment( [ data ], context, scripts );

		if ( scripts && scripts.length ) {
			jQuery( scripts ).remove();
		}

		return jQuery.merge( [], parsed.childNodes );
	};


	// Keep a copy of the old load method
	var _load = jQuery.fn.load;

	/**
	 * Load a url into a page
	 */
	jQuery.fn.load = function( url, params, callback ) {
		if ( typeof url !== "string" && _load ) {
			return _load.apply( this, arguments );
		}

		var selector, type, response,
			self = this,
			off = url.indexOf(" ");

		if ( off >= 0 ) {
			selector = jQuery.trim( url.slice( off ) );
			url = url.slice( 0, off );
		}

		// If it's a function
		if ( jQuery.isFunction( params ) ) {

			// We assume that it's the callback
			callback = params;
			params = undefined;

		// Otherwise, build a param string
		} else if ( params && typeof params === "object" ) {
			type = "POST";
		}

		// If we have elements to modify, make the request
		if ( self.length > 0 ) {
			jQuery.ajax({
				url: url,

				// if "type" variable is undefined, then "GET" method will be used
				type: type,
				dataType: "html",
				data: params
			}).done(function( responseText ) {

				// Save response for use in complete callback
				response = arguments;

				self.html( selector ?

					// If a selector was specified, locate the right elements in a dummy div
					// Exclude scripts to avoid IE 'Permission Denied' errors
					jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( selector ) :

					// Otherwise use the full result
					responseText );

			}).complete( callback && function( jqXHR, status ) {
				self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
			});
		}

		return this;
	};




	// Attach a bunch of functions for handling common AJAX events
	jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ) {
		jQuery.fn[ type ] = function( fn ) {
			return this.on( type, fn );
		};
	});




	jQuery.expr.filters.animated = function( elem ) {
		return jQuery.grep(jQuery.timers, function( fn ) {
			return elem === fn.elem;
		}).length;
	};




	var docElem = window.document.documentElement;

	/**
	 * Gets a window from an element
	 */
	function getWindow( elem ) {
		return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
	}

	jQuery.offset = {
		setOffset: function( elem, options, i ) {
			var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
				position = jQuery.css( elem, "position" ),
				curElem = jQuery( elem ),
				props = {};

			// Set position first, in-case top/left are set even on static elem
			if ( position === "static" ) {
				elem.style.position = "relative";
			}

			curOffset = curElem.offset();
			curCSSTop = jQuery.css( elem, "top" );
			curCSSLeft = jQuery.css( elem, "left" );
			calculatePosition = ( position === "absolute" || position === "fixed" ) &&
				( curCSSTop + curCSSLeft ).indexOf("auto") > -1;

			// Need to be able to calculate position if either
			// top or left is auto and position is either absolute or fixed
			if ( calculatePosition ) {
				curPosition = curElem.position();
				curTop = curPosition.top;
				curLeft = curPosition.left;

			} else {
				curTop = parseFloat( curCSSTop ) || 0;
				curLeft = parseFloat( curCSSLeft ) || 0;
			}

			if ( jQuery.isFunction( options ) ) {
				options = options.call( elem, i, curOffset );
			}

			if ( options.top != null ) {
				props.top = ( options.top - curOffset.top ) + curTop;
			}
			if ( options.left != null ) {
				props.left = ( options.left - curOffset.left ) + curLeft;
			}

			if ( "using" in options ) {
				options.using.call( elem, props );

			} else {
				curElem.css( props );
			}
		}
	};

	jQuery.fn.extend({
		offset: function( options ) {
			if ( arguments.length ) {
				return options === undefined ?
					this :
					this.each(function( i ) {
						jQuery.offset.setOffset( this, options, i );
					});
			}

			var docElem, win,
				elem = this[ 0 ],
				box = { top: 0, left: 0 },
				doc = elem && elem.ownerDocument;

			if ( !doc ) {
				return;
			}

			docElem = doc.documentElement;

			// Make sure it's not a disconnected DOM node
			if ( !jQuery.contains( docElem, elem ) ) {
				return box;
			}

			// Support: BlackBerry 5, iOS 3 (original iPhone)
			// If we don't have gBCR, just use 0,0 rather than error
			if ( typeof elem.getBoundingClientRect !== strundefined ) {
				box = elem.getBoundingClientRect();
			}
			win = getWindow( doc );
			return {
				top: box.top + win.pageYOffset - docElem.clientTop,
				left: box.left + win.pageXOffset - docElem.clientLeft
			};
		},

		position: function() {
			if ( !this[ 0 ] ) {
				return;
			}

			var offsetParent, offset,
				elem = this[ 0 ],
				parentOffset = { top: 0, left: 0 };

			// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent
			if ( jQuery.css( elem, "position" ) === "fixed" ) {
				// Assume getBoundingClientRect is there when computed position is fixed
				offset = elem.getBoundingClientRect();

			} else {
				// Get *real* offsetParent
				offsetParent = this.offsetParent();

				// Get correct offsets
				offset = this.offset();
				if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
					parentOffset = offsetParent.offset();
				}

				// Add offsetParent borders
				parentOffset.top += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
			}

			// Subtract parent offsets and element margins
			return {
				top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
				left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
			};
		},

		offsetParent: function() {
			return this.map(function() {
				var offsetParent = this.offsetParent || docElem;

				while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && jQuery.css( offsetParent, "position" ) === "static" ) ) {
					offsetParent = offsetParent.offsetParent;
				}

				return offsetParent || docElem;
			});
		}
	});

	// Create scrollLeft and scrollTop methods
	jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
		var top = "pageYOffset" === prop;

		jQuery.fn[ method ] = function( val ) {
			return access( this, function( elem, method, val ) {
				var win = getWindow( elem );

				if ( val === undefined ) {
					return win ? win[ prop ] : elem[ method ];
				}

				if ( win ) {
					win.scrollTo(
						!top ? val : window.pageXOffset,
						top ? val : window.pageYOffset
					);

				} else {
					elem[ method ] = val;
				}
			}, method, val, arguments.length, null );
		};
	});

	// Support: Safari<7+, Chrome<37+
	// Add the top/left cssHooks using jQuery.fn.position
	// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
	// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280
	// getComputedStyle returns percent when specified for top/left/bottom/right;
	// rather than make the css module depend on the offset module, just check for it here
	jQuery.each( [ "top", "left" ], function( i, prop ) {
		jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
			function( elem, computed ) {
				if ( computed ) {
					computed = curCSS( elem, prop );
					// If curCSS returns percentage, fallback to offset
					return rnumnonpx.test( computed ) ?
						jQuery( elem ).position()[ prop ] + "px" :
						computed;
				}
			}
		);
	});


	// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
	jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
		jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
			// Margin is only for outerHeight, outerWidth
			jQuery.fn[ funcName ] = function( margin, value ) {
				var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
					extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

				return access( this, function( elem, type, value ) {
					var doc;

					if ( jQuery.isWindow( elem ) ) {
						// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
						// isn't a whole lot we can do. See pull request at this URL for discussion:
						// https://github.com/jquery/jquery/pull/764
						return elem.document.documentElement[ "client" + name ];
					}

					// Get document width or height
					if ( elem.nodeType === 9 ) {
						doc = elem.documentElement;

						// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
						// whichever is greatest
						return Math.max(
							elem.body[ "scroll" + name ], doc[ "scroll" + name ],
							elem.body[ "offset" + name ], doc[ "offset" + name ],
							doc[ "client" + name ]
						);
					}

					return value === undefined ?
						// Get width or height on the element, requesting but not forcing parseFloat
						jQuery.css( elem, type, extra ) :

						// Set width or height on the element
						jQuery.style( elem, type, value, extra );
				}, type, chainable ? margin : undefined, chainable, null );
			};
		});
	});


	// The number of elements contained in the matched element set
	jQuery.fn.size = function() {
		return this.length;
	};

	jQuery.fn.andSelf = jQuery.fn.addBack;




	// Register as a named AMD module, since jQuery can be concatenated with other
	// files that may use define, but not via a proper concatenation script that
	// understands anonymous AMD modules. A named AMD is safest and most robust
	// way to register. Lowercase jquery is used because AMD module names are
	// derived from file names, and jQuery is normally delivered in a lowercase
	// file name. Do this after creating the global so that if an AMD module wants
	// to call noConflict to hide this version of jQuery, it will work.

	// Note that for maximum portability, libraries that are not jQuery should
	// declare themselves as anonymous modules, and avoid setting a global if an
	// AMD loader is present. jQuery is a special case. For more information, see
	// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

	if ( true ) {
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
			return jQuery;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	}




	var
		// Map over jQuery in case of overwrite
		_jQuery = window.jQuery,

		// Map over the $ in case of overwrite
		_$ = window.$;

	jQuery.noConflict = function( deep ) {
		if ( window.$ === jQuery ) {
			window.$ = _$;
		}

		if ( deep && window.jQuery === jQuery ) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	};

	// Expose jQuery and $ identifiers, even in AMD
	// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
	// and CommonJS for browser emulators (#13566)
	if ( typeof noGlobal === strundefined ) {
		window.jQuery = window.$ = jQuery;
	}




	return jQuery;

	}));


/***/ }
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhhbXBsZXMvb3RoZXJzL21hcC1idWJibGUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXhhbXBsZXMvb3RoZXJzL21hcC1idWJibGUubWQiLCJ3ZWJwYWNrOi8vLz9kNDFkKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiIsIndlYnBhY2s6Ly8vLi9+Ly5ucG1pbnN0YWxsL2cyLzIuMC4wL2cyL2luZGV4LmpzPzZiMWMqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqIiwid2VicGFjazovLy8uL34vLm5wbWluc3RhbGwvanF1ZXJ5LzIuMS40L2pxdWVyeS9kaXN0L2pxdWVyeS5qcz9lNGU2KioqKioqKiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgRzIgPSByZXF1aXJlKCdnMicpO1xudmFyIFN0YXQgPSBHMi5TdGF0O1xudmFyIEZyYW1lID0gRzIuRnJhbWU7XG52YXIgJCA9IHJlcXVpcmUoJ2pxdWVyeScpO1xuXG4kLmdldEpTT04oJy4vZGF0YS9VU0EuZ2VvLmpzb24/bm93cmFwJywgZnVuY3Rpb24obWFwRGF0YSkge1xuXG4gIHZhciBtYXAgPSBbXTtcbiAgdmFyIGZlYXR1cmVzID0gbWFwRGF0YS5mZWF0dXJlcztcbiAgLy8g6I635Y+W5Ye65omA5pyJ55qE5Zyw5Zu+5Yy65Z+f5ZCN56ewXG4gIGZvcih2YXIgaT0wOyBpPGZlYXR1cmVzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIG5hbWUgPSBmZWF0dXJlc1tpXS5wcm9wZXJ0aWVzLm5hbWU7XG4gICAgbWFwLnB1c2goe1xuICAgICAgXCJuYW1lXCI6IG5hbWVcbiAgICB9KTtcbiAgfVxuXG4gIHZhciBjaGFydCA9IG5ldyBHMi5DaGFydCh7XG4gICAgaWQ6ICdjMScsXG4gICAgd2lkdGg6IDEwMDAsXG4gICAgaGVpZ2h0OiA1MDAsXG4gICAgYW5pbWF0ZTogZmFsc2VcbiAgfSk7XG4gIHZhciBkZWZzID0ge1xuICAgICcuLmxvbmcnOiB7XG4gICAgICBtYXg6IC02NixcbiAgICAgIG1pbjotMTI1XG4gICAgfSxcbiAgICAnLi5sYW50Jzoge1xuICAgICAgbWF4OiA1MCxcbiAgICAgIG1pbjoyNFxuICAgIH0sXG4gICAgJy4ueCc6IHtcbiAgICAgIG1heDogLTY2LFxuICAgICAgbWluOi0xMjVcbiAgICB9LFxuICAgICcuLnknOiB7XG4gICAgICBtYXg6IDUwLFxuICAgICAgbWluOjI0XG4gICAgfVxuICB9O1xuICBjaGFydC5zb3VyY2UobWFwLCBkZWZzKTtcbiAgY2hhcnQudG9vbHRpcCh7XG4gICAgdGl0bGU6IG51bGxcbiAgfSk7XG4gIHZhciBiYWNrVmlldyA9IGNoYXJ0LmNyZWF0ZVZpZXcoKTtcbiAgYmFja1ZpZXcuc291cmNlKG1hcCk7XG4gIGJhY2tWaWV3LnRvb2x0aXAoZmFsc2UpOyAvLyDog4zmma/kuI3mmL7npLp0b29sdGlwXG4gIGJhY2tWaWV3LnBvbHlnb24oKS5wb3NpdGlvbihTdGF0Lm1hcC5yZWdpb24oJ25hbWUnLCBtYXBEYXRhKSkuc3R5bGUoe1xuICAgIGZpbGw6ICdyZ2IoMjA0LDIwNCwyMDQpJyxcbiAgICBzdHJva2U6ICcjZmZmJyxcbiAgICAnc3Ryb2tlLXdpZHRoJzogMVxuICB9KTtcbiAvLyBiYWNrVmlldy5yZW5kZXIoKTtcbiAgJC5nZXRKU09OKCcuL2RhdGEvZmxpZ2h0cy1haXJwb3J0Lmpzb24nLCBmdW5jdGlvbihmbGlnaHRzKSB7XG4gICAgdmFyIGxpbmtzQnlPcmlnaW4gPSB7fSxcbiAgICAgIGNvdW50QnlBaXJwb3J0ID0ge30sXG4gICAgICBsb2NhdGlvbkJ5QWlycG9ydCA9IHt9LFxuICAgICAgc3ViRmxpZ2h0cyA9IFtdO1xuXG4gICAgLy8g6K6h566X6aOe5py655qE6LW36aOe44CB6ZmN6JC95pWwXG4gICAgZmxpZ2h0cy5mb3JFYWNoKGZ1bmN0aW9uKGZsaWdodCkge1xuICAgICAgdmFyIG9yaWdpbiA9IGZsaWdodC5vcmlnaW4sXG4gICAgICAgICAgZGVzdGluYXRpb24gPSBmbGlnaHQuZGVzdGluYXRpb247XG5cbiAgICAgIGNvdW50QnlBaXJwb3J0W29yaWdpbl0gPSAoY291bnRCeUFpcnBvcnRbb3JpZ2luXSB8fCAwKSArIDE7XG4gICAgICBjb3VudEJ5QWlycG9ydFtkZXN0aW5hdGlvbl0gPSAoY291bnRCeUFpcnBvcnRbZGVzdGluYXRpb25dIHx8IDApICsgMTtcbiAgICB9KTtcblxuICAgICQuZ2V0SlNPTignLi9kYXRhL2FpcnBvcnQuanNvbicsIGZ1bmN0aW9uKGFpcnBvcnRzKSB7XG5cbiAgICAgIC8vIE9ubHkgY29uc2lkZXIgYWlycG9ydHMgd2l0aCBhdCBsZWFzdCBvbmUgZmxpZ2h0LlxuICAgICAgYWlycG9ydHMgPSBhaXJwb3J0cy5maWx0ZXIoZnVuY3Rpb24oYWlycG9ydCkge1xuICAgICAgICBpZiAoY291bnRCeUFpcnBvcnRbYWlycG9ydC5pYXRhXSkge1xuICAgICAgICAgIGFpcnBvcnQuY291bnQgPSBjb3VudEJ5QWlycG9ydFthaXJwb3J0LmlhdGFdOyAvLyDliqDlhaXnj63mrKHmlbDph49cbiAgICAgICAgICBhaXJwb3J0LnggPSBhaXJwb3J0LmxvbmdpdHVkZTtcbiAgICAgICAgICBhaXJwb3J0LnkgPSBhaXJwb3J0LmxhdGl0dWRlO1xuICAgICAgICAgIGFpcnBvcnQuaWQgPSBhaXJwb3J0LmlhdGE7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICB2YXIgYWlyVmlldyA9IGNoYXJ0LmNyZWF0ZVZpZXcoKTtcbiAgICAgIGFpclZpZXcuc291cmNlKGFpcnBvcnRzLCBkZWZzKTtcbiAgICAgIGFpclZpZXcucG9pbnQoKS5wb3NpdGlvbihTdGF0Lm1hcC5sb2NhdGlvbignbG9uZ2l0dWRlKmxhdGl0dWRlJykpXG4gICAgICAgICAgICAgLmNvbG9yKCdyZ2IoOTcsMTQ1LDE4NSknKVxuICAgICAgICAgICAgIC5zaGFwZSgnY2lyY2xlJylcbiAgICAgICAgICAgICAuc3R5bGUoe1xuICAgICAgICAgICAgICAgc3Ryb2tlOiAnI2VlZScsXG4gICAgICAgICAgICAgICBsaW5lV2lkdGg6IDFcbiAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgIC5zaXplKCdjb3VudCcsIDE1LCAzKVxuICAgICAgICAgICAgIC50b29sdGlwKCdpYXRhKmNvdW50Jyk7XG5cbiAgICAgIHZhciBmbGlnaHRWaWV3ID0gY2hhcnQuY3JlYXRlVmlldygpOyAvLyDpo57ooYzot6/nur9cbiAgICAgIGZsaWdodFZpZXcudG9vbHRpcChmYWxzZSk7XG4gICAgICBmbGlnaHRWaWV3LnNvdXJjZShzdWJGbGlnaHRzLGRlZnMpO1xuICAgICAgZmxpZ2h0Vmlldy5lZGdlKCkucG9zaXRpb24oU3RhdC5saW5rKCdvcmlnaW4qZGVzdGluYXRpb24nLCBhaXJwb3J0cykpO1xuICAgICAgY2hhcnQucmVuZGVyKCk7XG4gICAgICB2YXIgcHJlU2hhcGU7XG5cbiAgICAgIGZ1bmN0aW9uIGdldEZsaWdodHMoaWF0YSkge1xuICAgICAgICB2YXIgcnN0ID0gW107XG4gICAgICAgIGZsaWdodHMuZm9yRWFjaChmdW5jdGlvbihmbGlnaHQpIHtcbiAgICAgICAgICBpZiAoZmxpZ2h0Lm9yaWdpbiA9PSBpYXRhIHx8IGZsaWdodC5kZXN0aW5hdGlvbiA9PSBpYXRhKSB7XG4gICAgICAgICAgICByc3QucHVzaChmbGlnaHQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByc3Q7XG4gICAgICB9XG4gICAgICB2YXIgcHJlSWQ7XG4gICAgICBjaGFydC5vbigncGxvdG1vdmUnLCBmdW5jdGlvbihldil7XG4gICAgICAgIHZhciByZWNvcmRzID0gYWlyVmlldy5nZXRTbmFwUmVjb3Jkcyh7XG4gICAgICAgICAgeDogZXYueCxcbiAgICAgICAgICB5OiBldi55XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAocmVjb3Jkcy5sZW5ndGgpIHtcbiAgICAgICAgICB2YXIgb2JqID0gcmVjb3Jkc1swXS5fb3JpZ2luO1xuICAgICAgICAgIHZhciBpYXRhID0gb2JqLmlhdGE7XG4gICAgICAgICAgaWYgKHByZUlkICE9PSBpYXRhKSB7XG4gICAgICAgICAgICBzdWJGbGlnaHRzID0gZ2V0RmxpZ2h0cyhpYXRhKTtcbiAgICAgICAgICAgIGZsaWdodFZpZXcuY2hhbmdlRGF0YShzdWJGbGlnaHRzKTtcbiAgICAgICAgICAgIHByZUlkID0gaWF0YTtcbiAgICAgICAgICB9ICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgY2hhcnQub24oJ3Bsb3RsZWF2ZScsIGZ1bmN0aW9uKGV2KXtcbiAgICAgICAgaWYgKHN1YkZsaWdodHMubGVuZ3RoKSB7XG4gICAgICAgICAgc3ViRmxpZ2h0cyA9IFtdO1xuICAgICAgICAgIGZsaWdodFZpZXcuY2hhbmdlRGF0YShbXSk7XG4gICAgICAgIH1cblxuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgfSk7XG5cbn0pO1xuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIGV4YW1wbGVzL290aGVycy9tYXAtYnViYmxlLm1kXG4gKiovIiwidW5kZWZpbmVkXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogXG4gKiovIiwiIWZ1bmN0aW9uKHQsZSl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9ZSgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoXCJHMlwiLFtdLGUpOlwib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzP2V4cG9ydHMuRzI9ZSgpOnQuRzI9ZSgpfSh0aGlzLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUocil7aWYobltyXSlyZXR1cm4gbltyXS5leHBvcnRzO3ZhciBpPW5bcl09e2V4cG9ydHM6e30saWQ6cixsb2FkZWQ6ITF9O3JldHVybiB0W3JdLmNhbGwoaS5leHBvcnRzLGksaS5leHBvcnRzLGUpLGkubG9hZGVkPSEwLGkuZXhwb3J0c312YXIgbj17fTtyZXR1cm4gZS5tPXQsZS5jPW4sZS5wPVwiXCIsZSgwKX0oZnVuY3Rpb24odCl7Zm9yKHZhciBlIGluIHQpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpc3dpdGNoKHR5cGVvZiB0W2VdKXtjYXNlXCJmdW5jdGlvblwiOmJyZWFrO2Nhc2VcIm9iamVjdFwiOnRbZV09ZnVuY3Rpb24oZSl7dmFyIG49ZS5zbGljZSgxKSxyPXRbZVswXV07cmV0dXJuIGZ1bmN0aW9uKHQsZSxpKXtyLmFwcGx5KHRoaXMsW3QsZSxpXS5jb25jYXQobikpfX0odFtlXSk7YnJlYWs7ZGVmYXVsdDp0W2VdPXRbdFtlXV19cmV0dXJuIHR9KFtmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9e307ci5DaGFydD1uKDMwMCksci5VdGlsPW4oMSksci5HbG9iYWw9big1KSxyLlN0YXQ9bigxOCksci5TdGF0Lm1hcD1uKDE5MSksci5TdGF0LnRyZWU9bigyMTcpLHIuU3RhdC50cmVlbWFwPW4oMjIwKSxuKDIxNSksci5TY2FsZT1uKDc5KSxyLlNoYXBlPW4oOTgpLHIuRnJhbWU9bigyKSxyLlRoZW1lPW4oNDYpLHIuQ2FudmFzPW4oMTEpLHIuQ29vcmQ9big3MSksci5CYXNlPW4oMjcpLHIuQ29sb3JDYWxjdWxhdGU9big2MCksci5MYXlvdXQ9bigxODQpLHIuUGx1Z2luPXt9LHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigyNjMpO3QuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigzMSk7big3NiksbigxNjcpLG4oMTY2KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe3ZhciByPXtNYXRyaXgzOm4oMTk3KSxWZWN0b3IyOm4oMTk4KSxWZWN0b3IzOm4oMTk5KX07dC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDE5Nik7dC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3Q9dHx8MCx0PTEwMCp0O3ZhciBlPTI7cmV0dXJuIHQ+MCYmdDwuMDEmJihlPSgxL3QrXCJcIikuaW5kZXhPZihcIi5cIikrMSksdC50b0ZpeGVkKGUpK1wiJVwifWZ1bmN0aW9uIGkodCl7Zm9yKHZhciBlIGluIGMpYy5oYXNPd25Qcm9wZXJ0eShlKSYmZGVsZXRlIGNbZV07dmFyIG47bj1zLmlzT2JqZWN0KHQpP3Q6cy5pbmRleE9mKHUsdCkhPT0tMT9vW3RdOm9bXCJkZWZhdWx0XCJdLHMubWl4KCEwLGMsYSxuKSxjLnNldFRoZW1lPWl9dmFyIGEscz1uKDEpLG89bigzMjUpLHU9W1wiZGVmYXVsdFwiLFwiZGFya1wiLFwiY2hlZXJ5XCJdLGM9e307YT17YW5pbWF0ZTohMCxwZXJjZW50Rm9ybWF0OnIsd2lkdGhSYXRpbzp7Y29sdW1uOi41LHJvc2U6Ljk5OTk5OTksbXVsdGlwbGVQaWU6MS8xLjN9LHNjYWxlczp7XCIuLnhcIjp7dHlwZTpcImxpbmVhclwiLG1pbjowLG1heDoxLG5pY2U6ITF9LFwiLi55XCI6e3R5cGU6XCJsaW5lYXJcIixtaW46MCxtYXg6MSxuaWNlOiExfSxcIi4ubGV2ZWxcIjp7dHlwZTpcImxpbmVhclwiLG1pbjowLG5pY2U6ITF9LFwiLi52YWx1ZVwiOnt0eXBlOlwibGluZWFyXCIsbWluOjB9LFwiLi5jb3VudFwiOnt0eXBlOlwibGluZWFyXCIsbWluOjAsYWxpYXM6XCJjb3VudFwifSxcIi4ucGVyY2VudFwiOnt0eXBlOlwibGluZWFyXCIsbWluOjAsbWF4OjEsYWxpYXM6XCJwZXJjZW50XCIsZm9ybWF0dGVyOnJ9LFwiLi5wcm9wb3J0aW9uXCI6e3R5cGU6XCJsaW5lYXJcIixtaW46MCxtYXg6MSxhbGlhczpcInByb3BvcnRpb25cIixmb3JtYXR0ZXI6cn0sXCIuLmRlbnNpdHlcIjp7dHlwZTpcImxpbmVhclwiLG1pbjowLGFsaWFzOlwiZGVuc2l0eVwifSxcIi4ubG9uZ1wiOnt0eXBlOlwibGluZWFyXCIsYWxpYXM6XCJsb25naXR1ZGVcIixuaWNlOiExfSxcIi4ubGFudFwiOnt0eXBlOlwibGluZWFyXCIsYWxpYXM6XCJsYXRpdHVkZVwiLG5pY2U6ITF9LFwiLi5waWVYXCI6e3R5cGU6XCJjYXRcIix2YWx1ZXM6W1wiLi5waWVYXCJdLHRpY2tzOltcIi4ucGllWFwiXX19LGNvbm5lY3ROdWxsczohMSxoZWF0bWFwQ29sb3JzOlwicmdiKDEyNSwxMjUsMjQ4KS1yZ2IoMCwwLDI1NSktcmdiKDAsMjU1LDApLXllbGxvdy1yZ2IoMjU1LDAsMClcIixoZWF0bWFwOntyYWRpdXM6NTB9fSxpKFwiZGVmYXVsdFwiKSx0LmV4cG9ydHM9Y30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSk7dC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDg5KSxpPW4oNTgpLGE9big1Nykscz1uKDU2KSxvPW4oMyk7bigxKSxvLlZlY3RvcjI7dC5leHBvcnRzPXtsaW5lOmZ1bmN0aW9uKHQsZSxuLGksYSxzLG8pe3ZhciB1PXIuYm94KHQsZSxuLGksYSk7aWYoIXRoaXMuYm94KHUubWluWCx1Lm1heFgsdS5taW5ZLHUubWF4WSxzLG8pKXJldHVybiExO3ZhciBjPXIucG9pbnREaXN0YW5jZSh0LGUsbixpLHMsbyk7cmV0dXJuIWlzTmFOKGMpJiZjPD1hLzJ9LHBvbHlsaW5lOmZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBpPXRoaXMsYT10Lmxlbmd0aC0xO2lmKGE8MSlyZXR1cm4hMTtmb3IodmFyIHM9MDtzPGE7cysrKXt2YXIgbz10W3NdWzBdLHU9dFtzXVsxXSxjPXRbcysxXVswXSxsPXRbcysxXVsxXTtpZihpLmxpbmUobyx1LGMsbCxlLG4scikpcmV0dXJuITB9cmV0dXJuITF9LGN1YmljbGluZTpmdW5jdGlvbih0LGUsbixyLGkscyxvLHUsYyxsLGgpe3JldHVybiBhLnBvaW50RGlzdGFuY2UodCxlLG4scixpLHMsbyx1LGwsaCk8PWMvMn0scXVhZHJhdGljbGluZTpmdW5jdGlvbih0LGUsbixyLGEscyxvLHUsYyl7cmV0dXJuIGkucG9pbnREaXN0YW5jZSh0LGUsbixyLGEscyx1LGMpPD1vLzJ9LGFyY2xpbmU6ZnVuY3Rpb24odCxlLG4scixpLGEsbyx1LGMpe3JldHVybiBzLnBvaW50RGlzdGFuY2UodCxlLG4scixpLGEsdSxjKTw9by8yfSxyZWN0OmZ1bmN0aW9uKHQsZSxuLHIsaSxhKXtyZXR1cm4gdDw9aSYmaTw9dCtuJiZlPD1hJiZhPD1lK3J9LGNpcmNsZTpmdW5jdGlvbih0LGUsbixyLGkpe3JldHVybiBNYXRoLnBvdyhyLXQsMikrTWF0aC5wb3coaS1lLDIpPD1NYXRoLnBvdyhuLDIpfSxib3g6ZnVuY3Rpb24odCxlLG4scixpLGEpe3JldHVybiB0PD1pJiZpPD1lJiZuPD1hJiZhPD1yfX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDYpLGk9big4NiksYT1uKDMpLHM9big3KSxvPWEuVmVjdG9yMyx1PWZ1bmN0aW9uKHQpe3Uuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3UuQVRUUlM9e2ZpbGxPcGFjaXR5OjEsc3Ryb2tlT3BhY2l0eToxfSxyLmV4dGVuZCh1LGkpLHIuYXVnbWVudCh1LHtpc1NoYXBlOiEwLGNyZWF0ZVBhdGg6ZnVuY3Rpb24oKXt9LGRyYXdJbm5lcjpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcImNvbnRleHRcIiksbj10LmF0dHIoXCJsaW5lV2lkdGhcIik7dC5jcmVhdGVQYXRoKCksdC5oYXNGaWxsKCkmJmUuZmlsbCgpLHQuaGFzU3Ryb2tlKCkmJm4+MCYmZS5zdHJva2UoKX0saXNQb2ludEluUGF0aDpmdW5jdGlvbih0LGUpe3JldHVybiExfSxpc0hpdDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLmdldChcImNhbnZhc1wiKSxpPW5ldyBvKHQsZSwxKTtuLmludmVydChpLHIpO3ZhciBhPW4uZ2V0QkJveCgpO2lmKGEmJnMuYm94KGEubWluWCxhLm1heFgsYS5taW5ZLGEubWF4WSxpLngsaS55KSl7dmFyIHU9bi5fX2F0dHJzLmNsaXA7aWYoIXUpcmV0dXJuIG4uaXNQb2ludEluUGF0aChpLngsaS55KTtpZih1Lmluc2lkZSh0LGUpKXJldHVybiBuLmlzUG9pbnRJblBhdGgoaS54LGkueSl9cmV0dXJuITF9LGdldEJCb3g6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXQoXCJib3hcIil9fSksdC5leHBvcnRzPXV9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigxNzcpLGE9bigxNDgpLHM9bigxNDcpLG89bigxNDMpLHU9e3JhZGl1czpcInJcIixcImZvbnQtc2l6ZVwiOlwiZm9udFNpemVcIixcInN0cm9rZS13aWR0aFwiOlwibGluZVdpZHRoXCIsXCJ0ZXh0LWFuY2hvclwiOlwidGV4dEFsaWduXCIsXCJmb250LXdlaWdodFwiOlwiZm9udFdlaWdodFwiLFwiZmlsbC1vcGFjaXR5XCI6XCJmaWxsT3BhY2l0eVwiLFwic3Ryb2tlLW9wYWNpdHlcIjpcInN0cm9rZU9wYWNpdHlcIixcInN0cm9rZS1kYXNoYXJyYXlcIjpcImxpbmVEYXNoXCIsaG9yaXpvbnRhbEFsaWduOlwidGV4dEFsaWduXCIsdmVydGljYWxBbGlnbjpcInRleHRCYXNlbGluZVwifTtyLm1peChyLHtpc1Bvc2l0aXZlTnVtOmZ1bmN0aW9uKHQpe3ZhciBlPS9eWzAtOV0qWzEtOV1bMC05XSokLztyZXR1cm4gZS50ZXN0KHQpfSxhZGFwQXR0cnM6ZnVuY3Rpb24odCl7ci5lYWNoKHQsZnVuY3Rpb24oZSxuKXt2YXIgaT1yLmFkYXBBdHRyKG4sZSk7dFtpLm5hbWVdPWkudmFsdWV9KX0sYWRhcEF0dHI6ZnVuY3Rpb24odCxlKXt2YXIgbj11W3RdLHI9e25hbWU6dCx2YWx1ZTplfTtyZXR1cm4gbiYmKFwiZm9udC1zaXplXCI9PT10P2U9cGFyc2VJbnQoZSwxMCk6XCJ0ZXh0LWFuY2hvclwiPT09dCYmKGU9XCJzdGFydFwiPT09ZT9cImxlZnRcIjpcIm1pZGRsZVwiPT09ZT9cImNlbnRlclwiOlwicmlnaHRcIiksci5uYW1lPW4sci52YWx1ZT1lKSxyfSxtZXJnZTpmdW5jdGlvbih0LGUpe2lmKGUpe2lmKCFyLmlzT2JqZWN0KGUpKXJldHVybiBlO3ZhciBuPXt9O3JldHVybiByLm1peChuLHQsZSksbn1yZXR1cm4gdH0sZ2V0UmF0aW86ZnVuY3Rpb24oKXtyZXR1cm4gd2luZG93LmRldmljZVBpeGVsUmF0aW8/d2luZG93LmRldmljZVBpeGVsUmF0aW86Mn0sbWl4WFk6ZnVuY3Rpb24odCxlKXt2YXIgbj17eDplLmdldChcInhcIikseTplLmdldChcInlcIil9O3QueD90LngrPW4ueDp0Lng9bi54LHQueT90LnkrPW4ueTp0Lnk9bi55fSxnZXRXaWR0aDpmdW5jdGlvbih0KXt2YXIgZT1yLmdldFN0eWxlKHQsXCJ3aWR0aFwiKTtyZXR1cm5cImF1dG9cIj09PWUmJihlPXQub2Zmc2V0V2lkdGgpLHBhcnNlRmxvYXQoZSl9LGdldEhlaWdodDpmdW5jdGlvbih0KXt2YXIgZT1yLmdldFN0eWxlKHQsXCJoZWlnaHRcIik7cmV0dXJuXCJhdXRvXCI9PT1lJiYoZT10Lm9mZnNldEhlaWdodCkscGFyc2VGbG9hdChlKX0sZ2V0T3V0ZXJIZWlnaHQ6ZnVuY3Rpb24odCl7dmFyIGU9ci5nZXRIZWlnaHQodCksbj1wYXJzZUZsb2F0KHIuZ2V0U3R5bGUodCxcImJvcmRlclRvcFdpZHRoXCIpKXx8MCxpPXBhcnNlRmxvYXQoci5nZXRTdHlsZSh0LFwicGFkZGluZ1RvcFwiKSksYT1wYXJzZUZsb2F0KHIuZ2V0U3R5bGUodCxcInBhZGRpbmdCb3R0b21cIikpLHM9cGFyc2VGbG9hdChyLmdldFN0eWxlKHQsXCJib3JkZXJCb3R0b21XaWR0aFwiKSl8fDA7cmV0dXJuIGUrbitzK2krYX0scGFyc2VQYXRoQXJyYXk6ZnVuY3Rpb24odCl7cmV0dXJuIGEucGFyc2VQYXRoQXJyYXkodCl9LHBhdGgyQWJzb2x1dGU6ZnVuY3Rpb24odCl7cmV0dXJuIGEucGF0aDJBYnNvbHV0ZSh0KX0scGFyc2VQYXRoU3RyaW5nOmZ1bmN0aW9uKHQpe3JldHVybiBhLnBhcnNlUGF0aFN0cmluZyh0KX0sYW5pbVBhdGg6ZnVuY3Rpb24odCxlLG4saSxhLHMpe2lmKCFyLnZtbCYmKG49bnx8MCxpPWl8fDQwMCxlKSl7dmFyIG8sdT10LmF0dHIoXCJwYXRoXCIpLGM9ci5wYXJzZVBhdGhTdHJpbmcoZSksbD11LnNsaWNlKG4qLTEpO2lmKHUubGVuZ3RoPmMubGVuZ3RoKW89dS5zbGljZSgwLGMubGVuZ3RoKTtlbHNlIGlmKG89dS5jb25jYXQoW10pLG4pZm9yKHZhciBoPW8ubGVuZ3RoO2g8Yy5sZW5ndGg7aCsrKW89by5jb25jYXQobCk7dC5hbmltYXRlKHtwYXRoOmN9LGksYSxzKX19LGFuaW1hdGU6ZnVuY3Rpb24odCxlLG4sYSxzKXtmdW5jdGlvbiB1KCl7dmFyIGUsaCx4LG0seSxfLFM9K25ldyBEYXRlLHc9Uy1sLGI9e30sTT10LmdldChcImNhbnZhc1wiKTtjPXcvbixjPD0wP2M9MDpjPj0xJiYoYz0xKSxjPW9bYV0oYyk7Zm9yKF8gaW4gZilpZihwW19dIT09ZltfXSlpZihcInBhdGhcIj09PV8pe3g9ci5wYXJzZVBhdGhTdHJpbmcoZltfXSksbT1yLnBhcnNlUGF0aFN0cmluZyhwW19dKSxiW19dPVtdO2Zvcih2YXIgQT0wO0E8eC5sZW5ndGg7QSsrKXtmb3IodmFyIEM9eFtBXSxrPW1bQV0sVD1bXSxQPTA7UDxDLmxlbmd0aDtQKyspci5pc051bWVyaWMoQ1tQXSk/KHk9aS5pbnRlcnBvbGF0aW9uKENbUF0sa1tQXSksVC5wdXNoKHkoYykpKTpULnB1c2goQ1tQXSk7YltfXS5wdXNoKFQpfX1lbHNlIHk9aS5pbnRlcnBvbGF0aW9uKHBbX10sZltfXSksYltfXT15KGMpO2cmJihoPWkuaW50ZXJwb2xhdGlvbih2LGcpLGU9aChjKSx0LnNldE1hdHJpeChlKSksdC5hdHRyKGIpLE0uZHJhdygpLHIucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uKCl7ZD09PXQuZ2V0KFwiYW5pbUNvdW50XCIpJiZ0LmdldChcImFuaW1hYmxlXCIpJiZ0JiYhdC5nZXQoXCJkZXN0cm95ZWRcIikmJihjPj0wJiZjPDE/dSgpOmM+PTEmJnMmJnMoKSl9KX12YXIgYyxsPStuZXcgRGF0ZSxoPXRoaXMuZm9ybWF0UHJvcHMoZSx0KSxmPWguYXR0cnMsZz1oLk0scD10aGlzLmdldGZyb21BdHRycyhmLHQpLHY9dC5nZXRNYXRyaXgoKS5jbG9uZSgpLGQ9dC5nZXQoXCJhbmltQ291bnRcIik7YT1hP2E6XCJsaW5lYXJcIixzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZD09PXQuZ2V0KFwiYW5pbUNvdW50XCIpJiZ1KCl9LDYpfSxnZXRmcm9tQXR0cnM6ZnVuY3Rpb24odCxlKXt2YXIgbj17fTtyZXR1cm4gci5lYWNoKHQsZnVuY3Rpb24odCxyKXtuW3JdPWUuYXR0cihyKX0pLG59LGZvcm1hdFByb3BzOmZ1bmN0aW9uKHQsZSl7dmFyIG4scj17TTpudWxsLGF0dHJzOnt9fTtmb3IobiBpbiB0KVwidHJhbnNmb3JtXCI9PT1uP3IuTT1zLnRyYW5zZm9ybShlLmdldE1hdHJpeCgpLHRbbl0pOlwibWF0cml4XCI9PT1uP3IuTT10W25dOnIuYXR0cnNbbl09dFtuXTtyZXR1cm4gcn19KSxyLk1hdHJpeFV0aWw9cyx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMzQpLGk9bigxKSxhPW4oMikscz1mdW5jdGlvbih0KXtzLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtpLmV4dGVuZChzLHIpLGkuYXVnbWVudChzLHt0eXBlOlwic3VtbWFyeVwiLGdldFN0YXREaW1zOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0RGltcygpLG49ZS5sZW5ndGgscj1bZVtuLTFdXTtyZXR1cm4gcn0sZ2V0R3JvdXBDb25kaXRpb246ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMsbj1lLmdldERpbXMoKSxyPW4ubGVuZ3RoLGE9W107cmV0dXJuIHI+MSYmKGE9bi5zbGljZSgwLHItMSksdD1bXSksaS5lYWNoKGEsZnVuY3Rpb24oZSl7MCE9PWUuaW5kZXhPZihcIi4uXCIpJiZ0LnB1c2goZSl9KSx0fSxncm91cEZyYW1lczpmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMscj1uLmdldEdyb3VwQ29uZGl0aW9uKCk7cmV0dXJuIGU9cj9hLmdyb3VwKHQscik6W3RdfSx0cmFuc2Zvcm1Hcm91cDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1bXTtyZXR1cm4gaS5lYWNoKHQsZnVuY3Rpb24odCl7ci5wdXNoKG4udHJhbnNmb3JtKHQsZSkpfSkscn0sZXhlY0ZyYW1lOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldFN0YXREaW1zKClbMF0scj1lLmdyb3VwRnJhbWVzKHQpLGk9ZS50cmFuc2Zvcm1Hcm91cChyLG4pLHM9YS5tZXJnZS5hcHBseShudWxsLGkpO3JldHVybiBzfSx0cmFuc2Zvcm06ZnVuY3Rpb24odCl7cmV0dXJuIHR9fSksdC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDEyOSksaT1uKDEyKSxhPW4oMjgpO3IuRz1hLkcsci5Db21wb25lbnRzPW4oMTM0KSxyLkdyb3VwPWkuR3JvdXBCYXNlLHIuU2hhcGU9e30sci5TaGFwZS5NYXJrZXI9aS5NYXJrZXIsci5VdGlsPW4oOSksci5NYXRyaXg9bigzKSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe3QuZXhwb3J0cz17R01peGluOm4oMTQ0KSxHcm91cEJhc2U6big3MCksR3JvdXBNaXhpbjpuKDE0NSksTWFya2VyOm4oMTQ2KX19LGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49e3ByZWZpeDpcImdcIixiYWNrdXBDb250ZXh0OmZ1bmN0aW9uKCl7cmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIikuZ2V0Q29udGV4dChcIjJkXCIpfSgpLGRlYnVnOiExLHdhcm46ZnVuY3Rpb24odCl7fX07dC5leHBvcnRzPW59LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big1NSksYT1mdW5jdGlvbih0KXthLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtyLmV4dGVuZChhLGkpLHIuYXVnbWVudChhLHtyZWdyZXNzaW9uVHlwZTpcImJhc2VcIixpc1JlZ3Jlc3Npb246ITAsZ2V0UmVncmVzc2lvblN0cmluZzpmdW5jdGlvbigpe3JldHVyblwiXCJ9LGV4ZWNTbW9vdGg6ZnVuY3Rpb24odCl7cmV0dXJuIHR9fSksdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDgwKSxpPW4oMjApLGE9bigxKTthLm1peChyLkdlb21TaGFwZSx7Z2V0TWFya2VyQ2ZnOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5nZXRTaGFwZSh0KTtyZXR1cm4gbi5nZXRNYXJrZXJDZmcoZSl9LGdldEFjdGl2ZUNmZzpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZ2V0U2hhcGUodCk7cmV0dXJuIG4uZ2V0QWN0aXZlQ2ZnKGUpfSxnZXRTZWxlY3RlZENmZzpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZ2V0U2hhcGUodCk7cmV0dXJuIG4uZ2V0QWN0aXZlQ2ZnKGUpfSxkcmF3U2hhcGU6ZnVuY3Rpb24odCxlLG4pe3ZhciByPXRoaXMuZ2V0U2hhcGUodCksaT1yLmRyYXdTaGFwZShlLG4pO3JldHVybiBpJiZpLnNldChcIm9yaWdpblwiLGUub3JpZ2luKSxpfX0pLGEubWl4KHIuU2hhcGVCYXNlLHtzZXRDb29yZDpmdW5jdGlvbih0KXt0aGlzLl9jb29yZD10fSxwYXJzZVBhdGg6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLl9jb29yZDtyZXR1cm4gdD1hLnBhcnNlUGF0aFN0cmluZyh0KSx0PW4uaXNQb2xhciYmZSE9PSExP2kuY29udmVydFBvbGFyUGF0aCh0LG4pOmkuY29udmVydE5vcm1hbFBhdGgodCxuKX0scGFyc2VQb2ludDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9jb29yZDtyZXR1cm4gZS5jb252ZXJ0UG9pbnQodCl9LHBhcnNlUG9pbnRzOmZ1bmN0aW9uKHQpe2lmKCF0KXJldHVybiExO3ZhciBlPXRoaXMuX2Nvb3JkLG49W107cmV0dXJuIGEuZWFjaCh0LGZ1bmN0aW9uKHQpe24ucHVzaChlLmNvbnZlcnRQb2ludCh0KSl9KSxufX0pLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMjcpLGE9bigxMSkuTWF0cml4LHM9YS5NYXRyaXgzLG89ZnVuY3Rpb24odCl7by5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07by5BVFRSUz17ZWFzaW5nOlwiZWFzZUluT3V0UXVhZFwiLGR1cmF0aW9uOjFlMyxjYWxsYmFjazpudWxsLGdyb3VwOm51bGwscmVjdDpudWxsLGJlZm9yZTpudWxsfSxyLmV4dGVuZChvLGkpLHIuYXVnbWVudChvLHtzdGFydDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnN0YXJ0QW5pbWF0ZSgpLHRoaXN9LHN0YXJ0QW5pbWF0ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0VGFyZ2V0KCksZT10aGlzLmdldChcImdyb3VwXCIpO3RoaXMuc2V0KFwib3JpZ2luTWF0cml4XCIsZS5nZXRNYXRyaXgoKS5jbG9uZSgpKSx0aGlzLnNldChcInJlY3RcIix0aGlzLmdldEFuaW1SZWN0KCkpLHRoaXMuc2V0KFwidGFyZ2V0XCIsdCksdGhpcy5iZWZvcmVBbmltYXRlKHQpLHRoaXMuZXhlY0FuaW1hdGUodCl9LGJlZm9yZUFuaW1hdGU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRJbml0TWF0cml4KCksbj10aGlzLmdldEluaXRBdHRycygpLHI9dGhpcy5nZXQoXCJvcmlnaW5NYXRyaXhcIik7ZT1zLm11bHRpcGx5KHIsZSksdC5zZXRNYXRyaXgoZSksdC5hdHRyKG4pfSxleGVjQW5pbWF0ZTpmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMsaT1uLmdldChcImJlZm9yZVwiKSxhPW4uZ2V0KFwiY2FsbGJhY2tcIiksbz1uLmdldChcImR1cmF0aW9uXCIpLHU9bi5nZXQoXCJlYXNpbmdcIiksYz1uLmdldEVuZEF0dHJzKCksbD1uLmdldChcIm9yaWdpbk1hdHJpeFwiKSxoPW4uZ2V0RW5kTWF0cml4KCk7aD1zLm11bHRpcGx5KGwsaCksZT1yLm1peCh7fSxjLHttYXRyaXg6aH0pLHQuYW5pbWF0ZShlLG8sdSxmdW5jdGlvbigpe2EmJmEoKSxuLmFmdGVyQW5pbWF0ZSh0KX0pLGkmJmkoKX0sYWZ0ZXJBbmltYXRlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0KFwiZ3JvdXBcIiksbj1lLmdldChcImNhbnZhc1wiKTtyZXR1cm4gZT09dHx8KGUuYXR0cihcImNsaXBcIiwhMSksdm9pZCBuLmRyYXcoKSl9LGdldFRhcmdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldChcImdyb3VwXCIpfSxnZXRJbml0TWF0cml4OmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBzfSxnZXRJbml0QXR0cnM6ZnVuY3Rpb24oKXtyZXR1cm57fX0sZ2V0RW5kTWF0cml4OmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBzfSxnZXRFbmRBdHRyczpmdW5jdGlvbigpe3JldHVybnt9fSxnZXRBbmltUmVjdDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwicmVjdFwiKSxlPXRoaXMuZ2V0KFwiZ3JvdXBcIik7cmV0dXJuIHR8fCh0PWUuZ2V0QkJCb3goKSksdH0sZ2V0Q2lyY2xlSW5mbzpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwicmVjdFwiKSxlPXRoaXMuZ2V0KFwiY2lyY2xlXCIpLG49dGhpcy5nZXRSZWN0Q2VudGVyKHQpLHI9TWF0aC5taW4odC53aWR0aCx0LmhlaWdodCkvMjtyZXR1cm4gZXx8KGU9e2NlbnRlcjpuLHI6cn0pLGV9LGdldFJlY3RDZW50ZXI6ZnVuY3Rpb24odCl7cmV0dXJue3g6dC54K3Qud2lkdGgvMix5OnQueSt0LmhlaWdodC8yfX0sc3RvcDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnN0b3BBbmltYXRlKCksdGhpc30sc3RvcEFuaW1hdGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldFRhcmdldCgpO3QmJnQuc3RvcEFuaW1hdGUoKX19KSx0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1bXCJtaW5cIixcIm1heFwiXSxhPWZ1bmN0aW9uKHQpe3IubWl4KHRoaXMsdCl9O3IuYXVnbWVudChhLHt4U2NhbGU6bnVsbCx5U2NhbGU6bnVsbCxjZmc6e30scGFyc2VQb2ludDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMsYT1uLnhTY2FsZSxzPW4ueVNjYWxlLG89ZVswXSx1PWVbMV07cmV0dXJuIGEmJihvPXIuaW5kZXhPZihpLG8pIT09LTE/YS5zY2FsZShhW29dKTphLnNjYWxlKG8pKSxzJiYodT1yLmluZGV4T2YoaSx1KSE9PS0xP3Muc2NhbGUoc1t1XSk6cy5zY2FsZSh1KSksdC5jb252ZXJ0KHt4Om8seTp1fSl9LHBhaW50OmZ1bmN0aW9uKCl7fX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigzNCk7ci5zdW1tYXJ5PW4oMjQ4KSxyLmJpbj1uKDIyNCksci5zbW9vdGg9bigyMzgpLHIuZGVuc2l0eT1uKDIyOCksci5yZWdpb249bigyMzEpO3ZhciBpPW4oMik7aS5leGVjU3RhdD1mdW5jdGlvbih0LGUpe2UuaW5pdCgpO3ZhciBuPWUuZXhlYyhbdF0pO3JldHVybiBpLm1lcmdlLmFwcGx5KG51bGwsbil9LHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMjcpLGE9big3NSkscz1uKDgwKSxvPWZ1bmN0aW9uKHQpe28uc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O28uQVRUUlM9e3R5cGU6bnVsbCxjb250YWluZXI6bnVsbCxhdHRyczpudWxsLHNoYXBlT2JqOm51bGwsc3R5bGVDZmc6e319LHIuZXh0ZW5kKG8saSksci5hdWdtZW50KG8se19tYXBwaW5nOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10LnRvSlNPTigpLGk9ZS5nZXQoXCJhdHRyc1wiKTtyZXR1cm4gci5lYWNoKGksZnVuY3Rpb24odCl7dmFyIGk9dC5uYW1lcztyLmVhY2gobixmdW5jdGlvbihuKXt2YXIgYT1lLl9nZXRBdHRyVmFsdWVzKHQsbik7ci5lYWNoKGEsZnVuY3Rpb24odCxlKXt2YXIgYT1pW2VdO25bYV09ci5pc0FycmF5KHQpJiYxPT09dC5sZW5ndGg/dFswXTp0fSl9KX0pLG5ldyBhKG4pfSxfcHJvY2Vzc1NoYXBlUG9pbnRzOmZ1bmN0aW9uKHQpe3ZhciBlLG4saT10aGlzLG89aS5nZXQoXCJzaGFwZVR5cGVcIil8fGkuZ2V0KFwidHlwZVwiKSx1PXMuZ2V0U2hhcGUobyksYz1bXTtyZXR1cm4gdS5fY29vcmQ9aS5nZXRDb29yZCgpLHIuZWFjaCh0LGZ1bmN0aW9uKHQpe3ZhciBlPVtdO3QuZWFjaChmdW5jdGlvbih0KXt2YXIgbj1pLmdldEF0dHJWYWx1ZShcInNoYXBlXCIsdCkscj1pLmdldFNoYXBlUG9pbnRJbmZvKHQpLGE9dS5nZXRTaGFwZVBvaW50cyhuLHIpO3QucG9pbnRzPWEsZS5wdXNoKHQpfSksZT1uZXcgYShlKSxjLnB1c2goZSl9KSxyLmVhY2goYyxmdW5jdGlvbih0LHIpe2U9Y1tyKzFdLG49ZT9lLmNvbEFycmF5KFwicG9pbnRzXCIpWzBdOm51bGwsdC5hZGRDb2woXCJuZXh0UG9pbnRzXCIsZnVuY3Rpb24oKXtyZXR1cm4gbn0pfSksaS5zZXQoXCJzaGFwZU9ialwiLHUpLGN9LF9nZXRBdHRyVmFsdWVzOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5zY2FsZXMsaT1bXTtyLmVhY2gobixmdW5jdGlvbih0KXt2YXIgbj10LmRpbTtcImlkZW50aXR5XCI9PT10LnR5cGU/aS5wdXNoKHQudmFsdWUpOmkucHVzaChlW25dKX0pO3ZhciBhPXQubWFwcGluZ1ZhbHVlcy5hcHBseSh0LGkpO3JldHVybiBhfSxkcmF3OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1bXTtyZXR1cm4gdD1lLnByb2Nlc3NGcmFtZXModCksdD1lLl9wcm9jZXNzU2hhcGVQb2ludHModCksci5lYWNoKHQsZnVuY3Rpb24odCl7dD1lLmJlZm9yZU1hcHBpbmcodCksdD1lLl9tYXBwaW5nKHQpLHQucm93Q291bnQoKSYmZS5kcmF3RnJhbWUodCksbi5wdXNoKHQpfSksbn0scHJvY2Vzc0ZyYW1lczpmdW5jdGlvbih0KXtyZXR1cm4gdH0sYmVmb3JlTWFwcGluZzpmdW5jdGlvbih0KXtyZXR1cm4gdH0saXNJbkNpcmNsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldENvb3JkKCkuaXNQb2xhcn0sZ2V0U2hhcGVQb2ludEluZm86ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRYU2NhbGUoKSxuPXRoaXMuZ2V0WVNjYWxlKCkscj1lP3RoaXMuX25vcm1hbGl6ZVZhbHVlcyh0W2UuZGltXSxlKTp0Lng/dC54Oi4xLGk9bj90aGlzLl9ub3JtYWxpemVWYWx1ZXModFtuLmRpbV0sbik6dC55P3QueTouMTtyZXR1cm57eDpyLHk6aSx5MDpuP24uc2NhbGUodGhpcy5nZXRZTWluVmFsdWUoKSk6dm9pZCAwLHNpemU6dGhpcy5nZXRTaXplKHQpfX0sX25vcm1hbGl6ZVZhbHVlczpmdW5jdGlvbih0LGUpe3ZhciBuPVtdO3JldHVybiByLmlzQXJyYXkodCk/ci5lYWNoKHQsZnVuY3Rpb24odCxyKXtuLnB1c2goZS5zY2FsZSh0KSl9KTpuPWUuc2NhbGUodCksbn0sZ2V0RGVmYWx1dFNpemU6ZnVuY3Rpb24oKXtyZXR1cm4uMX0sX2dldFNpemU6ZnVuY3Rpb24odCl7dmFyIGUsbj10aGlzLmdldENvb3JkKCk7cmV0dXJuIGU9dGhpcy5pc0luQ2lyY2xlKCkmJiFuLmlzVHJhbnNwb3NlZD8obi5nZXQoXCJlbmRBbmdsZVwiKS1uLmdldChcInN0YXJ0QW5nbGVcIikpKm4uZ2V0KFwicmFkaXVzXCIpOnRoaXMuZ2V0RGltV2lkdGgoXCJ4XCIpLHQvZX0sZ2V0RGltV2lkdGg6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0Q29vcmQoKSxyPW4uY29udmVydFBvaW50KHt4OjAseTowfSksaT1uLmNvbnZlcnRQb2ludCh7eDpcInhcIj09PXQ/MTowLHk6XCJ4XCI9PT10PzA6MX0pLGE9MDtyZXR1cm4gciYmaSYmKGE9TWF0aC5zcXJ0KE1hdGgucG93KGkueC1yLngsMikrTWF0aC5wb3coaS55LXIueSwyKSkpLGF9LGdldFNpemU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRBdHRyVmFsdWUoXCJzaXplXCIsdCk7cmV0dXJuIGU9ci5pc051bGwoZSk/dGhpcy5nZXREZWZhbHV0U2l6ZSgpOnRoaXMuX2dldFNpemUoZSl9LGRyYXdGcmFtZTpmdW5jdGlvbih0KXt2YXIgZSxuLGksYT10aGlzLHM9dC50b0pTT04oKSxvPWEuZ2V0KFwiY29udGFpbmVyXCIpLHU9YS5nZXQoXCJzaGFwZU9ialwiKTtyLmVhY2gocyxmdW5jdGlvbih0KXtlPWEuZ2V0RHJhd0NmZyh0KSxuPWEuZ2V0RHJhd1NoYXBlKHQuc2hhcGUpLGk9dS5kcmF3U2hhcGUobixlLG8pLGEuYWZ0ZXJEcmF3KGksdCl9KX0sYWZ0ZXJEcmF3OmZ1bmN0aW9uKHQsZSl7fSxnZXREcmF3U2hhcGU6ZnVuY3Rpb24odCl7cmV0dXJuIHIuaXNBcnJheSh0KT90WzBdOnR9LGdldERyYXdDZmc6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXQoXCJzdHlsZUNmZ1wiKSxuPXRoaXMuaXNJbkNpcmNsZSgpLHI9e3BvaW50czp0LnBvaW50cyxuZXh0UG9pbnRzOnQubmV4dFBvaW50cyxjb2xvcjp0LmNvbG9yLGlzSW5DaXJjbGU6bixzdHlsZTplLHNpemU6dC5zaXplLHNoYXBlOnQuc2hhcGUsb3BhY2l0eTp0Lm9wYWNpdHkseDp0LngseTp0Lnksb3JpZ2luOnR9O3JldHVybiBuJiYoci5jZW50ZXI9dGhpcy5nZXRDb29yZCgpLmdldChcImNlbnRlclwiKSkscn0sZ2V0WU1pblZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLmdldFlTY2FsZSgpLG49ZS5taW47cmV0dXJuIHQ9bj49MD9uOjB9LGdldEF0dHJWYWx1ZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZ2V0QXR0cih0KSxyPW51bGw7cmV0dXJuIG4mJihyPXRoaXMuX2dldEF0dHJWYWx1ZXMobixlKVswXSkscn0sZ2V0QXR0cjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldChcImF0dHJzXCIpLG49bnVsbDtyZXR1cm4gci5lYWNoKGUsZnVuY3Rpb24oZSl7ZS50eXBlPT09dCYmKG49ZSl9KSxufSxnZXRDb29yZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldEF0dHIoXCJwb3NpdGlvblwiKS5jb29yZH0sZ2V0WERpbTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0WFNjYWxlKCk7cmV0dXJuIHQuZGltfSxnZXRZRGltOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRZU2NhbGUoKTtyZXR1cm4gdC5kaW19LGdldFhTY2FsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldEF0dHIoXCJwb3NpdGlvblwiKS5zY2FsZXNbMF19LGdldFlTY2FsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldEF0dHIoXCJwb3NpdGlvblwiKS5zY2FsZXNbMV19fSksdC5leHBvcnRzPW99LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQsZSxuKXtpZighdC5sZW5ndGgpcmV0dXJuXCJcIjt2YXIgcj1cIlwiLGk9XCJcIjt0Lmxlbmd0aDw9MiYmKG49ITEpO2Zvcih2YXIgYT0wLHM9dC5sZW5ndGg7YTxzO2ErKyl7dmFyIG89dFthXTtpPTA9PT1hP24/XCJNe3h9IHt5fSBSXCI6XCJNe3h9IHt5fVwiOm4/XCIge3h9IHt5fVwiOlwiTHt4fSB7eX1cIixyKz11LnN1YnN0aXR1dGUoaSxvKX1yZXR1cm4gZSYmKHIrPVwiWlwiKSxyfWZ1bmN0aW9uIGkodCxlKXt2YXIgbj10LmdldENlbnRlcigpLHI9TWF0aC5zcXJ0KE1hdGgucG93KGUueC1uLngsMikrTWF0aC5wb3coZS55LW4ueSwyKSk7cmV0dXJuIHJ9ZnVuY3Rpb24gYSh0LGUpe2Zvcih2YXIgbj10Lmxlbmd0aCxyPVt0WzBdXSxpPTE7aTxuO2krPTIpe3ZhciBhPWUuY29udmVydFBvaW50KHt4OnRbaV0seTp0W2krMV19KTtyLnB1c2goYS54LGEueSl9cmV0dXJuIHJ9ZnVuY3Rpb24gcyh0LGUsbil7dmFyIHI9bi5nZXRSYWRpdXMoKSxhPW4uZ2V0KFwiaW5uZXJcIil8fDAscz1hKnIsbz1uLmlzVHJhbnNwb3NlZCx1PW4uZ2V0KFwic3RhcnRBbmdsZVwiKSxjPW4uZ2V0KFwiZW5kQW5nbGVcIiksbD17eDp0WzFdLHk6dFsyXX0saD17eDplWzFdLHk6ZVsyXX0sZj1bXTtzPXN8fDA7dmFyIGc9bz9cInlcIjpcInhcIixwPU1hdGguYWJzKGhbZ10tbFtnXSkqKGMtdSksdj1oW2ddPj1sW2ddPzE6MCxkPXA+TWF0aC5QST8xOjAseD1uLmNvbnZlcnRQb2ludChoKSxtPWkobix4KTtpZihwPT09MipNYXRoLlBJKXtpZihtPj0uNSl7dmFyIHk9e3g6KGgueCtsLngpLzIseTooaC55K2wueSkvMn0sXz1uLmNvbnZlcnRQb2ludCh5KTtmLnB1c2goW1wiQVwiLG0sbSwwLGQsdixfLngsXy55XSksZi5wdXNoKFtcIkFcIixtLG0sMCxkLHYseC54LHgueV0pfX1lbHNlIGYucHVzaChbXCJBXCIsbSxtLDAsZCx2LHgueCx4LnldKTtyZXR1cm4gZn1mdW5jdGlvbiBvKHQpe3UuZWFjaCh0LGZ1bmN0aW9uKGUsbil7dmFyIHI9ZTtpZihcImFcIj09PXJbMF0udG9Mb3dlckNhc2UoKSl7dmFyIGk9dFtuLTFdLGE9dFtuKzFdO2EmJlwiYVwiPT09YVswXS50b0xvd2VyQ2FzZSgpP2kmJlwibFwiPT09aVswXS50b0xvd2VyQ2FzZSgpJiYoaVswXT1cIk1cIik6aSYmXCJhXCI9PT1pWzBdLnRvTG93ZXJDYXNlKCkmJmEmJlwibFwiPT09YVswXS50b0xvd2VyQ2FzZSgpJiYoYVswXT1cIk1cIil9fSl9dmFyIHU9bigxKSxjPW4oMjEzKSxsPXtnZXRMaW5lUGF0aDpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHIodCxlLG4pfSxnZXRTcGxpbmVQYXRoOmZ1bmN0aW9uKHQsZSl7dmFyIG49W10scj10WzBdLGk9bnVsbDt1LmVhY2godCxmdW5jdGlvbih0KXtpJiZpLng9PT10LngmJmkueT09PXQueXx8KG4ucHVzaCh0LngpLG4ucHVzaCh0LnkpLGk9dCl9KTt2YXIgYT1bWzAsMF0sWzEsMV1dLHM9Yy5jYXRtdWxsUm9tMmJlemllcihuLGUsYSk7cmV0dXJuXCJNXCIrci54K1wiIFwiK3IueSt1LnBhcnNlUGF0aEFycmF5KHMpfSxnZXRQb2ludFJhZGl1czpmdW5jdGlvbih0LGUpe3ZhciBuPWkodCxlKTtyZXR1cm4gbn0sZ2V0UG9pbnRBbmdsZTpmdW5jdGlvbih0LGUpe3ZhciBuPXQuZ2V0Q2VudGVyKCkscj1NYXRoLmF0YW4yKGUueS1uLnksZS54LW4ueCk7cmV0dXJuIHJ9LGNvbnZlcnROb3JtYWxQYXRoOmZ1bmN0aW9uKHQsZSl7dmFyIG49W107cmV0dXJuIHUuZWFjaCh0LGZ1bmN0aW9uKHQpe3ZhciByPXRbMF07c3dpdGNoKHIudG9Mb3dlckNhc2UoKSl7Y2FzZVwibVwiOmNhc2VcImxcIjpjYXNlXCJjXCI6bi5wdXNoKGEodCxlKSk7YnJlYWs7Y2FzZVwielwiOmRlZmF1bHQ6bi5wdXNoKHQpfX0pLG59LGNvbnZlcnRQb2xhclBhdGg6ZnVuY3Rpb24odCxlKXt2YXIgbj1bXTtyZXR1cm4gdS5lYWNoKHQsZnVuY3Rpb24ocixpKXt2YXIgbz1yWzBdO3N3aXRjaChvLnRvTG93ZXJDYXNlKCkpe2Nhc2VcIm1cIjpjYXNlXCJjXCI6bi5wdXNoKGEocixlKSk7YnJlYWs7Y2FzZVwibFwiOnZhciB1PXRbaS0xXSxjPXIsbD1lLmlzVHJhbnNwb3NlZCxoPWw/dVsxXT09PWNbMV06dVsyXT09PWNbMl07aD9uPW4uY29uY2F0KHModSxjLGUpKTpuLnB1c2goYShyLGUpKTticmVhaztjYXNlXCJ6XCI6ZGVmYXVsdDpuLnB1c2gocil9fSksbyhuKSxufX07dC5leHBvcnRzPWx9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9ZnVuY3Rpb24odCl7ci5taXgodGhpcyx0KX07aS5wcm90b3R5cGU9e3R5cGU6XCJiYXNlXCIsbmFtZXM6bnVsbCxzY2FsZXM6W10sbWluOjAsbWF4OjEwLG1ldGhvZDpmdW5jdGlvbih0KXtyZXR1cm4gdCoodGhpcy5tYXgtdGhpcy5taW4pK3RoaXMubWlufSxjYWxsYmFjazpmdW5jdGlvbigpe3ZhciB0LGUsbixpPXRoaXMsYT1pLmFycixzPWkuc2NhbGVzLG89ci50b0FycmF5KGFyZ3VtZW50cyksdT1bXTtyZXR1cm4gci5lYWNoKHMsZnVuY3Rpb24ocyxjKXt0PW9bY10sbj1zLnNjYWxlKHQpLGU9cy50cmFuc2xhdGUodCksXCJpZGVudGl0eVwiPT09cy50eXBlP3UucHVzaChzLnZhbHVlKTpyLmlzQXJyYXkoYSk/dS5wdXNoKGkuX2dldEFyclZhbHVlKGEscyxuLGUpKTppLm1ldGhvZD91LnB1c2goaS5tZXRob2QobikpOnUucHVzaChudWxsKX0pLHV9LGdldE5hbWVzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5zY2FsZXMsZT10aGlzLm5hbWVzLG49W107cmV0dXJuIHIuZWFjaCh0LGZ1bmN0aW9uKHQscil7bi5wdXNoKGVbcl0pfSksbn0sZ2V0RGltczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuc2NhbGVzLGU9W107cmV0dXJuIHIuZWFjaCh0LGZ1bmN0aW9uKHQpe2UucHVzaCh0LmRpbSl9KSxlfSxnZXRTY2FsZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnNjYWxlcyxuPXRoaXMubmFtZXMscj1uLmluZGV4T2YodCk7cmV0dXJuIGVbcl19LG1hcHBpbmdWYWx1ZXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnNjYWxlcyxlPXIudG9BcnJheShhcmd1bWVudHMpLG49dGhpcy5jYWxsYmFjayxpPWU7aWYobil7Zm9yKHZhciBhPTA7YTxlLmxlbmd0aDthKyspZVthXT10aGlzLnBhcnNlUGFyYW0oZVthXSx0W2FdKTtpPW4uYXBwbHkodGhpcyxlKX1yZXR1cm4gdGhpcy5uYW1lcyYmMT09PXRoaXMubmFtZXMubGVuZ3RoJiYoaT1baV0pLGl9LHBhcnNlUGFyYW06ZnVuY3Rpb24odCxlKXt2YXIgbj10O3JldHVybiBlLmlzTGluZWFyfHwobj1lLnNjYWxlKHQpLG49ZS5pbnZlcnQobikpLG59LF9nZXRBcnJWYWx1ZTpmdW5jdGlvbih0LGUsbixyKXt2YXIgaT0wO3JldHVybiBlLmlzQ2F0ZWdvcnk/aT1yOmUuaXNMaW5lYXImJihpPXBhcnNlSW50KG4qKHQubGVuZ3RoLTEpLDEwKSksdFtpJXQubGVuZ3RoXX19LHQuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMjM3KSxhPXtnZXRSZWdyZXNzaW9uU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmVncmVzc2lvblN0cn0sZ2V0UmVncmVzc2lvbjpmdW5jdGlvbigpe3JldHVybntlcXVhdGlvbjpbXSxzdHJpbmc6XCJcIn19LGV4ZWNTbW9vdGg6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGE9bi5nZXRSZWdyZXNzaW9uKHQpLHM9YS5lcXVhdGlvbjt0aGlzLnJlZ3Jlc3Npb25TdHI9YS5zdHJpbmc7dmFyIG89W107cmV0dXJuIHIuZWFjaChlLGZ1bmN0aW9uKHQpe3ZhciBlPXQscj1pLmV4ZWNGbmN0aW9uKG4ucmVncmVzc2lvblR5cGUscyxlKTtvLnB1c2goW2Uscl0pfSksb319O3QuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigxMyksaT17Q2FudmFzOm4oMjY4KSxHcm91cDpuKDg3KSxTaGFwZTpuKDgpLFJlY3Q6bigyODMpLENpcmNsZTpuKDI3MiksRWxsaXBzZTpuKDI3NCksUGF0aDpuKDI3OSksVGV4dDpuKDI4NCksTGluZTpuKDI3NyksSW1hZ2U6bigyNzYpLFBvbHlnb246bigyODApLFBvbHlsaW5lOm4oMjgxKSxBcmM6bigyNzEpLEZhbjpuKDI3NSksQ3ViaWM6bigyNzMpLFF1YWRyYXRpYzpuKDI4MiksZGVidWc6ZnVuY3Rpb24odCl7ci5kZWJ1Zz10fX07dC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj17fTtyLkJhc2U9bigxOSksci5JbnRlcnZhbD1uKDI4Nyksci5Qb2ludD1uKDI4OSksci5MaW5lPW4oMjg4KSxyLlBvbHlnb249bigyOTApLHIuU2NoZW1hPW4oMjkxKSxyLlBhdGg9big5Miksci5BcmVhPW4oMjg2KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe3QuZXhwb3J0cz1uKDMzMCl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigyKSxhPTAscz1mdW5jdGlvbih0KXtyLm1peCh0aGlzLHQpfTtyLmF1Z21lbnQocyx7eERpbTpudWxsLHlEaW06bnVsbCxhZGp1c3ROYW1lczpbXCJ4XCIsXCJ5XCJdLGdyb3VwRGltczpudWxsLGlzQWRqdXN0OmZ1bmN0aW9uKHQpe3JldHVybiByLmluQXJyYXkodGhpcy5hZGp1c3ROYW1lcyx0KX0scHJvY2Vzc0FkanVzdDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49aS5tZXJnZS5hcHBseShudWxsLHQpO3JldHVybiBlLmFkakZyYW1lcz10LGUubWVyZ2VGcmFtZT1uLHQ9ZS5hZGp1c3RGcmFtZXModCxuKSxlLmFkakZyYW1lcz1udWxsLGUubWVyZ2VGcmFtZT1udWxsLHR9LF9nZXREaW1WYWx1ZXM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPXt9LHM9W107aWYoZS54RGltJiZlLmlzQWRqdXN0KFwieFwiKSYmcy5wdXNoKGUueERpbSksZS55RGltJiZlLmlzQWRqdXN0KFwieVwiKSYmcy5wdXNoKGUueURpbSksci5lYWNoKHMsZnVuY3Rpb24oZSl7dmFyIHI9aS52YWx1ZXModCxlKTtyLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC1lfSksbltlXT1yfSksIWUueURpbSYmZS5pc0FkanVzdChcInlcIikpe3ZhciBvPVwieVwiLHU9W2EsMV07bltvXT11fXJldHVybiBufSxhZGp1c3RGcmFtZXM6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGE9W10scz1uLl9nZXREaW1WYWx1ZXMoZSk7cmV0dXJuIHIuZWFjaCh0LGZ1bmN0aW9uKGUsbyl7dmFyIHU9ZS50b0pTT04oKTtyLmVhY2gocyxmdW5jdGlvbihlLHIpe24uYWRqdXN0RGltKHIsZSx1LHQubGVuZ3RoLG8pfSksYS5wdXNoKG5ldyBpKHUpKX0pLGF9LGFkanVzdERpbTpmdW5jdGlvbih0LGUsbil7cmV0dXJuIG5ldyBpKG4pfSxnZXRBZGp1c3RSYW5nZTpmdW5jdGlvbih0LGUsbil7dmFyIGksYSxzPXRoaXMsbz1yLmluZGV4T2YobixlKSx1PW4ubGVuZ3RoO3JldHVybiFzLnlEaW0mJnMuaXNBZGp1c3QoXCJ5XCIpPyhpPTAsYT0xKTp1PjE/KGk9MD09PW8/blswXTpuW28tMV0sYT1vPT09dS0xP25bdS0xXTpuW28rMV0sMCE9PW8/aSs9KGUtaSkvMjppLT0oYS1lKS8yLG8hPT11LTE/YS09KGEtZSkvMjphKz0oZS1uW3UtMl0pLzIpOihpPTA9PT1lPzA6ZS0uNSxhPTA9PT1lPzE6ZSsuNSkse3ByZTppLG5leHQ6YX19LGdyb3VwRGF0YTpmdW5jdGlvbih0LGUpe3ZhciBuPXt9O3JldHVybiByLmVhY2godCxmdW5jdGlvbih0KXt2YXIgcj10W2VdO3ZvaWQgMD09PXImJihyPXRbZV09YSksbltyXXx8KG5bcl09W10pLG5bcl0ucHVzaCh0KX0pLG59fSksdC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDEyNSk7dC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDEyNiksaT1uKDY0KTtyLkc9bigyMyksci5VdGlsPW4oMjkpLHIuR3JvdXA9aS5Hcm91cEJhc2UsdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDIzKSxpPW4oMSksYT1yLlNoYXBlLnN1cGVyY2xhc3MuY29uc3RydWN0b3Iscz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGFibGVcIiksbz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidHJcIiksdT0vXlxccyo8KFxcdyt8ISlbXj5dKj4vLGM9e3RyOmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0Ym9keVwiKSx0Ym9keTpzLHRoZWFkOnMsdGZvb3Q6cyx0ZDpvLHRoOm8sXCIqXCI6ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKX07aS5taXgoaSx7Z2V0Qm91bmRpbmdDbGllbnRSZWN0OmZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksbj1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50VG9wLHI9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudExlZnQ7cmV0dXJue3RvcDplLnRvcC1uLGJvdHRvbTplLmJvdHRvbS1uLGxlZnQ6ZS5sZWZ0LXIscmlnaHQ6ZS5yaWdodC1yfX0sdXBwZXJGaXJzdDpmdW5jdGlvbih0KXtyZXR1cm4gdC5yZXBsYWNlKC8oXFx3KS8sZnVuY3Rpb24odCl7cmV0dXJuIHQudG9VcHBlckNhc2UoKX0pfSxnZXRTdHlsZTpmdW5jdGlvbih0LGUpe3JldHVybiB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZT93aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0LG51bGwpW2VdOnQuY3VycmVudFN0eWxlW2VdfSxtb2RpQ1NTOmZ1bmN0aW9uKHQsZSl7dmFyIG47Zm9yKG4gaW4gZSl0LnN0eWxlW25dPWVbbl07cmV0dXJuIHR9LGdldFJhdGlvOmZ1bmN0aW9uKCl7cmV0dXJuIHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvP3dpbmRvdy5kZXZpY2VQaXhlbFJhdGlvOjF9LGluaXRDbGFzc0NmZ3M6ZnVuY3Rpb24odCl7aWYoIXQuX19jZmcmJnQhPT1hKXt2YXIgZT10LnN1cGVyY2xhc3MuY29uc3RydWN0b3I7ZSYmIWUuX19jZmcmJmkuaW5pdENsYXNzQ2ZncyhlKSx0Ll9fY2ZnPXt9LGkubWl4KCEwLHQuX19jZmcsZS5fX2NmZyksaS5taXgoITAsdC5fX2NmZyx0LkNGRyl9fSxtaXhpbjpmdW5jdGlvbih0LGUpe3ZhciBuPXQuQ0ZHP1wiQ0ZHXCI6XCJBVFRSU1wiO2lmKHQmJmUpe3QuX21peGlucz1lLHRbbl09dFtuXXx8e307dmFyIHI9e307aS5lYWNoKGUsZnVuY3Rpb24oZSl7aS5hdWdtZW50KHQsZSk7dmFyIGE9ZVtuXTthJiZpLm1peChyLGEpfSksdFtuXT1pLm1peChyLHRbbl0pfX0sY3JlYXRlRG9tOmZ1bmN0aW9uKHQpe3ZhciBlPXUudGVzdCh0KSYmUmVnRXhwLiQxO2UgaW4gY3x8KGU9XCIqXCIpO3ZhciBuPWNbZV07cmV0dXJuIHQ9dC5yZXBsYWNlKC8oXlxccyopfChcXHMqJCkvZyxcIlwiKSxuLmlubmVySFRNTD1cIlwiK3Qsbi5jaGlsZE5vZGVzWzBdfX0pLHQuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPWZ1bmN0aW9uKHQpe3IubWl4KHRoaXMsdCl9O3IuYXVnbWVudChpLHt4VmFsdWU6bnVsbCx5VmFsdWU6bnVsbCxyZWdpb246bnVsbCxmcmFtZTpudWxsfSksdC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9ZnVuY3Rpb24odCxlKXt0aGlzLmRhdGE9dCxyLm1peCh0aGlzLGUpLHRoaXMuaW5pdEZyYW1lKCl9O2kucHJvdG90eXBlPXtpc0ZyYW1lOiEwLGluaXRGcmFtZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmRhdGEsbj10LmNvbE5hbWVzKCksaT10LmFycjtpZihyLmlzQXJyYXkoZVswXSkmJihpPXQuYXJyPWUpLCFpKXtpPVtdO2Zvcih2YXIgYT0wO2E8bi5sZW5ndGg7YSsrKXtmb3IodmFyIHM9W10sbz1uW2FdLHU9MDt1PGUubGVuZ3RoO3UrKylzLnB1c2goZVt1XVtvXSk7aS5wdXNoKHMpfXQuYXJyPWl9fSxjb250YWluczpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmNvbE5hbWVzKCk7cmV0dXJuIHIuaW5kZXhPZihlLHQpIT09LTF9LGNvbE5hbWVzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQubmFtZXM7aWYoIWUpe3ZhciBuPXRoaXMuZGF0YSxpPW5bMF07ZT1bXSxpJiZyLmVhY2goaSxmdW5jdGlvbih0LG4pe2UucHVzaChuKX0pLHQubmFtZXM9ZX1yZXR1cm4gZX0scm93Q291bnQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5hcnI7cmV0dXJuIGUmJmUubGVuZ3RoP2VbMF0ubGVuZ3RoOjB9LGNvbENvdW50OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuY29sTmFtZXMoKTtyZXR1cm4gZT9lLmxlbmd0aDowfSxjb2xJbmRleDpmdW5jdGlvbih0KXtyZXR1cm4gci5pbmRleE9mKHRoaXMubmFtZXMsdCl9LGNvbEFycmF5OmZ1bmN0aW9uKHQpe3ZhciBlPXQ7cmV0dXJuIHIuaXNTdHJpbmcodCkmJihlPXRoaXMuY29sSW5kZXgodCkpLHRoaXMuYXJyW2VdfSxjb2xSZXBsYWNlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5hcnIsaT10aGlzLmNvbE5hbWVzKCk7aWYoci5pc1N0cmluZyh0KSl7dmFyIGE9dDt0PXIuaW5kZXhPZihpLGEpfXJldHVybiBuW3RdPWUsdGhpc30sZWFjaDpmdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcyxuPWUucm93Q291bnQoKSxyPTA7cjxuO3IrKyl7dmFyIGk9ZS5fZ2V0T2JqZWN0KHIpO3QoaSxyKX1yZXR1cm4gZX0scm93T2JqZWN0OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9nZXRPYmplY3QodCl9LF9nZXRPYmplY3Q6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5hcnIsaT17fTtlPWV8fG4uY29sTmFtZXMoKTtmb3IodmFyIGE9MDthPGUubGVuZ3RoO2ErKylpW2VbYV1dPXJbYV1bdF07cmV0dXJuIGl9LGFkZENvbDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7aWYoci5pc0Z1bmN0aW9uKGUpKXt2YXIgaT1lO2U9W10sbi5lYWNoKGZ1bmN0aW9uKHQsbil7dmFyIHI9aSh0LG4pO2UucHVzaChyKX0pfW4ubmFtZXMucHVzaCh0KSxuLmFyci5wdXNoKGUpfSx0b0FycmF5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYXJyfSx0b0pTT046ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcyxlPXQucm93Q291bnQoKSxuPVtdLHI9MDtyPGU7cisrKW4ucHVzaCh0Ll9nZXRPYmplY3QocikpO3JldHVybiBufX0sdC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDE4KSxpPW4oMSksYT1uKDIpLHM9ZnVuY3Rpb24odCl7cy5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07aS5leHRlbmQocyxyKSxpLmF1Z21lbnQocyx7dHlwZTpcIm1hcFwiLG1hcERhdGE6e30saW5pdERpbXM6ZnVuY3Rpb24odCl7dmFyIGU9dFswXSxuPXQuc2xpY2UoMSk7dD1uLmNvbmNhdChbZV0pLHQudW5zaGlmdChcIi4ubGFudFwiKSx0LnVuc2hpZnQoXCIuLmxvbmdcIiksdGhpcy5kaW1zPXR9LGdldFN0YXREaW1zOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXREaW1zKCksZT10LmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdC5pbmRleE9mKFwiLi5cIik+LTF9KTtyZXR1cm4gZX0sZXhlY0ZyYW1lOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldFN0YXREaW1zKCkscj1bXTtyZXR1cm4gdD10LnRvSlNPTigpLGkuZWFjaCh0LGZ1bmN0aW9uKHQpe3IucHVzaChlLmFkZEdlb0luZm8odCxuKSl9KSxuZXcgYShyKX0sYWRkR2VvSW5mbzpmdW5jdGlvbih0KXtyZXR1cm4gdH19KSx0LmV4cG9ydHM9c30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNDQpLGk9bigxKSxhPW4oMzYpLHM9ZnVuY3Rpb24odCl7cy5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07aS5leHRlbmQocyxyKSxpLmF1Z21lbnQocyx7dHlwZTpcImNhdFwiLHRpY2tDb3VudDpudWxsLGlzQ2F0ZWdvcnk6ITAsaW5pdDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LnZhbHVlcyxuPXQudGlja0NvdW50O2lmKGkuZWFjaChlLGZ1bmN0aW9uKHQsbil7ZVtuXT10LnRvU3RyaW5nKCl9KSwhdC50aWNrcyl7dmFyIHI9ZTtpZihuKXt2YXIgcz1hLkNhdGVnb3J5LmNhY3VsYXRlKHttYXhDb3VudDpuLGRhdGE6ZX0pO3I9cy50aWNrc310aGlzLnRpY2tzPXJ9fSxnZXRUZXh0OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnZhbHVlcy5pbmRleE9mKHQpPi0xP3Q9dDppLmlzTnVtYmVyKHQpJiYodD10aGlzLnZhbHVlc1tNYXRoLnJvdW5kKHQpXSkscy5zdXBlcmNsYXNzLmdldFRleHQuY2FsbCh0aGlzLHQpfSx0cmFuc2xhdGU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy52YWx1ZXMuaW5kZXhPZih0KTtyZXR1cm4gZT09PS0xJiZpLmlzTnVtYmVyKHQpP2U9dDplPT09LTEmJihlPU5hTiksZX0sc2NhbGU6ZnVuY3Rpb24odCl7dmFyIGUsbj10aGlzLnJhbmdlTWluKCkscj10aGlzLnJhbmdlTWF4KCk7cmV0dXJuKGkuaXNTdHJpbmcodCl8fHRoaXMudmFsdWVzLmluZGV4T2YodCkhPT0tMSkmJih0PXRoaXMudHJhbnNsYXRlKHQpKSxlPXRoaXMudmFsdWVzLmxlbmd0aD4xP3QvKHRoaXMudmFsdWVzLmxlbmd0aC0xKTp0LG4rZSooci1uKX0saW52ZXJ0OmZ1bmN0aW9uKHQpe2lmKGkuaXNTdHJpbmcodCkpcmV0dXJuIHQ7dmFyIGU9dGhpcy5yYW5nZU1pbigpLG49dGhpcy5yYW5nZU1heCgpO3Q8ZSYmKHQ9ZSksdD5uJiYodD1uKTt2YXIgcj0odC1lKS8obi1lKSxhPU1hdGgucm91bmQocioodGhpcy52YWx1ZXMubGVuZ3RoLTEpKSV0aGlzLnZhbHVlcy5sZW5ndGg7cmV0dXJuIGE9YXx8MCx0aGlzLnZhbHVlc1thXX19KSx0LmV4cG9ydHM9c30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1mdW5jdGlvbih0KXtyLm1peCh0aGlzLHQpfTtyLmF1Z21lbnQoaSx7aXNTdGF0OiEwLGluaXREaW1zOmZ1bmN0aW9uKCl7fSxnZXREaW1zOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGltc30sZ2V0U3RhdERpbXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXREaW1zKCl9LGluaXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5kaW1zO2lmKHIuaXNTdHJpbmcoZSkmJihlPWUuc3BsaXQoXCIqXCIpLHQuZGltcz1lKSxlJiZlLmlzU3RhdCl7dmFyIG49ZTtuLmluaXQoKSx0LnN0YXQ9bixlPW4uZGltcyx0LmRpbXM9ZX1lfHwoZT1bXSx0LmRpbXM9ZSksdC5pbml0RGltcyhlKX0scHJlRXhlY3V0ZTpmdW5jdGlvbigpe30sZXhlYzpmdW5jdGlvbih0KXt2YXIgZT10aGlzO2UucHJlRXhlY3V0ZSh0KTt2YXIgbj1bXTtyZXR1cm4gdGhpcy5zdGF0JiYodD10aGlzLnN0YXQuZXhlYyh0KSksci5lYWNoKHQsZnVuY3Rpb24oaSl7dmFyIGE9ZS5leGVjRnJhbWUoaSx0KTtyLmlzQXJyYXkoYSk/bj1uLmNvbmNhdChhKTpuLnB1c2goYSl9KSxufSxleGVjRnJhbWU6ZnVuY3Rpb24odCl7cmV0dXJuIHR9fSksdC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKHQsZSxuLHIpe3ModCxhKGUsbixyKSl9ZnVuY3Rpb24gaSh0LGUsbil7dmFyIHI9bi9NYXRoLnNpbihjKTtyZXR1cm4gdC5zZXRMZW5ndGgoci8yKSxlLnN1Yih0KSxlfWZ1bmN0aW9uIGEodCxlLG4pe3ZhciByPW5ldyB1KDEsMCkuYW5nbGVUbyh0KSxpPXItYyxhPXIrYyxzPTYrMypuO3JldHVyblt7eDplLngtcypNYXRoLmNvcyhpKSx5OmUueS1zKk1hdGguc2luKGkpfSxlLHt4OmUueC1zKk1hdGguY29zKGEpLHk6ZS55LXMqTWF0aC5zaW4oYSl9XX1mdW5jdGlvbiBzKHQsZSl7dC5tb3ZlVG8oZVswXS54LGVbMF0ueSksdC5saW5lVG8oZVsxXS54LGVbMV0ueSksdC5saW5lVG8oZVsyXS54LGVbMl0ueSl9dmFyIG89bigzKSx1PShuKDQpLG4oMSksby5WZWN0b3IyKSxjPU1hdGguUEkvNjt0LmV4cG9ydHM9e21ha2VBcnJvdzpyLGdldEVuZFBvaW50Oml9fSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigxMjQpO3QuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7dC5leHBvcnRzPW4oMTQ5KX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDMpLGE9aS5NYXRyaXgzLHM9aS5WZWN0b3IzLG89ZnVuY3Rpb24odCl7dGhpcy5fYXR0cnM9e30sdGhpcy5fYXR0cnMubWF0cml4PW5ldyBhLHIubWl4KHRoaXMuX2F0dHJzLG8uQVRUUlMsdCksdGhpcy5pbml0KCl9O3IuYXVnbWVudChvLHtpc1RyYW5zcG9zZWQ6ITEsc2V0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX2F0dHJzW3RdPWUsdGhpc30sZ2V0OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9hdHRyc1t0XX0sZ2V0RGltOmZ1bmN0aW9uKHQpe3N3aXRjaCh0KXtjYXNlXCJ4XCI6cmV0dXJuIHRoaXMuZ2V0KFwieFwiKTtjYXNlXCJ5XCI6cmV0dXJuIHRoaXMuZ2V0KFwieVwiKTtjYXNlXCJ6XCI6cmV0dXJuIHRoaXMuZ2V0KFwielwiKTtkZWZhdWx0OmNvbnNvbGUuZXJyb3IoXCJcXHU2Y2ExXFx1NjcwOVwiK3QrXCJcXHU0ZWUzXFx1ODg2OFxcdTc2ODRcXHU3ZWY0XFx1NWVhNiFcIil9fSxpbml0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwic3RhcnRcIiksbj10LmdldChcImVuZFwiKSxyPXt4OihlLngrbi54KS8yLHk6KGUueStuLnkpLzJ9O3Quc2V0KFwiY2VudGVyXCIsciksdC5zZXQoXCJ3aWR0aFwiLE1hdGguYWJzKG4ueC1lLngpKSx0LnNldChcImhlaWdodFwiLE1hdGguYWJzKG4ueS1lLnkpKX0sZ2V0V2lkdGg6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXQoXCJ3aWR0aFwiKX0sZ2V0SGVpZ2h0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0KFwiaGVpZ2h0XCIpfSxjb252ZXJ0RGltOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gZT1uLmdldChlKSxlLnN0YXJ0K3QqKGUuZW5kLWUuc3RhcnQpfSxpbnZlcnREaW06ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiBlPW4uZ2V0KGUpLCh0LWUuc3RhcnQpLyhlLmVuZC1lLnN0YXJ0KX0scm90YXRlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldChcIm1hdHJpeFwiKSxyPWUuZ2V0KFwiY2VudGVyXCIpO3JldHVybiBuLnRyYW5zbGF0ZSgtci54LC1yLnkpLG4ucm90YXRlKHQpLG4udHJhbnNsYXRlKHIueCxyLnkpLHRoaXN9LHJlZmxlY3Q6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztzd2l0Y2godCl7Y2FzZVwieFwiOmUuX3N3YXBEaW0oXCJ4XCIpO2JyZWFrO2Nhc2VcInlcIjplLl9zd2FwRGltKFwieVwiKTticmVhaztkZWZhdWx0OmUuX3N3YXBEaW0oXCJ5XCIpfXJldHVybiB0aGlzfSxfc3dhcERpbTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXQodCk7aWYobil7dmFyIHI9bi5zdGFydDtuLnN0YXJ0PW4uZW5kLG4uZW5kPXJ9fSxzY2FsZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLmdldChcIm1hdHJpeFwiKSxpPW4uZ2V0KFwiY2VudGVyXCIpO3JldHVybiByLnRyYW5zbGF0ZSgtaS54LC1pLnkpLHIuc2NhbGUodCxlKSxyLnRyYW5zbGF0ZShpLngsaS55KSx0aGlzfSx0cmFuc2xhdGU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5nZXQoXCJtYXRyaXhcIik7cmV0dXJuIHIudHJhbnNsYXRlKHQsZSksdGhpc30sdHJhbnNwb3NlOmZ1bmN0aW9uKCl7dGhpcy5pc1RyYW5zcG9zZWQ9IXRoaXMuaXNUcmFuc3Bvc2VkfSxjb252ZXJ0UG9pbnQ6ZnVuY3Rpb24odCl7cmV0dXJuIHR9LGludmVydFBvaW50OmZ1bmN0aW9uKHQpe3JldHVybiB0fSxjb252ZXJ0OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7dD10aGlzLmNvbnZlcnRQb2ludCh0KTt2YXIgbj1lLnRyYW5zKHQueCx0LnksMSk7cmV0dXJue3g6bi54LHk6bi55fX0saW52ZXJ0OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLnJldmVyc2UodC54LHQueSwxKTtyZXR1cm4gdGhpcy5pbnZlcnRQb2ludCh7eDpuLngseTpuLnl9KX0sdHJhbnM6ZnVuY3Rpb24odCxlLG4pe249bnx8MDt2YXIgcj10aGlzLGk9ci5nZXQoXCJtYXRyaXhcIiksYT1uZXcgcyh0LGUsbik7cmV0dXJuIGEuYXBwbHlNYXRyaXgoaSksYX0scmV2ZXJzZTpmdW5jdGlvbih0LGUsbil7bj1ufHwwO3ZhciByPXRoaXMsaT1yLmdldChcIm1hdHJpeFwiKSxhPWkuZ2V0SW52ZXJzZSgpLG89bmV3IHModCxlLG4pO3JldHVybiBvLmFwcGx5TWF0cml4KGEpLG99fSksdC5leHBvcnRzPW99LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigzOCksYT1uKDMpLHM9big0KSxvPWEuVmVjdG9yMix1PWEuTWF0cml4MyxjPWEuVmVjdG9yMyxsPWZ1bmN0aW9uKHQpe3ZhciBlPXt9O3IubWl4KGUsbC5BVFRSUyx0KSxsLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLGUpLHRoaXMuX2luaXQoKX07bC5BVFRSUz17c3RhcnRBbmdsZTotTWF0aC5QSS8yLGVuZEFuZ2xlOjMqTWF0aC5QSS8yLGlubmVyOi41fSxyLmV4dGVuZChsLGkpLHIuYXVnbWVudChsLHt0eXBlOlwicGx1c1wiLGlzUG9sYXI6ITAsX2luaXQ6ZnVuY3Rpb24oKXt2YXIgdCxlLG49dGhpcyxyPW4uZ2V0KFwicmFkaXVzXCIpLGk9bi5nZXQoXCJpbm5lclwiKSxhPW4uZ2V0KFwic3RhcnRBbmdsZVwiKSxzPW4uZ2V0KFwiZW5kQW5nbGVcIiksbz1uLmdldChcImNlbnRlclwiKSx1PW4uZ2V0T25lQm94KCksYz11Lm1heFgtdS5taW5YLGw9dS5tYXhZLXUubWluWSxoPU1hdGguYWJzKHUubWluWCkvYyxmPU1hdGguYWJzKHUubWluWSkvbCxnPW4uZ2V0V2lkdGgoKSxwPW4uZ2V0SGVpZ2h0KCk7cC9sPmcvYz8odD1nL2MsZT17eDpvLngtKC41LWgpKmcseTpvLnktKC41LWYpKnQqbH0pOih0PXAvbCxlPXt4Om8ueC0oLjUtaCkqdCpjLHk6by55LSguNS1mKSpwfSkscj1yP3I+MCYmcjw9MT90KnI6cj4wJiZyPD10P3I6dDp0O3ZhciB2PXtzdGFydDphLGVuZDpzfSxkPXtzdGFydDppKnIsZW5kOnJ9O24uc2V0KFwieFwiLHYpLG4uc2V0KFwieVwiLGQpLG4uc2V0KFwicmFkaXVzXCIsciksbi5zZXQoXCJjaXJjbGVDZW50cmVcIixlKSxuLnNldChcImNlbnRlclwiLGUpfSxnZXRDZW50ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXQoXCJjaXJjbGVDZW50cmVcIil9LGdldE9uZUJveDpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLGU9dC5nZXQoXCJzdGFydEFuZ2xlXCIpLG49dC5nZXQoXCJlbmRBbmdsZVwiKSxyPVswLE1hdGguY29zKGUpLE1hdGguY29zKG4pXSxpPVswLE1hdGguc2luKGUpLE1hdGguc2luKG4pXSxhPTUqLU1hdGguUEkvMjthPDMqTWF0aC5QSS8yO2ErPU1hdGguUEkvMillPD1hJiZhPD1uJiYoci5wdXNoKE1hdGguY29zKGEpKSxpLnB1c2goTWF0aC5zaW4oYSkpKTtyZXR1cm57bWluWDpNYXRoLm1pbi5hcHBseShNYXRoLHIpLG1heFg6TWF0aC5tYXguYXBwbHkoTWF0aCxyKSxtaW5ZOk1hdGgubWluLmFwcGx5KE1hdGgsaSksbWF4WTpNYXRoLm1heC5hcHBseShNYXRoLGkpfX0sZ2V0UmFkaXVzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0KFwicmFkaXVzXCIpfSxjb252ZXJ0UG9pbnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0Q2VudGVyKCkscj1lLmlzVHJhbnNwb3NlZD90Lnk6dC54LGk9ZS5pc1RyYW5zcG9zZWQ/dC54OnQueTtyZXR1cm4gcj1lLmNvbnZlcnREaW0ocixcInhcIiksaT1lLmNvbnZlcnREaW0oaSxcInlcIikse3g6bi54K01hdGguY29zKHIpKmkseTpuLnkrTWF0aC5zaW4ocikqaX19LGludmVydFBvaW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldENlbnRlcigpLHI9bmV3IG8odC54LW4ueCx0Lnktbi55KSxpPWUuZ2V0KFwieFwiKSxhPW5ldyB1O2Eucm90YXRlKGkuc3RhcnQpO3ZhciBsPW5ldyBjKDEsMCwwKTtsLmFwcGx5TWF0cml4KGEpLGw9bmV3IG8obC54LGwueSk7dmFyIGg9bC5hbmdsZVRvKHIsaS5lbmQ8aS5zdGFydCk7cy5lcXVhbChoLDIqTWF0aC5QSSkmJihoPTApO3ZhciBmPXIubGVuZ3RoKCksZz1oLyhpLmVuZC1pLnN0YXJ0KTtnPWkuZW5kLWkuc3RhcnQ+MD9nOi1nO3ZhciBwPWUuaW52ZXJ0RGltKGYsXCJ5XCIpLHY9e307cmV0dXJuIHYueD1lLmlzVHJhbnNwb3NlZD9wOmcsdi55PWUuaXNUcmFuc3Bvc2VkP2c6cCx2fX0pLHQuZXhwb3J0cz1sfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigxNjApO3QuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMiksYT1mdW5jdGlvbih0KXtyLm1peCh0aGlzLHQpfTtyLmF1Z21lbnQoYSx7ZGltczpbXSxtYXJnaW46MCxkZWZzOnt9LGZhY2V0VGl0bGU6e3RpdGxlT2Zmc2V0OjI1LGNvbERpbVRpdGxlOnt0aXRsZTp7XCJmb250LXNpemVcIjoxNixcInRleHQtYW5jaG9yXCI6XCJtaWRkbGVcIixmaWxsOlwiIzQ0NFwifX0sY29sVGl0bGU6e3RpdGxlOntcImZvbnQtc2l6ZVwiOjE0LFwidGV4dC1hbmNob3JcIjpcIm1pZGRsZVwiLGZpbGw6XCIjNDQ0XCJ9fSxyb3dUaXRsZTp7dGl0bGU6e1wiZm9udC1zaXplXCI6MTQsXCJ0ZXh0LWFuY2hvclwiOlwibWlkZGxlXCIscm90YXRlOjkwLGZpbGw6XCIjNDQ0XCJ9fSxyb3dEaW1UaXRsZTp7dGl0bGU6e1wiZm9udC1zaXplXCI6MTYsXCJ0ZXh0LWFuY2hvclwiOlwibWlkZGxlXCIscm90YXRlOjkwLGZpbGw6XCIjNDQ0XCJ9fX0scGxvdFJhbmdlOm51bGwsZ2V0RGltVmFsdWVzOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uZGVmc1t0XSxhPVtdO3JldHVybiBhPXImJnIudmFsdWVzP3IudmFsdWVzOmkudmFsdWVzKGUsdCl9LGdldEZpbHRlcjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmRlZnMsbj1mdW5jdGlvbihuKXt2YXIgaT0hMDtyZXR1cm4gci5lYWNoKHQsZnVuY3Rpb24odCl7dmFyIGE9dC5kaW0scz10LnZhbHVlLG89dC52YWx1ZXMsdT0hMDshci5pc051bGwocykmJmEmJih1PWVbYV0mJmVbYV0uZ3JvdXA/ZVthXS5ncm91cChuKT09PXIuaW5kZXhPZihvLHMpOm5bYV09PT1zfHxuW2FdPT09ci5pbmRleE9mKG8scykpLGk9aSYmdX0pLGl9O3JldHVybiBufSxkcmF3VGl0bGVzOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxpPW4uZGltcztyLmVhY2godCxmdW5jdGlvbih0KXtuLmRyYXdGYWNldFRpdGxlKFwiY29sXCIsdCxlKX0pLG4uZHJhd0RpbVRpdGxlKFwiY29sXCIsaVswXSxlKX0sZ2VuZXJhdGVGYWNldHM6ZnVuY3Rpb24oKXt9LGRyYXdGYWNldFRpdGxlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10aGlzLGE9aS5mYWNldFRpdGxlLHM9YS50aXRsZU9mZnNldCxvPVwicm93XCI9PT10P2Eucm93VGl0bGU6YS5jb2xUaXRsZSx1PWUucmVnaW9uLGM9dS5zdGFydCxsPXUuZW5kLGg9XCJyb3dcIj09PXQ/XCJ5XCI6XCJ4XCIsZj1cInJvd1wiPT09dD9cInhcIjpcInlcIixnPXt9O2dbaF09KGxbaF0tY1toXSkvMitjW2hdLGdbZl09bFtmXTt2YXIgcD1cInhcIj09PWg/LTE6MSx2PXIubWl4KHt0ZXh0OmVbaCtcIlZhbHVlXCJdfSxvLnRpdGxlKTt2W2hdPWdbaF0sdltmXT1nW2ZdK3MqcCxuLmFkZFNoYXBlKFwiVGV4dFwiLHthdHRyczp2fSl9LGRyYXdEaW1UaXRsZTpmdW5jdGlvbih0LGUsbil7aWYoIXIuaXNOdWxsKGUpKXt2YXIgaT10aGlzLGE9aS5wbG90UmFuZ2Uscz1pLmRlZnMsbz1cInJvd1wiPT09dD9cInlcIjpcInhcIix1PWkuZmFjZXRUaXRsZSxjPXUudGl0bGVPZmZzZXQsbD1cInhcIj09PW8/dS5jb2xEaW1UaXRsZTp1LnJvd0RpbVRpdGxlLGg9c1tlXSYmc1tlXS5hbGlhc3x8ZSxmPXt9O2Y9XCJ4XCI9PT1vP3t5OmEudGwueSsoYys0MCkqLTEseDooYS50ci54LWEudGwueCkvMithLnRsLnh9Ont4OmEudHIueCsoYys0MCkseTooYS5ici55LWEudHIueSkvMithLnRyLnl9LGg9ci5taXgoe3RleHQ6aCx4OmYueCx5OmYueX0sbC50aXRsZSksbi5hZGRTaGFwZShcIlRleHRcIix7YXR0cnM6aH0pfX19KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCxlKXtpZihhLmlzTnVtZXJpYyh0KSYmYS5pc051bWVyaWMoZSkpcmV0dXJuIHMubnVtYmVyKHQsZSk7aWYoYS5pc1N0cmluZyh0KSYmYS5pc1N0cmluZyhlKSl7XG52YXIgbj1uZXcgdSh0KSxyPW5ldyB1KGUpO2lmKG4uZ2V0VHlwZSgpJiZyLmdldFR5cGUoKSlyZXR1cm4gby5jb2xvcihuLHIpfX1mdW5jdGlvbiBpKHQsZSl7aWYoYS5pc051bWVyaWModCkmJmEuaXNOdW1lcmljKGUpKXJldHVybiBzLnVuTnVtYmVyKHQsZSk7aWYoYS5pc1N0cmluZyh0KSYmYS5pc1N0cmluZyhlKSl7dmFyIG49bmV3IHUodCkscj1uZXcgdShlKTtpZihuLmdldFR5cGUoKSYmci5nZXRUeXBlKCkpcmV0dXJuIG8udW5Db2xvcihuLHIpfX12YXIgYT1uKDEpLHM9bigxODIpLG89bigxNzkpLHU9bigzNyk7dC5leHBvcnRzPXtzaW5ndWxhcjpyLHVuU2luZ3VsYXI6aX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDQ0KSxpPW4oMSksYT1uKDM2KSxzPWZ1bmN0aW9uKHQpe3Muc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2kuZXh0ZW5kKHMsciksaS5hdWdtZW50KHMse3R5cGU6XCJsaW5lYXJcIixpc0xpbmVhcjohMCxtaW46bnVsbCxtYXg6bnVsbCxuaWNlOiExLHRpY2tDb3VudDo1LHRpY2tJbnRlcnZhbDpudWxsLGluaXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKHQudGlja3Mpe3ZhciBlPXQudGlja3Msbj10LnRyYW5zbGF0ZShlWzBdKSxyPXQudHJhbnNsYXRlKGVbZS5sZW5ndGgtMV0pOyhpLmlzTnVsbCh0Lm1pbil8fHQubWluPm4pJiYodC5taW49biksKGkuaXNOdWxsKHQubWF4KXx8dC5tYXg8cikmJih0Lm1heD1yKX1lbHNlIHQubWluPXQudHJhbnNsYXRlKHQubWluKSx0Lm1heD10LnRyYW5zbGF0ZSh0Lm1heCksdC5pbml0VGlja3MoKX0sY2FsY3VsYXRlVGlja3M6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5taW4sbj10Lm1heCxyPXQudGlja0NvdW50LGk9dC50aWNrSW50ZXJ2YWwscz1hLmNhY3VsYXRlKHttaW46ZSxtYXg6bixtaW5Db3VudDpyLG1heENvdW50OnIsaW50ZXJ2YWw6aX0pO3JldHVybiBzLnRpY2tzfSxpbml0VGlja3M6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5jYWxjdWxhdGVUaWNrcygpO2lmKHQubmljZSl0LnRpY2tzPWUsdC5taW49ZVswXSx0Lm1heD1lW2UubGVuZ3RoLTFdO2Vsc2V7dmFyIG49W107aS5lYWNoKGUsZnVuY3Rpb24oZSl7ZT49dC5taW4mJmU8PXQubWF4JiZuLnB1c2goZSl9KSx0LnRpY2tzPW59fSxzY2FsZTpmdW5jdGlvbih0KXtpZihudWxsPT09dHx8dm9pZCAwPT09dClyZXR1cm4gTmFOO3ZhciBlPXRoaXMubWF4LG49dGhpcy5taW47aWYoZT09PW4pcmV0dXJuIDA7dmFyIHI9KHQtbikvKGUtbiksaT10aGlzLnJhbmdlTWluKCksYT10aGlzLnJhbmdlTWF4KCk7cmV0dXJuIGkrciooYS1pKX0saW52ZXJ0OmZ1bmN0aW9uKHQpe3ZhciBlPSh0LXRoaXMucmFuZ2VNaW4oKSkvKHRoaXMucmFuZ2VNYXgoKS10aGlzLnJhbmdlTWluKCkpO3JldHVybiB0aGlzLm1pbitlKih0aGlzLm1heC10aGlzLm1pbil9fSksdC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9ZnVuY3Rpb24odCl7ci5taXgodGhpcyx0KSx0aGlzLmluaXQoKX07ci5hdWdtZW50KGkse2Zvcm1hdHRlcjpudWxsLHJhbmdlOlswLDFdLHRpY2tzOm51bGwsaW5pdDpmdW5jdGlvbigpe30sZ2V0VGlja3M6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC50aWNrcyxuPVtdO3JldHVybiByLmVhY2goZSxmdW5jdGlvbihlKXt2YXIgaTtpPXIuaXNPYmplY3QoZSk/ZTp7dGV4dDp0LmdldFRleHQoZSksdmFsdWU6dC5zY2FsZShlKX0sbi5wdXNoKGkpfSksbn0sZ2V0VGV4dDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmZvcm1hdHRlcjtyZXR1cm4gdD1lP2UodCk6dCwhci5pc051bGwodCkmJnQudG9TdHJpbmd8fCh0PVwiXCIpLHQudG9TdHJpbmcoKX0scmFuZ2VNaW46ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yYW5nZVswXX0scmFuZ2VNYXg6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnJhbmdlO3JldHVybiB0W3QubGVuZ3RoLTFdfSxpbnZlcnQ6ZnVuY3Rpb24oKXt9LHRyYW5zbGF0ZTpmdW5jdGlvbih0KXtyZXR1cm4gdH0sc2NhbGU6ZnVuY3Rpb24oKXt9LGNsb25lOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuY29uc3RydWN0b3Isbj17fTtyZXR1cm4gci5lYWNoKHQsZnVuY3Rpb24oZSxyKXtuW3JdPXRbcl19KSxuZXcgZShuKX0sY2hhbmdlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRpY2tzPW51bGwsci5taXgodGhpcyx0KSx0aGlzLmluaXQoKSx0aGlzfX0pLHQuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMzQpLGE9bigyKSxzPWZ1bmN0aW9uKHQpe3Muc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCksdGhpcy5jb2xSYW5nZT17fSx0aGlzLmJpbldpZHRofHwodGhpcy5iaW5XaWR0aD0uMDMpfTtyLmV4dGVuZChzLGkpLHIuYXVnbWVudChzLHt0eXBlOlwiYmluXCIsYmluV2lkdGg6LjAzLGNvbFJhbmdlOnt9LGJpbkRpbXM6bnVsbCxzZXRSYW5nZTpmdW5jdGlvbih0LGUpe3RoaXMuY29sUmFuZ2VbdF09ZX0sZ2V0U3RhdERpbXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXREaW1zKCl9LGdldEJpbkRpbXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmJpbkRpbXN8fHRoaXMuZ2V0RGltcygpLGU9W107cmV0dXJuIHIuZWFjaCh0LGZ1bmN0aW9uKHQpe3QuaW5kZXhPZihcIi4uXCIpPT09LTEmJmUucHVzaCh0KX0pLGV9LGdldEJpbldpZHRoOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYmluV2lkdGh8fC4wM30sZ2V0Q2VudGVyVmFsdWU6ZnVuY3Rpb24odCxlLG4pe3ZhciByLGk9dGhpcy5nZXRCaW5XaWR0aCgpLGE9KHQtbikvKGUtbik7cmV0dXJuIDE9PT1hJiYoYS09aS80KSxyPShlLW4pKihNYXRoLmZsb29yKGEvaSkqaStpLzIpK259LHRvQmluOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLG49ZS5nZXRCaW5EaW1zKCkscj0wO3I8bi5sZW5ndGg7cisrKXt2YXIgaT1uW3JdLGE9dFtpXSxzPWUuZ2V0RGltUmFuZ2UoaSk7dFtpXT1lLmdldENlbnRlclZhbHVlKGEscy5tYXgscy5taW4pfX0sZ2V0RGltUmFuZ2U6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuY2FjaGVSYW5nZTtyZXR1cm4gblt0XXx8e21pbjowLG1heDowfX0scHJlRXhlY3V0ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49YS5tZXJnZS5hcHBseShudWxsLHQpLGk9ZS5nZXRTdGF0RGltcygpLHM9ZS5jb2xSYW5nZSxvPXt9O3IuZWFjaChpLGZ1bmN0aW9uKHQpe2lmKHNbdF0pb1t0XT1zW3RdO2Vsc2V7dmFyIGU9YS5yYW5nZShuLHQpO29bdF09e21pbjplWzBdLG1heDplWzFdfX19KSxlLmNhY2hlUmFuZ2U9b30sZXhlY0ZyYW1lOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10LnRvSlNPTigpO3JldHVybiByLmVhY2gobixmdW5jdGlvbih0KXtlLnRvQmluKHQpfSksbmV3IGEobil9LGdldFJlZ2lvbjpmdW5jdGlvbigpe3JldHVyblt7eDowLHk6MH1dfX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUpe1widXNlIHN0cmljdFwiO3ZhciBuPVwiIzRFN0NDQ1wiLHI9J1wiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBcIlBpbmdGYW5nIFNDXCIsIFwiSGlyYWdpbm8gU2FucyBHQlwiLCBcIk1pY3Jvc29mdCBZYUhlaVwiLCBcIlxcdTVmYWVcXHU4ZjZmXFx1OTZjNVxcdTllZDFcIiwgU2ltU3VuLCBcInNhbnMtc2VyaWZcIicsaT17ZGVmYXVsdENvbG9yOm4scGxvdENmZzp7bWFyZ2luOlsyMCw4MCw2MCw4MF19LGZhY2V0Q2ZnOnt0eXBlOlwicmVjdFwiLG1hcmdpbjoxMCxmYWNldFRpdGxlOnt0aXRsZU9mZnNldDoxNixjb2xEaW1UaXRsZTp7dGl0bGU6e2ZvbnRTaXplOjE0LHRleHRBbGlnbjpcImNlbnRlclwiLGZpbGw6XCIjOTk5XCJ9fSxjb2xUaXRsZTp7dGl0bGU6e2ZvbnRTaXplOjEyLHRleHRBbGlnbjpcImNlbnRlclwiLGZpbGw6XCIjOTk5XCJ9fSxyb3dUaXRsZTp7dGl0bGU6e2ZvbnRTaXplOjEyLHRleHRBbGlnbjpcImNlbnRlclwiLHJvdGF0ZTo5MCxmaWxsOlwiIzk5OVwifX0scm93RGltVGl0bGU6e3RpdGxlOntmb250U2l6ZToxMix0ZXh0QWxpZ246XCJjZW50ZXJcIixyb3RhdGU6OTAsZmlsbDpcIiM5OTlcIn19fX0sYmluV2lkdGg6LjAzLGZvbnRGYW1pbHk6cixjb2xvcnM6e1wiZGVmYXVsdFwiOltcIiM0RTdDQ0NcIixcIiMzNkIzQzNcIixcIiM0RUNEQTVcIixcIiM5NEUwOEFcIixcIiNFMkYxOTRcIixcIiNFRENDNzJcIixcIiNGOEFCNjBcIixcIiNGOTgxNUNcIixcIiNFQjQ0NTZcIixcIiNDODJCM0RcIl0saW50ZXJ2YWxTdGFjazpbXCIjNEU3Q0NDXCIsXCIjMzZCM0MzXCIsXCIjNEVDREE1XCIsXCIjOTRFMDhBXCIsXCIjRTJGMTk0XCIsXCIjRURDQzcyXCIsXCIjRjhBQjYwXCIsXCIjRjk4MTVDXCIsXCIjRUI0NDU2XCIsXCIjQzgyQjNEXCJdfSxzaGFwZXM6e3BvaW50OltcImhvbGxvd0NpcmNsZVwiLFwiaG9sbG93U3F1YXJlXCIsXCJob2xsb3dEaWFtb25kXCIsXCJob2xsb3dCb3d0aWVcIixcImhvbGxvd1RyaWFuZ2xlXCIsXCJob2xsb3dIZXhhZ29uXCIsXCJjcm9zc1wiLFwidGlja1wiLFwicGx1c1wiLFwiaHlwaGVuXCIsXCJsaW5lXCJdLGxpbmU6W1wibGluZVwiLFwiZGFzaFwiLFwiZG90XCJdLGFyZWE6W1wiYXJlYVwiXX0saHVlczpbXCJyZWRcIixcInllbGxvd1wiLFwiZ3JlZW5cIixcImJsdWVcIixcIm9yYW5nZVwiLFwicHVycGxlXCIsXCJwaW5rXCIsXCJicm93blwiLFwid2hpdGVcIixcImdyYXlcIixcImJsYWNrXCJdLGF4aXM6e3RvcDp7cG9zaXRpb246XCJ0b3BcIix0aXRsZU9mZnNldDozMCx0aXRsZTp7Zm9udFNpemU6MTIsZmlsbDpcIiM5OTlcIn0sbGFiZWxzOntsYWJlbDp7ZmlsbDpcIiM0MDQwNDBcIixmb250U2l6ZToxMn19LHRpY2tMaW5lOntsaW5lV2lkdGg6MSxzdHJva2U6XCIjY2NjXCIsdmFsdWU6NX19LGJvdHRvbTp7cG9zaXRpb246XCJib3R0b21cIix0aXRsZU9mZnNldDo0NSxsYWJlbE9mZnNldDoyMCx0aXRsZTp7Zm9udFNpemU6MTIsdGV4dEFsaWduOlwiY2VudGVyXCIsZmlsbDpcIiM5OTlcIn0sbGFiZWxzOntsYWJlbDp7ZmlsbDpcIiM0MDQwNDBcIixmb250U2l6ZToxMn19LGxpbmU6e2xpbmVXaWR0aDoxLHN0cm9rZTpcIiNjY2NcIn0sdGlja0xpbmU6e2xpbmVXaWR0aDoxLHN0cm9rZTpcIiNjY2NcIix2YWx1ZTo1fX0sbGVmdDp7cG9zaXRpb246XCJsZWZ0XCIsdGl0bGVPZmZzZXQ6NjAsbGFiZWxPZmZzZXQ6MTMsdGl0bGU6e2ZvbnRTaXplOjEyLGZpbGw6XCIjOTk5XCJ9LGxhYmVsczp7bGFiZWw6e2ZpbGw6XCIjNDA0MDQwXCJ9fSxsaW5lOntsaW5lV2lkdGg6MSxzdHJva2U6XCIjY2NjXCJ9LHRpY2tMaW5lOntsaW5lV2lkdGg6MSxzdHJva2U6XCIjY2NjXCIsdmFsdWU6NX0sZ3JpZDp7bGluZTp7c3Ryb2tlOlwiI2Q5ZDlkOVwiLGxpbmVXaWR0aDoxLGxpbmVEYXNoOlsyLDJdfX19LHJpZ2h0Ontwb3NpdGlvbjpcInJpZ2h0XCIsdGl0bGVPZmZzZXQ6NjAsbGFiZWxPZmZzZXQ6MTMsdGl0bGU6e2ZvbnRTaXplOjEyLGZpbGw6XCIjOTk5XCJ9LGxhYmVsczp7bGFiZWw6e2ZpbGw6XCIjNDA0MDQwXCJ9fSxsaW5lOntsaW5lV2lkdGg6MSxzdHJva2U6XCIjY2NjXCJ9LHRpY2tMaW5lOntsaW5lV2lkdGg6MSxzdHJva2U6XCIjY2NjXCIsdmFsdWU6NX19LGNpcmNsZTp7bGFiZWxPZmZzZXQ6NSxsaW5lOntsaW5lV2lkdGg6MSxzdHJva2U6XCIjY2NjXCJ9LGdyaWQ6e2xpbmU6e3N0cm9rZTpcIiNkOWQ5ZDlcIixsaW5lV2lkdGg6MSxsaW5lRGFzaDpbMSwzXX19LGxhYmVsczp7bGFiZWw6e2ZpbGw6XCIjNDA0MDQwXCJ9fX0sZ2F1Z2U6e2dyaWQ6bnVsbCxsYWJlbE9mZnNldDo1LHRpY2tMaW5lOntsaW5lV2lkdGg6MSx2YWx1ZTotMjAsc3Ryb2tlOlwiI2NjY1wifSxzdWJUaWNrOjUsbGFiZWxzOntsYWJlbDp7ZmlsbDpcIiM0MDQwNDBcIn19fSxjbG9jazp7Z3JpZDpudWxsLGxhYmVsT2Zmc2V0OjUsdGlja0xpbmU6e2xpbmVXaWR0aDoxLHZhbHVlOi0yMCxzdHJva2U6XCIjQzBEMEUwXCJ9LHN1YlRpY2s6NSxsYWJlbHM6e2xhYmVsOntmaWxsOlwiIzQwNDA0MFwifX19LHJhZGl1czp7dGl0bGVPZmZzZXQ6NDUsbGFiZWxzOntsYWJlbDp7ZmlsbDpcIiM0MDQwNDBcIn19LGxpbmU6e2xpbmVXaWR0aDoxLHN0cm9rZTpcIiNjY2NcIn0sZ3JpZDp7bGluZTp7c3Ryb2tlOlwiI2Q5ZDlkOVwiLGxpbmVXaWR0aDoxLGxpbmVEYXNoOlsyLDJdfSx0eXBlOlwiY2lyY2xlXCJ9fX0sbGFiZWxzOntvZmZzZXQ6MTQsbGFiZWw6e2ZpbGw6XCIjNjY2XCIsZm9udFNpemU6MTJ9fSx0cmVlbWFwTGFiZWxzOntvZmZzZXQ6MTAsbGFiZWw6e2ZpbGw6XCIjZmZmXCIsZm9udFNpemU6MTQsdGV4dEJhc2VsaW5lOlwidG9wXCIsZm9udFN0eWxlOlwiYm9sZFwifX0saW5uZXJMYWJlbHM6e2xhYmVsOntmaWxsOlwiI2ZmZlwiLGZvbnRTaXplOjEyfX0sdGhldGFMYWJlbHM6e2xhYmVsTGluZTp7bGluZVdpZHRoOjF9LGxhYmVsSGVpZ2h0OjE0LG9mZnNldDozMH0sbGVnZW5kOntyaWdodDp7cG9zaXRpb246XCJyaWdodFwiLGJhY2s6bnVsbCxzcGFjaW5nWDoxMCxzcGFjaW5nWToxMixtYXJrZXJBbGlnbjpcImNlbnRlclwiLHdvcmRTcGFjZWluZzoxMn0sbGVmdDp7cG9zaXRpb246XCJsZWZ0XCIsYmFjazpudWxsLHNwYWNpbmdYOjEwLHNwYWNpbmdZOjEyLG1hcmtlckFsaWduOlwiY2VudGVyXCIsd29yZFNwYWNlaW5nOjEyfSx0b3A6e3Bvc2l0aW9uOlwidG9wXCIsdGl0bGU6bnVsbCxiYWNrOm51bGwsc3BhY2luZ1g6MTYsc3BhY2luZ1k6MTAsbWFya2VyQWxpZ246XCJjZW50ZXJcIix3b3JkU3BhY2Vpbmc6MTJ9LGJvdHRvbTp7cG9zaXRpb246XCJib3R0b21cIix0aXRsZTpudWxsLGJhY2s6bnVsbCxzcGFjaW5nWDoxNixzcGFjaW5nWToxMCxtYXJrZXJBbGlnbjpcImNlbnRlclwiLHdvcmRTcGFjZWluZzoxMn0sc2l6ZTp7d2lkdGg6MjAsaGVpZ2h0OjE1Nn19LHRvb2x0aXA6e2Nyb3NzaGFpcnM6ITEsb2Zmc2V0OjE1LGNyb3NzTGluZTp7c3Ryb2tlOlwiIzY2NlwifSx3b3JkU3BhY2Vpbmc6NixtYXJrZXJDZmc6e3N5bWJvbDpcImNpcmNsZVwiLHJhZGl1czozfX0sYWN0aXZlU2hhcGU6e3BvaW50OntyYWRpdXM6NSxmaWxsT3BhY2l0eTouN30saG9sbG93UG9pbnQ6e2xpbmVXaWR0aDoyLHJhZGl1czo0fSxpbnRlcnZhbDp7ZmlsbE9wYWNpdHk6Ljd9LGhvbGxvd0ludGVydmFsOntsaW5lV2lkdGg6Mn0sYXJlYTp7ZmlsbE9wYWNpdHk6Ljg1fSxob2xsb3dBcmVhOntsaW5lV2lkdGg6Mn0sbGluZTp7bGluZVdpZHRoOjJ9LHBvbHlnb246e2ZpbGxPcGFjaXR5Oi43NX19LHNoYXBlOntwb2ludDp7bGluZVdpZHRoOjEsZmlsbDpuLHJhZGl1czo0fSxob2xsb3dQb2ludDp7ZmlsbDpcIiNmZmZcIixsaW5lV2lkdGg6MSxzdHJva2U6bixyYWRpdXM6M30saW50ZXJ2YWw6e2xpbmVXaWR0aDowLGZpbGw6bixmaWxsT3BhY2l0eTouODV9LHBpZTp7bGluZVdpZHRoOjEsc3Ryb2tlOlwiI2ZmZlwifSxob2xsb3dJbnRlcnZhbDp7ZmlsbDpcIiNmZmZcIixzdHJva2U6bixmaWxsT3BhY2l0eTowLGxpbmVXaWR0aDoxfSxhcmVhOntsaW5lV2lkdGg6MCxmaWxsOm4sZmlsbE9wYWNpdHk6LjZ9LHBvbHlnb246e2xpbmVXaWR0aDowLGZpbGw6bixmaWxsT3BhY2l0eToxfSxob2xsb3dQb2x5Z29uOntmaWxsOlwiI2ZmZlwiLHN0cm9rZTpuLGZpbGxPcGFjaXR5OjAsbGluZVdpZHRoOjF9LGhvbGxvd0FyZWE6e2ZpbGw6XCIjZmZmXCIsc3Ryb2tlOm4sZmlsbE9wYWNpdHk6MCxsaW5lV2lkdGg6MX0sbGluZTp7c3Ryb2tlOm4sbGluZVdpZHRoOjEsZmlsbDpudWxsfX0sZ3VpZGU6e3RleHQ6e2ZpbGw6XCIjNjY2XCIsZm9udFNpemU6MTJ9LGxpbmU6e3N0cm9rZTpuLGxpbmVEYXNoOlswLDIsMl19LHJlY3Q6e2xpbmVXaWR0aDowLGZpbGw6bixmaWxsT3BhY2l0eTouMX0sdGFnOntsaW5lOntzdHJva2U6bixsaW5lRGFzaDpbMCwyLDJdfSx0ZXh0OntmaWxsOlwiIzY2NlwiLGZvbnRTaXplOjEyLHRleHRBbGlnbjpcImNlbnRlclwifSxyZWN0OntsaW5lV2lkdGg6MCxmaWxsOm4sZmlsbE9wYWNpdHk6LjF9fX0sdG9vbHRpcE1hcmtlcjp7ZmlsbDpcIiNmZmZcIixzeW1ib2w6XCJjaXJjbGVcIixsaW5lV2lkdGg6MixzdHJva2U6bixyYWRpdXM6NH19O3QuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigxKSxpPW4oMTIpLGE9big2Nikscz1pLkdyb3VwQmFzZSxvPWEuU2hvd0xhYmVscyx1PVwieC1jaGFydC1heGlzXCIsYz1uKDEzMSksbD1mdW5jdGlvbih0KXtsLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtsLkNGRz17ekluZGV4OjQsdGlja3M6bnVsbCxsaW5lOm51bGwsdGlja0xpbmU6bnVsbCxzdWJUaWNrOm51bGwsZ3JpZDpudWxsLGxhYmVsczp7bGFiZWw6e30sYXV0b1JvdGF0ZTohMH0sdGl0bGU6e30sX3RpdGxlOnt0ZXh0QmFzZWxpbmU6XCJtaWRkbGVcIn0sYXV0b1BhaW50OiEwLGxhYmVsT2Zmc2V0OjEwLHRpdGxlT2Zmc2V0OjIwLGFuaW1hdGU6ITEsZm9ybWF0dGVyOm51bGwsZmlyc3RUaWNrOiEwfSxyLm1peGluKGwsW29dKSxyLmV4dGVuZChsLHMpLHIuYXVnbWVudChsLHtfaW5pdENmZzpmdW5jdGlvbigpe3RoaXMuZGVlcFNldChcInRpdGxlXCIpfSxfYmVmb3JlUmVuZGVyVUk6ZnVuY3Rpb24oKXtsLnN1cGVyY2xhc3MuX2JlZm9yZVJlbmRlclVJLmNhbGwodGhpcyk7dmFyIHQ9dGhpcy5nZXQoXCJsYWJlbE9mZnNldFwiKTswPT09dCYmdGhpcy5zZXQoXCJsYWJlbE9mZnNldFwiLC4wMDEpfSxfcmVuZGVyVUk6ZnVuY3Rpb24oKXtsLnN1cGVyY2xhc3MuX3JlbmRlclVJLmNhbGwodGhpcyk7dmFyIHQ9dGhpcy5nZXQoXCJsYWJlbHNcIik7dCYmdGhpcy5yZW5kZXJMYWJlbHMoKSx0aGlzLmdldChcImF1dG9QYWludFwiKSYmdGhpcy5wYWludCgpLHRoaXMuZ2V0KFwidGl0bGVcIikmJnRoaXMucmVuZGVyVGl0bGUoKSx0aGlzLnNvcnQoKX0sX3BhcnNlVGlja3M6ZnVuY3Rpb24odCl7dD10fHxbXTtmb3IodmFyIGU9dC5sZW5ndGgsbj0wO248ZTtuKyspe3ZhciBpPXRbbl07ci5pc09iamVjdChpKXx8KHRbbl09dGhpcy5wYXJzZVRpY2soaSxuLGUpKX1yZXR1cm4gdGhpcy5zZXQoXCJ0aWNrc1wiLHQpLHR9LF9hZGRUaWNrSXRlbTpmdW5jdGlvbih0LGUsbil7dmFyIHI9dGhpcy5nZXQoXCJ0aWNrSXRlbXNcIiksaT17eDE6ZS54LHkxOmUueX0sYT10aGlzLmdldFRpY2tFbmQoZSxuLHQpO2kueDI9YS54LGkueTI9YS55LHJ8fChyPVtdLHRoaXMuc2V0KFwidGlja0l0ZW1zXCIscikpLHIucHVzaChpKX0sX2Zvcm1hdFBvaW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0KFwiZm9ybWF0dGVyXCIpO3JldHVybiBlJiYodD1lLmNhbGwodGhpcyx0KSksdH0sX3JlbmRlckxpbmVzOmZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLmdldChcImxpbmVcIik7aWYoZSl7dD10aGlzLmdldExpbmVQYXRoKCksZT1yLm1peCh7cGF0aDp0fSxlKTt2YXIgbj10aGlzLmFkZFNoYXBlKFwiUGF0aFwiLHtlbENsczp1K1wiLWxpbmVcIixhdHRyczplfSk7dGhpcy5zZXQoXCJsaW5lU2hhcGVcIixuKX19LF9wcm9jZXNzVGlja3M6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJsYWJlbHNcIiksbj10LmdldChcInN1YlRpY2tcIiksaT10LmdldChcInRpY2tMaW5lXCIpLGE9dC5nZXQoXCJ0aWNrc1wiKTthPXQuX3BhcnNlVGlja3MoYSksci5lYWNoKGEsZnVuY3Rpb24obixyKXt2YXIgYT10LmdldFRpY2tQb2ludChuLnZhbHVlLHIpO2kmJnQuX2FkZFRpY2tJdGVtKHIsYSksZSYmdC5hZGRMYWJlbCh0Ll9mb3JtYXRQb2ludChuLnRleHQpLGEscil9KSxuJiZyLmVhY2goYSxmdW5jdGlvbihlLHIpe3ZhciBzPXI/ZS52YWx1ZS1hW3ItMV0udmFsdWU6ZS52YWx1ZTtzLz10LmdldChcInN1YlRpY2tcIik7Zm9yKHZhciBvPTE7bzxuO28rKyl7dmFyIHU9e3RleHQ6XCJcIix2YWx1ZTpyP2Fbci0xXS52YWx1ZStvKnM6bypzfTtpZihpKXt2YXIgYz10LmdldFRpY2tQb2ludCh1LnZhbHVlKSxsPXBhcnNlSW50KC42KmkudmFsdWUsMTApO3QuX2FkZFRpY2tJdGVtKG8tMSxjLGwpfX19KX0sX3JlbmRlclRpY2tzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwidGlja0l0ZW1zXCIpLG49dC5nZXQoXCJ0aWNrTGluZVwiKSxpPVwiXCIsYT1yLm1peCh7fSxuKTtpZihlKXtyLmVhY2goZSxmdW5jdGlvbih0KXt2YXIgZT1yLnN1YnN0aXR1dGUoXCJNe3gxfSB7eTF9THt4Mn0ge3kyfVwiLHQpO2krPWV9KSxkZWxldGUgYS52YWx1ZSxhLnBhdGg9aTt2YXIgcz10LmFkZFNoYXBlKFwiUGF0aFwiLHtlbENsczp1K1wiLXRpY2tzXCIsYXR0cnM6YX0pO3Quc2V0KFwidGlja1NoYXBlXCIscyl9fSxfcmVuZGVyR3JpZDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwiZ3JpZFwiKTtpZih0KXtyLmlzTnVsbCh0LmFuaW1hdGUpJiYodC5hbmltYXRlPXRoaXMuZ2V0KFwiYW5pbWF0ZVwiKSk7dmFyIGU9dGhpcy5hZGRHcm91cChjLHQpO3RoaXMuc2V0KFwiZ3JpZEdyb3VwXCIsZSl9fSxwYWludDpmdW5jdGlvbigpe3RoaXMuX3JlbmRlckxpbmVzKCksdGhpcy5fcHJvY2Vzc1RpY2tzKCksdGhpcy5fcmVuZGVyVGlja3MoKSx0aGlzLl9yZW5kZXJHcmlkKCk7dmFyIHQ9dGhpcy5nZXQoXCJsYWJlbHNcIik7dCYmdC5hdXRvUm90YXRlJiZ0aGlzLmF1dG9Sb3RhdGVMYWJlbHMoKX0scGFyc2VUaWNrOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm57dGV4dDp0LHZhbHVlOmUvKG4tMSl9fSxnZXRUZXh0QW5jaG9yOmZ1bmN0aW9uKHQpe3ZhciBlLG49TWF0aC5hYnModC55L3QueCk7cmV0dXJuIGU9bj49MT9cImNlbnRlclwiOnQueD4wP1wibGVmdFwiOlwicmlnaHRcIn0sYWRkTGFiZWw6ZnVuY3Rpb24odCxlLG4pe3ZhciByLGk9dGhpcy5nZXQoXCJsYWJlbHNHcm91cFwiKSxhPXt9O2lmKGkpe3ZhciBzPXRoaXMuZ2V0KFwibGFiZWxPZmZzZXRcIil8fDEwLG89dGhpcy5nZXRTaWRlVmVjdG9yKHMsZSxuKTtlPXt4OmUueCtvLngseTplLnkrby55fSxhLnRleHQ9dCxhLng9ZS54LGEueT1lLnksYS50ZXh0QWxpZ249dGhpcy5nZXRUZXh0QW5jaG9yKG8pLHI9aS5hZGRMYWJlbChhKX1yZXR1cm4gcn0sZ2V0TWF4TGFiZWxXaWR0aDpmdW5jdGlvbih0KXt2YXIgZT10LmdldChcImNoaWxkcmVuXCIpLG49MDtyZXR1cm4gci5lYWNoKGUsZnVuY3Rpb24odCl7dmFyIGU9dC5nZXRCQkJveCgpLHI9ZS53aWR0aDtuPHImJihuPXIpfSksbn0scmVtb3ZlOmZ1bmN0aW9uKCl7bC5zdXBlcmNsYXNzLnJlbW92ZS5jYWxsKHRoaXMpO3ZhciB0PXRoaXMuZ2V0KFwiZ3JpZEdyb3VwXCIpO3QmJnQucmVtb3ZlKCksdGhpcy5yZW1vdmVMYWJlbHMoKX0sYXV0b1JvdGF0ZUxhYmVsczpmdW5jdGlvbigpe30scmVuZGVyVGl0bGU6ZnVuY3Rpb24oKXt9LGdldExpbmVQYXRoOmZ1bmN0aW9uKCl7fSxnZXRUaWNrUG9pbnQ6ZnVuY3Rpb24oKXt9LGdldFRpY2tFbmQ6ZnVuY3Rpb24oKXt9LGdldFNpZGVWZWN0b3I6ZnVuY3Rpb24oKXt9fSksdC5leHBvcnRzPWx9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDkpLGk9bigxMiksYT1pLkdyb3VwQmFzZSxzPWZ1bmN0aW9uKHQpe3Muc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3MuQ0ZHPXt0aXRsZTp7fSx0aXRsZVRleHQ6bnVsbCxwbG90UmFuZ2U6bnVsbCxfdGl0bGU6e3RleHQ6XCIgXCIsZmlsbDpcIiMzMzNcIix0ZXh0QmFzZWxpbmU6XCJtaWRkbGVcIn0sZHg6MCxkeTowLHBvc2l0aW9uOiEwfSxyLmV4dGVuZChzLGEpLHIuYXVnbWVudChzLHtfaW5pdENmZzpmdW5jdGlvbigpe3Muc3VwZXJjbGFzcy5faW5pdENmZy5jYWxsKHRoaXMpLHIuaXNOdWxsKHRoaXMuZ2V0KFwidGl0bGVcIikpJiZ0aGlzLnNldChcInRpdGxlVGV4dFwiLG51bGwpLHRoaXMuZGVlcFNldChcInRpdGxlXCIpfSxfYmVmb3JlUmVuZGVyVUk6ZnVuY3Rpb24oKXtzLnN1cGVyY2xhc3MuX2JlZm9yZVJlbmRlclVJLmNhbGwodGhpcyk7dmFyIHQ9dGhpcy5nZXQoXCJ0aXRsZVwiKTt0aGlzLnNldChcIml0ZW1zR3JvdXBcIix0aGlzLmFkZEdyb3VwKCkpLHRoaXMuc2V0KFwidGl0bGVTaGFwZVwiLHRoaXMuYWRkU2hhcGUoXCJUZXh0XCIse2F0dHJzOnR9KSl9LF9yZW5kZXJVSTpmdW5jdGlvbigpe3Muc3VwZXJjbGFzcy5fcmVuZGVyVUkuY2FsbCh0aGlzKSx0aGlzLl9yZW5kZXJUaXRsZSgpfSxfcmVuZGVyVGl0bGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcInRpdGxlU2hhcGVcIiksZT10aGlzLmdldChcInRpdGxlVGV4dFwiKTt0LmF0dHIoe3g6MCx0ZXh0OmV9KX0sc2V0UG9zaXRpb246ZnVuY3Rpb24odCl7dD10P3Q6dGhpcy5nZXQoXCJwb3NpdGlvblwiKTt2YXIgZT10aGlzLmdldChcInBsb3RSYW5nZVwiKTtpZihlKXt2YXIgbj1lLnRsLHI9ZS5icixpPXRoaXMuZ2V0KFwiZHhcIiksYT10aGlzLmdldChcImR5XCIpLHM9dGhpcy5nZXRCQkJveCgpLndpZHRoLG89MCx1PTA7c3dpdGNoKHQpe2Nhc2VcInRvcFwiOm89bi54LHU9bi55O2JyZWFrO2Nhc2VcImxlZnRcIjpvPW4ueCx1PShuLnkrci55KS8yO2JyZWFrO2Nhc2VcInJpZ2h0XCI6bz1yLngtcyx1PShuLnkrci55KS8yO2JyZWFrO2Nhc2VcImJvdHRvbVwiOm89KG4ueCtyLngpLzItcy8yLHU9ci55fXRoaXMubW92ZShvK2ksdSthKSx0aGlzLnNldChcInBvc2l0aW9uXCIsdCl9fSxnZXRDb3VudDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldChcIml0ZW1zR3JvdXBcIikuZ2V0KFwiY2hpbGRyZW5cIikubGVuZ3RofSxnZXRMZWF2ZUNvdW50OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJpdGVtc0dyb3VwXCIpLGU9dC5nZXQoXCJjaGlsZHJlblwiKSxuPVtdO3JldHVybiBuPXIuZmlsdGVyKGUsZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0KFwiY2hlY2tlZFwiKX0pLG4ubGVuZ3RofSxzZXRJdGVtczpmdW5jdGlvbih0KXt0aGlzLnNldChcIml0ZW1zXCIsdCksdGhpcy5jbGVhckl0ZW1zKCksdGhpcy5fcmVuZGVyVUkoKX0sYWRkSXRlbTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldChcIml0ZW1zXCIpO2UucHVzaCh0KSx0aGlzLmNsZWFySXRlbXMoKSx0aGlzLl9yZW5kZXJVSSgpfSxjbGVhckl0ZW1zOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJpdGVtc0dyb3VwXCIpO3QuY2xlYXIoKX19KSx0LmV4cG9ydHM9c30sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMTM5KTt0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCxlKXtyZXR1cm4gdD5lP2U6dH1mdW5jdGlvbiBpKHQsZSl7cmV0dXJuIHQ+ZT90OmV9ZnVuY3Rpb24gYSh0LGUpe3RoaXMuc3RhcnQ9dCx0aGlzLmVuZD1lLHRoaXMuaW5pdCgpfXZhciBzPW4oMSk7YS5DRkc9e3N0YXJ0Om51bGwsZW5kOm51bGwsYmFja2dyb3VuZDpudWxsfSxzLmF1Z21lbnQoYSx7aW5pdDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LnN0YXJ0LG49dC5lbmQsYT10LnRsPXt9O2EueD1yKGUueCxuLngpLGEueT1yKGUueSxuLnkpO3ZhciBzPXQudHI9e307cy54PWkoZS54LG4ueCkscy55PXIoZS55LG4ueSk7dmFyIG89dC5ibD17fTtvLng9cihlLngsbi54KSxvLnk9aShlLnksbi55KTt2YXIgdT10LmJyPXt9O3UueD1pKGUueCxuLngpLHUueT1pKGUueSxuLnkpO3ZhciBjPXQuY2M9e307Yy54PSh1LngtYS54KS8yK2EueCxjLnk9KHUueS1hLnkpLzIrYS55fSxyZXNldDpmdW5jdGlvbih0LGUpe3RoaXMuc3RhcnQ9dCx0aGlzLmVuZD1lLHRoaXMuaW5pdCgpfSxpc0luUmFuZ2U6ZnVuY3Rpb24odCxlKXtzLmlzT2JqZWN0KHQpJiYoZT10LnksdD10LngpO3ZhciBuPXRoaXMscj1uLnRsLGk9bi5icjtyZXR1cm4gdD49ci54JiZ0PD1pLngmJmU+PXIueSYmZTw9aS55fSxpc0luVmVydGljYWw6ZnVuY3Rpb24odCl7cy5pc09iamVjdCh0KSYmKHQ9dC55KTt2YXIgZT10aGlzLG49ZS50bCxyPWUuYnI7cmV0dXJuIHQ+PW4ueSYmdDw9ci55fSxpc0luSG9yaXpvbnRhbDpmdW5jdGlvbih0KXtzLmlzT2JqZWN0KHQpJiYodD10LngpO3ZhciBlPXRoaXMsbj1lLnRsLHI9ZS5icjtyZXR1cm4gdD49bi54JiZ0PD1yLnh9LGdldFdpZHRoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy50bCxlPXRoaXMuYnI7cmV0dXJuIGUueC10Lnh9LGdldEhlaWdodDpmdW5jdGlvbigpe3ZhciB0PXRoaXMudGwsZT10aGlzLmJyO3JldHVybiBlLnktdC55fX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMzkpLGE9ZnVuY3Rpb24odCl7dC5pbm5lcj10LmlubmVyfHwwLGEuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3IuZXh0ZW5kKGEsaSksci5hdWdtZW50KGEse3R5cGU6XCJwb2xhclwifSksdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDE2MSk7dC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9TWF0aC5QSS8xODAsYT0xODAvTWF0aC5QSSxzPWZ1bmN0aW9uKHQpe3IubWl4KHRoaXMsdCl9O3IuYXVnbWVudChzLHtiYXNpYzpudWxsLHRvUmFkaWFuczpmdW5jdGlvbih0KXtyZXR1cm4gaSp0fSx0b0RlZ3JlZXM6ZnVuY3Rpb24odCl7cmV0dXJuIHQqYX0scHJvamVjdDpmdW5jdGlvbih0LGUpe3JldHVybnt4OnQseTplfX0saW52ZXJ0OmZ1bmN0aW9uKHQpe3JldHVybnt4OnQueCx5OnQueX19fSksdC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigxMCksYT1mdW5jdGlvbih0KXthLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtyLmV4dGVuZChhLGkpLHIuYXVnbWVudChhLHt0eXBlOlwicmVnaW9uXCJ9KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMzQpLGk9bigxKSxhPW4oMikscz1mdW5jdGlvbih0KXtzLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtpLmV4dGVuZChzLHIpLGkuYXVnbWVudChzLHt0eXBlOlwic21vb3RoXCIsYmFuZFdpZHRoOi4wMSxjb2xSYW5nZTp7fSxzZXRSYW5nZTpmdW5jdGlvbih0LGUpe3RoaXMuY29sUmFuZ2VbdF09ZX0sZ2V0U3RhdERpbXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXREaW1zKCksbj1lLmxlbmd0aCxyPVtlW24tMV1dO3JldHVybiByfSxleGVjU21vb3RoOmZ1bmN0aW9uKHQpe3JldHVybiB0fSxnZXRYRGltOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0RGltcygpO2lmKGUubGVuZ3RoPDIpdGhyb3dcInlvdSBtdXN0IHN1cHBvcnQgdGhlIHgseSBkaW1lbnNpb24hISFcIjtyZXR1cm4gZVswXX0sZ2V0WURpbTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldERpbXMoKTtpZihlLmxlbmd0aDwyKXRocm93XCJ5b3UgbXVzdCBzdXBwb3J0IHRoZSB4LHkgZGltZW5zaW9uISEhXCI7cmV0dXJuIGVbMV19LGdldFpEaW06ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXREaW1zKCk7aWYoZS5sZW5ndGg8Myl0aHJvd1wieW91IG11c3Qgc3VwcG9ydCB0aGUgeCx5LHogZGltZW5zaW9uISEhXCI7cmV0dXJuIGVbMl19LGdldERhdGE6ZnVuY3Rpb24odCl7dmFyIGU9W10sbj10aGlzLmRpbXM7cmV0dXJuIHQuZWFjaChmdW5jdGlvbih0KXt2YXIgcj1bXTtpLmVhY2gobixmdW5jdGlvbihlKXtyLnB1c2godFtlXSl9KSxlLnB1c2gocil9KSxlfSxnZXREaW1SYW5nZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLmNvbFJhbmdlW2VdO2lmKCFyKXt2YXIgaT1hLnJhbmdlKHQsZSk7cj17bWluOmlbMF0sbWF4OmlbMV19fXJldHVybiByfSxnYXRTdGVwOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uZ2V0RGltUmFuZ2UodCxlKSxpPXIubWluLGE9ci5tYXgscz1uLmJhbmRXaWR0aCxvPShhLWkpKnM7cmV0dXJuIG99LGdldEludGVyQXJyYXk6ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dGhpcyxyPW4uZ2F0U3RlcCh0LGUpLGk9bi5nZXREaW1SYW5nZSh0LGUpLGE9aS5taW4scz1pLm1heCxvPVtdLHU9YTt1PD1zO3UrPXIpby5wdXNoKHUpO3JldHVybiBvfSxleGVjRnJhbWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0WERpbSgpLHI9ZS5nZXRZRGltKCk7dD1hLnNvcnQodCxuKTt2YXIgcz1lLmdldERhdGEodCksbz1lLmdldEludGVyQXJyYXkodCxuKSx1PWUuZXhlY1Ntb290aChzLG8sdCksYz10LnJvd09iamVjdCgwKSxsPVtdO3JldHVybiBpLmVhY2godSxmdW5jdGlvbih0KXt2YXIgZT1pLm1peCh7fSxjKTtlW25dPXRbMF0sZVtyXT10WzFdLGwucHVzaChlKX0pLG5ldyBhKGwpfX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUsbixyKXtyZXR1cm57eDpNYXRoLmNvcyhyKSpuK3QseTpNYXRoLnNpbihyKSpuK2V9fWZ1bmN0aW9uIGkodCxlLG4scil7aWYocil7aWYodDxlKXZhciBpPWUtdCxhPTIqTWF0aC5QSS1uK3Q7ZWxzZSBpZih0Pm4pdmFyIGk9MipNYXRoLlBJLXQrZSxhPXQtbn1lbHNlIHZhciBpPXQtZSxhPW4tdDtyZXR1cm4gaT5hP246ZX1mdW5jdGlvbiBhKHQsZSxuLHIpe3ZhciBhPTA7cmV0dXJuIG4tZT49MipNYXRoLlBJJiYoYT0yKk1hdGguUEkpLGU9bC5tb2QoZSwyKk1hdGguUEkpLG49bC5tb2QobiwyKk1hdGguUEkpK2EsdD1sLm1vZCh0LDIqTWF0aC5QSSkscj9lPj1uP3Q+biYmdDxlP3Q6aSh0LG4sZSwhMCk6dDxlfHx0Pm4/dDppKHQsZSxuKTplPD1uP2U8dCYmdDxuP3Q6aSh0LGUsbiwhMCk6dD5lfHx0PG4/dDppKHQsbixlKX1mdW5jdGlvbiBzKHQsZSxuLHIsaSxzLG8sdSxsKXt2YXIgaD1uZXcgYyhvLHUpLGY9bmV3IGModCxlKSxnPW5ldyBjKDEsMCkscD1jLnN1YihoLGYpLHY9Zy5hbmdsZVRvKHApO3Y9YSh2LHIsaSxzKTt2YXIgZD1uZXcgYyhuKk1hdGguY29zKHYpK3QsbipNYXRoLnNpbih2KStlKTtsJiYobC54PWQueCxsLnk9ZC55KTt2YXIgeD1oLmRpc3RhbmNlVG8oZCk7cmV0dXJuIHh9ZnVuY3Rpb24gbyh0LGUsbixpLHMsbyl7dmFyIHU9MCxjPU1hdGguUEkvMixsPU1hdGguUEksZj0zKk1hdGguUEkvMixnPVtdLHA9YSh1LGkscyxvKTtwPT09dSYmZy5wdXNoKHIodCxlLG4sdSkpLHA9YShjLGkscyxvKSxwPT09YyYmZy5wdXNoKHIodCxlLG4sYykpLHA9YShsLGkscyxvKSxwPT09bCYmZy5wdXNoKHIodCxlLG4sbCkpLHA9YShmLGkscyxvKSxwPT09ZiYmZy5wdXNoKHIodCxlLG4sZikpLGcucHVzaChyKHQsZSxuLGkpKSxnLnB1c2gocih0LGUsbixzKSk7dmFyIHY9MS8wLGQ9LSgxLzApLHg9MS8wLG09LSgxLzApO3JldHVybiBoLmVhY2goZyxmdW5jdGlvbih0KXt2PnQueCYmKHY9dC54KSxkPHQueCYmKGQ9dC54KSx4PnQueSYmKHg9dC55KSxtPHQueSYmKG09dC55KX0pLHttaW5YOnYsbWluWTp4LG1heFg6ZCxtYXhZOm19fXZhciB1PW4oMyksYz11LlZlY3RvcjIsbD1uKDQpLGg9bigxKTt0LmV4cG9ydHM9e25lYXJBbmdsZTphLHByb2plY3RQb2ludDpmdW5jdGlvbih0LGUsbixyLGksYSxvLHUpe3ZhciBjPXt9O3JldHVybiBzKHQsZSxuLHIsaSxhLG8sdSxjKSxjfSxwb2ludERpc3RhbmNlOnMsYm94Om99fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUsbixyLGkpe3ZhciBhPTEtaTtyZXR1cm4gYSphKihhKnIrMyppKm4pK2kqaSooaSp0KzMqYSplKX1mdW5jdGlvbiBpKHQsZSxuLHIsaSl7dmFyIGE9MS1pO3JldHVybiAzKigoKGUtdCkqYSsyKihuLWUpKmkpKmErKHItbikqaSppKX1mdW5jdGlvbiBhKHQsZSxuLGksYSxzLG8sYyxsLGgsZil7Zm9yKHZhciBnLHA9LjAwNSx2PTEvMCxkPTFlLTQseD1uZXcgdShsLGgpLG09MDttPDE7bSs9LjA1KXt2YXIgeT1uZXcgdShyKHQsbixhLG8sbSkscihlLGkscyxjLG0pKSxfPXkuZGlzdGFuY2VUb1NxdWFyZWQoeCk7Xzx2JiYoZz1tLHY9Xyl9Zm9yKHZhciB2PTEvMCxTPTA7UzwzMiYmIShwPGQpO1MrKyl7dmFyIHc9Zy1wLGI9ZytwLHk9bmV3IHUocih0LG4sYSxvLHcpLHIoZSxpLHMsYyx3KSksXz15LmRpc3RhbmNlVG9TcXVhcmVkKHgpO2lmKHc+PTAmJl88dilnPXcsdj1fO2Vsc2V7dmFyIE09bmV3IHUocih0LG4sYSxvLGIpLHIoZSxpLHMsYyxiKSksQT1NLmRpc3RhbmNlVG9TcXVhcmVkKHgpO2I8PTEmJkE8dj8oZz1iLHY9QSk6cCo9LjV9fXJldHVybiBmJiYoZi54PXIodCxuLGEsbyxnKSxmLnk9cihlLGkscyxjLGcpKSxNYXRoLnNxcnQodil9ZnVuY3Rpb24gcyh0LGUsbixyKXt2YXIgaT0zKnQtOSplKzkqbi0zKnIsYT02KmUtMTIqbis2KnIscz0zKm4tMypyLG89W107aWYoYy5lcXVhbChpLDApKXtpZighYy5lcXVhbChhLDApKXt2YXIgdT0tcy9hO3U+PTAmJnU8PTEmJm8ucHVzaCh1KX19ZWxzZXt2YXIgbD1hKmEtNCppKnM7aWYoYy5lcXVhbChsLDApKW8ucHVzaCgtYS8oMippKSk7ZWxzZSBpZihsPjApe3ZhciBoPU1hdGguc3FydChsKSx1PSgtYStoKS8oMippKSxmPSgtYS1oKS8oMippKTt1Pj0wJiZ1PD0xJiZvLnB1c2godSksZj49MCYmZjw9MSYmby5wdXNoKGYpfX1yZXR1cm4gb312YXIgbz1uKDMpLHU9by5WZWN0b3IyLGM9big0KTt0LmV4cG9ydHM9e2F0OnIsZGVyaXZhdGl2ZUF0OmkscHJvamVjdFBvaW50OmZ1bmN0aW9uKHQsZSxuLHIsaSxzLG8sdSxjLGwpe3ZhciBoPXt9O3JldHVybiBhKHQsZSxuLHIsaSxzLG8sdSxjLGwsaCksaH0scG9pbnREaXN0YW5jZTphLGV4dHJlbWE6c319LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQsZSxuLHIpe3ZhciBpPTEtcjtyZXR1cm4gaSooaSp0KzIqciplKStyKnIqbn1mdW5jdGlvbiBpKHQsZSxuLGksYSxzLG8sYyxsKXtmb3IodmFyIGgsZj0uMDA1LGc9MS8wLHA9MWUtNCx2PW5ldyB1KG8sYyksZD0wO2Q8MTtkKz0uMDUpe3ZhciB4PW5ldyB1KHIodCxuLGEsZCkscihlLGkscyxkKSksbT14LmRpc3RhbmNlVG9TcXVhcmVkKHYpO208ZyYmKGg9ZCxnPW0pfWZvcih2YXIgZz0xLzAseT0wO3k8MzImJiEoZjxwKTt5Kyspe3ZhciBfPWgtZixTPWgrZix4PW5ldyB1KHIodCxuLGEsXykscihlLGkscyxfKSksbT14LmRpc3RhbmNlVG9TcXVhcmVkKHYpO2lmKF8+PTAmJm08ZyloPV8sZz1tO2Vsc2V7dmFyIHc9bmV3IHUocih0LG4sYSxTKSxyKGUsaSxzLFMpKSxiPXcuZGlzdGFuY2VUb1NxdWFyZWQodik7Uzw9MSYmYjxnPyhoPVMsZz1iKTpmKj0uNX19cmV0dXJuIGwmJihsLng9cih0LG4sYSxoKSxsLnk9cihlLGkscyxoKSksTWF0aC5zcXJ0KGcpfWZ1bmN0aW9uIGEodCxlLG4pe3ZhciByPXQrbi0yKmU7aWYoby5lcXVhbChyLDApKXJldHVyblsuNV07dmFyIGk9KHQtZSkvcjtyZXR1cm4gaTw9MSYmaT49MD9baV06W119dmFyIHM9bigzKSxvPW4oNCksdT1zLlZlY3RvcjI7dC5leHBvcnRzPXthdDpyLHByb2plY3RQb2ludDpmdW5jdGlvbih0LGUsbixyLGEscyxvLHUpe3ZhciBjPXt9O3JldHVybiBpKHQsZSxuLHIsYSxzLG8sdSxjKSxjfSxwb2ludERpc3RhbmNlOmksZXh0cmVtYTphfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT17c3BsaXRQb2ludHM6ZnVuY3Rpb24odCl7dmFyIGU9W10sbj10LngsaT10Lnk7cmV0dXJuIGk9ci5pc0FycmF5KGkpP2k6W2ldLHIuZWFjaChpLGZ1bmN0aW9uKHQsaSl7dmFyIGE9e3g6ci5pc0FycmF5KG4pP25baV06bix5OnR9O2UucHVzaChhKX0pLGV9fTt0LmV4cG9ydHM9aX0sWzMzMiwxMDAsNjFdLGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gbigpe3ZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpXCIpO3JldHVybiB0LnRpdGxlPVwiV2ViIENvbG91ciBQaWNrZXJcIix0LnN0eWxlLmRpc3BsYXk9XCJub25lXCIsZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0KSx0fXZhciByPS9yZ2JcXCgoXFxkKylcXHMqLFxccyooXFxkKylcXHMqLFxccyooXFxkKylcXHMqXFwpLzt0LmV4cG9ydHM9e3RvUkdCOmZ1bmN0aW9uKCl7dmFyIHQ7cmV0dXJuIGRvY3VtZW50LmJvZHkmJih0PW4oKSksZnVuY3Rpb24oZSl7dHx8KHQ9bigpKSx0LnN0eWxlLmNvbG9yPWU7dmFyIGk9ZG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZSh0LFwiXCIpLmdldFByb3BlcnR5VmFsdWUoXCJjb2xvclwiKSxhPXIuZXhlYyhpKTtyZXR1cm4gYS5zaGlmdCgpLHRoaXMuYXJyMnJnYihhKX19KCksdG9IZXg6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9TWF0aC5yb3VuZCh0KSx0PXQudG9TdHJpbmcoMTYpLDE9PT10Lmxlbmd0aCYmKHQ9XCIwXCIrdCksdH0saHNsMlJnYjpmdW5jdGlvbih0KXt2YXIgZT10WzBdLG49dFsxXSxyPXRbMl0saT17fTtpZigwPT09bilpLnI9aS5nPWkuYj1yO2Vsc2V7dmFyIGE9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBuPDAmJihuKz0xKSxuPjEmJihuLT0xKSxuPDEvNj90KzYqKGUtdCkqbjpuPC41P2U6bjwyLzM/dCs2KihlLXQpKigyLzMtbik6dH0scz1yPD0uNT9yKigxK24pOnIrbi1yKm4sbz0yKnItcztpLnI9YShvLHMsZSsxLzMpLGkuZz1hKG8scyxlKSxpLmI9YShvLHMsZS0xLzMpfXJldHVybiBpLnI9TWF0aC5taW4oTWF0aC5yb3VuZCgyNTUqaS5yKSwyNTUpLGkuZz1NYXRoLm1pbihNYXRoLnJvdW5kKDI1NSppLmcpLDI1NSksaS5iPU1hdGgubWluKE1hdGgucm91bmQoMjU1KmkuYiksMjU1KSxcIiNcIit0aGlzLnRvSGV4KGkucikrdGhpcy50b0hleChpLmcpK3RoaXMudG9IZXgoaS5iKX0scmdiMmhzbDpmdW5jdGlvbih0KXt2YXIgZSxuLHIsaT10aGlzLnJnYjJhcnIodCksYT1pWzBdLzI1NSxzPWlbMV0vMjU1LG89aVsyXS8yNTUsdT1NYXRoLm1pbihhLHMsbyksYz1NYXRoLm1heChhLHMsbyksbD1jLXU7cmV0dXJuIGM9PXU/ZT0wOmE9PWM/ZT0ocy1vKS9sOnM9PWM/ZT0yKyhvLWEpL2w6bz09YyYmKGU9NCsoYS1zKS9sKSxlPU1hdGgubWluKDYwKmUsMzYwKSxlPDAmJihlKz0zNjApLHI9KHUrYykvMixuPWM9PXU/MDpyPD0uNT9sLyhjK3UpOmwvKDItYy11KSxbZS8zNjAsbixyXX0sYXJyMnJnYjpmdW5jdGlvbih0KXtyZXR1cm5cIiNcIit0aGlzLnRvSGV4KHRbMF0pK3RoaXMudG9IZXgodFsxXSkrdGhpcy50b0hleCh0WzJdKX0scmdiMmFycjpmdW5jdGlvbih0KXt2YXIgZT1bXTtyZXR1cm4gZS5wdXNoKHBhcnNlSW50KHQuc3Vic3RyKDEsMiksMTYpKSxlLnB1c2gocGFyc2VJbnQodC5zdWJzdHIoMywyKSwxNikpLGUucHVzaChwYXJzZUludCh0LnN1YnN0cig1LDIpLDE2KSksZX19fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxNiksaT1uKDEpLGE9ZnVuY3Rpb24odCl7YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07aS5leHRlbmQoYSxyKSxpLmF1Z21lbnQoYSx7Z2V0RW5kQXR0cnM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcInJlY3RcIiksZT17d2lkdGg6dC53aWR0aCxoZWlnaHQ6dC5oZWlnaHR9O3JldHVybiBlfSxnZXRUYXJnZXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcImdyb3VwXCIpLGU9dC5nZXRQYXJlbnQoKSxuPWUuYWRkU2hhcGUoXCJSZWN0XCIpO3JldHVybiB0LmF0dHIoXCJjbGlwXCIsbiksbn19KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMjkpLGk9bigyMyksYT1pLkdyb3VwLHM9ZnVuY3Rpb24odCl7cy5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KSx0aGlzLl9iZWZvcmVSZW5kZXJVSSgpLHRoaXMuX3JlbmRlclVJKCksdGhpcy5fYmluZFVJKCl9O3MuQ0ZHPXt9LHIuZXh0ZW5kKHMsYSksci5hdWdtZW50KHMse19iZWZvcmVSZW5kZXJVSTpmdW5jdGlvbigpe3RoaXMuX2luaXRDZmcoKSx0aGlzLl9tdWx0aVJhdGlvQ2ZnKCl9LF9yZW5kZXJVSTpmdW5jdGlvbigpe30sX211bHRpUmF0aW9DZmc6ZnVuY3Rpb24oKXt9LF9pbml0Q2ZnOmZ1bmN0aW9uKCl7fSxfYmluZFVJOmZ1bmN0aW9uKCl7fX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7dC5leHBvcnRzPXtHTWl4aW46bigxMjcpLEdyb3VwQmFzZTpuKDYzKSxHcm91cE1peGluOm4oMTI4KX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3Iuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9dmFyIGk9big0NyksYT1uKDkpLHM9XCJ4LWNoYXJ0LWF4aXNcIixvPW4oMyksdT1vLlZlY3RvcjIsYz1uKDQpO3IuQ0ZHPXt6SW5kZXg6NCx4Om51bGwseTpudWxsLGVsQ2xzOnMsbGluZTp7bGluZVdpZHRoOjEsc3Ryb2tlOlwiI0MwRDBFMFwifSx0aWNrTGluZTp7bGluZVdpZHRoOjEsc3Ryb2tlOlwiI0MwRDBFMFwiLHZhbHVlOjV9LGlzVmVydGljYWw6ITEsc3RhcnQ6bnVsbCxlbmQ6bnVsbH0sYS5leHRlbmQocixpKSxhLmF1Z21lbnQocix7X2JlZm9yZVJlbmRlclVJOmZ1bmN0aW9uKCl7ci5zdXBlcmNsYXNzLl9iZWZvcmVSZW5kZXJVSS5jYWxsKHRoaXMpfSxfZ2V0QXZnTGFiZWxMZW5ndGg6ZnVuY3Rpb24odCl7dmFyIGU9dC5nZXQoXCJjaGlsZHJlblwiKTtyZXR1cm4gZVsxXS5hdHRyKFwieFwiKS1lWzBdLmF0dHIoXCJ4XCIpfSxnZXRTaWRlVmVjdG9yOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldChcImZhY3RvclwiKSxyPWUuZ2V0KFwiaXNWZXJ0aWNhbFwiKSxpPWUuZ2V0KFwic3RhcnRcIiksYT1lLmdldChcImVuZFwiKSxzPWUuZ2V0QXhpc1ZlY3RvcigpLG89cy5ub3JtYWxpemUoKSx1PSExOyhyJiZpLnk8YS55fHwhciYmaS54PmEueCkmJih1PSEwKTt2YXIgYz1vLnZlcnRpY2FsKHUpO3JldHVybiBjLm11bHRpcGx5U2NhbGVyKHQqbil9LGdldEF4aXNWZWN0b3I6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcInN0YXJ0XCIpLGU9dGhpcy5nZXQoXCJlbmRcIik7cmV0dXJuIG5ldyB1KGUueC10LngsZS55LXQueSl9LGdldExpbmVQYXRoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwic3RhcnRcIiksbj10LmdldChcImVuZFwiKSxyPVtdO3JldHVybiByLnB1c2goW1wiTVwiLGUueCxlLnldKSxyLnB1c2goW1wiTFwiLG4ueCxuLnldKSxyfSxnZXRUaWNrRW5kOmZ1bmN0aW9uKHQsZSl7dmFyIG4scj10aGlzLGk9ci5nZXQoXCJ0aWNrTGluZVwiKTtyZXR1cm4gZT1lP2U6aS52YWx1ZSxuPXIuZ2V0U2lkZVZlY3RvcihlKSx7eDp0Lngrbi54LHk6dC55K24ueX19LGdldFRpY2tQb2ludDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXQoXCJzdGFydFwiKSxyPWUuZ2V0KFwiZW5kXCIpLGk9ci54LW4ueCxhPXIueS1uLnk7cmV0dXJue3g6bi54K2kqdCx5Om4ueSthKnR9fSxyZW5kZXJUaXRsZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcInRpdGxlXCIpLG49dC5nZXRUaWNrUG9pbnQoLjUpLHI9dC5nZXQoXCJ0aXRsZU9mZnNldFwiKSxpPXQuZ2V0KFwibGFiZWxzR3JvdXBcIik7aWYoaSl7dmFyIG89dC5nZXRNYXhMYWJlbFdpZHRoKGkpLGw9dC5nZXQoXCJsYWJlbE9mZnNldFwiKXx8MTA7bytsKzIwPHImJihyPW8rbCsyMCl9dmFyIGg9YS5taXgoe30sZSk7aWYoZS50ZXh0KXt2YXIgZj10LmdldFNpZGVWZWN0b3IociksZz17eDpuLngrZi54LHk6bi55K2YueX0scD10LmdldEF4aXNWZWN0b3IoKSx2PTA7aWYoIWMuZXF1YWwocC55LDApKXt2YXIgZD1uZXcgdSgxLDApLHg9bmV3IHUocC54LHAueSk7dj14LmFuZ2xlVG8oZCwhMCl9aC5yb3RhdGU9diooMTgwL01hdGguUEkpLGgueD1nLngsaC55PWcueSx0LmFkZFNoYXBlKFwiVGV4dFwiLHtlbENsczpzK1wiLXRpdGxlXCIsYXR0cnM6aH0pfX0sYXV0b1JvdGF0ZUxhYmVsczpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcImxhYmVsc0dyb3VwXCIpLG49dC5nZXQoXCJ0aXRsZVwiKTtpZihlKXt2YXIgcixpLHM9dC5nZXQoXCJsYWJlbE9mZnNldFwiKXx8MTAsbz1zLHU9dC5nZXQoXCJ0aXRsZU9mZnNldFwiKSxsPXQuZ2V0QXhpc1ZlY3RvcigpO2lmKGMuZXF1YWwobC54LDApJiZuLnRleHQpaT10LmdldE1heExhYmVsV2lkdGgoZSksaStzPnUtbyYmKHI9TWF0aC5hY29zKCh1LW8pLyhpK3MpKSotMSk7ZWxzZSBpZihjLmVxdWFsKGwueSwwKSYmZS5nZXRDb3VudCgpPjEpe3ZhciBoPU1hdGguYWJzKHQuX2dldEF2Z0xhYmVsTGVuZ3RoKGUpKTtpPXQuZ2V0TWF4TGFiZWxXaWR0aChlKSxpPmgmJihyPU1hdGguYXRhbjIoMS41KnMsaCkpfWlmKHIpe3ZhciBmPXQuZ2V0KFwiZmFjdG9yXCIpO2EuZWFjaChlLmdldChcImNoaWxkcmVuXCIpLGZ1bmN0aW9uKHQpe3Qucm90YXRlQXRTdGFydCgxODAqci9NYXRoLlBJKSxjLmVxdWFsKGwueSwwKSYmKGY+MD90LmF0dHIoXCJ0ZXh0QWxpZ25cIixcImxlZnRcIik6dC5hdHRyKFwidGV4dEFsaWduXCIsXCJyaWdodFwiKSl9KX19fX0pLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9big2Nyk7ci5TaG93TGFiZWxzPW4oMTM1KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTIpLGk9ci5Hcm91cEJhc2UsYT1uKDEpLHM9ZnVuY3Rpb24odCl7cy5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07cy5DRkc9e3pJbmRleDo2LGl0ZW1zOm51bGwsbGFiZWw6bnVsbCxfbGFiZWw6e2ZvbnRTaXplOjEyLHRleHRCYXNlbGluZTpcIm1pZGRsZVwifSxyZW5kZXJlcjpudWxsLGN1c3RvbTohMSxhbmltYXRlOiExLGh0bWw6JzxkaXYgY2xhc3M9XCJnLWxhYmVsc1wiIHN0eWxlPVwicG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO1wiPjwvZGl2PicsaXRlbVRwbDonPGRpdiBjbGFzcz1cImctbGFiZWxcIiBzdHlsZT1cInBvc2l0aW9uOmFic29sdXRlO1wiPnt0ZXh0fTwvZGl2PicsZHVyYXRpb246NDAwfSxhLmV4dGVuZChzLGkpLGEuYXVnbWVudChzLHtfaW5pdENmZzpmdW5jdGlvbigpe3Muc3VwZXJjbGFzcy5faW5pdENmZy5jYWxsKHRoaXMpLHRoaXMuZGVlcFNldChcImxhYmVsXCIpfSxfcmVuZGVyVUk6ZnVuY3Rpb24oKXtzLnN1cGVyY2xhc3MuX3JlbmRlclVJLmNhbGwodGhpcyksdGhpcy5fZHJhd0xhYmVscygpfSxfZHJhd0xhYmVsczpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcIml0ZW1zXCIpO2EuZWFjaChlLGZ1bmN0aW9uKGUsbil7dC5fYWRkTGFiZWwoZSxuKX0pfSxfYWRkTGFiZWw6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLl9nZXRMYWJlbENmZyh0LGUpO3JldHVybiB0aGlzLl9jcmVhdGVUZXh0KG4pfSxfZ2V0TGFiZWxDZmc6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmdldChcImxhYmVsXCIpfHx7fSxyPXRoaXMuZ2V0KFwicmVuZGVyZXJcIik7aWYoIWEuaXNPYmplY3QodCkpe3ZhciBpPXQ7dD17fSx0LnRleHQ9aX1yJiYodC50ZXh0PXIodC50ZXh0LHQsZSkpLGEuaXNOdWxsKHQudGV4dCkmJih0LnRleHQ9XCJcIiksdC50ZXh0PXQudGV4dC50b1N0cmluZygpO3ZhciBzPWEubWl4KHt9LHQsbix7eDoodC54fHwwKSsobi54fHwwKSx5Oih0Lnl8fDApKyhuLnl8fDApfSk7cmV0dXJuIHN9LF9jcmVhdGVUZXh0OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldChcImN1c3RvbVwiKSxyPWUuZ2V0KFwiY3VzdG9tRGl2XCIpO2lmKCFuKXJldHVybiB0aGlzLmFkZFNoYXBlKFwiVGV4dFwiLHthdHRyczp0fSk7aWYoIXIpe3ZhciBpPWUuZ2V0KFwiaHRtbFwiKSxzPWUuZ2V0KFwiY2FudmFzXCIpLmdldChcImVsXCIpLnBhcmVudE5vZGU7cj1hLmNyZWF0ZURvbShpKSxzLnN0eWxlLnBvc2l0aW9uPVwicmVsYXRpdmVcIixzLmFwcGVuZENoaWxkKHIpLGUuc2V0KFwiY3VzdG9tRGl2XCIscil9dmFyIG89ZS5fY3JlYXRlRG9tKHQpO3IuYXBwZW5kQ2hpbGQobyksZS5fc2V0Q3VzdG9tUG9zaXRpb24odCxvKX0sX3NldEN1c3RvbVBvc2l0aW9uOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC50ZXh0QWxpZ258fFwibGVmdFwiLHI9dC55LGk9dC54LHM9YS5nZXRXaWR0aChlKSxvPWEuZ2V0SGVpZ2h0KGUpO3ItPW8vMixcIm1pZGRsZVwiPT09bj9pLT1zLzI6XCJlbmRcIj09PW4mJihpLT1zKSxlLnN0eWxlLnRvcD1wYXJzZUludChyLDEwKStcInB4XCIsZS5zdHlsZS5sZWZ0PXBhcnNlSW50KGksMTApK1wicHhcIn0sX2NyZWF0ZURvbTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXQoXCJpdGVtVHBsXCIpLHI9YS5zdWJzdGl0dXRlKG4sdCksaT1hLmNyZWF0ZURvbShyKTtyZXR1cm4gaX0sZ2V0TGFiZWxzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwiY3VzdG9tRGl2XCIpO3JldHVybiBlP2EudG9BcnJheShlLmNoaWxkTm9kZXMpOnQuZ2V0KFwiY2hpbGRyZW5cIil9LGFkZExhYmVsOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0KFwiaXRlbXNcIiksbj1lLmxlbmd0aDtyZXR1cm4gZS5wdXNoKHQpLHRoaXMuX2FkZExhYmVsKHQsbil9LGNoYW5nZUxhYmVsOmZ1bmN0aW9uKHQsZSl7dmFyIG4scixpPXRoaXMscz1pLmdldChcImN1c3RvbVwiKTtpZihuPWEuaW5kZXhPZihpLmdldChcImNoaWxkcmVuXCIpLHQpLHI9aS5fZ2V0TGFiZWxDZmcoZSxuKSx0KWlmKHMpe3ZhciBvPWkuX2NyZWF0ZURvbShyKTt0LmlubmVySFRNTD1vLmlubmVySFRNTCxpLl9zZXRDdXN0b21Qb3NpdGlvbihyLHQpfWVsc2UgaWYodC5hdHRyKFwidGV4dFwiLHIudGV4dCksdC5hdHRyKFwieFwiKSE9PXIueHx8dC5hdHRyKFwieVwiKSE9PXIueSl7dmFyIHU9dC5nZXQoXCJhdHRyc1wiKS5yb3RhdGU7dSYmdC5yb3RhdGVBdFN0YXJ0KC11KSx0LmF0dHIociksdSYmdC5yb3RhdGVBdFN0YXJ0KHUpfX0sY2xlYXI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJjdXN0b21EaXZcIik7ZSYmKGUuaW5uZXJIVE1MPVwiXCIpLHMuc3VwZXJjbGFzcy5jbGVhci5jYWxsKHQpfSxzZXRJdGVtczpmdW5jdGlvbih0KXt2YXIgZT10aGlzO2UuY2xlYXIoKSxlLnNldChcIml0ZW1zXCIsdCksZS5fZHJhd0xhYmVscygpfX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMTIpLGE9big1MCkscz1pLkdyb3VwQmFzZSxvPWZ1bmN0aW9uKHQpe28uc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O28uQ0ZHPXt0eXBlOlwicGxvdEJhY2tcIixtYXJnaW46bnVsbCxib3JkZXI6bnVsbCxwbG90UmFuZ2U6bnVsbCxiYWNrZ3JvdW5kOm51bGx9LHIuZXh0ZW5kKG8scyksci5hdWdtZW50KG8se19iZWZvcmVSZW5kZXJVSTpmdW5jdGlvbigpe3RoaXMuX2NhbGN1bGF0ZVJhbmdlKCl9LF9yZW5kZXJVSTpmdW5jdGlvbigpe3RoaXMuX3JlbmRlckJvcmRlcigpLHRoaXMuX3JlbmRlckJhY2tncm91bmQoKX0sX3JlbmRlckJvcmRlcjpmdW5jdGlvbigpe3ZhciB0LGU9dGhpcyxuPWUuZ2V0KFwiYm9yZGVyXCIpLGk9ZS5nZXQoXCJjYW52YXNcIiksYT1lLmdldChcImJvcmRlclNoYXBlXCIpO2lmKG4pe3ZhciBzPWUuZ2V0KFwid2lkdGhcIil8fGkuZ2V0KFwid2lkdGhcIiksbz1lLmdldChcImhlaWdodFwiKXx8aS5nZXQoXCJoZWlnaHRcIik7YT9hLmF0dHIoe3g6MCx5OjAsd2lkdGg6cyxoZWlnaHQ6b30pOih0PXIubWl4KHt4OjAseTowLHdpZHRoOnMsaGVpZ2h0Om99LG4pLGE9dGhpcy5hZGRTaGFwZShcIlJlY3RcIix7YXR0cnM6dH0pLHRoaXMuc2V0KFwiYm9yZGVyU2hhcGVcIixhKSl9fSxfcmVuZGVyQmFja2dyb3VuZDpmdW5jdGlvbigpe3ZhciB0LGUsbixpLGE9dGhpcyxzPWEuZ2V0KFwiYmFja2dyb3VuZFwiKSxvPWEuZ2V0KFwicGxvdFJhbmdlXCIpLHU9YS5nZXQoXCJiYWNrU2hhcGVcIik7cyYmKHQ9by5nZXRXaWR0aCgpLGU9by5nZXRIZWlnaHQoKSxuPW8udGwsaT17eDpuLngseTpuLnksd2lkdGg6dCxoZWlnaHQ6ZX0sdT91LmF0dHIoaSk6KHMuaW1hZ2U/KGkuaW1nPXMuaW1hZ2UsdT1hLmFkZFNoYXBlKFwiSW1hZ2VcIix7YXR0cnM6aX0pKTooci5taXgoaSxzKSx1PWEuYWRkU2hhcGUoXCJSZWN0XCIse2F0dHJzOml9KSksYS5zZXQoXCJiYWNrU2hhcGVcIix1KSkpfSxfY2FsY3VsYXRlUmFuZ2U6ZnVuY3Rpb24oKXt2YXIgdCxlLG49dGhpcyxpPW4uZ2V0KFwibWFyZ2luXCIpLHM9bi5nZXQoXCJjYW52YXNcIiksbz1uLmdldChcIndpZHRoXCIpfHxzLmdldChcIndpZHRoXCIpLHU9bi5nZXQoXCJoZWlnaHRcIil8fHMuZ2V0KFwiaGVpZ2h0XCIpLGM9bi5nZXQoXCJwbG90UmFuZ2VcIiksbD0wLGg9MCxmPTAsZz0wO3IuaXNOdW1iZXIoaSkmJihsPWg9Zj1nPWkpLHIuaXNBcnJheShpKSYmKGw9aVswXSxmPXIuaXNOdWxsKGlbMV0pP2lbMF06aVsxXSxnPXIuaXNOdWxsKGlbMl0pP2lbMF06aVsyXSxoPXIuaXNOdWxsKGlbM10pP2Y6aVszXSksdD17eDpoLHk6dS1nfSxlPXt4Om8tZix5Omx9LGM/Yy5yZXNldCh0LGUpOihjPW5ldyBhKHQsZSksbi5zZXQoXCJwbG90UmFuZ2VcIixjKSl9LHJlcGFpbnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2FsY3VsYXRlUmFuZ2UoKSx0aGlzLl9yZW5kZXJCb3JkZXIoKSx0aGlzLl9yZW5kZXJCYWNrZ3JvdW5kKCksdGhpc319KSx0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMTQyKTt0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oOSksaT1uKDI4KSxhPWkuRyxzPWEuR3JvdXAsbz1mdW5jdGlvbih0KXtvLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpLHRoaXMuX2JlZm9yZVJlbmRlclVJKCksdGhpcy5fcmVuZGVyVUkoKSx0aGlzLl9iaW5kVUkoKX07by5DRkc9e30sci5leHRlbmQobyxzKSxyLmF1Z21lbnQobyx7X2JlZm9yZVJlbmRlclVJOmZ1bmN0aW9uKCl7dGhpcy5faW5pdENmZygpfSxfcmVuZGVyVUk6ZnVuY3Rpb24oKXt9LF9pbml0Q2ZnOmZ1bmN0aW9uKCl7fSxfYmluZFVJOmZ1bmN0aW9uKCl7fX0pLHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigzOCksaT1uKDcyKSxhPW4oNTEpLHM9bigxNTgpLG89bigxNTcpLHU9bigzOSksYz1uKDE1OSksbD1uKDE1NCksaD1uKDE1NSksZj1uKDE1Nik7ci5DYXJ0ZXNpYW49aSxyLlJlY3Q9aSxyLlBvbGFyPWEsci5UaGV0YT1zLHIuUmhvPW8sci5QbHVzPXUsci5UcmlBbmdsZT1jLHIuQ2xvY2s9bCxyLkdhdWdlPWgsci5NYXA9Zix0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDM4KSxhPWZ1bmN0aW9uKHQpe3ZhciBlPXt9O3IubWl4KGUsYS5BVFRSUyx0KSxhLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLGUpLHRoaXMuX2luaXQoKX07YS5BVFRSUz17c3RhcnQ6e3g6MCx5OjB9LGVuZDp7eDowLHk6MH19LHIuZXh0ZW5kKGEsaSksci5hdWdtZW50KGEse3R5cGU6XCJjYXJ0ZXNpYW5cIixpc1JlY3Q6ITAsX2luaXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJzdGFydFwiKSxuPXQuZ2V0KFwiZW5kXCIpLHI9e3N0YXJ0OmUueCxlbmQ6bi54fSxpPXtzdGFydDplLnksZW5kOm4ueX07dC5zZXQoXCJ4XCIsciksdC5zZXQoXCJ5XCIsaSl9LGNvbnZlcnRQb2ludDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5pc1RyYW5zcG9zZWQ/dC55OnQueCxyPWUuaXNUcmFuc3Bvc2VkP3QueDp0Lnk7cmV0dXJue3g6dGhpcy5jb252ZXJ0RGltKG4sXCJ4XCIpLHk6dGhpcy5jb252ZXJ0RGltKHIsXCJ5XCIpfX0saW52ZXJ0UG9pbnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPXRoaXMuaW52ZXJ0RGltKHQueCxcInhcIikscj10aGlzLmludmVydERpbSh0LnksXCJ5XCIpLGk9e307cmV0dXJuIGkueD1lLmlzVHJhbnNwb3NlZD9yOm4saS55PWUuaXNUcmFuc3Bvc2VkP246cixpfX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oNzQpLGE9bigyKSxzPW4oMzApLG89ZnVuY3Rpb24odCl7by5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQobyxpKSxyLmF1Z21lbnQobyx7ZGltczpbXSxjb2xzOjUscm93czpudWxsLGRyYXdUaXRsZXM6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGk9bi5kaW1zO3IuZWFjaCh0LGZ1bmN0aW9uKHQpe24uZHJhd0ZhY2V0VGl0bGUoXCJjb2xcIix0LGUpfSksbi5kcmF3RGltVGl0bGUoXCJjb2xcIixpWzBdLGUpfSxnZXRSZWdpb246ZnVuY3Rpb24odCxlLG4scil7dmFyIGk9dGhpcyxhPWkucGxvdFJhbmdlLHM9aS5tYXJnaW4sbz1hLnRsLHU9YS5icixjPSh1Lngtby54KS9lLGw9KHUueS1vLnkpL3QsaD17eDpvLngrYypuLHk6by55K2wqKHIrMSktc30sZj17eDpoLngrYy1zLHk6aC55LWwrc307cmV0dXJue3N0YXJ0OmgsZW5kOmZ9fSxnZW5lcmF0ZUZhY2V0czpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5kaW1zLGk9blswXTtpZighaSl0aHJvdyBuZXcgRXJyb3IoXCJQbGVhc2Ugc3BlY2lmeSBmb3IgdGhlIGZpZWxkIGZvciBmYWNldCFcIik7dmFyIG89ZS5nZXREaW1WYWx1ZXMoaSx0KSx1PW8ubGVuZ3RoLGM9ZS5jb2xzLGw9cGFyc2VJbnQoKHUrYy0xKS9jLDEwKSxoPVtdLGY9MDtyZXR1cm4gci5lYWNoKG8sZnVuY3Rpb24obixyKXt2YXIgZz1wYXJzZUludChyL2MsMTApLHA9ciVjLHY9W3tkaW06aSx2YWx1ZTpuLHZhbHVlczpvfV0sZD1lLmdldEZpbHRlcih2KSx4PWEuZmlsdGVyKHQsZCksbT1uZXcgcyh7dHlwZTplLnR5cGUsY291bnQ6dSx4VmFsdWU6bix4RGltOmkseVZhbHVlOm4seURpbTppLGNvbEluZGV4OnAscm93SW5kZXg6Zyxjb2xzOmMscm93czpsLGZyYW1lOngscmVnaW9uOmUuZ2V0UmVnaW9uKGwsYyxwLGcpLGluZGV4OmYrK30pO2gucHVzaChtKX0pLGh9fSksdC5leHBvcnRzPW99LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigyKSxhPW4oNDEpLHM9bigzMCksbz1mdW5jdGlvbih0KXtvLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtyLmV4dGVuZChvLGEpLHIuYXVnbWVudChvLHtkaW1zOltdLGRlZnM6e30sdHlwZTpcInJlY3RcIixwbG90UmFuZ2U6bnVsbCxkcmF3VGl0bGVzOmZ1bmN0aW9uKHQsZSl7aWYoISh0Lmxlbmd0aDw9MSkpe3ZhciBuPXRoaXMsaT10WzBdO3IuZWFjaCh0LGZ1bmN0aW9uKHQpe3QuY29scz4wJiZ0LnJvd0luZGV4PT09dC5yb3dzLTEmJm4uZHJhd0ZhY2V0VGl0bGUoXCJjb2xcIix0LGUpLHQucm93cz4wJiZ0LmNvbEluZGV4PT09dC5jb2xzLTEmJm4uZHJhd0ZhY2V0VGl0bGUoXCJyb3dcIix0LGUpfSksaSYmKGkuY29scz4xJiZuLmRyYXdEaW1UaXRsZShcImNvbFwiLGkueERpbSxlKSxpLnJvd3M+MSYmbi5kcmF3RGltVGl0bGUoXCJyb3dcIixpLnlEaW0sZSkpfX0sZ2V0UmVnaW9uOmZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBpPXRoaXMsYT1pLnBsb3RSYW5nZSxzPTE9PT10JiYxPT09ZT8wOmkubWFyZ2luLG89YS5ibCx1PWEudHIsYz0odS54LW8ueCkvZSxsPSh1Lnktby55KS90LGg9e3g6by54K2Mqbix5Om8ueStsKnItc30sZj17eDpoLngrYy1zLHk6aC55K2wrc307cmV0dXJue3N0YXJ0OmgsZW5kOmZ9fSxnZW5lcmF0ZUZhY2V0czpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5kaW1zLGE9W10sbz0xLHU9MSxjPW5bMF0sbD1uWzFdLGg9W1wiXCJdLGY9W1wiXCJdO2MmJihoPWUuZ2V0RGltVmFsdWVzKGMsdCksdT1oLmxlbmd0aCksbCYmKGY9ZS5nZXREaW1WYWx1ZXMobCx0KSxvPWYubGVuZ3RoKTt2YXIgZz0wO3JldHVybiByLmVhY2goaCxmdW5jdGlvbihuLHApe3IuZWFjaChmLGZ1bmN0aW9uKHIsdil7dmFyIGQ9W3tkaW06Yyx2YWx1ZTpuLHZhbHVlczpofSx7ZGltOmwsdmFsdWU6cix2YWx1ZXM6Zn1dLHg9ZS5nZXRGaWx0ZXIoZCksbT1pLmZpbHRlcih0LHgpLHk9bmV3IHMoe3R5cGU6ZS50eXBlLHhWYWx1ZTpuLHlWYWx1ZTpyLHhEaW06Yyx5RGltOmwsY29sSW5kZXg6cCxyb3dJbmRleDp2LGNvbHM6dSxyb3dzOm8sZnJhbWU6bSxyZWdpb246ZS5nZXRSZWdpb24obyx1LHAsdiksaW5kZXg6ZysrfSk7YS5wdXNoKHkpfSl9KSxhfX0pLHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigzMSk7big3NiksdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big3NyksYT1uKDMxKTtyLm1peChhLHt2YWx1ZXM6ZnVuY3Rpb24odCxlKXt2YXIgbj1bXSxyPXt9LGE9dC5jb2xBcnJheShlKTthPWkuZm9ybWF0QXJyYXkoYSk7Zm9yKHZhciBzPTAsbz1hLmxlbmd0aDtzPG87cysrKXt2YXIgdT1hW3NdO3JbdV18fHZvaWQgMD09PXV8fChyW3VdPSEwLG4ucHVzaCh1KSl9cmV0dXJuIG59LGdyb3VwOmZ1bmN0aW9uKHQsZSl7aWYoIWUpcmV0dXJuW3RdO3ZhciBuPWEuZ3JvdXBUb01hcCh0LGUpLHI9W107Zm9yKHZhciBpIGluIG4pbi5oYXNPd25Qcm9wZXJ0eShpKSYmci5wdXNoKG5baV0pO3JldHVybiByfSxncm91cFRvTWFwOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5jb2xOYW1lcygpLGk9e307aWYoIWUpcmV0dXJuezA6dH07aWYoIXIuaXNGdW5jdGlvbihlKSl7dmFyIHM9ci5pc0FycmF5KGUpP2U6ZS5yZXBsYWNlKC9cXHMrL2csXCJcIikuc3BsaXQoXCIqXCIpO2U9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVwiXCIsbj0wLHI9cy5sZW5ndGg7bjxyO24rKyllKz10W3Nbbl1dLnRvU3RyaW5nKCk7cmV0dXJuIGV9fXQuZWFjaChmdW5jdGlvbih0KXt2YXIgbj1lKHQpO2lbbl0/aVtuXS5wdXNoKHQpOmlbbl09W3RdfSk7Zm9yKHZhciBvIGluIGkpaS5oYXNPd25Qcm9wZXJ0eShvKSYmKGlbb109bmV3IGEoaVtvXSx7bmFtZXM6bi5zbGljZSgwKX0pKTtyZXR1cm4gaX0sbWVyZ2U6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9ci50b0FycmF5KGFyZ3VtZW50cyksZT10WzBdLG49ZS5jb2xOYW1lcygpLGk9ZS5jb2xDb3VudCgpLHM9W10sbz0wO288aTtvKyspe3Nbb109W107Zm9yKHZhciB1PTA7dTx0Lmxlbmd0aDt1Kyspe3ZhciBjPXRbdV0uY29sQXJyYXkobyk7c1tvXT1zW29dLmNvbmNhdChjKX19cmV0dXJuIG5ldyBhKHMse25hbWVzOm59KX0sc29ydDpmdW5jdGlvbih0LGUpe3ZhciBuPXQudG9KU09OKCk7cmV0dXJuIG4uc29ydChmdW5jdGlvbih0LG4pe3JldHVybiB0W2VdLW5bZV07XG59KSxuZXcgYShuLHtuYW1lczp0LmNvbE5hbWVzKCl9KX19KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSk7dC5leHBvcnRzPXtmaWx0ZXJOdWxsOmZ1bmN0aW9uKHQpe3ZhciBlPVtdO3JldHVybiByLmVhY2godCxmdW5jdGlvbih0KXtyLmlzTnVsbCh0KXx8ZS5wdXNoKHQpfSksZX0sbWl4SWY6ZnVuY3Rpb24odCxlLG4pe3IuZWFjaChuLGZ1bmN0aW9uKG4pe3Rbbl09ZVtuXX0pfSxmb3JtYXRBcnJheTpmdW5jdGlvbih0KXt2YXIgZT1bXTtyZXR1cm4gci5lYWNoKHQsZnVuY3Rpb24odCl7ci5pc0FycmF5KHQpP2U9ZS5jb25jYXQodCk6ZS5wdXNoKHQpfSksZX19fSxmdW5jdGlvbih0LGUpe3ZhciBuPXt1bmlmb3JtOmZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLmFicyh0KTwxPy41OjB9LHRyaWFuZ3VsYXI6ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGguYWJzKHQpPDE/MS1NYXRoLmFicyh0KTowfSxlcGFuZWNobmlrb3Y6ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGguYWJzKHQpPDE/Ljc1KigxLXQqdCk6MH0scXVhcnRpYzpmdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5hYnModCk8MT8uOTM3NSpNYXRoLnBvdygxLXQqdCwyKTowfSx0cml3ZWlnaHQ6ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGguYWJzKHQpPDE/MzUvMzIqTWF0aC5wb3coMS10KnQsMyk6MH0sdHJpY3ViZTpmdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5hYnModCk8MT83MC84MSpNYXRoLnBvdygxLU1hdGgucG93KE1hdGguYWJzKHQpLDMpLDMpOjB9LGdhdXNzaWFuOmZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLmFicyh0KTwzPzEvTWF0aC5zcXJ0KDIqTWF0aC5QSSkqTWF0aC5leHAoLS41KnQqdCk6MH0sY29zaW5lOmZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLmFicyh0KTwxP01hdGguUEkvNCpNYXRoLmNvcyhNYXRoLlBJLzIqdCk6MH19O3QuZXhwb3J0cz1ufSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigxKSxpPW4oNDQpO2kuTGluZWFyPW4oNDMpLGkubGluZWFyPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgaS5MaW5lYXIodCl9LGkuQ2F0PW4oMzMpLGkuY2F0PWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgaS5DYXQodCl9LGkuUG93PW4oMjEwKSxpLnBvdz1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IGkuUG93KHQpfSxpLkxvZz1uKDIwOCksaS5sb2c9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBpLkxvZyh0KX0saS5JZGVudGl0eT1uKDIwNyksaS5JPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgaS5JZGVudGl0eSh0KX0saS5UaW1lPW4oMjEyKSxpLnRpbWU9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBpLlRpbWUodCl9LGkuTnVtYmVyQ2F0PW4oMjA5KSxpLm51bWJlckNhdD1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IGkuTnVtYmVyQ2F0KHQpfSxpLlRpbWVDYXQ9bigyMTEpLGkudGltZUNhdD1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IGkuVGltZUNhdCh0KX0saS5Db25kaXRpb249bigyMDUpLGkuY29uZGl0aW9uPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgaS5Db25kaXRpb24odCl9LGkuR3JvdXA9bigyMDYpLGkuZ3JvdXA9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBpLkdyb3VwKHQpfSxpLklfVFlQRT1cImlkZW50aXR5XCIsaS5pc0NhdGVnb3J5PWZ1bmN0aW9uKHQpe2lmKFwiY2F0XCI9PT10KXJldHVybiEwO3ZhciBlPXIudWNmaXJzdCh0KTtyZXR1cm4hKCFpW2VdfHwhaVtlXS5zdXBlcmNsYXNzfHxcImNhdFwiIT09aVtlXS5zdXBlcmNsYXNzLnR5cGUpfSx0LmV4cG9ydHM9aX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT17fSxhPXtkZWZhdWx0U2hhcGVUeXBlOm51bGwsZ2V0U2hhcGU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWVbdF18fGVbZS5kZWZhdWx0U2hhcGVUeXBlXXx8aS5TaGFwZUJhc2U7cmV0dXJuIG4uX2Nvb3JkPWUuX2Nvb3JkLG59LGdldFNoYXBlUG9pbnRzOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5nZXRTaGFwZSh0KTtyZXR1cm4gbi5nZXRTaGFwZVBvaW50cyhlKX0sZHJhd1NoYXBlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10aGlzLmdldFNoYXBlKHQpO3JldHVybiByLmRyYXdTaGFwZShlLG4pfX0scz17X2Nvb3JkOm51bGwsZHJhd1NoYXBlOmZ1bmN0aW9uKCl7fSxnZXRTaGFwZVBvaW50czpmdW5jdGlvbigpe319O2kucmVnaXN0R2VvbT1mdW5jdGlvbih0LGUpe3ZhciBuPXIudWNmaXJzdCh0KSxzPXIubWl4KHt9LGEsZSk7cmV0dXJuIGlbbl09cyxzLmNsYXNzTmFtZT1uLHN9LGkucmVnaXN0U2hhcGU9ZnVuY3Rpb24odCxlLG4pe3ZhciBhPXIudWNmaXJzdCh0KSxzPWlbYV0sbz1zLmdldFNoYXBlKCksdT1yLm1peCh7fSxvLG4pO3JldHVybiBzW2VdPXUsdX0saS5nZXRTaGFwZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiB0PXR8fFwicG9pbnRcIix0PXIudWNmaXJzdCh0KSxlW3RdfHxpLlNoYXBlQmFzZX0saS5HZW9tU2hhcGU9YSxpLlNoYXBlQmFzZT1zLHQuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMTgpLGE9bigyKSxzPVwiLi54XCIsbz1cIi4ueVwiLHU9XCJfdmFsdWVcIixjPVwiX2xldmVsXCIsbD1mdW5jdGlvbih0KXtsLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtyLmV4dGVuZChsLGkpLHIuYXVnbWVudChsLHt0eXBlOlwidHJlZVwiLGxldmVsczowLHRvdGFsVmFsdWU6MCxpbml0RGltczpmdW5jdGlvbih0KXt0LnVuc2hpZnQobyksdC51bnNoaWZ0KHMpfSxnZXRWYWx1ZUZpZWxkOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXREaW1zKCk7cmV0dXJuIHRbM118fHV9LGdldENoaWxkcmVuRmllbGQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldERpbXMoKTtyZXR1cm4gdFsyXX0sZXhlYzpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49W10scj1hLm1lcmdlLmFwcGx5KG51bGwsdCk7cmV0dXJuIG4ucHVzaChlLmV4ZWNGcmFtZShyKSksbn0sX3RyYXZlcnNlTm9kZXM6ZnVuY3Rpb24odCxlKXt2YXIgbixpPXRoaXM7bj1lP2VbY10rMTowO3ZhciBhPWkuZ2V0Q2hpbGRyZW5GaWVsZCgpLHM9aS5nZXRWYWx1ZUZpZWxkKCk7ci5lYWNoKHQsZnVuY3Rpb24odCl7dFtjXT1uLHQucGFyZW50PWU7dmFyIHI9dFthXTtyPyhpLl90cmF2ZXJzZU5vZGVzKHRbYV0sdCkscz09PXUmJih0W3NdPWkuZ2V0VG90YWxWYWx1ZShyKSkpOihzPT09dSYmKHRbc109MSksbisxPmkubGV2ZWxzJiYoaS5sZXZlbHM9bisxKSl9KX0sZ2V0Tm9kZVZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldFZhbHVlRmllbGQoKTtyZXR1cm4gdFtuXX0sZ2V0Tm9kZVJhbmdlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcixpPXRoaXMsYT10W2NdLHM9aS5sZXZlbHMsbz1lLmluZGV4T2YodCksdT10LnBhcmVudCxsPTAsaD0xLGY9MDtpZih1PyhyPWkuZ2V0Tm9kZVZhbHVlKHUpLGg9bi5lbmQueC1uLnN0YXJ0LngsZj1uLnN0YXJ0LngpOnI9aS5nZXRUb3RhbFZhbHVlKGUpLG8+MCl7dmFyIGc9ZS5zbGljZSgwLG8pO2w9aS5nZXRUb3RhbFZhbHVlKGcpfXZhciBwPWkuZ2V0Tm9kZVZhbHVlKHQpLHY9e3N0YXJ0Ont4OmwvcipoK2YseTphL3N9LGVuZDp7eDoobCtwKS9yKmgrZix5OihhKzEpL3N9fTtyZXR1cm4gdn0sZ2V0VG90YWxWYWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXRWYWx1ZUZpZWxkKCksaT0wO3JldHVybiByLmVhY2godCxmdW5jdGlvbih0KXtpKz10W25dfSksaX0sZ2V0U3RhdE9iamVjdDpmdW5jdGlvbih0LGUpe3ZhciBuPXIubWl4KHt9LHQpO3JldHVybiBuW3NdPShlLmVuZC54K2Uuc3RhcnQueCkvMixuW29dPShlLmVuZC55K2Uuc3RhcnQueSkvMixufSxfZXh0cmFjdERhdGE6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXMsYT1pLmdldENoaWxkcmVuRmllbGQoKTtyLmVhY2godCxmdW5jdGlvbihyKXt2YXIgcz1pLmdldE5vZGVSYW5nZShyLHQsbiksbz1pLmdldFN0YXRPYmplY3QocixzKTtlLnB1c2gobyksclthXSYmaS5fZXh0cmFjdERhdGEoclthXSxlLHMpfSl9LGV4ZWNGcmFtZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49dC50b0pTT04oKSxyPVtdO2UuX3RyYXZlcnNlTm9kZXMobiksZS5fZXh0cmFjdERhdGEobixyLDApO3ZhciB0PW5ldyBhKHIpO3JldHVybiB0fX0pLHQuZXhwb3J0cz1sfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oNDUpLGE9bigyKSxzPWZ1bmN0aW9uKHQpe3Muc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3IuZXh0ZW5kKHMsaSksci5hdWdtZW50KHMse2ZyYWN0aW9uczoxMCxleGVjRnJhbWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPXQudG9KU09OKCk7ci5lYWNoKG4sZnVuY3Rpb24odCl7ZS50b0Jpbih0KX0pO3ZhciBpPW5ldyBhKG4pO3JldHVybiBlLmV4ZWNRdWFudGlsZShpKX0sZ2V0U3BsaXRBcnJheTpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLGU9dC5mcmFjdGlvbnMsbj1bXSxyPTEvZSxpPTA7aTw9MTtpKz1yKW4ucHVzaChpKTtyZXR1cm4gbn0sZXhlY1F1YW50aWxlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1bXSxpPWUuZ2V0RGltcygpLHM9aVtpLmxlbmd0aC0xXSxvPWkuc2xpY2UoMCxpLmxlbmd0aC0xKSx1PWEuZ3JvdXAodCxvKSxjPWUuZ2V0U3BsaXRBcnJheSgpO3JldHVybiByLmVhY2godSxmdW5jdGlvbih0KXt2YXIgZT10LnJvd09iamVjdCgwKTtlW3NdPWEucXVhbnRpbGUodCxzLGMpLG4ucHVzaChlKX0pLG5ldyBhKG4pfX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigzNCksaT1uKDEpLGE9bigyKSxzPVwiLi5kZW5zaXR5XCIsbz1mdW5jdGlvbih0KXtvLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtpLmV4dGVuZChvLHIpLGkuYXVnbWVudChvLHt0eXBlOlwiZGVuc2l0eVwiLGJhbmRXaWR0aDouMDEsY29sUmFuZ2U6e30saW5pdERpbXM6ZnVuY3Rpb24odCl7dC5wdXNoKHMpfSxleGVjRnJhbWU6ZnVuY3Rpb24odCl7cmV0dXJuIHR9LGdldFdpbmRvd1dpZHRoOmZ1bmN0aW9uKHQsZSl7dmFyIG49YS5tYXgodCxlKSxyPWEubWluKHQsZSksaT0obi1yKSp0aGlzLmJhbmRXaWR0aDtyZXR1cm4gaX0sZ2V0Q29vcmRpbmF0ZTpmdW5jdGlvbih0LGUsbil7Zm9yKHZhciByPXRoaXMsaT1yLmdldERpbVJhbmdlKHQsZSksYT1pLm1heCxzPWkubWluLG89W10sdT1zO3U8PWE7dSs9bilvLnB1c2godSk7cmV0dXJuIG99LGdldERpbVJhbmdlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uY29sUmFuZ2VbZV07aWYoIXIpe3ZhciBpPWEucmFuZ2UodCxlKTtyPXttaW46aVswXSxtYXg6aVsxXX19cmV0dXJuIHJ9LHNldFJhbmdlOmZ1bmN0aW9uKHQsZSl7dGhpcy5jb2xSYW5nZVt0XT1lfX0pLHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMik7dC5leHBvcnRzPXtleGVjOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7ZS5wcmVFeGVjdXRlKHQpLHRoaXMuc3RhdCYmKHQ9dGhpcy5zdGF0LmV4ZWModCkpO3ZhciBuPVtdLGE9aS5tZXJnZS5hcHBseShudWxsLHQpLHM9ZS5nZXRHcm91cENvbmRpdGlvbigpLG89aS5ncm91cFRvTWFwKGEscyk7aWYodC5sZW5ndGg+MSlyLmVhY2godCxmdW5jdGlvbih0KXt2YXIgcj1lLmV4ZWNGcmFtZSh0LG8pO24ucHVzaChyKX0pO2Vsc2V7dmFyIHU9ZS5leGVjRnJhbWUodFswXSk7bi5wdXNoKHUpfXJldHVybiBufSxleGVjRnJhbWU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGE9bi5nZXRHcm91cENvbmRpdGlvbigpLHM9aS5ncm91cFRvTWFwKHQsYSksbz1bXSx1PW4uZ2V0U3RhdERpbXMoKVswXTtyZXR1cm4gci5lYWNoKHMsZnVuY3Rpb24ocixpKXt2YXIgYT1lP2VbaV06dCxzPW4udHJhbnNmb3JtKHIsdSxhKTtvLnB1c2gocyl9KSxpLm1lcmdlLmFwcGx5KG51bGwsbyl9fX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCxlKXt0LnNvcnQoZnVuY3Rpb24odCxuKXtyZXR1cm4gdFtlXS1uW2VdfSl9ZnVuY3Rpb24gaSh0LGUpe3ZhciBuPTA7cmV0dXJuIGEuZWFjaCh0LGZ1bmN0aW9uKHQpe24rPXRbZV19KSxufXZhciBhPW4oMSkscz1mdW5jdGlvbih0KXtyZXR1cm4gdH0sbz1mdW5jdGlvbih0KXthLm1peCh0aGlzLHQpLHRoaXMucmVjdD10aGlzLnJlY3R8fHt4OjAseTowLGR4OjEsZHk6MX0sdGhpcy5pbml0KCl9O2EuYXVnbWVudChvLHtub2RlczpudWxsLHJlY3Q6bnVsbCx2YWx1ZUZpZWxkOlwidmFsdWVcIixjaGlsZHJlbkZpZWxkOlwiY2hpbGRyZW5cIixpbml0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQubm9kZXMsbj10LnJlY3Qscz10LnZhbHVlRmllbGQ7cihlLHMpLGEuZWFjaChlLGZ1bmN0aW9uKGUpe3QuX3RyYXZlcnNlKGUpfSk7dmFyIG89aShlLHMpO3QucHJvY2Vzc05vZGVzKGUsbixvKX0sX3RyYXZlcnNlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztlPWV8fDAsdC5kZXB0aD1lO3ZhciBpPW4uY2hpbGRyZW5GaWVsZDt0LnBhcmVudHx8KHQucGFyZW50PW51bGwpO3ZhciBzPXRbaV07YS5pc0FycmF5KHMpJiYocihzLG4udmFsdWVGaWVsZCksYS5lYWNoKHMsZnVuY3Rpb24ocil7ci5wYXJlbnQ9dCxuLl90cmF2ZXJzZShyLGUrMSl9KSl9LGdldE5vZGVzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubm9kZXN9LGNoYW5nZU5vZGVzOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm5vZGVzPXQsdGhpcy5pbml0KCksdGhpc30scHJvY2Vzc05vZGVzOmZ1bmN0aW9uKCl7fSxwYWQ6ZnVuY3Rpb24odCl7dmFyIGU9e3g6dC54LHk6dC55LGR4OnQuZHgsZHk6dC5keX07cmV0dXJuIGV9LHBvc2l0aW9uOmZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBpLGE9LTEsbz10Lmxlbmd0aCx1PW4ueCxjPW4ueSxsPWU/cyh0LmFyZWEvZSk6MDtpZihlPT09bi5keCl7Zm9yKChyfHxsPm4uZHkpJiYobD1uLmR5KTsrK2E8bzspaT10W2FdLGkueD11LGkueT1jLGkuZHk9bCx1Kz1pLmR4PU1hdGgubWluKG4ueCtuLmR4LXUsbD9zKGkuYXJlYS9sKTowKTtpLno9ITAsaS5keCs9bi54K24uZHgtdSxuLnkrPWwsbi5keS09bH1lbHNle2Zvcigocnx8bD5uLmR4KSYmKGw9bi5keCk7KythPG87KWk9dFthXSxpLng9dSxpLnk9YyxpLmR4PWwsYys9aS5keT1NYXRoLm1pbihuLnkrbi5keS1jLGw/cyhpLmFyZWEvbCk6MCk7aS56PSExLGkuZHkrPW4ueStuLmR5LWMsbi54Kz1sLG4uZHgtPWx9fSxzY2FsZTpmdW5jdGlvbih0LGUpe2Zvcih2YXIgbixyLGk9LTEsYT10Lmxlbmd0aCxzPXRoaXMudmFsdWVGaWVsZDsrK2k8YTspcj0obj10W2ldKVtzXSooZTwwPzA6ZSksbi5hcmVhPWlzTmFOKHIpfHxyPD0wPzA6cn19KSx0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7aWYoIXQuX19hdHRycyYmdCE9PWMpe3ZhciBlPXQuc3VwZXJjbGFzcy5jb25zdHJ1Y3RvcjtlJiYhZS5fX2F0dHJzJiZyKGUpLHQuX19hdHRycz17fSxpLm1peCghMCx0Ll9fYXR0cnMsZS5fX2F0dHJzKSxpLm1peCghMCx0Ll9fYXR0cnMsdC5BVFRSUyl9fXZhciBpPW4oNiksYT1uKDEzKSxzPW4oMjY0KSxvPW4oMjcwKSx1PW4oMjY5KSxjPWZ1bmN0aW9uKHQpe3RoaXMuX19jZmc9e307dmFyIGU9dGhpcy5nZXREZWZhdWx0Q2ZnKCk7aS5taXgodGhpcy5fX2NmZyxjLkNGRyxlLHQpLHRoaXMuX19jZmcudXVpZD1pLmd1aWQoYS5wcmVmaXgpLHIodGhpcy5jb25zdHJ1Y3RvciksdGhpcy5pbml0QXR0cnModGhpcy5fX2NmZy5hdHRycyksdGhpcy5pbml0VHJhbnNmb3JtKCksdGhpcy5pbml0RXZlbnREaXNwYXRjaGVyKCksdGhpcy5pbml0KCl9O2MuQ0ZHPXtpZDpudWxsLHpJbmRleDowLGNhbnZhczpudWxsLHBhcmVudDpudWxsLGNhcHR1cmU6ITAsY29udGV4dDpudWxsLHZpc2libGU6ITAsZGVzdHJveWVkOiExfSxpLmF1Z21lbnQoYyxzLG8sdSx7aW5pdDpmdW5jdGlvbigpe30sZ2V0RGVmYXVsdENmZzpmdW5jdGlvbigpe3JldHVybnt9fSxzZXQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9XCJfX3NldFwiK2kudWNmaXJzdCh0KTtyZXR1cm4gbltyXSYmKGU9bltyXShlKSksbi5fX2NmZ1t0XT1lLHRoaXN9LGdldDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fX2NmZ1t0XX0sYmVmb3JlRHJhdzpmdW5jdGlvbigpe30sZHJhdzpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcImNvbnRleHRcIiksbj10Ll9fYXR0cnMuY2xpcDt0LmJlZm9yZURyYXcoKSx0LmdldChcInZpc2libGVcIikmJihlLnNhdmUoKSxuJiYoZS5zYXZlKCksbi5yZXNldFRyYW5zZm9ybSgpLG4uY3JlYXRlUGF0aCgpLGUucmVzdG9yZSgpLGUuY2xpcCgpKSx0LnJlc2V0QXR0cnMoKSx0LnJlc2V0VHJhbnNmb3JtKCksdC5kcmF3SW5uZXIoKSxlLnJlc3RvcmUoKSl9LGRyYXdJbm5lcjpmdW5jdGlvbigpe30sc2hvdzpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNldChcInZpc2libGVcIiwhMCksdGhpc30saGlkZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNldChcInZpc2libGVcIiwhMSksdGhpc30scmVtb3ZlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYodm9pZCAwPT09dCYmKHQ9ITApLGUuZ2V0KFwicGFyZW50XCIpKXt2YXIgbj1lLmdldChcInBhcmVudFwiKSxyPW4uZ2V0KFwiY2hpbGRyZW5cIik7aS5yZW1vdmUocixlKSxlLnNldChcInBhcmVudFwiLG51bGwpfXJldHVybiB0JiZlLmRlc3Ryb3koKSxlfSxkZXN0cm95OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwiZGVzdHJveWVkXCIpO2lmKCFlKXJldHVybiB0Ll9fY2ZnPXt9LHQuX19hdHRycz1udWxsLHQuX19saXN0ZW5lcnM9bnVsbCx0Ll9fbT1udWxsLHQuc2V0KFwiZGVzdHJveWVkXCIsITApLHR9LF9fc2V0WkluZGV4OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIHRoaXMuX19jZmcuekluZGV4PXQsaS5ub3ROdWxsKGUuZ2V0KFwicGFyZW50XCIpKSYmZS5nZXQoXCJwYXJlbnRcIikuc29ydCgpLHR9LF9fc2V0QXR0cnM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztyZXR1cm4gZS5hdHRyKHQpLHR9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuIGkuY2xvbmUodGhpcyl9LGdldEJCb3g6ZnVuY3Rpb24oKXtyZXR1cm57bWluWDowLG1heFg6MCxtaW5ZOjAsbWF4WTowfX19KSx0LmV4cG9ydHM9Y30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7ci5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KSx0aGlzLnNldChcImNoaWxkcmVuXCIsW10pfXZhciBpPW4oNiksYT1uKDg2KSxzPShuKDcpLG4oMykpLG89cy5WZWN0b3IzO2kuZXh0ZW5kKHIsYSksaS5hdWdtZW50KHIse2lzR3JvdXA6ITAsY2FuRmlsbDohMCxjYW5TdHJva2U6ITAscmVtb3ZlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztpZihhcmd1bWVudHMubGVuZ3RoPj0yKW4uY29udGFpbih0KSYmdC5yZW1vdmUoZSk7ZWxzZXtpZigxPT09YXJndW1lbnRzLmxlbmd0aCl7aWYoIWkuaXNCb29sZWFuKHQpKXJldHVybiBuLmNvbnRhaW4odCkmJnQucmVtb3ZlKCEwKSxuO2U9dH0wPT09YXJndW1lbnRzLmxlbmd0aCYmKGU9ITApLHIuc3VwZXJjbGFzcy5yZW1vdmUuY2FsbChuLGUpfXJldHVybiBufSxhZGQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0KFwiY2hpbGRyZW5cIik7aWYoaS5pc0FycmF5KHQpKWkuZWFjaCh0LGZ1bmN0aW9uKHQpe3QuZ2V0KFwicGFyZW50XCIpJiZ0LmdldChcInBhcmVudFwiKS5yZW1vdmUodCwhMSksZS5fX3NldEV2bih0KX0pLG4ucHVzaC5hcHBseShuLHQpO2Vsc2V7dmFyIHI9dDtyLmdldChcInBhcmVudFwiKSYmci5nZXQoXCJwYXJlbnRcIikucmVtb3ZlKHIsITEpLGUuX19zZXRFdm4ociksbi5wdXNoKHIpfXJldHVybiBlfSxjb250YWluOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLG49ZS5nZXQoXCJjaGlsZHJlblwiKSxyPTAsaT1uLmxlbmd0aDtyPGk7cisrKWlmKG5bcl09PT10KXJldHVybiEwO3JldHVybiExfSxfX3NldEV2bjpmdW5jdGlvbih0KXt2YXIgZT10aGlzO3Quc2V0KFwicGFyZW50XCIsZSksdC5zZXQoXCJjb250ZXh0XCIsZS5nZXQoXCJjb250ZXh0XCIpKTt2YXIgbj10Ll9fYXR0cnMuY2xpcDtuJiYobi5zZXQoXCJwYXJlbnRcIixlKSxuLnNldChcImNvbnRleHRcIixlLmdldChcImNvbnRleHRcIikpKSx0LnNldChcImNhbnZhc1wiLGUuZ2V0KFwiY2FudmFzXCIpKSxpLmVhY2godC5nZXQoXCJjaGlsZHJlblwiKSxmdW5jdGlvbihlKXt0Ll9fc2V0RXZuKGUpfSl9LGdldEJCb3g6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9MS8wLG49LSgxLzApLHI9MS8wLGE9LSgxLzApLHM9dC5nZXQoXCJjaGlsZHJlblwiKTtyZXR1cm4gaS5lYWNoKHMsZnVuY3Rpb24odCl7aWYodC5nZXQoXCJ2aXNpYmxlXCIpKXt2YXIgaT10LmdldEJCb3goXCJib3hcIik7aWYoIWkpcmV0dXJuITA7dmFyIHM9bmV3IG8oaS5taW5YLGkubWluWSwxKSx1PW5ldyBvKGkubWluWCxpLm1heFksMSksYz1uZXcgbyhpLm1heFgsaS5taW5ZLDEpLGw9bmV3IG8oaS5tYXhYLGkubWF4WSwxKTt0LmFwcGx5KHMpLHQuYXBwbHkodSksdC5hcHBseShjKSx0LmFwcGx5KGwpO3ZhciBoPU1hdGgubWluKHMueCx1LngsYy54LGwueCksZj1NYXRoLm1heChzLngsdS54LGMueCxsLngpLGc9TWF0aC5taW4ocy55LHUueSxjLnksbC55KSxwPU1hdGgubWF4KHMueSx1LnksYy55LGwueSk7aDxlJiYoZT1oKSxmPm4mJihuPWYpLGc8ciYmKHI9ZykscD5hJiYoYT1wKX19KSx7bWluWDplLG1pblk6cixtYXhYOm4sbWF4WTphfX0sZHJhd0lubmVyOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwiY2hpbGRyZW5cIik7cmV0dXJuIGkuZWFjaChlLGZ1bmN0aW9uKHQpe3QuZHJhdygpfSksdH0sZ2V0Q291bnQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3JldHVybiB0LmdldChcImNoaWxkcmVuXCIpLmxlbmd0aH0sc29ydDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcImNoaWxkcmVuXCIpO3JldHVybiBlLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5nZXQoXCJ6SW5kZXhcIiktZS5nZXQoXCJ6SW5kZXhcIil9KSx0fSxmaW5kOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIGUuZmluZEJ5KGZ1bmN0aW9uKGUpe3JldHVybiBlLmdldChcImlkXCIpPT09dH0pfSxmaW5kQnk6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0KFwiY2hpbGRyZW5cIikscj1udWxsO3JldHVybiBpLmVhY2gobixmdW5jdGlvbihlKXtpZih0KGUpP3I9ZTplLmZpbmRCeSYmKHI9ZS5maW5kQnkodCkpLHIpcmV0dXJuITF9KSxyfSxnZXRTaGFwZTpmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4oKXtmb3IodmFyIG49cy5sZW5ndGgtMTtuPj0wO24tLSl7dmFyIGk9c1tuXTtpZihpLmdldChcInZpc2libGVcIikmJmkuZ2V0KFwiY2FwdHVyZVwiKSYmKGkuaXNHcm91cD9yPWkuZ2V0U2hhcGUodCxlKTppLmlzSGl0KHQsZSkmJihyPWkpKSxyKWJyZWFrfX12YXIgcixpPXRoaXMsYT1pLl9fYXR0cnMuY2xpcCxzPWkuZ2V0KFwiY2hpbGRyZW5cIik7cmV0dXJuIGE/YS5pbnNpZGUodCxlKSYmbigpOm4oKSxyfSxjbGVhcjpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLGU9dC5nZXQoXCJjaGlsZHJlblwiKTswIT09ZS5sZW5ndGg7KWVbZS5sZW5ndGgtMV0ucmVtb3ZlKCk7cmV0dXJuIHR9LGRlc3Ryb3k6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3QuZ2V0KFwiZGVzdHJveWVkXCIpfHwodC5jbGVhcigpLHIuc3VwZXJjbGFzcy5kZXN0cm95LmNhbGwodCkpfX0pLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUsbil7dmFyIHI9Zy5leGVjKHQpLGk9Yy5tb2QoYy5kZWdyZWVUb1JhZChwYXJzZUZsb2F0KHJbMV0pKSwyKk1hdGguUEkpLGE9clsyXSxvPWUuZ2V0QkJveCgpO2lmKDA8PWkmJmk8LjUqTWF0aC5QSSl2YXIgdT17eDpvLm1pblgseTpvLm1pbll9LGw9e3g6by5tYXhYLHk6by5tYXhZfTtlbHNlIGlmKC41Kk1hdGguUEk8PWkmJmk8TWF0aC5QSSl2YXIgdT17eDpvLm1heFgseTpvLm1pbll9LGw9e3g6by5taW5YLHk6by5tYXhZfTtlbHNlIGlmKE1hdGguUEk8PWkmJmk8MS41Kk1hdGguUEkpdmFyIHU9e3g6by5tYXhYLHk6by5tYXhZfSxsPXt4Om8ubWluWCx5Om8ubWluWX07ZWxzZSB2YXIgdT17eDpvLm1pblgseTpvLm1heFl9LGw9e3g6by5tYXhYLHk6by5taW5ZfTt2YXIgaD1NYXRoLnRhbihpKSxmPWgqaCxwPShsLngtdS54K2gqKGwueS11LnkpKS8oZisxKSt1Lngsdj1oKihsLngtdS54K2gqKGwueS11LnkpKS8oZisxKSt1LnksZD1lLmdldChcImNvbnRleHRcIikseD1kLmNyZWF0ZUxpbmVhckdyYWRpZW50KHUueCx1LnkscCx2KTtyZXR1cm4gcyhhLHgsbikseH1mdW5jdGlvbiBpKHQsZSxuKXt2YXIgcj1wLmV4ZWModCksaT1wYXJzZUZsb2F0KHJbMV0pLGE9cGFyc2VGbG9hdChyWzJdKSxvPXBhcnNlRmxvYXQoclszXSksdT1yWzRdLGM9ZS5nZXRCQm94KCksbD1lLmdldChcImNvbnRleHRcIiksaD1jLm1heFgtYy5taW5YLGY9Yy5tYXhZLWMubWluWSxnPU1hdGguc3FydChoKmgrZipmKS8yLHY9bC5jcmVhdGVSYWRpYWxHcmFkaWVudChjLm1pblgraCppLGMubWluWStmKmEsbyxjLm1pblgraC8yLGMubWluWStmLzIsZyk7cmV0dXJuIHModSx2LG4pLHZ9ZnVuY3Rpb24gYSh0LGUpe3ZhciBuPXYuZXhlYyh0KSxyPW5bMV0saT1uWzJdO3N3aXRjaChyKXtjYXNlXCJhXCI6cj1cInJlcGVhdFwiO2JyZWFrO2Nhc2VcInhcIjpyPVwicmVwZWF0LXhcIjticmVhaztjYXNlXCJ5XCI6cj1cInJlcGVhdC15XCI7YnJlYWs7Y2FzZVwiblwiOnI9XCJuby1yZXBlYXRcIjticmVhaztkZWZhdWx0OnI9XCJuby1yZXBlYXRcIn12YXIgYT1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChpKSxzPWUuZ2V0KFwiY29udGV4dFwiKSxvPXMuY3JlYXRlUGF0dGVybihhLHIpO3JldHVybiBvfWZ1bmN0aW9uIHModCxlLG4pe3ZhciByPXQubWF0Y2goZCk7dS5lYWNoKHIsZnVuY3Rpb24odCl7dD10LnNwbGl0KFwiOlwiKTt2YXIgcj1vKHRbMV0sbik7ZS5hZGRDb2xvclN0b3AodFswXSxyKX0pfWZ1bmN0aW9uIG8odCxlKXtpZih2b2lkIDA9PT1lKXJldHVybiB0O3Q9bmV3IGwodCksdC5tdWx0aXBseUEoZSk7dmFyIG49dC5nZXRUeXBlKCk7cmV0dXJuXCJoc2xcIj09PW4/dC5nZXRIU0xTdHlsZSgpOlwicmdiXCI9PT1uP3QuZ2V0UkdCU3R5bGUoKTp2b2lkIDB9dmFyIHU9big2KSxjPW4oNCksbD1uKDM3KSxoPS9bTUxIVlFUQ1NBWl0oW15NTEhWUVRDU0FaXSopL2dpLGY9L1teXFxzXFwsXSsvZ2ksZz0vXmxcXHMqXFwoXFxzKihbXFxkLl0rKVxccypcXClcXHMqKC4qKS9pLHA9L15yXFxzKlxcKFxccyooW1xcZC5dKylcXHMqLFxccyooW1xcZC5dKylcXHMqLFxccyooW1xcZC5dKylcXHMqXFwpXFxzKiguKikvaSx2PS9ecFxccyooW2F4eW5dKVxccysoLiopL2ksZD0vW1xcZC5dKzooI1teXFxzXSt8W15cXCldK1xcKSkvZ2kseD17cGFyc2VQYXRoOmZ1bmN0aW9uKHQpe3JldHVybiB0PXR8fFtdLHUuaXNBcnJheSh0KT90OnUuaXNTdHJpbmcodCk/KHQ9dC5tYXRjaChoKSx1LmVhY2godCxmdW5jdGlvbihlLG4pe2lmKGU9ZS5tYXRjaChmKSxlWzBdLmxlbmd0aD4xKXt2YXIgcj1lWzBdLmNoYXJBdCgwKTtlLnNwbGljZSgxLDAsZVswXS5zdWJzdHIoMSkpLGVbMF09cn11LmVhY2goZSxmdW5jdGlvbih0LG4pe2lzTmFOKHQpfHwoZVtuXT0rdCl9KSx0W25dPWV9KSx0KTp2b2lkIDB9LHBhcnNlU3R5bGU6ZnVuY3Rpb24odCxlLG4pe2lmKHUuaXNTdHJpbmcodCkpcmV0dXJuIGcudGVzdCh0KT9yKHQsZSxuKTpwLnRlc3QodCk/aSh0LGUsbik6di50ZXN0KHQpP2EodCxlKTpvKHQsbil9fTt0LmV4cG9ydHM9eH0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMyksaT1yLlZlY3RvcjI7dC5leHBvcnRzPXthdDpmdW5jdGlvbih0LGUsbil7cmV0dXJuKGUtdCkqbit0fSxwb2ludERpc3RhbmNlOmZ1bmN0aW9uKHQsZSxuLHIsYSxzKXt2YXIgbz1uZXcgaShuLXQsci1lKTtpZihvLmlzWmVybygpKXJldHVybiBOYU47dmFyIHU9by52ZXJ0aWNhbCgpO3Uubm9ybWFsaXplKCk7dmFyIGM9bmV3IGkoYS10LHMtZSk7cmV0dXJuIE1hdGguYWJzKGMuZG90KHUpKX0sYm94OmZ1bmN0aW9uKHQsZSxuLHIsaSl7dmFyIGE9aS8yLHM9TWF0aC5taW4odCxuKSxvPU1hdGgubWF4KHQsbiksdT1NYXRoLm1pbihlLHIpLGM9TWF0aC5tYXgoZSxyKTtyZXR1cm57bWluWDpzLWEsbWluWTp1LWEsbWF4WDpvK2EsbWF4WTpjK2F9fX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big3NSk7dC5leHBvcnRzPXtwcm9jZXNzRnJhbWVzOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1bXTtyZXR1cm4gci5lYWNoKHQsZnVuY3Rpb24odCl7bi5wdXNoKGUuc29ydEZyYW1lKHQpKX0pLG59LHNvcnRGcmFtZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldFhEaW0oKTtyZXR1cm4gaS5zb3J0KHQsZSl9fX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSk7dC5leHBvcnRzPXtzcGxpdERhdGE6ZnVuY3Rpb24odCl7aWYoIXQubGVuZ3RoKXJldHVybltdO3ZhciBlLG49W10saT1bXSxhPXRoaXMuZ2V0WURpbSgpO3JldHVybiByLmVhY2godCxmdW5jdGlvbih0KXtlPXQuX29yaWdpbj90Ll9vcmlnaW5bYV06dFthXSxyLmlzQXJyYXkoZSkmJnIuaXNOdWxsKGVbMF0pfHxyLmlzTnVsbChlKT8obi5wdXNoKGkpLGk9W10pOmkucHVzaCh0KX0pLG4ucHVzaChpKSxufX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3Iuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9dmFyIGk9bigxKSxhPW4oMTkpLHM9big5MSk7aS5leHRlbmQocixhKSxpLm1peGluKHIsW3NdKSxyLkFUVFJTPXt0eXBlOlwicGF0aFwiLHNoYXBlVHlwZTpcImxpbmVcIn0saS5hdWdtZW50KHIse2RyYXdGcmFtZTpmdW5jdGlvbih0KXt2YXIgZSxuLHIsYT10aGlzLHM9dC50b0pTT04oKSxvPXRoaXMuc3BsaXREYXRhKHMpLHU9dGhpcy5nZXQoXCJjb250YWluZXJcIiksYz10aGlzLmdldChcInNoYXBlT2JqXCIpLGw9c1swXSxoPXRoaXMuZ2V0RHJhd0NmZyhsKSxmPWwucG9pbnRzLmxlbmd0aDtpLmVhY2gobyxmdW5jdGlvbih0KXtmb3IodmFyIGk9MDtpPGY7aSsrKXtlPVtdO2Zvcih2YXIgcz0wO3M8dC5sZW5ndGg7cysrKXI9dFtzXSxlLnB1c2goci5wb2ludHNbaV0pO2lmKDA9PT1lLmxlbmd0aClyZXR1cm47aC5wb2ludHM9ZSxuPWEuZ2V0RHJhd1NoYXBlKGguc2hhcGUpLGMuZHJhd1NoYXBlKG4saCx1KX19KX19KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMjkzKSxpPW4oMjkyKSxhPW4oMjk4KSxzPW4oMjk5KSxvPW4oMjk3KSx1PW4oMjk2KSxjPW4oMjk0KSxsPXtpbml0RXZlbnQ6ZnVuY3Rpb24odCl7dmFyIGU9bmV3IGMoe2NoYXJ0OnR9KTtlLmJpbmRFdmVudHMoKSx0LnNldChcImV2ZW50QXNzaXN0XCIsZSl9LGluaXRTY2FsZTpmdW5jdGlvbih0KXt2YXIgZT1uZXcgYTt0LnNldChcInNjYWxlQXNzaXN0XCIsZSl9LGluaXRDb29yZDpmdW5jdGlvbih0KXt2YXIgZT1uZXcgcjt0LnNldChcImNvb3JkQXNzaXN0XCIsZSl9LGluaXRBeGlzOmZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBpKHtjaGFydDp0fSk7dC5zZXQoXCJheGlzQXNzaXN0XCIsZSl9LGluaXRMZWdlbmQ6ZnVuY3Rpb24odCl7dmFyIGU9bmV3IG8oe2NoYXJ0OnR9KTt0LnNldChcImxlZ2VuZEFzc2lzdFwiLGUpfSxpbml0VG9vbHRpcDpmdW5jdGlvbih0KXt2YXIgZT1uZXcgcyh7Y2hhcnQ6dH0pO3Quc2V0KFwidG9vbHRpcEFzc2lzdFwiLGUpfSxpbml0R3VpZGU6ZnVuY3Rpb24odCl7dmFyIGU9bmV3IHU7dC5zZXQoXCJndWlkZUFzc2lzdFwiLGUpfX07dC5leHBvcnRzPWx9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big5NSksYT1uKDIwKSxzPWZ1bmN0aW9uIG8odCl7by5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQocyxpKSxyLmF1Z21lbnQocyx7Z2V0UG9pbnRSYXVpczpmdW5jdGlvbih0LGUpe3JldHVybiBhLmdldFBvaW50UmFkaXVzKHQsZSl9LGdldENpcmNsZVBvaW50OmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10aGlzLGk9ci5nZXQoXCJjb29yZFwiKSxhPWkuZ2V0Q2VudGVyKCkscz1yLl9pc0VtaXRMYWJlbHMoKSxvPXIuZ2V0UG9pbnRSYXVpcyhpLG4pO2lmKGkuaXNUcmFuc3Bvc2VkJiZvPmUmJiFzKXt2YXIgdT1NYXRoLmFzaW4oZS8oMipvKSk7dCs9Mip1fWVsc2Ugbys9ZTtyZXR1cm57eDphLngrbypNYXRoLmNvcyh0KSx5OmEueStvKk1hdGguc2luKHQpLGFuZ2xlOnQscjpvfX0sZ2V0QXJjUG9pbnQ6ZnVuY3Rpb24odCxlKXt2YXIgbixpPXRoaXM7cmV0dXJuIGU9ZXx8MCxuPXIuaXNBcnJheSh0LngpfHxyLmlzQXJyYXkodC55KT97eDpyLmlzQXJyYXkodC54KT90LnhbZV06dC54LHk6ci5pc0FycmF5KHQueSk/dC55W2VdOnQueX06dCxpLnRyYW5zTGFiZWxQb2ludChuKSxufSxnZXRQb2ludEFuZ2xlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldChcImNvb3JkXCIpO3JldHVybiBhLmdldFBvaW50QW5nbGUobix0KX0sZ2V0TWlkZGxlUG9pbnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0KFwiY29vcmRcIiksaT10Lmxlbmd0aCxhPXt4OjAseTowfTtyZXR1cm4gci5lYWNoKHQsZnVuY3Rpb24odCl7YS54Kz10LngsYS55Kz10Lnl9KSxhLngvPWksYS55Lz1pLGE9bi5jb252ZXJ0KGEpfSxfaXNUb01pZGRsZTpmdW5jdGlvbih0KXtyZXR1cm4gdC54Lmxlbmd0aD4yfSxnZXRMYWJlbFBvaW50OmZ1bmN0aW9uKHQsZSxuKXt2YXIgcixpPXRoaXMsYT10W25dLHM9MTtpLl9pc1RvTWlkZGxlKGUpP3I9aS5nZXRNaWRkbGVQb2ludChlLnBvaW50cyk6KDE9PT10Lmxlbmd0aCYmMD09PW4/bj0xOjA9PT1uJiYocz0tMSkscj1pLmdldEFyY1BvaW50KGUsbikpO3ZhciBvPWkuZ2V0RGVmYXVsdE9mZnNldCgpO28qPXM7dmFyIHU9aS5nZXRQb2ludEFuZ2xlKHIpLGM9aS5nZXRDaXJjbGVQb2ludCh1LG8scik7cmV0dXJuIGMudGV4dD1hLGMuYW5nbGU9dSxjLmNvbG9yPWUuY29sb3IsYy5yb3RhdGU9aS5nZXRMYWJlbFJvdGF0ZSh1LG8sZSksY30sX2lzRW1pdExhYmVsczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwibGFiZWxzXCIpO3JldHVybiB0LmxhYmVsRW1pdH0sZ2V0TGFiZWxSb3RhdGU6ZnVuY3Rpb24odCl7dmFyIGUsbj10aGlzO3JldHVybiBlPTE4MCp0L01hdGguUEksZSs9OTAsbi5faXNFbWl0TGFiZWxzKCkmJihlLT05MCksZSYmKGU+OTA/ZS09MTgwOmU8LTkwJiYoZSs9MTgwKSksZX0sZ2V0TGFiZWxBbGlnbjpmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMscj1uLmdldChcImNvb3JkXCIpO2lmKG4uX2lzRW1pdExhYmVscygpKWU9dC5hbmdsZTw9TWF0aC5QSS8yJiZ0LmFuZ2xlPi1NYXRoLlBJLzI/XCJsZWZ0XCI6XCJyaWdodFwiO2Vsc2UgaWYoci5pc1RyYW5zcG9zZWQpe3ZhciBpPXIuZ2V0Q2VudGVyKCksYT1uLmdldERlZmF1bHRPZmZzZXQoKTtlPU1hdGguYWJzKHQueC1pLngpPDE/XCJjZW50ZXJcIjp0LmFuZ2xlPk1hdGguUEl8fHQuYW5nbGU8PTA/YT4wP1wibGVmdFwiOlwicmlnaHRcIjphPjA/XCJyaWdodFwiOlwibGVmdFwifWVsc2UgZT1cImNlbnRlclwiO3JldHVybiBlfX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXt2YXIgZT0wO3JldHVybiB1LmVhY2godCxmdW5jdGlvbih0KXtlKz10fSksZS90Lmxlbmd0aH12YXIgaT1uKDExKSxhPWkuQ29tcG9uZW50cyxzPWEuTGFiZWxzLG89aS5Hcm91cCx1PW4oMSksYz1uKDUpLGw9W1wibGluZVwiLFwicG9pbnRcIixcInBhdGhcIl0saD1cIl9vcmlnaW5cIixmPWZ1bmN0aW9uIGcodCl7Zy5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07Zi5DRkc9e2xhYmVsczpjLmxhYmVscyxsYWJlbHNDZmc6bnVsbCxjb29yZDpudWxsLGdlb21UeXBlOm51bGwsekluZGV4OjZ9LHUuZXh0ZW5kKGYsbyksdS5taXhpbihmLFtzLlNob3dMYWJlbHNdKSx1LmF1Z21lbnQoZix7X3JlbmRlclVJOmZ1bmN0aW9uKCl7Zi5zdXBlcmNsYXNzLl9yZW5kZXJVSS5jYWxsKHRoaXMpLHRoaXMuaW5pdExhYmVsc0NmZygpLHRoaXMucmVuZGVyTGFiZWxzKCl9LF9nZXRMYWJlbFZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlLG49dGhpcyxyPXRbaF0saT1uLmdldChcImxhYmVsc0NmZ1wiKSxhPWkuc2NhbGVzLHM9aS5jYWxsYmFjaztpZihzKXt2YXIgbz1bXTt1LmVhY2goYSxmdW5jdGlvbih0KXtvLnB1c2goclt0LmRpbV0pfSksZT1zLmFwcGx5KG51bGwsbyl9ZWxzZXt2YXIgYz1hWzBdO2lmKGU9cltjLmRpbV0sdS5pc0FycmF5KGUpKXt2YXIgbD1bXTt1LmVhY2goZSxmdW5jdGlvbih0KXtsLnB1c2goYy5nZXRUZXh0KHQpKX0pLGU9bH1lbHNlIGU9Yy5nZXRUZXh0KGUpfXJldHVybiBlfSxpbml0TGFiZWxzQ2ZnOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0RGVmYXVsdExhYmVsQ2ZnKCksbj10LmdldChcImxhYmVsc0NmZ1wiKTt1Lm1peCghMCxlLG4uY2ZnKSx0LnNldChcImxhYmVsc1wiLGUpfSxnZXREZWZhdWx0TGFiZWxDZmc6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJsYWJlbHNDZmdcIikuY2ZnLG49dC5nZXQoXCJnZW9tVHlwZVwiKTtyZXR1cm5cInBvbHlnb25cIj09PW58fGUmJmUub2Zmc2V0PDAmJnUuaW5kZXhPZihsLG4pPT09LTE/dS5taXgoITAse30sYy5pbm5lckxhYmVscyk6dGhpcy5nZXQoXCJsYWJlbHNcIil9LGdldExhYmVsc0l0ZW1zOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1bXSxyPWUuZ2V0KFwibGFiZWxzXCIpO3JldHVybiB1LmVhY2godCxmdW5jdGlvbih0KXt2YXIgaT1lLl9nZXRMYWJlbFZhbHVlKHQpO3UuaXNBcnJheShpKXx8KGk9W2ldKTt2YXIgYT1pLmxlbmd0aDt1LmVhY2goaSxmdW5jdGlvbihzLG8pe3ZhciBjPWUuZ2V0TGFiZWxQb2ludChpLHQsbyk7aWYoYyl7Yz11Lm1peCh7fSx0Ll9vcmlnaW4sYyk7dmFyIGw7bD1yJiZyLmxhYmVsJiZyLmxhYmVsLnRleHRBbGlnbj9yLmxhYmVsLnRleHRBbGlnbjplLmdldExhYmVsQWxpZ24oYyxvLGEpLGMudGV4dEFsaWduPWwsbi5wdXNoKGMpfX0pfSksbn0sYWRqdXN0SXRlbXM6ZnVuY3Rpb24odCl7cmV0dXJuIHR9LGRyYXdMaW5lczpmdW5jdGlvbigpe30sZ2V0TGFiZWxQb2ludDpmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gaShlLG4pe3JldHVybiB1LmlzQXJyYXkoZSkmJihlPTE9PT10Lmxlbmd0aD9lLmxlbmd0aDw9Mj9lW2UubGVuZ3RoLTFdOnIoZSk6ZVtuXSksZX12YXIgYT10aGlzLHM9e3g6aShlLngsbikseTppKGUueSxuKSx0ZXh0OnRbbl19LG89YS5nZXRMYWJlbE9mZnNldChzLG4sdC5sZW5ndGgpO3JldHVybiBhLnRyYW5zTGFiZWxQb2ludChzKSxzLngrPW8ueCxzLnkrPW8ueSxzfSx0cmFuc0xhYmVsUG9pbnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0KFwiY29vcmRcIikscj1uLnRyYW5zKHQueCx0LnksMSk7dC54PXIueCx0Lnk9ci55fSxnZXRPZmZzZXRWZWN0b3I6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMsbj1lLmdldChcImxhYmVsc1wiKSxyPW4ub2Zmc2V0fHwwLGk9ZS5nZXQoXCJjb29yZFwiKTtyZXR1cm4gdD1pLmlzVHJhbnNwb3NlZD9pLnRyYW5zKHIsMCk6aS50cmFucygwLHIpfSxnZXREZWZhdWx0T2Zmc2V0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPTAsbj10LmdldChcImNvb3JkXCIpLHI9dC5nZXRPZmZzZXRWZWN0b3IoKTtyZXR1cm4gZT1uLmlzVHJhbnNwb3NlZD9yLng6ci55fSxnZXRMYWJlbE9mZnNldDpmdW5jdGlvbih0LGUsbil7dmFyIHI9dGhpcyxpPXIuZ2V0RGVmYXVsdE9mZnNldCgpLGE9ci5nZXQoXCJjb29yZFwiKSxzPWEuaXNUcmFuc3Bvc2VkLG89cz9cInhcIjpcInlcIix1PXM/MTotMSxjPXt4OjAseTowfTtyZXR1cm4gZT4wfHwxPT09bj9jW29dPWkqdTpjW29dPWkqdSotMSxjfSxnZXRMYWJlbEFsaWduOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10aGlzLGk9XCJjZW50ZXJcIixhPXIuZ2V0KFwiY29vcmRcIik7aWYoYS5pc1RyYW5zcG9zZWQpe3ZhciBzPXIuZ2V0RGVmYXVsdE9mZnNldCgpO2k9czwwP1wicmlnaHRcIjowPT09cz9cImNlbnRlclwiOlwibGVmdFwiLG4+MSYmMD09PWUmJihcInJpZ2h0XCI9PT1pP2k9XCJsZWZ0XCI6XCJsZWZ0XCI9PT1pJiYoaT1cInJpZ2h0XCIpKX1yZXR1cm4gaX0sc2hvd0xhYmVsczpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXRMYWJlbHNJdGVtcyh0KSxyPWUuZ2V0KFwibGFiZWxzXCIpO249ZS5hZGp1c3RJdGVtcyhuKSxlLnJlc2V0TGFiZWxzKG4pLHIubGFiZWxMaW5lJiZlLmRyYXdMaW5lcyhuLHIubGFiZWxMaW5lKX0sZGVzdHJveTpmdW5jdGlvbigpe3RoaXMucmVtb3ZlTGFiZWxzKCksZi5zdXBlcmNsYXNzLmRlc3Ryb3kuY2FsbCh0aGlzKX19KSx0LmV4cG9ydHM9Zn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMjQpO3IuSW50ZXJ2YWw9bigzMTApLHIuU2NoZW1hPW4oMzExKSxyLkhlYXRtYXA9bigzMDkpLHIuQ29udG91cj1uKDMwNyksci5FZGdlPW4oMzA4KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNSksaT17Z2V0RGVmYWx1dFNpemU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldENvb3JkKCksZT10aGlzLmdldFhTY2FsZSgpLG49ZS52YWx1ZXMubGVuZ3RoLGk9MS9uLGE9MTt0aGlzLmlzSW5DaXJjbGUoKSYmXCJzY2hlbWFcIiE9PXRoaXMuZ2V0KFwidHlwZVwiKT90LmlzVHJhbnNwb3NlZCYmbj4xJiYoYT1yLndpZHRoUmF0aW8ubXVsdGlwbGVQaWUpOmE9ci53aWR0aFJhdGlvLmNvbHVtbixpKj1hO3ZhciBzPXRoaXMuZ2V0KFwiYWRqdXN0c1wiKTtpZihzJiYoXCJEb2RnZVwiPT09c3x8cy5pbmRleE9mKFwiRG9kZ2VcIikhPT0tMSkpe3ZhciBvPXRoaXMuZ2V0KFwiZnJhbWVzXCIpO2kvPW8ubGVuZ3RofXJldHVybiBpfX07dC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDE1KTtuKDMxOCksbigzMTkpLG4oMzIwKSxuKDMyMSksbigzMTYpLG4oMzIyKSxuKDMxNyksdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gbigpe3ZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpXCIpO3JldHVybiB0LnRpdGxlPVwiV2ViIENvbG91ciBQaWNrZXJcIix0LnN0eWxlLmRpc3BsYXk9XCJub25lXCIsZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0KSx0fXZhciByPS9yZ2JcXCgoXFxkKylcXHMqLFxccyooXFxkKylcXHMqLFxccyooXFxkKylcXHMqXFwpLzt0LmV4cG9ydHM9e3RvUkdCOmZ1bmN0aW9uKCl7dmFyIHQ7cmV0dXJuIGRvY3VtZW50LmJvZHkmJih0PW4oKSksZnVuY3Rpb24oZSl7dHx8KHQ9bigpKSx0LnN0eWxlLmNvbG9yPWU7dmFyIGk9ZG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZSh0LFwiXCIpLmdldFByb3BlcnR5VmFsdWUoXCJjb2xvclwiKSxhPXIuZXhlYyhpKTtyZXR1cm4gYS5zaGlmdCgpLHRoaXMuYXJyMnJnYihhKX19KCksdG9IZXg6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9TWF0aC5yb3VuZCh0KSx0PXQudG9TdHJpbmcoMTYpLDE9PT10Lmxlbmd0aCYmKHQ9XCIwXCIrdCksdH0saHNsMlJnYjpmdW5jdGlvbih0KXt2YXIgZT10WzBdLG49dFsxXSxyPXRbMl0saT17fTtpZigwPT09bilpLnI9aS5nPWkuYj1yO2Vsc2V7dmFyIGE9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBuPDAmJihuKz0xKSxuPjEmJihuLT0xKSxuPDEvNj90KzYqKGUtdCkqbjpuPC41P2U6bjwyLzM/dCs2KihlLXQpKigyLzMtbik6dH0scz1yPD0uNT9yKigxK24pOnIrbi1yKm4sbz0yKnItcztpLnI9YShvLHMsZSsxLzMpLGkuZz1hKG8scyxlKSxpLmI9YShvLHMsZS0xLzMpfXJldHVybiBpLnI9TWF0aC5taW4oTWF0aC5yb3VuZCgyNTUqaS5yKSwyNTUpLGkuZz1NYXRoLm1pbihNYXRoLnJvdW5kKDI1NSppLmcpLDI1NSksaS5iPU1hdGgubWluKE1hdGgucm91bmQoMjU1KmkuYiksMjU1KSxcIiNcIit0aGlzLnRvSGV4KGkucikrdGhpcy50b0hleChpLmcpK3RoaXMudG9IZXgoaS5iKX0scmdiMmhzbDpmdW5jdGlvbih0KXt2YXIgZSxuLHIsaT10aGlzLnJnYjJhcnIodCksYT1pWzBdLzI1NSxzPWlbMV0vMjU1LG89aVsyXS8yNTUsdT1NYXRoLm1pbihhLHMsbyksYz1NYXRoLm1heChhLHMsbyksbD1jLXU7cmV0dXJuIGM9PXU/ZT0wOmE9PWM/ZT0ocy1vKS9sOnM9PWM/ZT0yKyhvLWEpL2w6bz09YyYmKGU9NCsoYS1zKS9sKSxlPU1hdGgubWluKDYwKmUsMzYwKSxlPDAmJihlKz0zNjApLHI9KHUrYykvMixuPWM9PXU/MDpyPD0uNT9sLyhjK3UpOmwvKDItYy11KSxbZS8zNjAsbixyXX0sYXJyMnJnYjpmdW5jdGlvbih0KXtyZXR1cm5cIiNcIit0aGlzLnRvSGV4KHRbMF0pK3RoaXMudG9IZXgodFsxXSkrdGhpcy50b0hleCh0WzJdKX0scmdiMmFycjpmdW5jdGlvbih0KXt2YXIgZT1bXTtyZXR1cm4gZS5wdXNoKHBhcnNlSW50KHQuc3Vic3RyKDEsMiksMTYpKSxlLnB1c2gocGFyc2VJbnQodC5zdWJzdHIoMywyKSwxNikpLGUucHVzaChwYXJzZUludCh0LnN1YnN0cig1LDIpLDE2KSksZX19fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUsbixyKXt2YXIgaT10W3JdKyhlW3JdLXRbcl0pKm47cmV0dXJuIGl9dmFyIGk9big2MSksYT1uKDEpLHM9e2NhbENvbG9yOmZ1bmN0aW9uKHQsZSxuKXt2YXIgYSxzPXQubGVuZ3RoLTEsbz1NYXRoLmZsb29yKHMqZSksdT1zKmUtbyxjPXRbb10sbD1vPT09cz9jOnRbbysxXTtyZXR1cm5cImhzbFwiPT09bj9hPWkuaHNsMlJnYihbcihjLGwsdSwwKSxyKGMsbCx1LDEpLHIoYyxsLHUsMildKTooYT17cjpyKGMsbCx1LDApLGc6cihjLGwsdSwxKSxiOnIoYyxsLHUsMil9LGE9XCIjXCIraS50b0hleChhLnIpK2kudG9IZXgoYS5nKStpLnRvSGV4KGEuYikpLGF9LGxpZ2h0bmVzczpmdW5jdGlvbih0LGUpe2U9ZXx8MDt2YXIgbj1bW2UsMSwuOV0sW2UsMSwuNV1dO3JldHVybiBzLmNhbENvbG9yKG4sdCxcImhzbFwiKX0scmVkOmZ1bmN0aW9uKHQpe3JldHVybiBzLmxpZ2h0bmVzcyh0LDApfSxibHVlOmZ1bmN0aW9uKHQpe3JldHVybiBzLmxpZ2h0bmVzcyh0LC42Nil9LGdyZWVuOmZ1bmN0aW9uKHQpe3JldHVybiBzLmxpZ2h0bmVzcyh0LC4zMyl9LGdyYWRpZW50OmZ1bmN0aW9uKHQpe3ZhciBlPVtdO3JldHVybiBhLmlzU3RyaW5nKHQpJiYodD10LnNwbGl0KFwiLVwiKSksYS5lYWNoKHQsZnVuY3Rpb24odCl7dC5pbmRleE9mKFwiI1wiKT09PS0xJiYodD1pLnRvUkdCKHQpKSxlLnB1c2goaS5yZ2IyYXJyKHQpKX0pLGZ1bmN0aW9uKHQpe3JldHVybiBzLmNhbENvbG9yKGUsdCl9fSxncmFkaWVudEhzbDpmdW5jdGlvbih0KXt2YXIgZT1bXTtyZXR1cm4gYS5pc1N0cmluZyh0KSYmKHQ9dC5zcGxpdChcIi1cIikpLGEuZWFjaCh0LGZ1bmN0aW9uKHQpe3QuaW5kZXhPZihcIiNcIik9PT0tMSYmKHQ9aS50b1JHQih0KSksZS5wdXNoKGkucmdiMmhzbCh0KSl9KSxmdW5jdGlvbih0KXtyZXR1cm4gcy5jYWxDb2xvcihlLHQsXCJoc2xcIil9fSxzYXR1cmF0aW9uOmZ1bmN0aW9uKHQsZSl7ZT1lfHwwO3ZhciBuPVtbZSwwLC41XSxbZSwxLC41XV07cmV0dXJuIHMuY2FsQ29sb3Iobix0LFwiaHNsXCIpfSxodWU6ZnVuY3Rpb24odCl7dmFyIGU9W1swLDEsLjVdLFsxLDEsLjVdXTtyZXR1cm4gcy5jYWxDb2xvcihlLHQsXCJoc2xcIil9LGJyaWdodG5lc3M6ZnVuY3Rpb24odCl7dmFyIGU9W1syNTUsMjU1LDI1NV0sWzAsMCwwXV07cmV0dXJuIHMuY2FsQ29sb3IoZSx0KX0saGVhdDpmdW5jdGlvbih0KXt2YXIgZT1bWzI1NSwyNTUsMjU1XSxbMjU1LDEyNy41LDBdLFswLDAsMF1dO3JldHVybiBzLmNhbENvbG9yKGUsdCl9LHJhaW5ib3c6ZnVuY3Rpb24odCl7dmFyIGU9W1swLDI1NSwyNTVdLFswLDAsMjU1XSxbMCwyNTUsMF0sWzI1NSwwLDBdXTtyZXR1cm4gcy5jYWxDb2xvcihlLHQpfSxjaXJjdWxhcjpmdW5jdGlvbih0KXt2YXIgZT1bWzAsMCwyNTVdLFswLDI1NSwwXSxbMjU1LDI1NSwwXSxbMjU1LDAsMF0sWzAsMCwyNTVdXTtyZXR1cm4gcy5jYWxDb2xvcihlLHQpfSxiaXBvbGFyOmZ1bmN0aW9uKHQpe3ZhciBlPVtbMCwyNTUsMF0sWzAsMCwwXSxbMjU1LDAsMF1dO3JldHVybiBzLmNhbENvbG9yKGUsdCl9fTt0LmV4cG9ydHM9c30sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMTAyKTtyLkdyb3VwPW4oMTAzKSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1mdW5jdGlvbigpe307aS5BVFRSUz17YWN0aXZlZDohMX0sci5hdWdtZW50KGkse2lzQWN0aXZlZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldChcImFjdGl2ZWRcIil9LHNldEFjdGl2ZWQ6ZnVuY3Rpb24oKXt0aGlzLnNldEFjdGl2ZVN0YXR1cyghMCksdGhpcy5zZXQoXCJhY3RpdmVkXCIsITApfSxzZXRBY3RpdmVTdGF0dXM6ZnVuY3Rpb24oKXt9LGNsZWFyQWN0aXZlZDpmdW5jdGlvbigpe3RoaXMuc2V0QWN0aXZlU3RhdHVzKCExKSx0aGlzLnNldChcImFjdGl2ZWRcIiwhMSksdGhpcy5jbGVhckFjdGl2ZWRJdGVtJiZ0aGlzLmNsZWFyQWN0aXZlZEl0ZW0oKX19KSx0LmV4cG9ydHM9aX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1mdW5jdGlvbigpe307aS5BVFRSUz17bXVsdGlwbGVBY3RpdmU6ITF9LHIuYXVnbWVudChpLHtpc0l0ZW1BY3RpdmVkOmZ1bmN0aW9uKHQpe3JldHVybiB0LmlzQWN0aXZlZCgpfSxnZXRBY3RpdmVJdGVtczpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldChcImNoaWxkcmVuXCIpfSxzZXRJdGVtQWN0aXZlZDpmdW5jdGlvbih0LGUpe2U/dC5zZXRBY3RpdmVkKCk6dC5jbGVhckFjdGl2ZWQoKX0sb25BY3RpdmVkOmZ1bmN0aW9uKHQpe3RoaXMuZmlyZShcIml0ZW1hY3RpdmVkXCIse2l0ZW06dH0pLHRoaXMuZmlyZVVwR3JvdXAmJnRoaXMuZmlyZVVwR3JvdXAoXCJhY3RpdmVkXCIsdCl9LG9uVW5BY3RpdmVkOmZ1bmN0aW9uKHQpe3RoaXMuZmlyZShcIml0ZW11bmFjdGl2ZWRcIix7aXRlbTp0fSksdGhpcy5maXJlVXBHcm91cCYmdGhpcy5maXJlVXBHcm91cChcInVuYWN0aXZlZFwiLHQpfSxzZXRBY3RpdmVkSXRlbTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXQoXCJtdWx0aXBsZUFjdGl2ZVwiKTtufHxlLmNsZWFyQWN0aXZlZEl0ZW0oKSx0JiYhZS5pc0l0ZW1BY3RpdmVkKHQpJiYoZS5zZXRJdGVtQWN0aXZlZCh0LCEwKSxlLm9uQWN0aXZlZCh0KSl9LGdldEFjdGl2ZWQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXRBY3RpdmVJdGVtcygpLG49bnVsbDtyZXR1cm4gci5lYWNoKGUsZnVuY3Rpb24oZSl7aWYodC5pc0l0ZW1BY3RpdmVkKGUpKXJldHVybiBuPWUsITF9KSxufSxnZXRBbGxBY3RpdmVkOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0QWN0aXZlSXRlbXMoKSxuPVtdO3JldHVybiByLmVhY2goZSxmdW5jdGlvbihlKXt0LmlzSXRlbUFjdGl2ZWQoZSkmJm4ucHVzaChlKX0pLG59LGNsZWFyQWxsQWN0aXZlZDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldEFsbEFjdGl2ZWQoKTtyZXR1cm4gci5lYWNoKGUsZnVuY3Rpb24oZSl7dC5zZXRJdGVtQWN0aXZlZChlLCExKSx0Lm9uVW5BY3RpdmVkKGUpfSksdGhpc30sY2xlYXJBY3RpdmVkSXRlbTpmdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiB0PXR8fGUuZ2V0QWN0aXZlZCgpLHQmJihlLnNldEl0ZW1BY3RpdmVkKHQsITEpLGUub25VbkFjdGl2ZWQodCkpLHRoaXN9fSksdC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDI2KTtyLkRvZGdlPW4oMTA1KSxyLkppdHRlcj1uKDEwNiksci5TdGFjaz1uKDEwNyksci5TeW1tZXRyaWM9bigxMDgpLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMjYpLGE9bigyKSxzPWZ1bmN0aW9uKHQpe3Muc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3IuZXh0ZW5kKHMsaSksci5hdWdtZW50KHMse21hcmdpblJhdGlvOi41LGRvZGdlUmF0aW86LjUsX2dldERvZGdlRGltOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1udWxsO3JldHVybiByLmVhY2godCxmdW5jdGlvbih0KXtpZih0IT09ZS54RGltKXJldHVybiBuPXQsITF9KSxufSxwcm9jZXNzQWRqdXN0OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1hLm1lcmdlLmFwcGx5KG51bGwsdCkscj1lLmdyb3VwRGltcyxpPWUuX2dldERvZGdlRGltKHIpO2lmKGkmJih0PWEuZ3JvdXAobixpKSksZS5hZGpGcmFtZXM9dCxlLm1lcmdlRnJhbWU9bix0PWUuYWRqdXN0RnJhbWVzKHQsbiksaSl7dmFyIG49YS5tZXJnZS5hcHBseShudWxsLHQpO3Q9YS5ncm91cChuLHIpfXJldHVybiBlLmFkakZyYW1lcz1udWxsLGUubWVyZ2VGcmFtZT1udWxsLHR9LGdldERpc3RyaWJ1dGlvbjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5hZGpGcmFtZXMsaT17fTtyZXR1cm4gci5lYWNoKG4sZnVuY3Rpb24oZSxuKXt2YXIgcz1hLnZhbHVlcyhlLHQpO3MubGVuZ3RofHxzLnB1c2goMCksci5lYWNoKHMsZnVuY3Rpb24odCl7aVt0XXx8KGlbdF09W10pLGlbdF0ucHVzaChuKX0pfSksaX0sYWRqdXN0RGltOmZ1bmN0aW9uKHQsZSxuLGksYSl7dmFyIHM9dGhpcyxvPXMuZ2V0RGlzdHJpYnV0aW9uKHQpLHU9cy5ncm91cERhdGEobix0KTtyLmVhY2godSxmdW5jdGlvbihuLGkpe2k9cGFyc2VGbG9hdChpKTt2YXIgdTt1PTE9PT1lLmxlbmd0aD97cHJlOi0xLG5leHQ6MX06cy5nZXRBZGp1c3RSYW5nZSh0LGksZSksci5lYWNoKG4sZnVuY3Rpb24oZSl7dmFyIG49ZVt0XSxpPW9bbl0sYz1yLmluZGV4T2YoaSxhKTtlW3RdPXMuZ2V0RG9kZ2VPZmZzZXQodSxjLGkubGVuZ3RoKX0pfSl9LGdldERvZGdlT2Zmc2V0OmZ1bmN0aW9uKHQsZSxuKXt2YXIgcixpPXRoaXMsYT10LnByZSxzPXQubmV4dCxvPXMtYSx1PW8qaS5kb2RnZVJhdGlvL24sYz1pLm1hcmdpblJhdGlvKnU7cmV0dXJuIHI9LjUqKG8tbip1LShuLTEpKmMpKygoZSsxKSp1K2UqYyktLjUqdS0uNSpvLChhK3MpLzIrcn19KSx0LmV4cG9ydHM9c30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDI2KSxhPWZ1bmN0aW9uKHQpe2Euc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3IuZXh0ZW5kKGEsaSksci5hdWdtZW50KGEse2dldEFkanVzdE9mZnNldDpmdW5jdGlvbih0LGUpe3ZhciBuPU1hdGgucmFuZG9tKCkscj1lLXQsaT0uMDUqcjtyZXR1cm4gdCtpKy45KnIqbn0sX2FkanVzdEdyb3VwOmZ1bmN0aW9uKHQsZSxuLGkpe3ZhciBhPXRoaXMscz1hLmdldEFkanVzdFJhbmdlKGUsbixpKTtyLmVhY2godCxmdW5jdGlvbih0KXt0W2VdPWEuZ2V0QWRqdXN0T2Zmc2V0KHMucHJlLHMubmV4dCl9KX0sYWRqdXN0RGltOmZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10aGlzLGE9aS5ncm91cERhdGEobix0KTtyLmVhY2goYSxmdW5jdGlvbihuLHIpe3I9cGFyc2VGbG9hdChyKSxpLl9hZGp1c3RHcm91cChuLHQscixlKX0pfX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMiksYT1uKDI2KSxzPWZ1bmN0aW9uKHQpe3Muc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3IuZXh0ZW5kKHMsYSksci5hdWdtZW50KHMse2hlaWdodDpudWxsLHNpemU6MTAsYWRqdXN0TmFtZXM6W1wieVwiXSxwcm9jZXNzT25lRGltU3RhY2s6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMsbj1lLnhEaW0scj1lLnlEaW18fFwieVwiLGE9ZS5oZWlnaHQscz17fSxvPVtdLHU9MDt1PHQubGVuZ3RoO3UrKyl7Zm9yKHZhciBjPXRbdV0udG9KU09OKCksbD0wO2w8Yy5sZW5ndGg7bCsrKXt2YXIgaD1jW2xdLGY9aC5zaXplfHxlLnNpemUsZz0yKmYvYSxwPWhbbl07c1twXXx8KHNbcF09Zy8yKSxoW3JdPXNbcF0sc1twXSs9Z31vLnB1c2gobmV3IGkoYykpfXJldHVybiBvfSxwcm9jZXNzQWRqdXN0OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIHQ9ZS55RGltP2UucHJvY2Vzc1N0YWNrKHQpOmUucHJvY2Vzc09uZURpbVN0YWNrKHQpfSxwcm9jZXNzU3RhY2s6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMsbj1lLnhEaW0sYT1lLnlEaW0scz10Lmxlbmd0aCxvPVtdLHU9e3Bvc2l0aXZlOnt9LG5lZ2F0aXZlOnt9fSxjPVtdLGw9MDtsPHM7bCsrKXtmb3IodmFyIGg9dFtsXS50b0pTT04oKSxmPTA7ZjxoLmxlbmd0aDtmKyspe3ZhciBnPWhbZl0scD1nW25dLHY9Z1thXXx8MCxkPXAudG9TdHJpbmcoKTt2PXIuaXNBcnJheSh2KT92WzFdOnY7dmFyIHg9dj4wP1wicG9zaXRpdmVcIjpcIm5lZ2F0aXZlXCI7dVt4XVtkXXx8KHVbeF1bZF09MCksZ1thXT1bdVt4XVtkXSx2K3VbeF1bZF1dLHVbeF1bZF0rPXZ9by5wdXNoKGgpfXJldHVybiByLmVhY2gobyxmdW5jdGlvbih0KXt2YXIgZT1uZXcgaSh0KTtjLnB1c2goZSl9KSxjfX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMiksYT1uKDI2KSxzPWZ1bmN0aW9uKHQpe3Muc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3IuZXh0ZW5kKHMsYSksci5hdWdtZW50KHMse2NhY2hlTWF4Om51bGwsYWRqdXN0TmFtZXM6W1wieVwiXSxfZ2V0TWF4OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLm1lcmdlRnJhbWUscj1pLm1heChuLHQpO3JldHVybiByfSxfZ2V0WFZhbHVlc01heDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LnlEaW0sbj10LnhEaW0saT17fSxhPXQubWVyZ2VGcmFtZTtyZXR1cm4gYS5lYWNoKGZ1bmN0aW9uKHQpe3ZhciBhPXRbbl0scz10W2VdLG89ci5pc0FycmF5KHMpP01hdGgubWF4LmFwcGx5KG51bGwscyk6cztpW2FdPWlbYV18fDAsaVthXTxvJiYoaVthXT1vKX0pLGl9LHByb2Nlc3NBZGp1c3Q6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWkubWVyZ2UuYXBwbHkobnVsbCx0KTtyZXR1cm4gZS5tZXJnZUZyYW1lPW4sdD1lLl9wcm9jZXNzU3ltbWV0cmljKHQpLGUubWVyZ2VGcmFtZT1udWxsLHR9LF9wcm9jZXNzU3ltbWV0cmljOmZ1bmN0aW9uKHQpe3ZhciBlLG49dGhpcyxhPW4ueERpbSxzPW4ueURpbSxvPW4uX2dldE1heChzKSx1PXRbMF0ucm93T2JqZWN0KDApLGM9W107cmV0dXJuIHUmJnIuaXNBcnJheSh1W3NdKSYmKGU9bi5fZ2V0WFZhbHVlc01heCgpKSxyLmVhY2godCxmdW5jdGlvbih0KXt2YXIgbj10LnRvSlNPTigpO3IuZWFjaChuLGZ1bmN0aW9uKHQpe3ZhciBuLGk9dFtzXTtpZihyLmlzQXJyYXkoaSkpe3ZhciB1PXRbYV0sYz1lW3VdO249KG8tYykvMjt2YXIgbD1bXTtyLmVhY2goaSxmdW5jdGlvbih0KXtsLnB1c2gobit0KX0pLHRbc109bH1lbHNlIG49KG8taSkvMix0W3NdPVtuLGkrbl19KSxjLnB1c2gobmV3IGkobikpfSksY319KSx0LmV4cG9ydHM9c30sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMTEyKTt0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTYpLGk9bigxKSxhPWZ1bmN0aW9uKHQpe2Euc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2EuQVRUUlM9e19jaXJjbGU6e2NlbnRlcjp7eDowLHk6MH0scjowLHN0YXJ0QW5nbGU6LU1hdGguUEkvMixlbmRBbmdsZToxLjUqTWF0aC5QSX19LGkuZXh0ZW5kKGEsciksaS5hdWdtZW50KGEse2dldEluaXRBdHRyczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwiX2NpcmNsZVwiKSxlPXRoaXMuZ2V0Q2lyY2xlSW5mbygpLG49ZS5jZW50ZXI7ZT1pLm1peCh0LGUpO3ZhciByPXt4Om4ueCx5Om4ueSxyczowLHJlOmUucisxMDAsc3RhcnRBbmdsZTplLnN0YXJ0QW5nbGUvTWF0aC5QSSoxODAsZW5kQW5nbGU6ZS5zdGFydEFuZ2xlL01hdGguUEkqMTgwfTtyZXR1cm4gcn0sZ2V0RW5kQXR0cnM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcIl9jaXJjbGVcIiksZT10aGlzLmdldENpcmNsZUluZm8oKTtlPWkubWl4KHQsZSk7dmFyIG49e2VuZEFuZ2xlOmUuZW5kQW5nbGUvTWF0aC5QSSoxODB9O3JldHVybiBufSxnZXRUYXJnZXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcImdyb3VwXCIpLGU9dC5nZXRQYXJlbnQoKSxuPWUuYWRkU2hhcGUoXCJGYW5cIik7cmV0dXJuIHQuYXR0cihcImNsaXBcIixuKSxufX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxNiksaT1uKDEpLGE9ZnVuY3Rpb24odCl7YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07aS5leHRlbmQoYSxyKSxpLmF1Z21lbnQoYSx7Z2V0SW5pdEF0dHJzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRDaXJjbGVJbmZvKCksZT10LmNlbnRlcixuPXt4OmUueCx5OmUueSxyOjB9O3JldHVybiBufSxnZXRFbmRBdHRyczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0Q2lyY2xlSW5mbygpLGU9e3I6dC5yKzE1MH07cmV0dXJuIGV9LGdldFRhcmdldDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwiZ3JvdXBcIiksZT10LmdldFBhcmVudCgpLG49ZS5hZGRTaGFwZShcIkNpcmNsZVwiKTtyZXR1cm4gdC5hdHRyKFwiY2xpcFwiLG4pLG59fSksdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDE2KSxpPW4oMTEwKSxhPW4oMTExKSxzPW4oMTE2KSxvPW4oMTE1KSx1PW4oMTE0KSxjPW4oMTEzKSxsPW4oMTE3KTtyLmFuZ2xlPWksci5jaXJjbGU9YSxyLndhdmVoPXMsci5zY2FsZVhZPW8sci5zY2FsZVk9dSxyLnNjYWxlWD1jLHIud2F2ZXM9bCx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTYpLGk9bigxKSxhPW4oMTEpLk1hdHJpeCxzPWEuTWF0cml4MyxvPWkuTWF0cml4VXRpbCx1PWZ1bmN0aW9uKHQpe3Uuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2kuZXh0ZW5kKHUsciksaS5hdWdtZW50KHUse2dldEluaXRNYXRyaXg6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcInJlY3RcIiksZT10aGlzLmdldFJlY3RDZW50ZXIodCksbj1uZXcgcztyZXR1cm4gbj1vLnNjYWxlKG4sLjAxLDEsZS54LXQud2lkdGgvMix0LnkpfSxnZXRBbmltTWF0cml4OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJyZWN0XCIpLGU9dGhpcy5nZXRSZWN0Q2VudGVyKHQpLG49bmV3IHM7cmV0dXJuIG49by5zY2FsZShuLDEsMSxlLngtdC53aWR0aC8yLHQueSl9fSksdC5leHBvcnRzPXV9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDE2KSxpPW4oMSksYT1uKDExKS5NYXRyaXgscz1hLk1hdHJpeDMsbz1pLk1hdHJpeFV0aWwsdT1mdW5jdGlvbih0KXt1LnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtpLmV4dGVuZCh1LHIpLGkuYXVnbWVudCh1LHtnZXRJbml0TWF0cml4OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJyZWN0XCIpLGU9dGhpcy5nZXRSZWN0Q2VudGVyKHQpLG49bmV3IHM7cmV0dXJuIG49by5zY2FsZShuLDEsLS4wMSxlLngsdC55K3QuaGVpZ2h0KX0sZ2V0QW5pbU1hdHJpeDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwicmVjdFwiKSxlPXRoaXMuZ2V0UmVjdENlbnRlcih0KSxuPW5ldyBzO3JldHVybiBuPW8uc2NhbGUobiwxLDEsZS54LHQueSt0LmhlaWdodCl9fSksdC5leHBvcnRzPXV9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDE2KSxpPW4oMSksYT1uKDExKS5NYXRyaXgscz1hLk1hdHJpeDMsbz1pLk1hdHJpeFV0aWwsdT1mdW5jdGlvbih0KXt1LnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtpLmV4dGVuZCh1LHIpLGkuYXVnbWVudCh1LHtnZXRJbml0TWF0cml4OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJyZWN0XCIpLGU9dGhpcy5nZXRSZWN0Q2VudGVyKHQpLG49bmV3IHM7cmV0dXJuIG49by5zY2FsZShuLC4wMSwuMDEsZS54LGUueSl9LGdldEFuaW1NYXRyaXg6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcInJlY3RcIiksZT10aGlzLmdldFJlY3RDZW50ZXIodCksbj1uZXcgcztyZXR1cm4gbj1vLnNjYWxlKG4sMSwxLGUueCxlLnkpfX0pLHQuZXhwb3J0cz11fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big2MiksaT1uKDEpLGE9ZnVuY3Rpb24odCl7YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07aS5leHRlbmQoYSxyKSxpLmF1Z21lbnQoYSx7Z2V0SW5pdEF0dHJzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJyZWN0XCIpLGU9e3g6dC54LHk6dC55LHdpZHRoOnQud2lkdGgsaGVpZ2h0OjB9O3JldHVybiBlfX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big2MiksaT1uKDEpLGE9ZnVuY3Rpb24odCl7YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07aS5leHRlbmQoYSxyKSxpLmF1Z21lbnQoYSx7Z2V0SW5pdEF0dHJzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJyZWN0XCIpLGU9e1xueDp0LngseTp0Lnksd2lkdGg6MCxoZWlnaHQ6dC5oZWlnaHR9O3JldHVybiBlfX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigyMSk7ci5Qb3NpdGlvbj1uKDEyMSksci5Db2xvcj1uKDExOSksci5TaXplPW4oMTIzKSxyLlNoYXBlPW4oMTIyKSxyLk9wYWNpdHk9bigxMjApLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oNjApLGE9bigyMSkscz1mdW5jdGlvbih0KXtzLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpLHRoaXMuaW5pdE1ldGhvZCgpfTtyLmV4dGVuZChzLGEpLHIuYXVnbWVudChzLHt0eXBlOlwiY29sb3JcIixuYW1lczpbXCJjb2xvclwiXSxhcnI6bnVsbCxtZXRob2Q6bnVsbCxtZXRob2RUeXBlOm51bGwsaW5pdE1ldGhvZDpmdW5jdGlvbigpe3ZhciB0LGU9dGhpcy5tZXRob2RUeXBlO3Q9ZSYmZS5pbmRleE9mKFwiLVwiKSE9PS0xP2kuZ3JhZGllbnQoZSk6aVtlXSx0aGlzLm1ldGhvZD10fX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMjEpLGE9ZnVuY3Rpb24odCl7YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQoYSxpKSxyLmF1Z21lbnQoYSx7dHlwZTpcIm9wYWNpdHlcIixuYW1lczpbXCJvcGFjaXR5XCJdLG1pbjouMSxtYXg6MSxhcnI6bnVsbH0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMjEpLGE9ZnVuY3Rpb24odCl7YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQoYSxpKSxyLmF1Z21lbnQoYSx7dHlwZTpcInBvc2l0aW9uXCIsbmFtZXM6W1wieFwiLFwieVwiLFwielwiXSxjb29yZDpudWxsLHBhcnNlUGFyYW06ZnVuY3Rpb24odCxlKXt2YXIgbjtyZXR1cm4gci5pc0FycmF5KHQpPyhuPVtdLHIuZWFjaCh0LGZ1bmN0aW9uKHQpe24ucHVzaChlLnNjYWxlKHQpKX0pKTpuPWUuc2NhbGUodCksbn0sY2FsbGJhY2s6ZnVuY3Rpb24odCxlKXt2YXIgbixpLGEscz10aGlzLmNvb3JkO2lmKHR8fDA9PT10fHwodD0uMSksZXx8MD09PWV8fChlPS4xKSxyLmlzQXJyYXkoZSkmJnIuaXNBcnJheSh0KSl7bj1bXSxpPVtdO2Zvcih2YXIgbz0wLHU9MDtvPHQubGVuZ3RoJiZ1PGUubGVuZ3RoO28rKyx1KyspYT1zLmNvbnZlcnRQb2ludCh7eDp0W29dLHk6ZVt1XX0pLG4ucHVzaChhLngpLGkucHVzaChhLnkpfWVsc2UgaWYoci5pc0FycmF5KGUpKWk9W10sci5lYWNoKGUsZnVuY3Rpb24oZSl7YT1zLmNvbnZlcnRQb2ludCh7eDp0LHk6ZX0pLG4mJm4hPT1hLng/KHIuaXNBcnJheShuKXx8KG49W25dKSxuLnB1c2goYS54KSk6bj1hLngsaS5wdXNoKGEueSl9KTtlbHNlIGlmKHIuaXNBcnJheSh0KSluPVtdLHIuZWFjaCh0LGZ1bmN0aW9uKHQpe2E9cy5jb252ZXJ0UG9pbnQoe3g6dCx5OmV9KSxpJiZpIT09YS55PyhyLmlzQXJyYXkoaSl8fChpPVtpXSksaS5wdXNoKGEueSkpOmk9YS55LG4ucHVzaChhLngpfSk7ZWxzZXt2YXIgYz1zLmNvbnZlcnRQb2ludCh7eDp0LHk6ZX0pO249Yy54LGk9Yy55fXJldHVybltuLGldfX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMjEpLGE9ZnVuY3Rpb24odCl7YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQoYSxpKSxyLmF1Z21lbnQoYSx7dHlwZTpcInNoYXBlXCIsbmFtZXM6W1wic2hhcGVcIl0sYXJyOm51bGx9KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDIxKSxhPWZ1bmN0aW9uKHQpe2Euc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3IuZXh0ZW5kKGEsaSksci5hdWdtZW50KGEse3R5cGU6XCJzaXplXCIsbmFtZXM6W1wic2l6ZVwiXSxhcnI6bnVsbH0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyZXR1cm4gbnVsbD09PXR8fHZvaWQgMD09PXR9ZnVuY3Rpb24gaSh0KXt2YXIgZT0xO2lmKHQ8MWUtNilyZXR1cm4gZTtmb3IoO3Q+MTA7KWU9MTAqZSx0Lz0xMDtmb3IoO3Q8MTspZS89MTAsdD0xMCp0O3JldHVybiBlfWZ1bmN0aW9uIGEodCxlLG4pe249bnx8TTt2YXIgcj1uIT09TSxhPTE7dDwwJiYoYT0tMSksdCo9YTt2YXIgbz1pKHQpO3JldHVybiBhKj1vLHQvPW8sdD1yP3Mobix0KTplJiZhPjA/Yi5zbmFwRmxvb3Iobix0KTpiLnNuYXBDZWlsaW5nKG4sdCksdCphfWZ1bmN0aW9uIHModCxlKXtmb3IodmFyIG49ZSxyPWUsaT1lLGE9MTthPHQubGVuZ3RoO2ErKyl7dmFyIHM9dFthXTtpZihzPmUpe249czticmVha31yPXN9cmV0dXJuIGk9TWF0aC5hYnMoci1lKTxNYXRoLmFicyhuLWUpP3I6bn1mdW5jdGlvbiBvKHQsZSxuKXt2YXIgcjtyZXR1cm4gcj1uP01hdGguY2VpbCh0L2UsMTApOk1hdGguZmxvb3IodC9lLDEwKSxyKmV9ZnVuY3Rpb24gdSh0KXtmb3IodmFyIGU9dFswXSxuPXRbMF0scj10Lmxlbmd0aCxpPTE7aTxyO2krKyl7dmFyIGE9dFtpXTtlPGEmJihlPWEpLG4+YSYmKG49YSl9cmV0dXJue21heDplLG1pbjpufX1mdW5jdGlvbiBjKHQsZSl7dmFyIG49W107cmV0dXJuIGU/Uy5pc0FycmF5KHRbMF0pJiZTLmVhY2godFswXSxmdW5jdGlvbihlLHIpe2Zvcih2YXIgaT1lLGE9MTthPHQubGVuZ3RoO2ErKylpKz10W2FdW3JdO24ucHVzaChpKX0pOlMuZWFjaCh0LGZ1bmN0aW9uKHQpe1MuaXNBcnJheSh0KT9uPW4uY29uY2F0KHQpOm4ucHVzaCh0KX0pLG59ZnVuY3Rpb24gbCh0LGUsbil7dmFyIHI9Yyh0LG4pO3JldHVybiBlJiYocj1TLm1hcChyLGUpKSx1KHIpfWZ1bmN0aW9uIGgodCl7cmV0dXJuIHQ9bmV3IERhdGUodCksdy5nZXREYXRlKHQpLmdldFRpbWUoKX1mdW5jdGlvbiBmKHQpe3Q9bmV3IERhdGUodCk7dmFyIGU9dy5nZXREYXRlKHQpO3JldHVybiBlPHQmJihlPXcuYWRkRGF5KDEsZSkpLGUuZ2V0VGltZSgpfWZ1bmN0aW9uIGcodCl7cmV0dXJuIG5ldyBEYXRlKHQpLmdldEZ1bGxZZWFyKCl9ZnVuY3Rpb24gcCh0KXtyZXR1cm4gbmV3IERhdGUodCwwLDEpLmdldFRpbWUoKX1mdW5jdGlvbiB2KHQpe3JldHVybiBuZXcgRGF0ZSh0KS5nZXRNb250aCgpfWZ1bmN0aW9uIGQodCxlKXt2YXIgbj1nKHQpLHI9ZyhlKSxpPXYodCksYT12KGUpO3JldHVybiAxMiooci1uKSsoYS1pKSUxMn1mdW5jdGlvbiB4KHQsZSl7cmV0dXJuIG5ldyBEYXRlKHQsZSwxKS5nZXRUaW1lKCl9ZnVuY3Rpb24gbSh0LGUpe3JldHVybiBNYXRoLmNlaWwoKGUtdCkvTCl9ZnVuY3Rpb24geSh0LGUpe3JldHVybiBNYXRoLmNlaWwoKGUtdCkvRCl9ZnVuY3Rpb24gXyh0LGUpe3JldHVybiBNYXRoLmNlaWwoKGUtdCkvNmU0KX12YXIgUz1uKDEpLHc9big0MCksYj1uKDQpLE09WzAsMSwxLjUsMiwyLjUsMyw0LDUsNiw4LDEwXSxBPVswLDEsMiw0LDUsMTBdLEM9WzEsMiw0LDYsOCwxMl0saz01LFQ9NyxQPXt9O1AuY2FjdWxhdGU9ZnVuY3Rpb24odCxlKXt2YXIgbixpPXQubWluLHM9dC5tYXgsdT10LmRhdGEsYz10LmludGVydmFsLGg9W10sZj10Lm1pbkNvdW50fHxrLGc9dC5tYXhDb3VudHx8VCxwPShmK2cpLzIsdj0hMTtlJiZcInBlcmNlbnRcIj09PWUmJihpPTAscz0xMDAsYz0yNSk7dmFyIGQ7aWYoKHIoaSl8fHIocyl8fHIoYykpJiYoZD1sKHUsbnVsbCx2KSxyKHMpJiYocz1kLm1heCsuMDUqKGQubWF4LWQubWluKSkscihpKSYmKGk9ZC5taW4pLHM9PT1pJiYoMD09PWk/cz0xOmk+MD9pPTA6cz0wLHMtaTw1JiYoYz0xKSkscihjKSkpe3ZhciB4PShzLWkpL3A7Yz1hKHgsITAsQSksbj1wYXJzZUludCgocy1pKS9jLDEwKSxuPmcmJihuPWcpLG48ZiYmKG49ZiksYz1hKChzLWkpL24sITAsQSkscz1vKHMsYywhMCksaT1vKGksYyksbj1NYXRoLnJvdW5kKChzLWkpL2MpfXIobikmJihzPW8ocyxjLCEwKSxpPW8oaSxjKSxuPU1hdGgucm91bmQoKHMtaSkvYykpLGk9Uy5maXhlZEJhc2UoaSxjKSxyKGkpfHxoLnB1c2goaSk7Zm9yKHZhciBtPTE7bTw9bjttKyspaC5wdXNoKFMuZml4ZWRCYXNlKGMqbStpLGMpKTtyZXR1cm57bWluOmksbWF4OlMuZml4ZWRCYXNlKHMsYyksaW50ZXJ2YWw6Yyxjb3VudDpuLHRpY2tzOmgsaW5mbzpkfX0sUC5UaW1lPXt9O3ZhciBJPTZlNCxEPTM2ZTUsTD04NjRlNTtQLlRpbWUuY2FjdWxhdGU9ZnVuY3Rpb24odCl7dmFyIGUsbj10Lm1pbixpPXQubWF4LGE9dC5kYXRhLHM9dC5pbnRlcnZhbCxvPVtdLHU9e307aWYoKHIobil8fHIoaSl8fHIocykpJiYodT1sKGEsZnVuY3Rpb24odCl7cmV0dXJuIFMuaXNEYXRlKHQpJiYodD10LmdldFRpbWUoKSksUy5pc1N0cmluZyh0KSYmKHQ9dC5yZXBsYWNlKC8tL2dpLFwiL1wiKSx0PW5ldyBEYXRlKHQpLHQ9dC5nZXRUaW1lKCkpLHR9KSxyKGkpJiYoaT11Lm1heCkscihuKSYmKG49dS5taW4pLGktbj5MJiYobj1oKG4pLGk9ZihpKSksaT09PW4mJihpPW4rTCkscihzKSkpe3ZhciBjLHcsTT1pLW4sQT1MLGs9MzY1KkE7cz1wYXJzZUludChNLyh0Lm1heENvdW50fHw4KSksYz1zL2s7dmFyIFQ9ZyhuKTtpZihjPi41MSl7dz1NYXRoLmNlaWwoYykscz13Kms7Zm9yKHZhciBQPWcoaSksUj1UO1I8PVArdztSKz13KW8ucHVzaChwKFIpKTtzPW51bGx9ZWxzZSBpZihjPi4wODM0KXtmb3IodmFyIHc9ZyhuKSxCPU1hdGguZmxvb3IoYy8uMDgzNCksRj12KG4pLE89ZChuLGkpLFI9MDtSPD1PK0I7Uis9QilvLnB1c2goeChULFIrRikpO3M9bnVsbH1lbHNlIGlmKHM+LjUqQSl7dmFyIEc9bmV3IERhdGUobiksdz1HLmdldEZ1bGxZZWFyKCksQj1HLmdldE1vbnRoKG4pLE49Ry5nZXREYXRlKCksej1NYXRoLmNlaWwocy9BKSxqPW0obixpKTtzPXoqQTtmb3IodmFyIFI9MDtSPGorejtSKz16KW8ucHVzaChuZXcgRGF0ZSh3LEIsTitSKS5nZXRUaW1lKCkpfWVsc2UgaWYocz5EKXt2YXIgRz1uZXcgRGF0ZShuKSx3PUcuZ2V0RnVsbFllYXIoKSxCPUcuZ2V0TW9udGgobiksej1HLmdldERhdGUoKSxYPUcuZ2V0SG91cnMoKSxZPWIuc25hcFRvKEMsTWF0aC5jZWlsKHMvRCkpLFc9eShuLGkpO3M9WSpEO2Zvcih2YXIgUj0wO1I8PVcrWTtSKz1ZKW8ucHVzaChuZXcgRGF0ZSh3LEIseixYK1IpLmdldFRpbWUoKSl9ZWxzZSBpZihzPkkpe3ZhciBWPV8obixpKSxFPU1hdGguY2VpbChzL0kpO3M9RSpJO2Zvcih2YXIgUj0wO1I8PVYrRTtSKz1FKW8ucHVzaChuK1IqSSl9ZWxzZXtzPDFlMyYmKHM9MWUzKSxuPTFlMypNYXRoLmZsb29yKG4vMWUzKTt2YXIgcT1NYXRoLmNlaWwoKGktbikvMWUzKSxIPU1hdGguY2VpbChzLzFlMyk7cz0xZTMqSDtmb3IodmFyIFI9MDtSPHErSDtSKz1IKW8ucHVzaChuKzFlMypSKX19aWYoIW8ubGVuZ3RoKXtuPTFlMypNYXRoLmZsb29yKG4vMWUzKSxpPTFlMypNYXRoLmNlaWwoaS8xZTMpO2Zvcih2YXIgZT0oaS1uKS9zLFI9MDtSPD1lO1IrKylvLnB1c2goUy5maXhlZEJhc2UocypSK24scykpfXJldHVybnttYXg6dS5tYXh8fGksbWluOnUubWlufHxuLGludGVydmFsOnMsdGlja3M6byxjb3VudDpvLmxlbmd0aH19LFAuQ2F0ZWdvcnk9e30sUC5DYXRlZ29yeS5jYWN1bGF0ZT1mdW5jdGlvbih0KXt2YXIgZT17fSxuPVtdLHI9dC5tYXhDb3VudHx8VCxpPWModC5kYXRhKTtpZihpLmxlbmd0aDxyKW49W10uY29uY2F0KGkpO2Vsc2V7dmFyIGE9aS5sZW5ndGgscz1wYXJzZUludChhLyhyLTEpLDEwKSxvPWkubWFwKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUlcz09PTA/aS5zbGljZShlLGUrcyk6bnVsbH0pLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdH0pO24ucHVzaChpWzBdKTtmb3IodmFyIHU9MTt1PG8ubGVuZ3RoJiZ1PHItMTt1Kyspbi5wdXNoKG9bdV1bMF0pO24ucHVzaChpW2EtMV0pfXJldHVybiBlLmNhdGVnb3JpZXM9aSxlLnRpY2tzPW4sZX0sdC5leHBvcnRzPVB9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe2lmKCF0Ll9hdHRycyYmdCE9PWkpe3ZhciBlPXQuc3VwZXJjbGFzcy5jb25zdHJ1Y3RvcjtlJiYhZS5fYXR0cnMmJnIoZSksdC5fYXR0cnM9e30sYS5taXgoITAsdC5fYXR0cnMsZS5fYXR0cnMpLGEubWl4KCEwLHQuX2F0dHJzLHQuQVRUUlMpfX12YXIgaSxhPW4oMSk7aT1mdW5jdGlvbih0KXtyKHRoaXMuY29uc3RydWN0b3IpLHRoaXMuX2F0dHJzPXt9LHRoaXMuZXZlbnRzPXt9O3ZhciBlPXRoaXMuZ2V0RGVmYXVsdENmZygpO2EubWl4KHRoaXMuX2F0dHJzLGUsdCl9LGEuYXVnbWVudChpLHtnZXREZWZhdWx0Q2ZnOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuY29uc3RydWN0b3Isbj1lLl9hdHRycyxyPWEubWl4KCEwLHt9LG4pO3JldHVybiByfSxzZXQ6ZnVuY3Rpb24odCxlKXt2YXIgbj1cIl9vblJlbmRlclwiK2EudWNmaXJzdCh0KTtyZXR1cm4gdGhpc1tuXSYmdGhpc1tuXShlLHRoaXMuX2F0dHJzW3RdKSx0aGlzLl9hdHRyc1t0XT1lLHRoaXN9LGdldDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fYXR0cnNbdF19LG9uOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uZXZlbnRzLGk9clt0XTtyZXR1cm4gaXx8KGk9clt0XT1bXSksaS5wdXNoKGUpLG59LGZpcmU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5ldmVudHMsaT1yW3RdO2kmJmEuZWFjaChpLGZ1bmN0aW9uKHQpe3QoZSl9KX0sb2ZmOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uZXZlbnRzLGk9clt0XTtyZXR1cm4gdD8oaSYmYS5yZW1vdmUoaSxlKSxuKToobi5ldmVudHM9e30sbil9LGRlc3Ryb3k6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5kZXN0cm95ZWQ7cmV0dXJuIGU/dDoodC5fYXR0cnM9e30sdC5ldmVudHM9e30sdm9pZCh0LmRlc3Ryb3llZD0hMCkpfX0pLHQuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigyOSksaT1uKDIzKSxhPWkuU2hhcGUuc3VwZXJjbGFzcy5jb25zdHJ1Y3RvcixzPWkuQ2FudmFzLG89big2NCk7ci5taXhpbihhLFtvLkdNaXhpbl0pLHIubWl4aW4oaS5Hcm91cCxbby5Hcm91cE1peGluXSk7dmFyIHU9ZnVuY3Rpb24odCl7dS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07dS5DRkc9e3dpZHRoOm51bGwsaGVpZ2h0Om51bGwsd2lkdGhDYW52YXM6bnVsbCxoZWlnaHRDYW52YXM6bnVsbCx3aWR0aFN0eWxlOm51bGwsaGVpZ2h0U3R5bGU6bnVsbCxjb250YWluZXJET006bnVsbCxjYW52YXNET006bnVsbCxwaXhlbFJhdGlvOm51bGx9LHIuZXh0ZW5kKHUscyksci5hdWdtZW50KHUse2luaXQ6ZnVuY3Rpb24oKXt1LnN1cGVyY2xhc3MuY29uc3RydWN0b3Iuc3VwZXJjbGFzcy5pbml0LmNhbGwodGhpcyksdGhpcy5fc2V0R2xvYmFsUGFyYW0oKSx0aGlzLl9zZXRET00oKSx0aGlzLl9zZXRJbml0U2l6ZSgpLHRoaXMuX3NldENhbnZhcygpLHRoaXMuX3NjYWxlKCl9LF9zY2FsZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwicGl4ZWxSYXRpb1wiKTt0aGlzLnNjYWxlKHQsdCl9LF9zZXRDYW52YXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcImNhbnZhc0RPTVwiKTt0aGlzLnNldChcImVsXCIsdCksdGhpcy5zZXQoXCJjb250ZXh0XCIsdC5nZXRDb250ZXh0KFwiMmRcIikpLHRoaXMuc2V0KFwiY2FudmFzXCIsdGhpcyksdGhpcy5fX2V2ZW50cygpfSxfc2V0R2xvYmFsUGFyYW06ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcInBpeGVsUmF0aW9cIik7dHx8dGhpcy5zZXQoXCJwaXhlbFJhdGlvXCIsci5nZXRSYXRpbygpKX0sX3NldERPTTpmdW5jdGlvbigpe3RoaXMuX3NldENvbnRhaW5lcigpLHRoaXMuX3NldExheWVyKCl9LF9zZXRDb250YWluZXI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcImNvbnRhaW5lcklkXCIpLGU9dGhpcy5nZXQoXCJjb250YWluZXJET01cIik7ZXx8KGU9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodCksdGhpcy5zZXQoXCJjb250YWluZXJET01cIixlKSksci5tb2RpQ1NTKGUse3Bvc2l0aW9uOlwicmVsYXRpdmVcIn0pfSxfc2V0TGF5ZXI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcImNvbnRhaW5lckRPTVwiKSxlPXIuZ3VpZChcImNhbnZhc19cIik7aWYodCl7dmFyIG49ci5jcmVhdGVEb20oJzxjYW52YXMgaWQ9XCInK2UrJ1wiPjwvY2FudmFzPicpO3QuYXBwZW5kQ2hpbGQobiksdGhpcy5zZXQoXCJjYW52YXNET01cIixuKX19LF9zZXRJbml0U2l6ZTpmdW5jdGlvbigpe3RoaXMuZ2V0KFwid2lkdGhTdHlsZVwiKT90aGlzLmNoYW5nZVNpemVCeUNzcyh0aGlzLmdldChcIndpZHRoU3R5bGVcIiksdGhpcy5nZXQoXCJoZWlnaHRTdHlsZVwiKSk6dGhpcy5nZXQoXCJ3aWR0aFwiKSYmdGhpcy5jaGFuZ2VTaXplKHRoaXMuZ2V0KFwid2lkdGhcIiksdGhpcy5nZXQoXCJoZWlnaHRcIikpfSxfZ2V0UHg6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmdldChcImNhbnZhc0RPTVwiKTtuLnN0eWxlW3RdPWU7dmFyIGk9ci5nZXRCb3VuZGluZ0NsaWVudFJlY3Qobik7cmV0dXJuXCJ3aWR0aFwiPT09dD9pLnJpZ2h0LWkubGVmdDpcImhlaWdodFwiPT09dD9pLmJvdHRvbS1pLnRvcDp2b2lkIDB9LF9yZVNpemU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcImNhbnZhc0RPTVwiKSxlPXRoaXMuZ2V0KFwid2lkdGhDYW52YXNcIiksbj10aGlzLmdldChcImhlaWdodENhbnZhc1wiKSxyPXRoaXMuZ2V0KFwid2lkdGhTdHlsZVwiKSxpPXRoaXMuZ2V0KFwiaGVpZ2h0U3R5bGVcIik7dC5zdHlsZS53aWR0aD1yLHQuc3R5bGUuaGVpZ2h0PWksdC5zZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiLGUpLHQuc2V0QXR0cmlidXRlKFwiaGVpZ2h0XCIsbil9LGdldFdpZHRoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJwaXhlbFJhdGlvXCIpLGU9dGhpcy5nZXQoXCJ3aWR0aFwiKTtyZXR1cm4gZSp0fSxnZXRIZWlnaHQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcInBpeGVsUmF0aW9cIiksZT10aGlzLmdldChcImhlaWdodFwiKTtyZXR1cm4gZSp0fSxjaGFuZ2VTaXplQnlDc3M6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmdldChcInBpeGVsUmF0aW9cIiksdD10aGlzLl9nZXRQeChcIndpZHRoXCIsdCksZT10aGlzLl9nZXRQeChcImhlaWdodFwiLGUpLHI9dCpuLGk9ZSpuO3RoaXMuc2V0KFwid2lkdGhTdHlsZVwiLHQpLHRoaXMuc2V0KFwiaGVpZ2h0U3R5bGVcIixlKSx0aGlzLnNldChcIndpZHRoQ2FudmFzXCIsciksdGhpcy5zZXQoXCJoZWlnaHRDYW52YXNcIixpKSx0aGlzLnNldChcIndpZHRoXCIsdCksdGhpcy5zZXQoXCJoZWlnaHRcIixlKSx0aGlzLl9yZVNpemUoKX0sY2hhbmdlU2l6ZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZ2V0KFwicGl4ZWxSYXRpb1wiKSxyPXQqbixpPWUqbjt0aGlzLnNldChcIndpZHRoQ2FudmFzXCIsciksdGhpcy5zZXQoXCJoZWlnaHRDYW52YXNcIixpKSx0aGlzLnNldChcIndpZHRoU3R5bGVcIix0K1wicHhcIiksdGhpcy5zZXQoXCJoZWlnaHRTdHlsZVwiLGUrXCJweFwiKSx0aGlzLnNldChcIndpZHRoXCIsdCksdGhpcy5zZXQoXCJoZWlnaHRcIixlKSx0aGlzLl9yZVNpemUoKX19KSx0LmV4cG9ydHM9dX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMjkpLGk9KG4oMjMpLGZ1bmN0aW9uKCl7fSk7ci5hdWdtZW50KGkse2dldFBhcmVudDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldChcInBhcmVudFwiKXx8dGhpcy5nZXQoXCJmYXRoZXJcIil9LGdldERlZmF1bHRDZmc6ZnVuY3Rpb24oKXtyLmluaXRDbGFzc0NmZ3ModGhpcy5jb25zdHJ1Y3Rvcik7dmFyIHQ9ci5taXgoITAse30sdGhpcy5jb25zdHJ1Y3Rvci5fX2NmZyk7cmV0dXJuIHR9LGdldEJCQm94OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRCQm94KCk7cmV0dXJuIHQ/KHQueD10Lm1pblgsdC55PXQubWluWSx0LndpZHRoPXQubWF4WC10Lm1pblgsdC5oZWlnaHQ9dC5tYXhZLXQubWluWSx0LmNlbnRlclg9dC54K3Qud2lkdGgvMix0LmNlbnRlclk9dC55K3QuaGVpZ2h0LzIpOnQ9e3g6MCx5OjAsY2VudGVyWDowLGNlbnRlclk6MCx3aWR0aDowLGhlaWdodDowfSx0fSxtb3ZlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uZ2V0KFwieFwiKXx8MCxpPW4uZ2V0KFwieVwiKXx8MDtuLnRyYW5zbGF0ZSh0LXIsZS1pKSxuLnNldChcInhcIix0KSxuLnNldChcInlcIixlKX19KSx0LmV4cG9ydHM9aX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMjkpLGk9bigyMyksYT1uKDYzKSxzPWZ1bmN0aW9uKCl7fTtyLmF1Z21lbnQocyx7YWRkU2hhcGU6ZnVuY3Rpb24odCxlKXt2YXIgbixhPXRoaXMuZ2V0KFwiY2FudmFzXCIpO3JldHVybiBlPXIubWl4KHt9LGUpLGU/KGUudHlwZT10LGUuY2FudmFzPWEsZS5mYXRoZXI9dGhpcyx0PXIudXBwZXJGaXJzdCh0KSxuPW5ldyBpW3RdKGUpKTpuPW5ldyBpW3RdLHRoaXMuYWRkKG4pLG59LGFkZEdyb3VwOmZ1bmN0aW9uKHQsZSl7dmFyIG4saT10aGlzLmdldChcImNhbnZhc1wiKTtpZihlPXIubWl4KHt9LGUpLHIuaXNGdW5jdGlvbih0KSllPyhlLmNhbnZhcz1pLGUuZmF0aGVyPXRoaXMsbj1uZXcgdChlKSk6bj1uZXcgdCh7Y2FudmFzOmksZmF0aGVyOnRoaXN9KSx0aGlzLmFkZChuKTtlbHNlIGlmKHIuaXNPYmplY3QodCkpdC5jYW52YXM9aSxuPW5ldyBhKHQpLHRoaXMuYWRkKG4pO2Vsc2V7aWYodm9pZCAwIT09dClyZXR1cm4hMTtuPW5ldyBhLHRoaXMuYWRkKG4pfXJldHVybiBufSxmaW5kQnlDRkc6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmdldChcImNoaWxkcmVuXCIpLGk9W107cmV0dXJuIHIuZWFjaChuLGZ1bmN0aW9uKG4scil7bi5nZXQodCk9PT1lJiZpLnB1c2gobil9KSxpfX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big5KSxpPW4oMjgpLGE9bigxMikscz1uKDIwMCksbz1pLkcsdT1vLlNoYXBlLnN1cGVyY2xhc3MuY29uc3RydWN0b3I7bmV3IHMobyksci5taXhpbih1LFthLkdNaXhpbl0pLHIubWl4aW4oby5Hcm91cCxbYS5Hcm91cE1peGluXSksby5NYXJrZXI9YS5NYXJrZXI7dmFyIGM9ZnVuY3Rpb24odCl7Yy5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07Yy5DRkc9e30sci5leHRlbmQoYyxpKSx0LmV4cG9ydHM9Y30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDQ3KSxhPW4oMykscz1uKDQpLG89YS5WZWN0b3IyLHU9ZnVuY3Rpb24odCl7dS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQodSxpKSx1LkNGRz17dHlwZTpcImNpcmNsZVwiLHRpY2tJbnRlcnZhbDpudWxsLHN0YXJ0QW5nbGU6LU1hdGguUEkvMixlbmRBbmdsZTozKk1hdGguUEkvMixncmlkOntsaW5lOntsaW5lV2lkdGg6MSxzdHJva2U6XCIjQzBEMEUwXCJ9fSxsYWJlbE9mZnNldDo1fSxyLmF1Z21lbnQodSx7X2JlZm9yZVJlbmRlclVJOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt1LnN1cGVyY2xhc3MuX2JlZm9yZVJlbmRlclVJLmNhbGwodCl9LHBhcnNlVGljazpmdW5jdGlvbih0LGUsbil7cmV0dXJue3RleHQ6dCx2YWx1ZTplL259fSxfZ2V0Q2lyY2xlUG9pbnQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5nZXQoXCJjZW50ZXJcIik7cmV0dXJuIGU9ZXx8bi5nZXQoXCJyYWRpdXNcIikse3g6ci54K01hdGguY29zKHQpKmUseTpyLnkrTWF0aC5zaW4odCkqZX19LGdldFRpY2tQb2ludDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXQoXCJzdGFydEFuZ2xlXCIpLHI9ZS5nZXQoXCJlbmRBbmdsZVwiKSxpPW4rKHItbikqdDtyZXR1cm4gZS5fZ2V0Q2lyY2xlUG9pbnQoaSl9LGdldFNpZGVWZWN0b3I6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5nZXQoXCJjZW50ZXJcIiksaT1uZXcgbyhlLngtci54LGUueS1yLnkpO3JldHVybiB0JiZpLnNldExlbmd0aCh0KSxpfSxnZXRTaWRlUG9pbnQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5nZXRTaWRlVmVjdG9yKGUsdCk7cmV0dXJue3g6dC54K3IueCx5OnQueStyLnl9fSxnZXRUaWNrRW5kOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uZ2V0KFwidGlja0xpbmVcIik7cmV0dXJuIGU9ZT9lOnIudmFsdWUsbi5nZXRTaWRlUG9pbnQodCxlKX0sZ2V0VGV4dEFuY2hvcjpmdW5jdGlvbih0KXt2YXIgZTtyZXR1cm4gcy5lcXVhbCh0LngsMCk/ZT1cImNlbnRlclwiOnQueD4wP2U9XCJsZWZ0XCI6dC54PDAmJihlPVwicmlnaHRcIiksZX0sZ2V0TGluZVBhdGg6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJjZW50ZXJcIiksbj1lLngscj1lLnksaT10LmdldChcInJhZGl1c1wiKSxhPWkscz10LmdldChcInN0YXJ0QW5nbGVcIiksbz10LmdldChcImVuZEFuZ2xlXCIpLHU9dC5nZXQoXCJpbm5lclwiKSxjPVtdO2lmKE1hdGguYWJzKG8tcyk9PT0yKk1hdGguUEkpYz1bW1wiTVwiLG4scl0sW1wibVwiLDAsLWFdLFtcImFcIixpLGEsMCwxLDEsMCwyKmFdLFtcImFcIixpLGEsMCwxLDEsMCwtMiphXSxbXCJ6XCJdXTtlbHNle3ZhciBsPXQuX2dldENpcmNsZVBvaW50KHMpLGg9dC5fZ2V0Q2lyY2xlUG9pbnQobyksZj1NYXRoLmFicyhvLXMpPk1hdGguUEk/MTowLGc9cz5vPzA6MTtpZih1KXt2YXIgcD10LmdldFNpZGVWZWN0b3IodSppLGwpLHY9dC5nZXRTaWRlVmVjdG9yKHUqaSxoKSxkPXt4OnAueCtuLHk6cC55K3J9LHg9e3g6di54K24seTp2Lnkrcn07Yz1bW1wiTVwiLGQueCxkLnldLFtcIkxcIixsLngsbC55XSxbXCJBXCIsaSxhLDAsZixnLGgueCxoLnldLFtcIkxcIix4LngseC55XSxbXCJBXCIsaSp1LGEqdSwwLGYsTWF0aC5hYnMoZy0xKSxkLngsZC55XV19ZWxzZSBjPVtbXCJNXCIsbixyXSxbXCJMXCIsbC54LGwueV0sW1wiQVwiLGksYSwwLGYsZyxoLngsaC55XSxbXCJMXCIsbixyXV19cmV0dXJuIGN9LGFkZExhYmVsOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uZ2V0KFwibGFiZWxPZmZzZXRcIik7ZT1uLmdldFNpZGVQb2ludChlLHIpLHUuc3VwZXJjbGFzcy5hZGRMYWJlbC5jYWxsKG4sdCxlKX0sYXV0b1JvdGF0ZUxhYmVsczpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcInRpY2tzXCIpLG49dC5nZXQoXCJsYWJlbHNHcm91cFwiKTtpZihuJiZlLmxlbmd0aD4xMil7dmFyIGk9dC5nZXQoXCJyYWRpdXNcIiksYT10LmdldChcInN0YXJ0QW5nbGVcIikscz10LmdldChcImVuZEFuZ2xlXCIpLG89cy1hLHU9by8oZS5sZW5ndGgtMSksYz1NYXRoLnNpbih1LzIpKmkqMixsPXQuZ2V0TWF4TGFiZWxXaWR0aChuKTtyLmVhY2gobi5nZXQoXCJjaGlsZHJlblwiKSxmdW5jdGlvbih0LG4pe3ZhciByPWVbbl0saT1yLnZhbHVlKm8rYSxzPWklKDIqTWF0aC5QSSk7bDxjPyhzPD0wJiYoaSs9TWF0aC5QSSkscz5NYXRoLlBJJiYoaS09TWF0aC5QSSksaS09TWF0aC5QSS8yLHQuYXR0cihcInRleHRBbGlnblwiLFwiY2VudGVyXCIpKTpzPk1hdGguUEkvMj9pLT1NYXRoLlBJOnM8TWF0aC5QSS8yKi0xJiYoaSs9TWF0aC5QSSksdC5yb3RhdGVBdFN0YXJ0KDE4MCppL01hdGguUEkpfSl9fX0pLHQuZXhwb3J0cz11fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUsbil7dmFyIHI9ZS5nZXQodCk7cmV0dXJuIHJ8fChyPW4sZS5zZXQodCxyKSkscn1mdW5jdGlvbiBpKHQsZSl7dmFyIG49XCJcIixyPXUubWl4KHt9LGUpO3JldHVybiB1LmVhY2godCxmdW5jdGlvbih0KXt1LmVhY2godCxmdW5jdGlvbih0LGUpe3ZhciByPTA9PT1lP1wiTXt4fSB7eX0gXCI6XCJMe3h9IHt5fSBcIixpPXUuc3Vic3RpdHV0ZShyLHQpO24rPWl9KX0pLHIucGF0aD1uLHJ9ZnVuY3Rpb24gYSh0KXthLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfXZhciBzPW4oMTIpLG89cy5Hcm91cEJhc2UsdT1uKDEpLGM9XCJ4LWNoYXJ0LWdyaWRcIjt1LmV4dGVuZChhLG8pLGEuQ0ZHPXt6SW5kZXg6MSxlbENsczpjLHR5cGU6XCJsaW5lXCIsbGluZTpudWxsLG1pbm9yTGluZTpudWxsLG1pbm9yQ291bnQ6MCxyZW5kZXJlcjpudWxsLGl0ZW1zOm51bGwsb2RkOm51bGwsZXZlbjpudWxsLGFuaW1hdGU6ITEsbWF0cml4Om51bGwsZHVyYXRpb246MWUzfSx1LmF1Z21lbnQoYSx7X3JlbmRlclVJOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczthLnN1cGVyY2xhc3MuX3JlbmRlclVJLmNhbGwodCksdC5fZHJhd0xpbmVzKCl9LF9kcmF3TGluZXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJsaW5lXCIpLG49dC5nZXQoXCJpdGVtc1wiKTtuJiYodC5fcHJlY2Vzc0l0ZW1zKG4pLHQuX2RyYXdHcmlkTGluZXMobixlLGMrXCItbGluZVwiKSx0LmdldChcIm1pbm9yQ291bnRcIikmJnQuZHJhd01pbm9yTGluZXMoKSl9LF9wcmVjZXNzSXRlbXM6ZnVuY3Rpb24odCl7dmFyIGUsbj10aGlzLHI9bi5nZXQoXCJtaW5vckNvdW50XCIpLGk9bi5nZXQoXCJyZW5kZXJlclwiKTt1LmVhY2godCxmdW5jdGlvbih0LGEpe2k/aS5jYWxsKG4sdCxhKTpyJiZlJiZuLl9hZGRNb25vckl0ZW0odCxlKSxlJiYobi5nZXQoXCJvZGRcIil8fG4uZ2V0KFwiZXZlblwiKSkmJm4uX2RyYXdPZGRFdmVuKHQsZSxhKSxlPXR9KX0sY2hhbmdlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIGUuc2V0KFwiaXRlbXNcIix0KSxlLl9jbGVhclByZSgpLGUuX3ByZWNlc3NJdGVtcyh0KSxlLl9jaGFuZ2VHcmlkTGluZXModCxjK1wiLWxpbmVcIiksZS5fY2hhbmdlTWlub3JMaW5zZXMoKSx0aGlzfSxfY2xlYXJQcmU6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXM7ZS5nZXQoXCJtaW5vckNvdW50XCIpJiZlLnNldChcIm1pbm9ySXRlbXNcIixbXSksdD1lLmZpbmRBbGxCeShmdW5jdGlvbih0KXt2YXIgZT10LmdldChcImVsQ2xzXCIpO3JldHVybiBlIT09YytcIi1saW5lXCImJmUhPT1jK1wiLW1pbm9yXCJ9KSx1LmVhY2godCxmdW5jdGlvbih0KXt0LnJlbW92ZSgpfSl9LF9pc1ZlcnRpY2FsOmZ1bmN0aW9uKHQpe3JldHVybiB0LngxPT09dC54Mn0sX2RyYXdHcmlkTGluZXM6ZnVuY3Rpb24odCxlLG4pe3ZhciByPXRoaXMsaT1yLl9saW5lc1RvUGF0aCh0LGUpLGE9ci5hZGRTaGFwZShcIlBhdGhcIix7ZWxDbHM6bixhdHRyczppfSk7ci5zZXQoXCJncmlkTGluZVwiK24sYSl9LF9jaGFuZ2VHcmlkTGluZXM6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5nZXQoXCJhbmltYXRlXCIpLGk9bi5nZXQoXCJncmlkTGluZVwiK2UpO2lmKGkpe3ZhciBhPW4uX2xpbmVzVG9QYXRoKHQse30pO3I/dS5hbmltUGF0aChpLGEucGF0aCwyKTphP2kuYXR0cihcInBhdGhcIixhLnBhdGgpOmkucmVtb3ZlKCl9ZWxzZSBpZih0JiZ0Lmxlbmd0aCl7dmFyIHM7cz1lPT09YytcIi1saW5lXCI/bi5nZXQoXCJsaW5lXCIpOm4uZ2V0KFwibWlub3JMaW5lXCIpLG4uX2RyYXdHcmlkTGluZXModCxzLGUpfX0sX2xpbmVzVG9QYXRoOmZ1bmN0aW9uKHQsZSl7dmFyIG4scj10aGlzLGE9W10scz1yLmdldChcInR5cGVcIik7cmV0dXJuXCJsaW5lXCI9PT1zPzAhPT10Lmxlbmd0aCYmaSh0LGUpOihuPXUubWl4KHt9LGUpLHUuZWFjaCh0LGZ1bmN0aW9uKHQpe2E9YS5jb25jYXQoci5fZ2V0TXVsdGlwbGVQYXRoKHQscykpfSksbi5wYXRoPWEsbil9LF9nZXRNdWx0aXBsZVBhdGg6ZnVuY3Rpb24odCxlKXt2YXIgbj10LHI9W107cmV0dXJuXCJwb2x5Z29uXCI9PT1lP3UuZWFjaChuLGZ1bmN0aW9uKHQsZSl7MD09PWU/ci5wdXNoKFtcIk1cIix0LngsdC55XSk6ci5wdXNoKFtcIkxcIix0LngsdC55XSl9KTp1LmVhY2gobixmdW5jdGlvbih0LGUpe3ZhciBuPXQucmFkaXVzOzA9PT1lP3IucHVzaChbXCJNXCIsdC54LHQueV0pOnIucHVzaChbXCJBXCIsbixuLDAsMCx0LmZsYWcsdC54LHQueV0pfSkscn0sX2RyYXdPZGRFdmVuOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcixpLGE9dGhpcyxzPWEuZ2V0KFwib2RkXCIpLG89YS5nZXQoXCJldmVuXCIpO24lMj09PTA/byYmKGk9YS5fZ2V0QmFja0l0ZW0oZSx0LG8pLHI9XCJldmVuXCIpOnMmJihpPWEuX2dldEJhY2tJdGVtKGUsdCxzKSxyPVwib2RkXCIpLGkmJmEuYWRkU2hhcGUoXCJQYXRoXCIse2VsQ2xzOmMrXCItXCIrcixhdHRyczppfSl9LF9nZXRCYWNrSXRlbTpmdW5jdGlvbih0LGUsbil7dmFyIHI9dS5zdWJzdGl0dXRlKFwiTSB7eDF9IHt5MX0gTHt4Mn0ge3kyfVwiLHQpO3JldHVybiByKz11LnN1YnN0aXR1dGUoXCJMe3gyfSB7eTJ9IEx7eDF9IHt5MX1aXCIsZSksbj11Lm1peCh7fSxuLHtwYXRoOnJ9KX0sX2dldE1pbm9ySXRlbTpmdW5jdGlvbih0LGUsbixyKXt2YXIgaT10aGlzLGE9aS5faXNWZXJ0aWNhbCh0LGUpLHM9YT9cInhcIjpcInlcIixvPWE/XCJ5XCI6XCJ4XCIsdT1lW3MrXCIxXCJdLXRbcytcIjFcIl0sYz11LyhyKzEpLGw9e307cmV0dXJuIGxbcytcIjFcIl09bFtzK1wiMlwiXT0obisxKSpjK3RbcytcIjFcIl0sbFtvK1wiMVwiXT10W28rXCIxXCJdLGxbbytcIjJcIl09dFtvK1wiMlwiXSxsfSxfYWRkTW9ub3JJdGVtOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxpPXIoXCJtaW5vckl0ZW1zXCIsbixbXSksYT1uLmdldChcIm1pbm9yQ291bnRcIik7aWYoYSlmb3IodmFyIHM9MDtzPGE7cysrKXt2YXIgbz1uLl9nZXRNaW5vckl0ZW0oZSx0LHMsYSk7aS5wdXNoKG8pfX0sZHJhd01pbm9yTGluZXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJtaW5vckxpbmVcIiksbj10LmdldChcIm1pbm9ySXRlbXNcIik7dC5fZHJhd0dyaWRMaW5lcyhuLGUsYytcIi1taW5vclwiKX0sX2NoYW5nZU1pbm9yTGluc2VzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwibWlub3JJdGVtc1wiKTt0Ll9jaGFuZ2VHcmlkTGluZXMoZSxjK1wiLW1pbm9yXCIpfX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9big2NSk7ci5BYnN0cmFjdD1uKDQ3KSxyLkNpcmNsZT1uKDEzMCksci5NdWx0TGluZT1uKDEzMyksdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big2NSksYT1uKDMpLHM9YS5WZWN0b3IyLG89ZnVuY3Rpb24odCl7by5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07by5DRkc9e3R5cGU6XCJtdWx0TGluZVwifSxyLmV4dGVuZChvLGkpLHIuYXVnbWVudChvLHtfYmVmb3JlUmVuZGVyVUk6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO28uc3VwZXJjbGFzcy5fYmVmb3JlUmVuZGVyVUkuY2FsbCh0KX0sZ2V0TGluZVBhdGg6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJ0aWNrUG9pbnRzXCIpLG49dC5nZXQoXCJzdGFydFwiKSxpPXQuZ2V0KFwiZW5kXCIpLGE9W107cmV0dXJuIGEucHVzaChbXCJNXCIsbi54LG4ueV0pLHIuZWFjaChlLGZ1bmN0aW9uKHQpe2EucHVzaChbXCJMXCIsdC54LHQueV0pfSksYS5wdXNoKFtcIkxcIixpLngsaS55XSksYX0sZ2V0VGlja1BvaW50OmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5nZXQoXCJ0aWNrUG9pbnRzXCIpO3JldHVybiBuW2VdfSxnZXRUaWNrRW5kOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcixpPXRoaXMsYT1pLmdldChcInRpY2tMaW5lXCIpO3JldHVybiBlPWU/ZTphLnZhbHVlLHI9aS5nZXRTaWRlVmVjdG9yKGUsdCxuKSx7eDp0Lngrci54LHk6dC55K3IueX19LGdldFNpZGVWZWN0b3I6ZnVuY3Rpb24odCxlLG4pe3ZhciByLGk9dGhpcztpZigwPT09bilyPWkuZ2V0KFwic3RhcnRcIik7ZWxzZXt2YXIgYT1pLmdldChcInRpY2tQb2ludHNcIik7cj1hW24tMV19dmFyIG89bmV3IHMoZS54LXIueCxlLnktci55KSx1PW8ubm9ybWFsaXplKCksYz11LnZlcnRpY2FsKCExKTtyZXR1cm4gYy5tdWx0aXBseVNjYWxlcih0KX19KSx0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3QuZXhwb3J0cz17QXhpczpuKDEzMiksUGxvdEJhY2s6big2OCksUGxvdFJhbmdlOm4oNTApLFBsb3Q6e0JhY2s6big2OCksUmFuZ2U6big1MCl9LExhYmVsczpuKDY2KSxUb29sdGlwOm4oMTQwKSxMaTpuKDQ5KSxVbDpuKDY5KSxMZWdlbmQ6bigxMzgpfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7dC5yZW1vdmUoKX12YXIgaT1uKDkpLGE9big2Nykscz1mdW5jdGlvbigpe307cy5BVFRSUz17bGFiZWxzOm51bGx9LGkuYXVnbWVudChzLHtyZW5kZXJMYWJlbHM6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMsbj1lLmdldChcImxhYmVsc1wiKTtuJiYobi5pdGVtc3x8KG4uaXRlbXM9W10pLGkuaXNOdWxsKG4uYW5pbWF0ZSkmJihuLmFuaW1hdGU9ZS5nZXQoXCJhbmltYXRlXCIpKSx0PWUuYWRkR3JvdXAoYSxuKSxlLnNldChcImxhYmVsc0dyb3VwXCIsdCkpfSxyZXNldExhYmVsczpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXQoXCJsYWJlbHNcIik7aWYobil7dmFyIGE9ZS5nZXQoXCJsYWJlbHNHcm91cFwiKSxzPWEuZ2V0TGFiZWxzKCksbz1zLmxlbmd0aDt0PXR8fG4uaXRlbXMsaS5lYWNoKHQsZnVuY3Rpb24odCxuKXtpZihuPG8pe3ZhciByPXNbbl07YS5jaGFuZ2VMYWJlbChyLHQpfWVsc2UgZS5hZGRMYWJlbCh0LnRleHQsdCl9KTtmb3IodmFyIHU9by0xO3U+PXQubGVuZ3RoO3UtLSlyKHNbdV0pfX0sYWRkTGFiZWw6ZnVuY3Rpb24odCxlKXt2YXIgbixyPXRoaXMsaT1yLmdldChcImxhYmVsc0dyb3VwXCIpLGE9e307cmV0dXJuIGkmJihhLnRleHQ9dCxhLng9ZS54LGEueT1lLnksYS5wb2ludD1lLGEudGV4dEFsaWduPWUudGV4dEFsaWduLGUucm90YXRlJiYoYS5yb3RhdGU9ZS5yb3RhdGUpLG49aS5hZGRMYWJlbChhKSksbn0scmVtb3ZlTGFiZWxzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwibGFiZWxzR3JvdXBcIik7ZSYmZS5yZW1vdmUoKSx0LnNldChcImxhYmVsc0dyb3VwXCIsbnVsbCl9fSksdC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQsZSl7dmFyIG49bnVsbDtyZXR1cm4gaS5lYWNoKHQsZnVuY3Rpb24odCl7aWYodC5uYW1lPT09ZS5nZXQoXCJ2YWx1ZVwiKSlyZXR1cm4gbj10LCExfSksbn12YXIgaT1uKDkpLGE9big0OSkscz1uKDUyKSxvPW4oNDgpLHU9ZnVuY3Rpb24odCl7dS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07dS5DRkc9e3R5cGU6XCJjYXRlZ29yeS1sZWdlbmRcIixpdGVtczpudWxsLHNwYWNpbmdYOjUsc3BhY2luZ1k6MTAsd29yZFNwYWNlaW5nOjIsaXRlbXNHcm91cDpudWxsLGxheW91dDpcImhvcml6b250YWxcIixsZWF2ZUNoZWNrZWQ6ITAsYmFja1BhZGRpbmc6WzAsMCwwLDBdLGNoZWNrYWJsZTohMCxpdGVtc2JlZ2luWDowLGl0ZW1zYmVnaW5ZOjAsdW5DaGVja2VkOlwiI0NDQ1wiLHdvcmQ6e2ZpbGw6XCIjM2MzYzNjXCJ9LGJhY2s6bnVsbCxpdGVtV3JhcDohMSxtYXhMZW5ndGg6MTAwLF9iYWNrOnt9fSxpLmV4dGVuZCh1LG8pLGkuYXVnbWVudCh1LHtfaW5pdENmZzpmdW5jdGlvbigpe3Uuc3VwZXJjbGFzcy5faW5pdENmZy5jYWxsKHRoaXMpLHRoaXMuZGVlcFNldChcImJhY2tcIil9LF9iZWZvcmVSZW5kZXJVSTpmdW5jdGlvbigpe3Uuc3VwZXJjbGFzcy5fYmVmb3JlUmVuZGVyVUkuY2FsbCh0aGlzKTt2YXIgdD10aGlzLmdldChcImNvbFwiKSxlPXRoaXMuZ2V0KFwiaXRlbXNcIikubGVuZ3RoO3RoaXMuc2V0KFwiX3Jvd1wiLE1hdGguY2VpbChlL3QpKX0sX3JlbmRlclVJOmZ1bmN0aW9uKCl7dS5zdXBlcmNsYXNzLl9yZW5kZXJVSS5jYWxsKHRoaXMpLHRoaXMuX3JlbmRlclRpdGxlKCksdGhpcy5fcmVuZGVySXRlbXMoKSx0aGlzLl93cmFwSXRlbXMoKSx0aGlzLl9yZW5kZXJCYWNrKCksdGhpcy5zZXRQb3NpdGlvbigpfSxfd3JhcEl0ZW1zOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJpdGVtV3JhcFwiKSxlPXRoaXMuZ2V0KFwibGF5b3V0XCIpLG49dGhpcy5nZXQoXCJtYXhMZW5ndGhcIik7dCYmbj4wJiYoXCJob3Jpem9udGFsXCI9PT1lP3RoaXMuX3dhcnBIb3Jpem9udGFsKCk6XCJ2ZXJ0aWNhbFwiPT09ZSYmdGhpcy5fd2FycFZlcnRpY2FsKCkpfSxfd2FycFZlcnRpY2FsOmZ1bmN0aW9uKCl7dmFyIHQsZSxuLHIsYT10aGlzLmdldChcIml0ZW1zR3JvdXBcIikscz10aGlzLmdldChcInRpdGxlU2hhcGVcIiksbz1hLmdldChcImNoaWxkcmVuXCIpLHU9dGhpcy5nZXQoXCJtYXhMZW5ndGhcIiksYz10aGlzLmdldChcInNwYWNpbmdYXCIpLGw9dGhpcy5nZXQoXCJzcGFjaW5nWVwiKSxoPXMuZ2V0QkJCb3goKS5oZWlnaHQrbCxmPTEsZz1oLHA9MCx2PTAsZD0wO2EuZ2V0QkJCb3goKS5oZWlnaHQ+dSYmaS5lYWNoKG8sZnVuY3Rpb24oaSl7cj1pLmdldEJCQm94KCksZT1yLndpZHRoK2Msbj1yLmhlaWdodCtsLHA9dix2PWU+dj9lOnYsdD1nLGcrPW4sZz51PyhkKz1wLGc9bitoLGYrKyx2PTAscD0wLGkubW92ZShkLGgpKTppLm1vdmUoZCx0KX0pfSxfd2FycEhvcml6b250YWw6ZnVuY3Rpb24oKXt2YXIgdCxlLG4scj10aGlzLmdldChcIml0ZW1zR3JvdXBcIiksYT1yLmdldChcImNoaWxkcmVuXCIpLHM9dGhpcy5nZXQoXCJtYXhMZW5ndGhcIiksbz10aGlzLmdldChcInNwYWNpbmdYXCIpLHU9dGhpcy5nZXQoXCJzcGFjaW5nWVwiKSxjPTEsbD0wLGg9MDtyLmdldEJCQm94KCkud2lkdGg+cyYmaS5lYWNoKGEsZnVuY3Rpb24ocil7bj1yLmdldEJCQm94KCksdD1uLndpZHRoK28sZT1uLmhlaWdodCt1LGg9bCxsKz10LGw+cz8obD10LGMrKyxyLm1vdmUoMCxjKmUpKTpyLm1vdmUoaCxjKmUpfSl9LF9iaW5kVUk6ZnVuY3Rpb24oKXt0aGlzLl9iaW5kT3Zlck91dCgpLHRoaXMuX2JpbmRDbGljaygpfSxfYmluZENsaWNrOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJjaGVja2FibGVcIik7dCYmdGhpcy5vbihcImNsaWNrXCIsaS53cmFwQmVoYXZpb3IodGhpcyxcIl9vbkNsaWNrXCIpKX0sX2JpbmRPdmVyT3V0OmZ1bmN0aW9uKCl7dGhpcy5vbihcIm1vdXNlZW50ZXJcIixpLndyYXBCZWhhdmlvcih0aGlzLFwiX29uTW91c2VlbnRlclwiKSksdGhpcy5vbihcIm1vdXNlbGVhdmVcIixpLndyYXBCZWhhdmlvcih0aGlzLFwiX29uTW91c2VsZWF2ZVwiKSl9LF9vbkNsaWNrOmZ1bmN0aW9uKHQpe3ZhciBlLG4saSxhLG89dGhpcy5nZXQoXCJsZWF2ZUNoZWNrZWRcIiksdT10aGlzLl9nZXRMaSh0LmN1cnJlbnRUYXJnZXQpLGM9dGhpcy5nZXQoXCJpdGVtc1wiKTtpZih1KXt2YXIgbD1yKGMsdSk7aWYoYT11LmdldChcImNoZWNrZWRcIiksZT1uZXcgcyhcIml0ZW1jbGlja1wiLHQpLGUuaXRlbT1sLHRoaXMudHJpZ2dlcihlKSxvJiZhJiYxPT09dGhpcy5nZXRMZWF2ZUNvdW50KCkpcmV0dXJuO2E/KGk9bmV3IHMoXCJpdGVtdW5jaGVja2VkXCIsdCksaS5pdGVtPWwsdGhpcy50cmlnZ2VyKGkpKToobj1uZXcgcyhcIml0ZW1jaGVja2VkXCIsdCksbi5pdGVtPWwsdGhpcy50cmlnZ2VyKG4pKX19LF9vbk1vdXNlZW50ZXI6ZnVuY3Rpb24odCl7dmFyIGU9bmV3IHMoXCJpdGVtb3ZlclwiLHQpLG49dC5jdXJyZW50VGFyZ2V0LHI9dGhpcy5fZ2V0TGkodC5jdXJyZW50VGFyZ2V0KSxhPW4uZ2V0Q2FudmFzTm9kZSgpO3ImJihlLml0ZW09cix0aGlzLnRyaWdnZXIoZSksaS5tb2RpQ1NTKGEse2N1cnNvcjpcInBvaW50ZXJcIn0pKX0sX29uTW91c2VsZWF2ZTpmdW5jdGlvbih0KXt2YXIgZT1uZXcgcyhcIml0ZW1vdXRcIix0KSxuPXRoaXMuZ2V0Q2FudmFzTm9kZSgpLHI9dGhpcy5fZ2V0TGkodC5jdXJyZW50VGFyZ2V0KTtyJiYoZS5pdGVtPXIsdGhpcy50cmlnZ2VyKGUpLGkubW9kaUNTUyhuLHtjdXJzb3I6XCJkZWZhdWx0XCJ9KSl9LF9yZW5kZXJCYWNrOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJpdGVtc0dyb3VwXCIpLGU9dGhpcy5nZXQoXCJiYWNrUGFkZGluZ1wiKSxuPXRoaXMuZ2V0KFwiYmFja1wiKTt0LnJlbmRlckJhY2soZSxuKX0sX3JlbmRlckl0ZW1zOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwiaXRlbXNcIik7aS5lYWNoKGUsZnVuY3Rpb24oZSxuKXt0Ll9hZGRJdGVtKGUsbil9KX0sX2FkZEl0ZW06ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXQoXCJpdGVtc0dyb3VwXCIpLG49dGhpcy5fZ2V0TmV4dFgoKSxyPXRoaXMuX2dldE5leHRZKCksaT10aGlzLmdldChcInVuQ2hlY2tlZFwiKSxzPXt3b3Jkczpbe3RleHQ6dC5uYW1lfV19O3Quc3ltYm9sP3MubWFya2VyPXtzeW1ib2w6dC5zeW1ib2wsZmlsbDp0LmNoZWNrZWQ/dC5jb2xvcjppfTp0Lm1hcmtlciYmKHQuY2hlY2tlZHx8KHQubWFya2VyLmZpbGw9aSx0Lm1hcmtlci5zdHJva2U9aSkscy5tYXJrZXI9dC5tYXJrZXIpLGUuYWRkR3JvdXAoYSx7dmFsdWU6dC5uYW1lLFwiY2xhc3NcIjpcImxlZ2VuZC1pdGVtXCIsd29yZDp0LndvcmQsY2hlY2tlZDp0LmNoZWNrZWQseDpuLHk6cixpdGVtczpzfSl9LF9nZXROZXh0WDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwibGF5b3V0XCIpLGU9dGhpcy5nZXQoXCJzcGFjaW5nWFwiKSxuPXRoaXMuZ2V0KFwiaXRlbXNHcm91cFwiKSxyPW4uZ2V0KFwiY2hpbGRyZW5cIiksYT0wO3JldHVyblwiaG9yaXpvbnRhbFwiPT09dCYmaS5lYWNoKHIsZnVuY3Rpb24odCl7YSs9dC5nZXRCQkJveCgpLndpZHRoK2V9KSxhfSxfZ2V0TmV4dFk6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcInNwYWNpbmdZXCIpLGU9dGhpcy5nZXQoXCJsYXlvdXRcIiksbj10aGlzLmdldChcIml0ZW1zR3JvdXBcIikscj10aGlzLmdldChcInRpdGxlU2hhcGVcIiksYT1uLmdldChcImNoaWxkcmVuXCIpLHM9ci5nZXRCQkJveCgpLmhlaWdodCt0O3JldHVyblwidmVydGljYWxcIj09PWUmJmkuZWFjaChhLGZ1bmN0aW9uKGUpe3MrPWUuZ2V0QkJCb3goKS5oZWlnaHQrdH0pLHN9LF9nZXRMaTpmdW5jdGlvbih0KXt2YXIgZT10LmdldFBhcmVudCgpO3JldHVyblwibGlcIj09PWUuZ2V0KFwidHlwZVwiKSYmZX19KSx0LmV4cG9ydHM9dX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oOSksaT1uKDQ4KSxhPW4oMzcpLHM9ZnVuY3Rpb24odCl7cy5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07cy5DRkc9e3R5cGU6XCJjb250aW51b3VzLWxlZ2VuZFwiLGl0ZW1zOm51bGwsbGF5b3V0OlwidmVydGljYWxcIix3aWR0aDoyMDAsaGVpZ2h0OjYwLGF0dHJUeXBlOm51bGwsbmFtZUdyb3VwOm51bGwsdGl0bGVPZmZzZXQ6MzAsbmFtZU9mZnNldDoxMCx3b3JkOnt9LHRpdGxlOnt0ZXh0OlwiIFwifSxjb2xvcjpcIiM0RTdDQ0NcIixfd29yZDp7ZmlsbDpcIiMzMzNcIix0ZXh0QWxpZ246XCJjZW50ZXJcIix0ZXh0QmFzZWxpbmU6XCJtaWRkbGVcIn19LHIuZXh0ZW5kKHMsaSksci5hdWdtZW50KHMse19pbml0Q2ZnOmZ1bmN0aW9uKCl7cy5zdXBlcmNsYXNzLl9pbml0Q2ZnLmNhbGwodGhpcyksdGhpcy5kZWVwU2V0KFwid29yZFwiKX0sX2JlZm9yZVJlbmRlclVJOmZ1bmN0aW9uKCl7cy5zdXBlcmNsYXNzLl9iZWZvcmVSZW5kZXJVSS5jYWxsKHRoaXMpO3ZhciB0PXRoaXMuYWRkR3JvdXAoKTt0aGlzLnNldChcIm5hbWVHcm91cFwiLHQpfSxfcmVuZGVyVUk6ZnVuY3Rpb24oKXtzLnN1cGVyY2xhc3MuX3JlbmRlclVJLmNhbGwodGhpcyk7dmFyIHQ9dGhpcy5nZXQoXCJhdHRyVHlwZVwiKTt0aGlzLl9jYWxTdGFydFBvaW50KCksXCJjb2xvclwiPT09dD90aGlzLl9yZW5kZXJHcmFkaWVudCgpOlwic2l6ZVwiPT09dCYmdGhpcy5fcmVuZGVyVHJpYW5nbGUoKX0sX2NhbFN0YXJ0UG9pbnQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcInRpdGxlU2hhcGVcIiksZT10LmdldEJCQm94KCksbj10aGlzLmdldChcInRpdGxlT2Zmc2V0XCIpLHI9e3g6MCx5OmUuaGVpZ2h0K259O3RoaXMuc2V0KFwic3RhcnRQb2ludFwiLHIpfSxfcmVuZGVyVHJpYW5nbGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcIml0ZW1zXCIpLGU9dGhpcy5nZXQoXCJsYXlvdXRcIik7dGhpcy5fcmVuZGVyTmFtZSh0LGUpLHRoaXMuX3JlbmRlclRyaWFuZ2xlU2hhcGUodCxlKX0sX3JlbmRlckdyYWRpZW50OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJpdGVtc1wiKSxlPXRoaXMuZ2V0KFwibGF5b3V0XCIpO3RoaXMuX3JlbmRlck5hbWUodCxlKSx0aGlzLl9yZW5kZXJHcmFkaWVudFNoYXBlKHQsZSl9LF9yZW5kZXJUcmlhbmdsZVNoYXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5nZXQoXCJpdGVtc0dyb3VwXCIpLHI9dGhpcy5nZXQoXCJ3aWR0aFwiKSxpPXRoaXMuZ2V0KFwiaGVpZ2h0XCIpLGE9dGhpcy5nZXQoXCJzdGFydFBvaW50XCIpLHM9dGhpcy5nZXQoXCJjb2xvclwiKTtcInZlcnRpY2FsXCI9PT1lP24uYWRkU2hhcGUoXCJQb2x5Z29uXCIse2F0dHJzOntwb2ludHM6W1thLngsYS55XSxbYS54K3IsYS55XSxbYS54LGEueStpXV0sZmlsbDpzfX0pOm4uYWRkU2hhcGUoXCJQb2x5Z29uXCIse2F0dHJzOntwb2ludHM6W1thLngsYS55K2ldLFthLngrcixhLnldLFthLngrcixhLnkraV1dLGZpbGw6c319KX0sX3JlbmRlckdyYWRpZW50U2hhcGU6ZnVuY3Rpb24odCxlKXt2YXIgbixpPXRoaXMuZ2V0KFwiaXRlbXNHcm91cFwiKSxzPXRoaXMuZ2V0KFwid2lkdGhcIiksbz10aGlzLmdldChcImhlaWdodFwiKSx1PVwiXCIsYz10aGlzLmdldChcInN0YXJ0UG9pbnRcIik7XCJ2ZXJ0aWNhbFwiPT09ZT8odSs9XCJsICg5MCkgXCIsci5lYWNoKHQsZnVuY3Rpb24odCl7bj1uZXcgYSh0LmNvbG9yKS5nZXRSR0JTdHlsZSgpLHUrPTEtdC52YWx1ZStcIjpcIituK1wiIFwifSkpOih1Kz1cImwgKDApIFwiLHIuZWFjaCh0LGZ1bmN0aW9uKHQpe249bmV3IGEodC5jb2xvcikuZ2V0UkdCU3R5bGUoKSx1Kz10LnZhbHVlK1wiOlwiK24rXCIgXCJ9KSksaS5hZGRTaGFwZShcIlJlY3RcIix7YXR0cnM6e3g6Yy54LHk6Yy55LHdpZHRoOnMsaGVpZ2h0Om8sZmlsbDp1fX0pfSxzZXRMYXlvdXQ6ZnVuY3Rpb24odCl7dGhpcy5zZXQoXCJsYXlvdXRcIix0KSx0aGlzLmNsZWFyKCksdGhpcy5fcmVuZGVyVUkoKX0sX3JlbmRlck5hbWU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmdldChcIm5hbWVHcm91cFwiKSxpPXIubWl4KHt9LHRoaXMuZ2V0KFwid29yZFwiKSksYT10aGlzLmdldChcIm5hbWVPZmZzZXRcIikscz10aGlzLmdldChcIndpZHRoXCIpLG89dGhpcy5nZXQoXCJoZWlnaHRcIiksdT10aGlzLmdldChcInN0YXJ0UG9pbnRcIik7ci5lYWNoKHQsZnVuY3Rpb24oYyxsKXswIT09bCYmbCE9PXQubGVuZ3RoLTF8fChcInZlcnRpY2FsXCI9PT1lPyhhPTA9PT1sP2E6LWEsaT1yLm1peChpLHt4OnUueCtzLzIseTp1LnkrbyooMS1jLnZhbHVlKSthLHRleHQ6Yy5uYW1lfSksbi5hZGRTaGFwZShcIlRleHRcIix7YXR0cnM6aX0pKTooYT0xPT09bD9hOi1hLGk9ci5taXgoaSx7eDp1LngrcypjLnZhbHVlK2EseTp1Lnkrby8yLHRleHQ6Yy5uYW1lfSksbi5hZGRTaGFwZShcIlRleHRcIix7YXR0cnM6aX0pKSl9KX0sY2xlYXI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcIml0ZW1zR3JvdXBcIiksZT10aGlzLmdldChcIm5hbWVHcm91cFwiKTt0LmNsZWFyKCksZS5jbGVhcigpfX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9big0OCk7ci5DYXRlZ29yeT1uKDEzNiksci5Db250aW51b3VzPW4oMTM3KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oOSksaT1uKDEyKSxhPWkuR3JvdXBCYXNlLHM9ZnVuY3Rpb24odCl7cy5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07cy5DRkc9e3R5cGU6XCJsaVwiLGl0ZW1zOm51bGwsaXRlbXNHcm91cDpudWxsLHdvcmQ6bnVsbCxtYXJrZXI6bnVsbCx3b3JkU3BhY2Vpbmc6bnVsbCxfbWFya2VyOntmaWxsOlwicmVkXCIsbGluZVdpZHRoOjQscjoyLjV9LF93b3JkU3BhY2Vpbmc6Nixfd29yZDp7ZmlsbDpcIiNmZmZcIix0ZXh0QmFzZWxpbmU6XCJtaWRkbGVcIn19LHIuZXh0ZW5kKHMsYSksci5hdWdtZW50KHMse19pbml0Q2ZnOmZ1bmN0aW9uKCl7dGhpcy5kZWVwU2V0KFwid29yZFwiKSx0aGlzLmRlZXBTZXQoXCJtYXJrZXJcIiksdGhpcy5kZWVwU2V0KFwid29yZFNwYWNlaW5nXCIpLHRoaXMuZGVlcFNldChcIm1hcmtlckFsaWduXCIpfSxfcmVuZGVyVUk6ZnVuY3Rpb24oKXtzLnN1cGVyY2xhc3MuX3JlbmRlclVJLmNhbGwodGhpcyksdGhpcy5fcmVuZGVySXRlbXMoKX0sX3JlbmRlckl0ZW1zOmZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLG49ZS5nZXRCQkJveCgpLGk9bi53aWR0aCxhPWUuZ2V0KFwid29yZFwiKSxzPWUuZ2V0KFwid29yZFNwYWNlaW5nXCIpLG89ZS5nZXQoXCJpdGVtc1wiKSx1PWUuZ2V0KFwibWFya2VyXCIpLGM9ZS5nZXQoXCJtYXJrZXJBbGlnblwiKTtvLm1hcmtlciYmKHQ9ci5taXgoe30sdSxvLm1hcmtlcix7eDpcImNlbnRlclwiPT09Yz8wOm8ubWFya2VyLnJhZGl1cyx5OjB9KSxyLm1peFhZKHQsZSksdC5zeW1ib2wmJmUuYWRkU2hhcGUoXCJNYXJrZXJcIix7dHlwZTpcIm1hcmtlclwiLGF0dHJzOnR9KSksci5lYWNoKG8ud29yZHMsZnVuY3Rpb24obyl7bj1lLmdldEJCQm94KCksaT1NYXRoLmFicyhuLndpZHRoKT09PTEvMD8wOm4ud2lkdGgsdD1yLm1peCh7fSxhLG8se3g6XCJjZW50ZXJcIj09PWM/czowPT09aT8wOmkrcyx5OjB9KSxyLm1peFhZKHQsZSksZS5hZGRTaGFwZShcIlRleHRcIix7YXR0cnM6dH0pfSl9fSksdC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDE0MSk7dC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQsZSl7cmV0dXJuIHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShlKVswXX12YXIgaT1uKDkpLGE9bigzKSxzPW4oMTIpLG89big2OSksdT1zLkdyb3VwQmFzZSxjPVwiYWMtdGl0bGVcIixsPVwiYWMtbGlzdFwiLGg9ZnVuY3Rpb24odCl7aC5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07aC5DRkc9e3pJbmRleDoxMCx4OjAseTowLGl0ZW1OYW1lOlwidG9vdGlwXCIsaXRlbXM6W10sdWxJdGVtczpbXSx1bDp7ZmlsbDpcIiNmZmZcIix0ZXh0QWxpZ246XCJsZWZ0XCJ9LHRpdGxlOnt9LG5hbWU6e30sdmFsdWU6e30sY3Jvc3NMaW5lOntzdHJva2U6XCIjOTk5XCIsbGluZVdpZHRoOjF9LG1hcmtlckNmZzpudWxsLHRpdGxlVGV4dDp2b2lkIDAsd29yZFNwYWNlaW5nOjYscGFkZGluZzpbMTAsMTAsMTAsMTBdLGNyb3NzaGFpcnM6ITEsdGl0bGVTaGFwZTpudWxsLHVsR3JvdXA6bnVsbCxjcm9zc1NoYXBlWDpudWxsLGNyb3NzU2hhcGVZOm51bGwsYmFja1NoYXBlOm51bGwscGxvdFJhbmdlOm51bGwsc2hhcmVkOiExLG9mZnNldDoxMCxhbmltYXRlOiEwLGR1cmF0aW9uOjUwLHZpc2libGU6ITEsdmFsdWVTcGxpdDpcIlwiLHZhbHVlU3VmZml4OlwiXCIsY3VzdG9tOiExLGN1c3RvbURpdjpudWxsLGN1c3RvbUZvbGxvdzohMCx0aW1lU3RhbXA6MCxodG1sOic8ZGl2IGNsYXNzPVwiYWMtdG9vbHRpcFwiIHN0eWxlPVwicG9zaXRpb246YWJzb2x1dGU7dmlzaWJpbGl0eTogaGlkZGVuO1wiPjxoNCBjbGFzcz1cIicrYysnXCI+PC9oND48dWwgY2xhc3M9XCInK2wrJ1wiPjwvdWw+PC9kaXY+JyxpdGVtVHBsOic8bGk+PHNwYW4gc3R5bGU9XCJjb2xvcjp7Y29sb3J9XCI+e25hbWV9PC9zcGFuPiA6IHt2YWx1ZX08L2xpPid9LGkuZXh0ZW5kKGgsdSksaS5hdWdtZW50KGgse19iZWZvcmVSZW5kZXJVSTpmdW5jdGlvbigpe28uc3VwZXJjbGFzcy5fYmVmb3JlUmVuZGVyVUkuY2FsbCh0aGlzKTt2YXIgdD10aGlzLmdldChcInVsXCIpLGU9dGhpcy5nZXQoXCJjdXN0b21cIiksbj10aGlzLmdldChcImNyb3NzTGluZVwiKSxyPXRoaXMuYWRkR3JvdXAoe2F0dHJzOm59KSxpPXRoaXMuYWRkR3JvdXAobyx7ekluZGV4OjEwLGF0dHJzOnR9KTt0aGlzLnNldChcInVsSXRlbXNcIixbXSksdGhpcy5zZXQoXCJjcm9zc0dyb3VwXCIsciksdGhpcy5zZXQoXCJ1bEdyb3VwXCIsaSksZSYmdGhpcy5fc2V0Q3VzdG9tRGl2KCl9LF9yZW5kZXJVSTpmdW5jdGlvbigpe28uc3VwZXJjbGFzcy5fcmVuZGVyVUkuY2FsbCh0aGlzKTt2YXIgdD10aGlzLmdldChcImN1c3RvbVwiKTt0P3RoaXMuX3JlbmRlckN1c3RvbSgpOnRoaXMuX3JlbmRlclVsKCksdGhpcy5fcmVuZGVyQ3Jvc3NMaW5lKCl9LF9yZW5kZXJVbDpmdW5jdGlvbigpe3ZhciB0LGUsbixyLGE9dGhpcyxzPVtdLG89YS5nZXQoXCJ1bEdyb3VwXCIpLHU9YS5nZXQoXCJpdGVtc1wiKSxjPWEuZ2V0KFwidGl0bGVcIiksbD1hLmdldChcInRpdGxlVGV4dFwiKSxoPWEuZ2V0KFwibmFtZVwiKSxmPWEuZ2V0KFwidmFsdWVcIiksZz1hLmdldChcInZhbHVlU3BsaXRcIikscD1hLmdldChcInZhbHVlU3VmZml4XCIpLHY9YS5nZXQoXCJtYXJrZXJDZmdcIik7YyYmcy5wdXNoKHt3b3Jkczpbe3RleHQ6bH1dLGF0dHJzOmN9KSxpLmVhY2godSxmdW5jdGlvbih0KXt2YXIgZT1pLm1peCh7fSxoLHt0ZXh0OnQubmFtZT90Lm5hbWUrXCI6XCI6XCJcIn0pLG49aS5taXgoe30sZix7dGV4dDp0LnZhbHVlK2crcH0pO3QubWFya2VyPT09ITAmJih0Lm1hcmtlcj1cImNpcmNsZVwiKTt2YXIgcj10Lm1hcmtlcj97c3ltYm9sOnQubWFya2VyLGZpbGw6dC5jb2xvcn06e307cy5wdXNoKHtjb2xvcjp0LmNvbG9yLHdvcmRzOltlLG5dLG1hcmtlcjppLm1peChyLHYpfSl9KSxvLnNldEl0ZW1zKHMpLHI9by5nZXQoXCJiYWNrU2hhcGVcIiksYyYmKGU9by5nZXQoXCJpdGVtc0dyb3VwXCIpLmdldEZpcnN0KCksbj1lLmdldEZpcnN0KCksYS5zZXQoXCJ0aXRsZVNoYXBlXCIsbikpLHQ9by5nZXQoXCJpdGVtc0dyb3VwXCIpLmdldEZpbHRlckNoaWxkKGUpLGEuc2V0KFwiYmFja1NoYXBlXCIsciksYS5zZXQoXCJ1bEl0ZW1zXCIscyksYS5zZXQoXCJ0ZXh0R3JvdXBcIix0KX0sX3JlbmRlckNyb3NzTGluZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwiY3Jvc3NoYWlyc1wiKSxlPXRoaXMuZ2V0KFwiY2FudmFzXCIpLG49dGhpcy5nZXQoXCJwbG90UmFuZ2VcIik7aWYodGhpcy5jbGVhckNyb3NzR3JvdXAoKSx0KXN3aXRjaCh0LnR5cGUpe2Nhc2VcInhcIjp0aGlzLl9yZW5kZXJDcm9zc0xpbmVYKGUsbik7YnJlYWs7Y2FzZVwieVwiOnRoaXMuX3JlbmRlckNyb3NzTGluZVkoZSxuKTticmVhaztjYXNlXCJjcm9zc1wiOnRoaXMuX3JlbmRlckNyb3NzTGluZVgoZSxuKSx0aGlzLl9yZW5kZXJDcm9zc0xpbmVZKGUsbik7YnJlYWs7ZGVmYXVsdDp0aGlzLl9yZW5kZXJDcm9zc0xpbmVZKGUsbil9fSxfcmVuZGVyQ3Jvc3NMaW5lWTpmdW5jdGlvbih0LGUpe3ZhciBuLHIsYT10aGlzLmdldChcImNyb3NzaGFpcnNcIik7ZT8obj1lLmJsLnkscj1lLnRsLnkpOihuPXQuZ2V0KFwiaGVpZ2h0XCIpLHI9MCk7dmFyIHM9aS5taXgoe3gxOjAseTE6bix4MjowLHkyOnJ9LHRoaXMuZ2V0KFwiY3Jvc3NMaW5lXCIpKTtcImRhc2hcIj09PWEuc2hhcGUmJihzPWkubWl4KHMse2xpbmVEYXNoOlwiNiAzXCJ9KSk7dmFyIG89dGhpcy5fZ2V0Q3Jvc3NTaGFwZShzKTt0aGlzLnNldChcImNyb3NzU2hhcGVZXCIsbyl9LF9yZW5kZXJDcm9zc0xpbmVYOmZ1bmN0aW9uKHQsZSl7dmFyIG4scixhLHMsbz10aGlzLmdldChcImNyb3NzaGFpcnNcIik7ZT8obj1lLmJsLngscj1lLmJyLngpOihuPXQuZ2V0KFwid2lkdGhcIikscj0wKSxhPWkubWl4KHt4MTpuLHkxOjAseDI6cix5MjowfSx0aGlzLmdldChcImNyb3NzTGluZVwiKSksXCJkYXNoXCI9PT1vLnNoYXBlJiYoYT1pLm1peChhLHtsaW5lRGFzaDpcIjYgM1wifSkpLHM9dGhpcy5fZ2V0Q3Jvc3NTaGFwZShhKSx0aGlzLnNldChcImNyb3NzU2hhcGVYXCIscyl9LF9nZXRDcm9zc1NoYXBlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0KFwiY3Jvc3NHcm91cFwiKSxuPWUuYWRkU2hhcGUoXCJMaW5lXCIse2F0dHJzOnR9KTtyZXR1cm4gbn0sY2xlYXJDcm9zc0dyb3VwOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJjcm9zc0dyb3VwXCIpO3RoaXMuc2V0KFwiY3Jvc3NTaGFwZVhcIix2b2lkIDApLHRoaXMuc2V0KFwiY3Jvc3NTaGFwZVlcIix2b2lkIDApLHQuY2xlYXIoKX0sc2V0Q3Jvc3M6ZnVuY3Rpb24odCl7dmFyIGU9e307ZS50eXBlPXQsdGhpcy5zZXQoXCJjcm9zc2hhaXJzXCIse3R5cGU6dH0pLHRoaXMuX3JlbmRlckNyb3NzTGluZSgpfSxzZXRDb250ZW50OmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5faXNDb250ZW50Q2hhbmdlKHQsZSk7aWYoIW4pe3ZhciByPXRoaXMuZ2V0KFwiY3VzdG9tXCIpLGk9K25ldyBEYXRlO3RoaXMuc2V0KFwiaXRlbXNcIixlKSx0aGlzLnNldChcInRpdGxlVGV4dFwiLHQpLHRoaXMuc2V0KFwidGltZVN0YW1wXCIsaSkscj90aGlzLl9yZW5kZXJDdXN0b20oKTp0aGlzLl9yZW5kZXJVbCgpfXJldHVybiB0aGlzfSxfaXNDb250ZW50Q2hhbmdlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5nZXQoXCJ0aXRsZVRleHRcIikscj10aGlzLmdldChcIml0ZW1zXCIpO3JldHVybiB0PT09biYmci5sZW5ndGg9PT1lLmxlbmd0aCYmZVswXS52YWx1ZT09PXJbMF0udmFsdWV9LGdldFRpdGxlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0KFwidGl0bGVTaGFwZVwiKX0sc2V0UG9zaXRpb246ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmdldChcImNhbnZhc1wiKSxyPXRoaXMuZ2V0KFwiY3VzdG9tRGl2XCIpLGk9dGhpcy5nZXQoXCJwbG90UmFuZ2VcIikscz10aGlzLmdldChcIm9mZnNldFwiKSxvPXRoaXMuZ2V0KFwiY3Jvc3NTaGFwZVhcIiksdT10aGlzLmdldChcImNyb3NzU2hhcGVZXCIpLGM9dGhpcy5nZXQoXCJ1bEdyb3VwXCIpLGw9Yy5nZXRCQkJveCgpLGg9dGhpcy5nZXQoXCJhbmltYXRlXCIpLGY9bmV3IGEuTWF0cml4MyxnPSEwLHA9dCx2PWU7ciYmdGhpcy5nZXQoXCJjdXN0b21Gb2xsb3dcIik/dCs9czoodD10LWwud2lkdGgtcyxlLT1sLmhlaWdodCksaSYmKGkuaXNJblJhbmdlKHQsZSl8fChpLmlzSW5WZXJ0aWNhbChlKXx8KGU9aS50bC55KSxpLmlzSW5Ib3Jpem9udGFsKHQpfHwodD1NYXRoLm1heChpLnRsLngscCkrcyxnPSExKSkpLHRoaXMuZ2V0KFwieFwiKT09PXQmJnRoaXMuZ2V0KFwieVwiKT09PWV8fCh1JiYoZz91Lm1vdmUocCwwKTp1Lm1vdmUodC1zLDApKSxvJiZvLm1vdmUoMCx2KSxmLnRyYW5zbGF0ZSh0LGUpLGgmJnRoaXMuZ2V0KFwidmlzaWJsZVwiKT9jLmFuaW1hdGUoe21hdHJpeDpmfSx0aGlzLmdldChcImR1cmF0aW9uXCIpKTooYy5zZXRNYXRyaXgoZiksdGhpcy5nZXQoXCJ2aXNpYmxlXCIpfHx0aGlzLnNob3coKSxuLmRyYXcoKSksdGhpcy5tb3ZlQ3VzdG9tKHQsZSxnKSl9LF9zZXRDdXN0b21EaXY6ZnVuY3Rpb24oKXt2YXIgdCxlLG49dGhpcyxyPW4uZ2V0KFwiaHRtbFwiKSxhPW4uZ2V0KFwiY2FudmFzXCIpLmdldChcImVsXCIpLnBhcmVudE5vZGU7L15cXCMvLnRlc3Qocik/KGU9ci5yZXBsYWNlKFwiI1wiLFwiXCIpLHQ9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZSkpOnQ9aS5jcmVhdGVEb20ociksbi5zZXQoXCJjdXN0b21EaXZcIix0KSxuLmdldChcImN1c3RvbUZvbGxvd1wiKSYmKGEuYXBwZW5kQ2hpbGQodCksYS5zdHlsZS5wb3NpdGlvbj1cInJlbGF0aXZlXCIpfSxfcmVuZGVyQ3VzdG9tOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwidGl0bGVcIiksbj10LmdldChcInRpdGxlVGV4dFwiKSxhPXQuZ2V0KFwiY3VzdG9tRGl2XCIpLHM9cihhLGMpLG89cihhLGwpLHU9dC5nZXQoXCJpdGVtc1wiKTt0Ll9jbGVhckN1c3RvbSgpLHMmJmUmJihzLmlubmVySFRNTD1uKSxvJiYodC5zZXQoXCJ0aXRsZVRleHRcIixuKSxpLmVhY2godSxmdW5jdGlvbihlLG4pe3QuYWRkQ3VzdG9tSXRlbShlLG4pfSkpfSxfY2xlYXJDdXN0b206ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcImN1c3RvbURpdlwiKSxlPXIodCxjKSxuPXIodCxsKTtlJiYoZS5pbm5lckhUTUw9XCJcIiksbiYmKG4uaW5uZXJIVE1MPVwiXCIpfSxhZGRDdXN0b21JdGVtOmZ1bmN0aW9uKHQpe3ZhciBlLG4sYT10aGlzLmdldChcImN1c3RvbURpdlwiKSxzPXIoYSxsKSxvPXRoaXMuZ2V0KFwiaXRlbVRwbFwiKTtlPWkuc3Vic3RpdHV0ZShvLHQpLG49aS5jcmVhdGVEb20oZSkscy5hcHBlbmRDaGlsZChuKX0sbW92ZUN1c3RvbTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLmdldChcImN1c3RvbURpdlwiKTtyJiZuLmdldChcImN1c3RvbUZvbGxvd1wiKSYmKHQ9dCxlPWUsZS09aS5nZXRPdXRlckhlaWdodChyKS8yLHIuc3R5bGUubGVmdD10K1wicHhcIixyLnN0eWxlLnRvcD1lK1wicHhcIil9LHNob3c6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcImNyb3NzU2hhcGVYXCIpLGU9dGhpcy5nZXQoXCJjcm9zc1NoYXBlWVwiKSxuPXRoaXMuZ2V0KFwiY3VzdG9tRGl2XCIpLHI9dGhpcy5nZXQoXCJoaWRlSGFuZGxlclwiKTtyJiZjbGVhclRpbWVvdXQociksaC5zdXBlcmNsYXNzLnNob3cuY2FsbCh0aGlzKSxuJiZ0aGlzLmdldChcImN1c3RvbUZvbGxvd1wiKSYmKG4uc3R5bGUudmlzaWJpbGl0eT1cInZpc2libGVcIiksdCYmdC5zaG93KCksZSYmZS5zaG93KCl9LGhpZGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJjdXN0b21EaXZcIiksbj10LmdldChcImNyb3NzU2hhcGVYXCIpLHI9dC5nZXQoXCJjcm9zc1NoYXBlWVwiKSxpPXQuZ2V0KFwiY2FudmFzXCIpLGE9c2V0VGltZW91dChmdW5jdGlvbigpe2UmJnQuZ2V0KFwiY3VzdG9tRm9sbG93XCIpJiYoZS5zdHlsZS52aXNpYmlsaXR5PVwiaGlkZGVuXCIpLHQuc2V0KFwiaGlkZUhhbmRsZXJcIixudWxsKSx0LmdldChcImRlc3Ryb3llZFwiKXx8KGguc3VwZXJjbGFzcy5oaWRlLmNhbGwodCksaS5kcmF3KCkpfSx0LmdldChcImR1cmF0aW9uXCIpKTt0LnNldChcImhpZGVIYW5kbGVyXCIsYSksbiYmbi5oaWRlKCksciYmci5oaWRlKCl9LHJlbW92ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcImNyb3NzU2hhcGVYXCIpLG49dC5nZXQoXCJjcm9zc1NoYXBlWVwiKSxyPXQuZ2V0KFwiY3VzdG9tRGl2XCIpO2UmJmUucmVtb3ZlKCksbiYmbi5yZW1vdmUoKSxoLnN1cGVyY2xhc3MucmVtb3ZlLmNhbGwodGhpcyksciYmci5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHIpfX0pLHQuZXhwb3J0cz1ofSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfXZhciBpPW4oMSksYT1uKDEyKSxzPW4oNDkpLG89YS5Hcm91cEJhc2U7XG5yLkNGRz17aXRlbXM6bnVsbCxpdGVtc0dyb3VwOm51bGwsYmFja1NoYXBlOm51bGwsYmFjazp7cmFkaXVzOjYsZmlsbDpcIiMwMDBcIixmaWxsT3BhY2l0eTouN30scGFkZGluZzpudWxsLGxpbmVIZWlnaHQ6bnVsbCxfcGFkZGluZzpbMTAsMTAsMTAsMTBdLF9saW5lSGVpZ2h0OjIwfSxpLmV4dGVuZChyLG8pLGkuYXVnbWVudChyLHtfaW5pdENmZzpmdW5jdGlvbigpe3RoaXMuZGVlcFNldChcImxpbmVIZWlnaHRcIiksdGhpcy5kZWVwU2V0KFwicGFkZGluZ1wiKSx0aGlzLmRlZXBTZXQoXCJtYXJrZXJcIil9LF9iZWZvcmVSZW5kZXJVSTpmdW5jdGlvbigpe3Iuc3VwZXJjbGFzcy5fYmVmb3JlUmVuZGVyVUkuY2FsbCh0aGlzKTt2YXIgdD10aGlzO3Quc2V0KFwiaXRlbXNHcm91cFwiLHRoaXMuYWRkR3JvdXAoKSl9LF9yZW5kZXJVSTpmdW5jdGlvbigpe3Iuc3VwZXJjbGFzcy5fcmVuZGVyVUkuY2FsbCh0aGlzKTt2YXIgdD10aGlzO3QuZ2V0KFwiaXRlbXNcIikmJih0Ll9yZW5kZXJJdGVtcygpLHQuX3JlbmRlckJhY2soKSl9LF9yZW5kZXJCYWNrOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJwYWRkaW5nXCIpLGU9dGhpcy5nZXQoXCJiYWNrXCIpLG49dGhpcy5nZXQoXCJpdGVtc0dyb3VwXCIpLHI9bi5yZW5kZXJCYWNrKHQsZSk7dGhpcy5zZXQoXCJiYWNrU2hhcGVcIixyKX0sX3JlbmRlckl0ZW1zOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwiaXRlbXNcIik7aS5lYWNoKGUsZnVuY3Rpb24oZSxuKXt0Ll9hZGRJdGVtKGUsbil9KX0sX2FkZEl0ZW06ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5nZXQoXCJpdGVtc0dyb3VwXCIpLGk9bi5nZXQoXCJsaW5lSGVpZ2h0XCIpLGE9bi5nZXQoXCJwYWRkaW5nXCIpLG89ZSppK2FbMF0rODtyLmFkZEdyb3VwKHMse3g6YVszXSx5Om8saXRlbXM6dH0pfSxzZXRJdGVtczpmdW5jdGlvbih0KXt2YXIgZT10aGlzO2UuY2xlYXJJdGVtcygpLGUuc2V0KFwiaXRlbXNcIix0KSxlLl9yZW5kZXJJdGVtcygpLGUuX3JlbmRlckJhY2soKX0sY2xlYXJJdGVtczpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcIml0ZW1zR3JvdXBcIik7ZSYmZS5jbGVhcigpfX0pLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUpe1widXNlIHN0cmljdFwiO3ZhciBuPXtsaW5lYXI6ZnVuY3Rpb24odCl7cmV0dXJuIHR9LGVhc2VJblF1YWQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQqdH0sZWFzZU91dFF1YWQ6ZnVuY3Rpb24odCl7cmV0dXJuLTEqdCoodC0yKX0sZWFzZUluT3V0UXVhZDpmdW5jdGlvbih0KXtyZXR1cm4odC89LjUpPDE/LjUqdCp0Oi0uNSooLS10Kih0LTIpLTEpfSxlYXNlSW5DdWJpYzpmdW5jdGlvbih0KXtyZXR1cm4gdCp0KnR9LGVhc2VPdXRDdWJpYzpmdW5jdGlvbih0KXtyZXR1cm4gMSooKHQ9dC8xLTEpKnQqdCsxKX0sZWFzZUluT3V0Q3ViaWM6ZnVuY3Rpb24odCl7cmV0dXJuKHQvPS41KTwxPy41KnQqdCp0Oi41KigodC09MikqdCp0KzIpfSxlYXNlSW5RdWFydDpmdW5jdGlvbih0KXtyZXR1cm4gdCp0KnQqdH0sZWFzZU91dFF1YXJ0OmZ1bmN0aW9uKHQpe3JldHVybi0xKigodD10LzEtMSkqdCp0KnQtMSl9LGVhc2VJbk91dFF1YXJ0OmZ1bmN0aW9uKHQpe3JldHVybih0Lz0uNSk8MT8uNSp0KnQqdCp0Oi0uNSooKHQtPTIpKnQqdCp0LTIpfSxlYXNlSW5RdWludDpmdW5jdGlvbih0KXtyZXR1cm4gMSoodC89MSkqdCp0KnQqdH0sZWFzZU91dFF1aW50OmZ1bmN0aW9uKHQpe3JldHVybiAxKigodD10LzEtMSkqdCp0KnQqdCsxKX0sZWFzZUluT3V0UXVpbnQ6ZnVuY3Rpb24odCl7cmV0dXJuKHQvPS41KTwxPy41KnQqdCp0KnQqdDouNSooKHQtPTIpKnQqdCp0KnQrMil9LGVhc2VJblNpbmU6ZnVuY3Rpb24odCl7cmV0dXJuLTEqTWF0aC5jb3ModC8xKihNYXRoLlBJLzIpKSsxfSxlYXNlT3V0U2luZTpmdW5jdGlvbih0KXtyZXR1cm4gMSpNYXRoLnNpbih0LzEqKE1hdGguUEkvMikpfSxlYXNlSW5PdXRTaW5lOmZ1bmN0aW9uKHQpe3JldHVybi0uNSooTWF0aC5jb3MoTWF0aC5QSSp0LzEpLTEpfSxlYXNlSW5FeHBvOmZ1bmN0aW9uKHQpe3JldHVybiAwPT09dD8xOjEqTWF0aC5wb3coMiwxMCoodC8xLTEpKX0sZWFzZU91dEV4cG86ZnVuY3Rpb24odCl7cmV0dXJuIDE9PT10PzE6MSooLU1hdGgucG93KDIsLTEwKnQvMSkrMSl9LGVhc2VJbk91dEV4cG86ZnVuY3Rpb24odCl7cmV0dXJuIDA9PT10PzA6MT09PXQ/MToodC89LjUpPDE/LjUqTWF0aC5wb3coMiwxMCoodC0xKSk6LjUqKC1NYXRoLnBvdygyLC0xMCotLXQpKzIpfSxlYXNlSW5DaXJjOmZ1bmN0aW9uKHQpe3JldHVybiB0Pj0xP3Q6LTEqKE1hdGguc3FydCgxLSh0Lz0xKSp0KS0xKX0sZWFzZU91dENpcmM6ZnVuY3Rpb24odCl7cmV0dXJuIDEqTWF0aC5zcXJ0KDEtKHQ9dC8xLTEpKnQpfSxlYXNlSW5PdXRDaXJjOmZ1bmN0aW9uKHQpe3JldHVybih0Lz0uNSk8MT8tLjUqKE1hdGguc3FydCgxLXQqdCktMSk6LjUqKE1hdGguc3FydCgxLSh0LT0yKSp0KSsxKX0sZWFzZUluRWxhc3RpYzpmdW5jdGlvbih0KXt2YXIgZT0xLjcwMTU4LG49MCxyPTE7cmV0dXJuIDA9PT10PzA6MT09PSh0Lz0xKT8xOihufHwobj0uMykscjxNYXRoLmFicygxKT8ocj0xLGU9bi80KTplPW4vKDIqTWF0aC5QSSkqTWF0aC5hc2luKDEvciksLShyKk1hdGgucG93KDIsMTAqKHQtPTEpKSpNYXRoLnNpbigoMSp0LWUpKigyKk1hdGguUEkpL24pKSl9LGVhc2VPdXRFbGFzdGljOmZ1bmN0aW9uKHQpe3ZhciBlPTEuNzAxNTgsbj0wLHI9MTtyZXR1cm4gMD09PXQ/MDoxPT09KHQvPTEpPzE6KG58fChuPS4zKSxyPE1hdGguYWJzKDEpPyhyPTEsZT1uLzQpOmU9bi8oMipNYXRoLlBJKSpNYXRoLmFzaW4oMS9yKSxyKk1hdGgucG93KDIsLTEwKnQpKk1hdGguc2luKCgxKnQtZSkqKDIqTWF0aC5QSSkvbikrMSl9LGVhc2VJbk91dEVsYXN0aWM6ZnVuY3Rpb24odCl7dmFyIGU9MS43MDE1OCxuPTAscj0xO3JldHVybiAwPT09dD8wOjI9PT0odC89LjUpPzE6KG58fChuPTEqKC4zKjEuNSkpLHI8TWF0aC5hYnMoMSk/KHI9MSxlPW4vNCk6ZT1uLygyKk1hdGguUEkpKk1hdGguYXNpbigxL3IpLHQ8MT8tLjUqKHIqTWF0aC5wb3coMiwxMCoodC09MSkpKk1hdGguc2luKCgxKnQtZSkqKDIqTWF0aC5QSSkvbikpOnIqTWF0aC5wb3coMiwtMTAqKHQtPTEpKSpNYXRoLnNpbigoMSp0LWUpKigyKk1hdGguUEkpL24pKi41KzEpfSxlYXNlSW5CYWNrOmZ1bmN0aW9uKHQpe3ZhciBlPTEuNzAxNTg7cmV0dXJuIDEqKHQvPTEpKnQqKChlKzEpKnQtZSl9LGVhc2VPdXRCYWNrOmZ1bmN0aW9uKHQpe3ZhciBlPTEuNzAxNTg7cmV0dXJuIDEqKCh0PXQvMS0xKSp0KigoZSsxKSp0K2UpKzEpfSxlYXNlSW5PdXRCYWNrOmZ1bmN0aW9uKHQpe3ZhciBlPTEuNzAxNTg7cmV0dXJuKHQvPS41KTwxPy41Kih0KnQqKCgoZSo9MS41MjUpKzEpKnQtZSkpOi41KigodC09MikqdCooKChlKj0xLjUyNSkrMSkqdCtlKSsyKX0sZWFzZUluQm91bmNlOmZ1bmN0aW9uKHQpe3JldHVybiAxLW4uZWFzZU91dEJvdW5jZSgxLXQpfSxlYXNlT3V0Qm91bmNlOmZ1bmN0aW9uKHQpe3JldHVybih0Lz0xKTwxLzIuNzU/MSooNy41NjI1KnQqdCk6dDwyLzIuNzU/MSooNy41NjI1Kih0LT0xLjUvMi43NSkqdCsuNzUpOnQ8Mi41LzIuNzU/MSooNy41NjI1Kih0LT0yLjI1LzIuNzUpKnQrLjkzNzUpOjEqKDcuNTYyNSoodC09Mi42MjUvMi43NSkqdCsuOTg0Mzc1KX0sZWFzZUluT3V0Qm91bmNlOmZ1bmN0aW9uKHQpe3JldHVybiB0PC41Py41Km4uZWFzZUluQm91bmNlKDIqdCk6LjUqbi5lYXNlT3V0Qm91bmNlKDIqdC0xKSsuNX19O3QuZXhwb3J0cz1ufSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big5KSxpPW4oNTIpLGE9ZnVuY3Rpb24oKXt9O3IuYXVnbWVudChhLHtmaXJlOmZ1bmN0aW9uKHQsZSl7dmFyIG49bmV3IGkodCk7ci5lYWNoKGUsZnVuY3Rpb24odCxlKXtuW2VdPXR9KSx0aGlzLnRyaWdnZXIobil9LGdldENlbnRlcjpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0QkJCb3goKTtyZXR1cm57eDp0Lm1pblgrdC53aWR0aC8yLHk6dC5taW5ZK3QuaGVpZ2h0LzJ9fSxnZXRXaWR0aDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldEJCQm94KCkud2lkdGh9LGdldEhlaWdodDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldEJCQm94KCkuaGVpZ2h0fSxpbml0OmZ1bmN0aW9uKCl7dGhpcy5zZXQoXCJhbmltYWJsZVwiLCEwKSx0aGlzLnNldChcImFuaW1Db3VudFwiLDApLHRoaXMudHJhbnNmb3JtQnlBdHRyKCl9LGRlZXBTZXQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXQoXCJfXCIrdCksbj10aGlzLmRlZXBHZXQodCk7dGhpcy5zZXQodCxyLm1lcmdlKGUsbikpfSxkZWVwR2V0OmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLmdldCh0KSxuPXRoaXMuZ2V0UGFyZW50KCk7bjspe2lmKGUpcmV0dXJuIGU7ZT1uLmdldCh0KSxuPW4uZ2V0UGFyZW50KCl9fSxnZXRDYW52YXNOb2RlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJjYW52YXNcIik7cmV0dXJuIHQuZ2V0KFwiZWxcIil9LHRyYW5zZm9ybUJ5QXR0cjpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwiYXR0cnNcIik7cmV0dXJuIHQmJnQucm90YXRlJiZ0aGlzLnJvdGF0ZUF0U3RhcnQodC5yb3RhdGUpLHRoaXN9LHJvdGF0ZUF0U3RhcnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5hdHRyKFwieFwiKSxuPXRoaXMuYXR0cihcInlcIik7dGhpcy50cmFuc2Zvcm0oW1tcInRcIiwtZSwtbl0sW1wiclwiLHRdLFtcInRcIixlLG5dXSl9LG1vdmU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5nZXQoXCJ4XCIpfHwwLGk9bi5nZXQoXCJ5XCIpfHwwO24udHJhbnNsYXRlKHQtcixlLWkpLG4uc2V0KFwieFwiLHQpLG4uc2V0KFwieVwiLGUpfSxhbmltYXRlOmZ1bmN0aW9uKHQsZSxuLGkpe3RoaXMuYWRkQW5pbUNvdW50KCksci5hbmltYXRlKHRoaXMsdCxlLG4saSl9LHN0b3BBbmltYXRlOmZ1bmN0aW9uKCl7dGhpcy5zZXQoXCJhbmltYWJsZVwiLCExKX0sYWRkQW5pbUNvdW50OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJhbmltQ291bnRcIik7dDwxZTQ/dGhpcy5zZXQoXCJhbmltQ291bnRcIiwrK3QpOnRoaXMuc2V0KFwiYW5pbUNvdW50XCIsMCl9LGF0dHI6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO2lmKDA9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBuLl9fYXR0cnM7aWYoci5pc09iamVjdCh0KSlyZXR1cm4gci5hZGFwQXR0cnModCksci5lYWNoKHQsZnVuY3Rpb24odCxlKXtuLl9zZXRBdHRyKGUsdCl9KSxuLl9fYWZ0ZXJTZXRBdHRyQWxsJiZuLl9fYWZ0ZXJTZXRBdHRyQWxsKHQpLG47aWYoMj09PWFyZ3VtZW50cy5sZW5ndGgpe2lmKG4uX3NldEF0dHIodCxlKSE9PSExKXt2YXIgaT1yLmFkYXBBdHRyKHQsZSk7dD1pLm5hbWUsZT1pLnZhbHVlO3ZhciBhPVwiX19hZnRlclNldEF0dHJcIityLnVjZmlyc3QodCk7blthXSYmblthXShlKX1yZXR1cm4gbn1yZXR1cm4gbi5fZ2V0QXR0cih0KX19KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oOSksaT1uKDI4KSxhPW4oNzApLHM9aS5HLG89ZnVuY3Rpb24oKXt9O3IuYXVnbWVudChvLHtmaW5kQWxsQnk6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0KFwiY2hpbGRyZW5cIiksaT1bXSxhPVtdO3JldHVybiByLmVhY2gobixmdW5jdGlvbihlKXtpZih0KGUpJiZpLnB1c2goZSksZS5maW5kQnkpe2E9ZS5maW5kQWxsQnkodCk7Zm9yKHZhciBuPTA7bjxhLmxlbmd0aDtuKyspaS5wdXNoKGFbbl0pfX0pLDAhPT1pLmxlbmd0aCYmaX0saXNDaGlsZDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldChcImNhbnZhc1wiKSxuPWUuZ2V0KFwiY2hpbGRyZW5cIik7cmV0dXJuIG4uaW5kZXhPZih0KSE9PS0xfSxnZXRGaWx0ZXJDaGlsZDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldChcImNoaWxkcmVuXCIpLG49W107cmV0dXJuIHIuZWFjaChlLGZ1bmN0aW9uKGUpe3QhPT1lJiZuLnB1c2goZSl9KSxufSxnZXRDaGlsZEF0OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0KFwiY2hpbGRyZW5cIik7cmV0dXJuIGVbdF19LGdldEZpcnN0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJjaGlsZHJlblwiKTtyZXR1cm4gdFswXX0sZ2V0TGFzdDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwiY2hpbGRyZW5cIik7cmV0dXJuIHRbdC5sZW5ndGgtMV19LGFkZFNoYXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG4saSxhPXRoaXMuZ2V0KFwiY2FudmFzXCIpO3JldHVybiBlPXIubWl4KHt9LGUpLGU/KGUudHlwZT10LHQ9ci51cHBlckZpcnN0KHQpLGUuYXR0cnMmJihpPWUuYXR0cnMsXCJUZXh0XCI9PT10JiYoaS5mb250RmFtaWx5PWkuZm9udEZhbWlseT9pLmZvbnRGYW1pbHk6YS5nZXQoXCJmb250RmFtaWx5XCIpKSksZS5jYW52YXM9YSxlLmZhdGhlcj10aGlzLG49bmV3IHNbdF0oZSkpOm49bmV3IHNbdF0sdGhpcy5hZGQobiksbn0sYWRkR3JvdXA6ZnVuY3Rpb24odCxlKXt2YXIgbixpPXRoaXMuZ2V0KFwiY2FudmFzXCIpO2lmKGU9ci5taXgoe30sZSksci5pc0Z1bmN0aW9uKHQpKWU/KGUuY2FudmFzPWksZS5mYXRoZXI9dGhpcyxuPW5ldyB0KGUpKTpuPW5ldyB0KHtjYW52YXM6aSxmYXRoZXI6dGhpc30pLHRoaXMuYWRkKG4pO2Vsc2UgaWYoci5pc09iamVjdCh0KSl0LmNhbnZhcz1pLG49bmV3IGEodCksdGhpcy5hZGQobik7ZWxzZXtpZih2b2lkIDAhPT10KXJldHVybiExO249bmV3IGEsdGhpcy5hZGQobil9cmV0dXJuIG59LHJlbmRlckJhY2s6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmdldChcImJhY2tTaGFwZVwiKSxpPXRoaXMuZ2V0QkJCb3goKSxhPXRoaXMuZ2V0UGFyZW50KCk7cmV0dXJuIHIubWl4KGUse3g6aS5taW5YLXRbM10seTppLm1pblktdFswXSx3aWR0aDppLndpZHRoK3RbMV0rdFszXSxoZWlnaHQ6aS5oZWlnaHQrdFswXSt0WzJdfSksbj9uLmF0dHIoZSk6bj1hLmFkZFNoYXBlKFwiUmVjdFwiLHt6SW5kZXg6LTEsYXR0cnM6ZX0pLHRoaXMuc2V0KFwiYmFja1NoYXBlXCIsbiksYS5zb3J0KCksbn0sZmluZEJ5VHlwZTpmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMuZ2V0KFwiY2hpbGRyZW5cIik7cmV0dXJuIHIuZWFjaChuLGZ1bmN0aW9uKG4pe24uZ2V0KFwidHlwZVwiKT09PXQmJihlPW4pfSksZX19KSx0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMjgpLGk9big5KSxhPXIuRyxzPWZ1bmN0aW9uKHQpe3Muc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3MuU3ltYm9scz17Y2lyY2xlOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm5bW1wiTVwiLHQsZS1uXSxbXCJhXCIsbixuLDAsMSwxLDAsMipuXSxbXCJhXCIsbixuLDAsMSwxLDAsLTIqbl0sW1wielwiXV19LHNxdWFyZTpmdW5jdGlvbih0LGUsbil7cmV0dXJuW1tcIk1cIix0LW4sZS1uXSxbXCJMXCIsdCtuLGUtbl0sW1wiTFwiLHQrbixlK25dLFtcIkxcIix0LW4sZStuXSxbXCJ6XCJdXX0sZGlhbW9uZDpmdW5jdGlvbih0LGUsbil7cmV0dXJuW1tcIk1cIix0LW4sZV0sW1wiTFwiLHQsZS1uXSxbXCJMXCIsdCtuLGVdLFtcIkxcIix0LGUrbl0sW1wielwiXV19LHRyaWFuZ2xlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uLy45NjYsaT1uO3JldHVybltbXCJNXCIsdCxlLW5dLFtcIkxcIix0K3IsZStpXSxbXCJMXCIsdC1yLGUraV0sW1wielwiXV19LFwidHJpYW5nbGUtZG93blwiOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uLy45NjYsaT1uO3JldHVybltbXCJNXCIsdCxlK25dLFtcIkxcIix0K3IsZS1pXSxbXCJMXCIsdC1yLGUtaV0sW1wielwiXV19fSxzLkFUVFJTPXtwYXRoOm51bGwsbGluZVdpZHRoOjF9LGkuZXh0ZW5kKHMsYS5QYXRoKSxpLmF1Z21lbnQocyx7Z2V0RGVmYXVsdEF0dHJzOmZ1bmN0aW9uKCl7cy5zdXBlcmNsYXNzLmdldERlZmF1bHRBdHRycy5jYWxsKHRoaXMpO3ZhciB0LGUsbj10aGlzLmdldChcImF0dHJzXCIpLHI9bi54LGE9bi55LG89bi5yYWRpdXM/bi5yYWRpdXM6bi5yO3JldHVybiBlPWkuaXNGdW5jdGlvbihuLnN5bWJvbCk/bi5zeW1ib2w6cy5TeW1ib2xzW24uc3ltYm9sXSxlJiYodD17cGF0aDplKHIsYSxvKX0pLGkubWl4KHMuQVRUUlMsdCl9fSksdC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9e3RyYW5zZm9ybTpmdW5jdGlvbih0LGUpe3JldHVybiB0PXQuY2xvbmUoKSxyLmVhY2goZSxmdW5jdGlvbihlKXtzd2l0Y2goZVswXSl7Y2FzZVwidFwiOnQudHJhbnNsYXRlKGVbMV0sZVsyXSk7YnJlYWs7Y2FzZVwic1wiOnQuc2NhbGUoZVsxXSxlWzJdKTticmVhaztjYXNlXCJyXCI6dC5yb3RhdGUoZVsxXSk7YnJlYWs7Y2FzZVwibVwiOnQubXVsdGlwbHkoZVsxXSk7YnJlYWs7ZGVmYXVsdDpyZXR1cm4hMX19KSx0fSxpc01hdHJpeDM6ZnVuY3Rpb24odCl7cmV0dXJuXCJtYXRyaXgzXCI9PT10LnR5cGV9LHNjYWxlOmZ1bmN0aW9uKHQsZSxuLHIsaSl7cmV0dXJuIHQ9dC5jbG9uZSgpLHQudHJhbnNsYXRlKC0xKnIsLTEqaSksdC5zY2FsZShlLG4pLHQudHJhbnNsYXRlKHIsaSksdH0scm90YXRlOmZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiB0PXQuY2xvbmUoKSxlPXBhcnNlRmxvYXQoZSkvMTgwKk1hdGguUEksdC50cmFuc2xhdGUoLTEqbiwtMSpyKSx0LnJvdGF0ZShlKSx0LnRyYW5zbGF0ZShuLHIpLHR9fTt0LmV4cG9ydHM9aX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCxlKXtmb3IodmFyIG49W10scj0wLGk9dC5sZW5ndGg7aS0yKiFlPnI7cis9Mil7dmFyIGE9W3t4Oit0W3ItMl0seTordFtyLTFdfSx7eDordFtyXSx5Oit0W3IrMV19LHt4Oit0W3IrMl0seTordFtyKzNdfSx7eDordFtyKzRdLHk6K3Rbcis1XX1dO2U/cj9pLTQ9PT1yP2FbM109e3g6K3RbMF0seTordFsxXX06aS0yPT09ciYmKGFbMl09e3g6K3RbMF0seTordFsxXX0sYVszXT17eDordFsyXSx5Oit0WzNdfSk6YVswXT17eDordFtpLTJdLHk6K3RbaS0xXX06aS00PT09cj9hWzNdPWFbMl06cnx8KGFbMF09e3g6K3Rbcl0seTordFtyKzFdfSksbi5wdXNoKFtcIkNcIiwoLWFbMF0ueCs2KmFbMV0ueCthWzJdLngpLzYsKC1hWzBdLnkrNiphWzFdLnkrYVsyXS55KS82LChhWzFdLngrNiphWzJdLngtYVszXS54KS82LChhWzFdLnkrNiphWzJdLnktYVszXS55KS82LGFbMl0ueCxhWzJdLnldKX1yZXR1cm4gbn12YXIgaT1uKDEpLGE9XCJjb25jYXRcIixzPVN0cmluZy5wcm90b3R5cGUudG9VcHBlckNhc2Usbz0vKC0/XFxkKlxcLj9cXGQqKD86ZVtcXC0rXT9cXGQrKT8pW1xceDA5XFx4MGFcXHgwYlxceDBjXFx4MGRcXHgyMFxceGEwXFx1MTY4MFxcdTE4MGVcXHUyMDAwXFx1MjAwMVxcdTIwMDJcXHUyMDAzXFx1MjAwNFxcdTIwMDVcXHUyMDA2XFx1MjAwN1xcdTIwMDhcXHUyMDA5XFx1MjAwYVxcdTIwMmZcXHUyMDVmXFx1MzAwMFxcdTIwMjhcXHUyMDI5XSosP1tcXHgwOVxceDBhXFx4MGJcXHgwY1xceDBkXFx4MjBcXHhhMFxcdTE2ODBcXHUxODBlXFx1MjAwMFxcdTIwMDFcXHUyMDAyXFx1MjAwM1xcdTIwMDRcXHUyMDA1XFx1MjAwNlxcdTIwMDdcXHUyMDA4XFx1MjAwOVxcdTIwMGFcXHUyMDJmXFx1MjA1ZlxcdTMwMDBcXHUyMDI4XFx1MjAyOV0qL2dpLHU9LyhbYWNobG1ycXN0dnpdKVtcXHgwOVxceDBhXFx4MGJcXHgwY1xceDBkXFx4MjBcXHhhMFxcdTE2ODBcXHUxODBlXFx1MjAwMFxcdTIwMDFcXHUyMDAyXFx1MjAwM1xcdTIwMDRcXHUyMDA1XFx1MjAwNlxcdTIwMDdcXHUyMDA4XFx1MjAwOVxcdTIwMGFcXHUyMDJmXFx1MjA1ZlxcdTMwMDBcXHUyMDI4XFx1MjAyOSxdKigoLT9cXGQqXFwuP1xcZCooPzplW1xcLStdP1xcZCspP1tcXHgwOVxceDBhXFx4MGJcXHgwY1xceDBkXFx4MjBcXHhhMFxcdTE2ODBcXHUxODBlXFx1MjAwMFxcdTIwMDFcXHUyMDAyXFx1MjAwM1xcdTIwMDRcXHUyMDA1XFx1MjAwNlxcdTIwMDdcXHUyMDA4XFx1MjAwOVxcdTIwMGFcXHUyMDJmXFx1MjA1ZlxcdTMwMDBcXHUyMDI4XFx1MjAyOV0qLD9bXFx4MDlcXHgwYVxceDBiXFx4MGNcXHgwZFxceDIwXFx4YTBcXHUxNjgwXFx1MTgwZVxcdTIwMDBcXHUyMDAxXFx1MjAwMlxcdTIwMDNcXHUyMDA0XFx1MjAwNVxcdTIwMDZcXHUyMDA3XFx1MjAwOFxcdTIwMDlcXHUyMDBhXFx1MjAyZlxcdTIwNWZcXHUzMDAwXFx1MjAyOFxcdTIwMjldKikrKS9naSxjPXtwYXRoMkFic29sdXRlOmZ1bmN0aW9uKHQpe2lmKGkuaXNBcnJheSh0KSYmaS5pc0FycmF5KHQmJnRbMF0pfHwodD1jLnBhcnNlUGF0aFN0cmluZyh0KSksIXR8fCF0Lmxlbmd0aClyZXR1cm5bW1wiTVwiLDAsMF1dO3ZhciBlPVtdLG49MCxvPTAsdT0wLGw9MCxoPTA7XCJNXCI9PT10WzBdWzBdJiYobj0rdFswXVsxXSxvPSt0WzBdWzJdLHU9bixsPW8saCsrLGVbMF09W1wiTVwiLG4sb10pO2Zvcih2YXIgZixnLHA9Mz09PXQubGVuZ3RoJiZcIk1cIj09PXRbMF1bMF0mJlwiUlwiPT09dFsxXVswXS50b1VwcGVyQ2FzZSgpJiZcIlpcIj09PXRbMl1bMF0udG9VcHBlckNhc2UoKSx2PWgsZD10Lmxlbmd0aDt2PGQ7disrKXtlLnB1c2goZj1bXSksZz10W3ZdO3ZhciB4LG0seTtpZihnWzBdIT09cy5jYWxsKGdbMF0pKXN3aXRjaChmWzBdPXMuY2FsbChnWzBdKSxmWzBdKXtjYXNlXCJBXCI6ZlsxXT1nWzFdLGZbMl09Z1syXSxmWzNdPWdbM10sZls0XT1nWzRdLGZbNV09Z1s1XSxmWzZdPSsoZ1s2XStuKSxmWzddPSsoZ1s3XStvKTticmVhaztjYXNlXCJWXCI6ZlsxXT0rZ1sxXStvO2JyZWFrO2Nhc2VcIkhcIjpmWzFdPStnWzFdK247YnJlYWs7Y2FzZVwiUlwiOmZvcih4PVtuLG9dW2FdKGcuc2xpY2UoMSkpLG09Mix5PXgubGVuZ3RoO208eTttKyspeFttXT0reFttXStuLHhbKyttXT0reFttXStvO2UucG9wKCksZT1lW2FdKHIoeCxwKSk7YnJlYWs7Y2FzZVwiTVwiOmZvcih1PStnWzFdK24sbD0rZ1syXStvLG09MSx5PWcubGVuZ3RoO208eTttKyspZlttXT0rZ1ttXSsobSUyP246byk7YnJlYWs7ZGVmYXVsdDpmb3IobT0xLHk9Zy5sZW5ndGg7bTx5O20rKylmW21dPStnW21dKyhtJTI/bjpvKX1lbHNlIGlmKFwiUlwiPT09Z1swXSl4PVtuLG9dW2FdKGcuc2xpY2UoMSkpLGUucG9wKCksZT1lW2FdKHIoeCxwKSksZj1bXCJSXCJdW2FdKGcuc2xpY2UoLTIpKTtlbHNlIGZvcih2YXIgXz0wLFM9Zy5sZW5ndGg7XzxTO18rKylmW19dPWdbX107c3dpdGNoKGZbMF0pe2Nhc2VcIlpcIjpuPXUsbz1sO2JyZWFrO2Nhc2VcIkhcIjpuPWZbMV07YnJlYWs7Y2FzZVwiVlwiOm89ZlsxXTticmVhaztjYXNlXCJNXCI6dT1mW2YubGVuZ3RoLTJdLGw9ZltmLmxlbmd0aC0xXSxuPWZbZi5sZW5ndGgtMl0sbz1mW2YubGVuZ3RoLTFdO2JyZWFrO2RlZmF1bHQ6bj1mW2YubGVuZ3RoLTJdLG89ZltmLmxlbmd0aC0xXX19cmV0dXJuIGV9LHBhcnNlUGF0aFN0cmluZzpmdW5jdGlvbih0KXtpZighdClyZXR1cm4gbnVsbDt2YXIgZT17YTo3LGM6NixoOjEsbDoyLG06MixyOjQscTo0LHM6NCx0OjIsdjoxLHo6MH0sbj1bXTtyZXR1cm4gaS5pc0FycmF5KHQpJiZpLmlzQXJyYXkodFswXSkmJihuPXQuc2xpY2UoMCkpLCFuLmxlbmd0aCYmaS5pc1N0cmluZyh0KSYmdC5yZXBsYWNlKHUsZnVuY3Rpb24odCxyLGkpe3ZhciBzPVtdLHU9ci50b0xvd2VyQ2FzZSgpO2lmKGkucmVwbGFjZShvLGZ1bmN0aW9uKHQsZSl7ZSYmcy5wdXNoKCtlKX0pLFwibVwiPT09dSYmcy5sZW5ndGg+MiYmKG4ucHVzaChbcl1bYV0ocy5zcGxpY2UoMCwyKSkpLHU9XCJsXCIscj1cIm1cIj09PXI/XCJsXCI6XCJMXCIpLFwiclwiPT09dSluLnB1c2goW3JdW2FdKHMpKTtlbHNlIGZvcig7cy5sZW5ndGg+PWVbdV0mJihuLnB1c2goW3JdW2FdKHMuc3BsaWNlKDAsZVt1XSkpKSxlW3VdKTspO30pLG59LHBhcnNlUGF0aEFycmF5OmZ1bmN0aW9uKHQpe2lmKGkuaXNBcnJheSh0KSl7dmFyIGU9aS5tYXAodCxmdW5jdGlvbih0KXt2YXIgZT10LmpvaW4oXCIgXCIpO3JldHVybiBlLnJlcGxhY2UoLyhbYS16LEEtWl0pXFxzKy8sXCIkMVwiKX0pO3JldHVybiBlLmpvaW4oXCIgXCIpfXJldHVybiB0fX07dC5leHBvcnRzPWN9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3RoaXMuc3BhY2U9e30saS5pc1N0cmluZyh0KT90aGlzLnNldFN0eWxlKHQpOnQgaW5zdGFuY2VvZiByJiZ0aGlzLmNvcHkodCl9dmFyIGk9bigxKSxhPShuKDQpLG4oMTUxKSkscz1uKDE1Miksbz1uKDE1MCksdT17aGV4Oi9eIyhbQS1GYS1mMC05XXszfXxbQS1GYS1mMC05XXs2fSkkLyxzcGFjZTovXigoPzpyZ2J8aHNsKWE/KVxcKFxccyooW15cXCldKilcXCkkLyxyZ2JOdW06L14oXFxkKylcXHMqLFxccyooXFxkKylcXHMqLFxccyooXFxkKylcXHMqJC8scmdiYU51bTovXihcXGQrKVxccyosXFxzKihcXGQrKVxccyosXFxzKihcXGQrKVxccyosXFxzKihbMC05XSpcXC4/WzAtOV0rKVxccyokLyxyZ2JQcmU6L14oXFxkKylcXCVcXHMqLFxccyooXFxkKylcXCVcXHMqLFxccyooXFxkKylcXCVcXHMqJC8scmdiYVByZTovXihcXGQrKVxcJVxccyosXFxzKihcXGQrKVxcJVxccyosXFxzKihcXGQrKVxcJVxccyosXFxzKihbMC05XSpcXC4/WzAtOV0rKVxccyokLyxoc2w6L14oWzAtOV0qXFwuP1swLTldKylcXHMqLFxccyooXFxkKylcXCVcXHMqLFxccyooXFxkKylcXCVcXHMqJC8saHNsYTovXihbMC05XSpcXC4/WzAtOV0rKVxccyosXFxzKihcXGQrKVxcJVxccyosXFxzKihcXGQrKVxcJVxccyosXFxzKihbMC05XSpcXC4/WzAtOV0rKVxccyokL307aS5hdWdtZW50KHIse2dldFR5cGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zcGFjZS50eXBlfSx0b1JHQjpmdW5jdGlvbigpe3ZhciB0PXRoaXMuc3BhY2U7aWYoXCJyZ2JcIiE9PXQudHlwZSl7dmFyIGU9dC50b1JHQigpO3RoaXMuc2V0UkdCKGUucixlLmcsZS5iLGUuYSl9fSx0b0hTTDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuc3BhY2U7aWYoXCJoc2xcIiE9PXQudHlwZSl7dmFyIGU9dC50b0hTTCgpO3RoaXMuc2V0SFNMKGUuaCxlLnMsZS5sLGUuYSl9fSxnZXRSOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudG9SR0IoKSx0aGlzLnNwYWNlLnJ9LGdldEc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50b1JHQigpLHRoaXMuc3BhY2UuZ30sZ2V0QjpmdW5jdGlvbigpe3JldHVybiB0aGlzLnRvUkdCKCksdGhpcy5zcGFjZS5ifSxnZXRIOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudG9IU0woKSx0aGlzLnNwYWNlLmh9LGdldFM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50b0hTTCgpLHRoaXMuc3BhY2Uuc30sZ2V0TDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnRvSFNMKCksdGhpcy5zcGFjZS5sfSxnZXRBOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3BhY2UuYX0sbXVsdGlwbHlBOmZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10P3RoaXM6KHZvaWQgMD09PXRoaXMuc3BhY2UuYSYmKHRoaXMuc3BhY2UuYT0xKSx0aGlzLnNwYWNlLmEqPXQsdGhpcyl9LGdldFJHQlN0eWxlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudG9SR0IoKSx0aGlzLnNwYWNlLmdldFN0eWxlKCl9LGdldFJHQlByZVN0eWxlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudG9SR0IoKSx0aGlzLnNwYWNlLmdldFByZVN0eWxlKCl9LGdldEhTTFN0eWxlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudG9IU0woKSx0aGlzLnNwYWNlLmdldFN0eWxlKCl9LGdldEhleDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnRvUkdCKCksdGhpcy5zcGFjZS5nZXRIZXgoKX0sc2V0UkdCOmZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiB0aGlzLnNwYWNlPW5ldyBzLHRoaXMuc3BhY2Uuc2V0UkdCKHQsZSxuLHIpLHRoaXN9LHNldEhTTDpmdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gdGhpcy5zcGFjZT1uZXcgYSx0aGlzLnNwYWNlLnNldEhTTCh0LGUsbixyKSx0aGlzfSxzZXRIZXg6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuc3BhY2U9bmV3IHMsdD1NYXRoLmZsb29yKHQpLHRoaXMuc3BhY2Uucj0odD4+MTYmMjU1KS8yNTUsdGhpcy5zcGFjZS5nPSh0Pj44JjI1NSkvMjU1LHRoaXMuc3BhY2UuYj0oMjU1JnQpLzI1NSx0aGlzfSxzZXRTdHlsZTpmdW5jdGlvbih0KXt2YXIgZTtpZihlPXUuaGV4LmV4ZWModCkpe3ZhciBuPWVbMV0scj1uLmxlbmd0aDtpZigzPT09cilyZXR1cm4gdGhpcy5zZXRSR0IocGFyc2VJbnQobi5jaGFyQXQoMCkrbi5jaGFyQXQoMCksMTYpLzI1NSxwYXJzZUludChuLmNoYXJBdCgxKStuLmNoYXJBdCgxKSwxNikvMjU1LHBhcnNlSW50KG4uY2hhckF0KDIpK24uY2hhckF0KDIpLDE2KS8yNTUpLHRoaXM7aWYoNj09PXIpcmV0dXJuIHRoaXMuc2V0UkdCKHBhcnNlSW50KG4uY2hhckF0KDApK24uY2hhckF0KDEpLDE2KS8yNTUscGFyc2VJbnQobi5jaGFyQXQoMikrbi5jaGFyQXQoMyksMTYpLzI1NSxwYXJzZUludChuLmNoYXJBdCg0KStuLmNoYXJBdCg1KSwxNikvMjU1KSx0aGlzfWVsc2UgaWYoZT11LnNwYWNlLmV4ZWModCkpe3ZhciBpLGE9ZVsxXSxzPWVbMl07c3dpdGNoKGEpe2Nhc2VcInJnYlwiOmlmKGk9dS5yZ2JOdW0uZXhlYyhzKSlyZXR1cm4gdGhpcy5zZXRSR0IocGFyc2VJbnQoaVsxXSwxMCkvMjU1LHBhcnNlSW50KGlbMl0sMTApLzI1NSxwYXJzZUludChpWzNdLDEwKS8yNTUpLHRoaXM7aWYoaT11LnJnYlByZS5leGVjKHMpKXJldHVybiB0aGlzLnNldFJHQihwYXJzZUludChpWzFdLDEwKS8xMDAscGFyc2VJbnQoaVsyXSwxMCkvMTAwLHBhcnNlSW50KGlbM10sMTApLzEwMCksdGhpczticmVhaztjYXNlXCJyZ2JhXCI6aWYoaT11LnJnYmFOdW0uZXhlYyhzKSlyZXR1cm4gdGhpcy5zZXRSR0IocGFyc2VJbnQoaVsxXSwxMCkvMjU1LHBhcnNlSW50KGlbMl0sMTApLzI1NSxwYXJzZUludChpWzNdLDEwKS8yNTUscGFyc2VGbG9hdChpWzRdKSksdGhpcztpZihpPXUucmdiYVByZS5leGVjKHMpKXJldHVybiB0aGlzLnNldFJHQihwYXJzZUludChpWzFdLDEwKS8xMDAscGFyc2VJbnQoaVsyXSwxMCkvMTAwLHBhcnNlSW50KGlbM10sMTApLzEwMCxwYXJzZUZsb2F0KGlbNF0pKSx0aGlzO2JyZWFrO2Nhc2VcImhzbFwiOmlmKGk9dS5oc2wuZXhlYyhzKSlyZXR1cm4gdGhpcy5zZXRIU0wocGFyc2VJbnQoaVsxXSwxMCkvMzYwLHBhcnNlSW50KGlbMl0sMTApLzEwMCxwYXJzZUludChpWzNdLDEwKS8xMDApLHRoaXM7YnJlYWs7Y2FzZVwiaHNsYVwiOmlmKGk9dS5oc2xhLmV4ZWMocykpcmV0dXJuIHRoaXMuc2V0SFNMKHBhcnNlSW50KGlbMV0sMTApLzM2MCxwYXJzZUludChpWzJdLDEwKS8xMDAscGFyc2VJbnQoaVszXSwxMCkvMTAwLHBhcnNlRmxvYXQoaVs0XSkpLHRoaXN9fWVsc2UgdD10LnRvTG93ZXJDYXNlKCksdm9pZCAwIT09b1t0XT90aGlzLnNldEhleChvW3RdKTp0aGlzLnNldEhleChvLmJsYWNrKX0sY29weTpmdW5jdGlvbih0KXt0aGlzLnNwYWNlPXQuc3BhY2UuY2xvbmUoKX0sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyl9fSksdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPXthbGljZWJsdWU6MTU3OTIzODMsYW50aXF1ZXdoaXRlOjE2NDQ0Mzc1LGFxdWE6NjU1MzUsYXF1YW1hcmluZTo4Mzg4NTY0LGF6dXJlOjE1Nzk0MTc1LGJlaWdlOjE2MTE5MjYwLGJpc3F1ZToxNjc3MDI0NCxibGFjazowLGJsYW5jaGVkYWxtb25kOjE2NzcyMDQ1LGJsdWU6MjU1LGJsdWV2aW9sZXQ6OTA1NTIwMixicm93bjoxMDgyNDIzNCxidXJseXdvb2Q6MTQ1OTYyMzEsY2FkZXRibHVlOjYyNjY1MjgsY2hhcnRyZXVzZTo4Mzg4MzUyLGNob2NvbGF0ZToxMzc4OTQ3MCxjb3JhbDoxNjc0NDI3Mixjb3JuZmxvd2VyYmx1ZTo2NTkxOTgxLGNvcm5zaWxrOjE2Nzc1Mzg4LGNyaW1zb246MTQ0MjMxMDAsY3lhbjo2NTUzNSxkYXJrYmx1ZToxMzksZGFya2N5YW46MzU3MjMsZGFya2dvbGRlbnJvZDoxMjA5MjkzOSxkYXJrZ3JheToxMTExOTAxNyxkYXJrZ3JlZW46MjU2MDAsZGFya2dyZXk6MTExMTkwMTcsZGFya2toYWtpOjEyNDMzMjU5LGRhcmttYWdlbnRhOjkxMDk2NDMsZGFya29saXZlZ3JlZW46NTU5Nzk5OSxkYXJrb3JhbmdlOjE2NzQ3NTIwLGRhcmtvcmNoaWQ6MTAwNDAwMTIsZGFya3JlZDo5MTA5NTA0LGRhcmtzYWxtb246MTUzMDg0MTAsZGFya3NlYWdyZWVuOjk0MTk5MTksZGFya3NsYXRlYmx1ZTo0NzM0MzQ3LGRhcmtzbGF0ZWdyYXk6MzEwMDQ5NSxkYXJrc2xhdGVncmV5OjMxMDA0OTUsZGFya3R1cnF1b2lzZTo1Mjk0NSxkYXJrdmlvbGV0Ojk2OTk1MzksZGVlcHBpbms6MTY3MTY5NDcsZGVlcHNreWJsdWU6NDkxNTEsZGltZ3JheTo2OTA4MjY1LGRpbWdyZXk6NjkwODI2NSxkb2RnZXJibHVlOjIwMDMxOTksZmlyZWJyaWNrOjExNjc0MTQ2LGZsb3JhbHdoaXRlOjE2Nzc1OTIwLGZvcmVzdGdyZWVuOjIyNjM4NDIsZnVjaHNpYToxNjcxMTkzNSxnYWluc2Jvcm86MTQ0NzQ0NjAsZ2hvc3R3aGl0ZToxNjMxNjY3MSxnb2xkOjE2NzY2NzIwLGdvbGRlbnJvZDoxNDMyOTEyMCxncmF5Ojg0MjE1MDQsZ3JlZW46MzI3NjgsZ3JlZW55ZWxsb3c6MTE0MDMwNTUsZ3JleTo4NDIxNTA0LGhvbmV5ZGV3OjE1Nzk0MTYwLGhvdHBpbms6MTY3Mzg3NDAsaW5kaWFucmVkOjEzNDU4NTI0LGluZGlnbzo0OTE1MzMwLGl2b3J5OjE2Nzc3MjAwLGtoYWtpOjE1Nzg3NjYwLGxhdmVuZGVyOjE1MTMyNDEwLGxhdmVuZGVyYmx1c2g6MTY3NzMzNjUsbGF3bmdyZWVuOjgxOTA5NzYsbGVtb25jaGlmZm9uOjE2Nzc1ODg1LGxpZ2h0Ymx1ZToxMTM5MzI1NCxsaWdodGNvcmFsOjE1NzYxNTM2LGxpZ2h0Y3lhbjoxNDc0NTU5OSxsaWdodGdvbGRlbnJvZHllbGxvdzoxNjQ0ODIxMCxsaWdodGdyYXk6MTM4ODIzMjMsbGlnaHRncmVlbjo5NDk4MjU2LGxpZ2h0Z3JleToxMzg4MjMyMyxsaWdodHBpbms6MTY3NTg0NjUsbGlnaHRzYWxtb246MTY3NTI3NjIsbGlnaHRzZWFncmVlbjoyMTQyODkwLGxpZ2h0c2t5Ymx1ZTo4OTAwMzQ2LGxpZ2h0c2xhdGVncmF5Ojc4MzM3NTMsbGlnaHRzbGF0ZWdyZXk6NzgzMzc1MyxsaWdodHN0ZWVsYmx1ZToxMTU4NDczNCxsaWdodHllbGxvdzoxNjc3NzE4NCxsaW1lOjY1MjgwLGxpbWVncmVlbjozMzI5MzMwLGxpbmVuOjE2NDQ1NjcwLG1hZ2VudGE6MTY3MTE5MzUsbWFyb29uOjgzODg2MDgsbWVkaXVtYXF1YW1hcmluZTo2NzM3MzIyLG1lZGl1bWJsdWU6MjA1LG1lZGl1bW9yY2hpZDoxMjIxMTY2NyxtZWRpdW1wdXJwbGU6OTY2MjY4MyxtZWRpdW1zZWFncmVlbjozOTc4MDk3LG1lZGl1bXNsYXRlYmx1ZTo4MDg3NzkwLG1lZGl1bXNwcmluZ2dyZWVuOjY0MTU0LG1lZGl1bXR1cnF1b2lzZTo0NzcyMzAwLG1lZGl1bXZpb2xldHJlZDoxMzA0NzE3MyxtaWRuaWdodGJsdWU6MTY0NDkxMixtaW50Y3JlYW06MTYxMjE4NTAsbWlzdHlyb3NlOjE2NzcwMjczLG1vY2Nhc2luOjE2NzcwMjI5LG5hdmFqb3doaXRlOjE2NzY4Njg1LG5hdnk6MTI4LG9sZGxhY2U6MTY2NDM1NTgsb2xpdmU6ODQyMTM3NixvbGl2ZWRyYWI6NzA0ODczOSxvcmFuZ2U6MTY3NTM5MjAsb3JhbmdlcmVkOjE2NzI5MzQ0LG9yY2hpZDoxNDMxNTczNCxwYWxlZ29sZGVucm9kOjE1NjU3MTMwLHBhbGVncmVlbjoxMDAyNTg4MCxwYWxldHVycXVvaXNlOjExNTI5OTY2LHBhbGV2aW9sZXRyZWQ6MTQzODEyMDMscGFwYXlhd2hpcDoxNjc3MzA3NyxwZWFjaHB1ZmY6MTY3Njc2NzMscGVydToxMzQ2ODk5MSxwaW5rOjE2NzYxMDM1LHBsdW06MTQ1MjQ2MzcscG93ZGVyYmx1ZToxMTU5MTkxMCxwdXJwbGU6ODM4ODczNixyZWQ6MTY3MTE2ODAscm9zeWJyb3duOjEyMzU3NTE5LHJveWFsYmx1ZTo0Mjg2OTQ1LHNhZGRsZWJyb3duOjkxMjcxODcsc2FsbW9uOjE2NDE2ODgyLHNhbmR5YnJvd246MTYwMzI4NjQsc2VhZ3JlZW46MzA1MDMyNyxzZWFzaGVsbDoxNjc3NDYzOCxzaWVubmE6MTA1MDY3OTcsc2lsdmVyOjEyNjMyMjU2LHNreWJsdWU6ODkwMDMzMSxzbGF0ZWJsdWU6Njk3MDA2MSxzbGF0ZWdyYXk6NzM3Mjk0NCxzbGF0ZWdyZXk6NzM3Mjk0NCxzbm93OjE2Nzc1OTMwLHNwcmluZ2dyZWVuOjY1NDA3LHN0ZWVsYmx1ZTo0NjIwOTgwLHRhbjoxMzgwODc4MCx0ZWFsOjMyODk2LHRoaXN0bGU6MTQyMDQ4ODgsdG9tYXRvOjE2NzM3MDk1LHR1cnF1b2lzZTo0MjUxODU2LHZpb2xldDoxNTYzMTA4Nix3aGVhdDoxNjExMzMzMSx3aGl0ZToxNjc3NzIxNSx3aGl0ZXNtb2tlOjE2MTE5Mjg1LHllbGxvdzoxNjc3Njk2MCx5ZWxsb3dncmVlbjoxMDE0NTA3NH19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big0KSxhPWZ1bmN0aW9uKCl7dGhpcy5oPTAsdGhpcy5zPTAsdGhpcy5sPTB9O3IuYXVnbWVudChhLHt0eXBlOlwiaHNsXCIsc2V0SFNMOmZ1bmN0aW9uKHQsZSxuLHIpe3RoaXMuaD1pLm1vZCh0LDEpLHRoaXMucz1pLmNsYW1wKGUsMCwxKSx0aGlzLmw9aS5jbGFtcChuLDAsMSksdm9pZCAwIT09cj90aGlzLmE9aS5jbGFtcChyLDAsMSk6dGhpcy5hPXZvaWQgMH0sdG9SR0I6ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSxuKXtyZXR1cm4gbjwwJiYobis9MSksbj4xJiYobi09MSksbjwxLzY/dCs2KihlLXQpKm46bjwuNT9lOm48Mi8zP3QrNiooZS10KSooMi8zLW4pOnR9cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGU9dGhpcyxuPWUuaCxyPWUucyxpPWUubDtpZigwPT09cilyZXR1cm57cjppLGc6aSxiOmksYTplLmF9O3ZhciBhPWk8PS41P2kqKDErcik6aStyLWkqcixzPTIqaS1hO3JldHVybntyOnQocyxhLG4rMS8zKSxnOnQocyxhLG4pLGI6dChzLGEsbi0xLzMpLGE6ZS5hfX19KCksY2xvbmU6ZnVuY3Rpb24oKXt2YXIgdD1uZXcgYTtyZXR1cm4gdC5oPXRoaXMuaCx0LnM9dGhpcy5zLHQubD10aGlzLmwsdC5hPXRoaXMuYSx0fSxjb3B5OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmg9dC5oLHRoaXMucz10LnMsdGhpcy5sPXQubCx0aGlzLmE9dC5hLHRoaXN9LGdldFN0eWxlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztyZXR1cm4gdm9pZCAwPT09dC5hP1wiaHNsKFwiK01hdGgucm91bmQoMzYwKnQuaCkrXCIsIFwiK01hdGgucm91bmQoMTAwKnQucykrXCIlLCBcIitNYXRoLnJvdW5kKDEwMCp0LmwpK1wiJSlcIjpcImhzbGEoXCIrTWF0aC5yb3VuZCgzNjAqdC5oKStcIiwgXCIrTWF0aC5yb3VuZCgxMDAqdC5zKStcIiUsIFwiK01hdGgucm91bmQoMTAwKnQubCkrXCIlLCBcIit0LmErXCIpXCJ9fSksdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big0KSxhPWZ1bmN0aW9uKCl7dGhpcy5yPTAsdGhpcy5nPTAsdGhpcy5iPTAsdGhpcy50eXBlPVwicmdiXCJ9O3IuYXVnbWVudChhLHt0eXBlOlwicmdiXCIsc2V0UkdCOmZ1bmN0aW9uKHQsZSxuLHIpe3RoaXMucj1pLmNsYW1wKHQsMCwxKSx0aGlzLmc9aS5jbGFtcChlLDAsMSksdGhpcy5iPWkuY2xhbXAobiwwLDEpLHZvaWQgMCE9PXI/dGhpcy5hPWkuY2xhbXAociwwLDEpOnRoaXMuYT12b2lkIDB9LHRvSFNMOmZ1bmN0aW9uKCl7dmFyIHQsZSxuPXRoaXMucixyPXRoaXMuZyxpPXRoaXMuYixhPU1hdGgubWF4KG4scixpKSxzPU1hdGgubWluKG4scixpKSxvPShzK2EpLzI7aWYocz09PWEpdD0wLGU9MDtlbHNle3ZhciB1PWEtcztzd2l0Y2goZT1vPD0uNT91LyhhK3MpOnUvKDItYS1zKSxhKXtjYXNlIG46dD0oci1pKS91KyhyPGk/NjowKTticmVhaztjYXNlIHI6dD0oaS1uKS91KzI7YnJlYWs7Y2FzZSBpOnQ9KG4tcikvdSs0fXQvPTZ9cmV0dXJue2g6dCxzOmUsbDpvLGE6dGhpcy5hfX0sZ2V0SGV4OmZ1bmN0aW9uKCl7dmFyIHQ9MjU1KnRoaXMucjw8MTZeMjU1KnRoaXMuZzw8OF4yNTUqdGhpcy5iPDwwO3JldHVyblwiI1wiKyhcIjAwMDAwMFwiK3QudG9TdHJpbmcoMTYpKS5zbGljZSgtNil9LGdldFN0eWxlOmZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMD09PXRoaXMuYT9cInJnYihcIitNYXRoLnJvdW5kKDI1NSp0aGlzLnIpLnRvU3RyaW5nKCkrXCIsIFwiK01hdGgucm91bmQoMjU1KnRoaXMuZykudG9TdHJpbmcoKStcIiwgXCIrTWF0aC5yb3VuZCgyNTUqdGhpcy5iKS50b1N0cmluZygpK1wiKVwiOlwicmdiYShcIitNYXRoLnJvdW5kKDI1NSp0aGlzLnIpLnRvU3RyaW5nKCkrXCIsIFwiK01hdGgucm91bmQoMjU1KnRoaXMuZykudG9TdHJpbmcoKStcIiwgXCIrTWF0aC5yb3VuZCgyNTUqdGhpcy5iKS50b1N0cmluZygpK1wiLCBcIit0aGlzLmErXCIpXCJ9LGdldFByZVN0eWxlOmZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMD09PXRoaXMuYT9cInJnYihcIitNYXRoLnJvdW5kKDEwMCp0aGlzLnIpLnRvU3RyaW5nKCkrXCIlLCBcIitNYXRoLnJvdW5kKDEwMCp0aGlzLmcpLnRvU3RyaW5nKCkrXCIlLCBcIitNYXRoLnJvdW5kKDEwMCp0aGlzLmIpLnRvU3RyaW5nKCkrXCIlKVwiOlwicmdiYShcIitNYXRoLnJvdW5kKDEwMCp0aGlzLnIpLnRvU3RyaW5nKCkrXCIlLCBcIitNYXRoLnJvdW5kKDEwMCp0aGlzLmcpLnRvU3RyaW5nKCkrXCIlLCBcIitNYXRoLnJvdW5kKDEwMCp0aGlzLmIpLnRvU3RyaW5nKCkrXCIlLCBcIit0aGlzLmErXCIpXCJ9LGNsb25lOmZ1bmN0aW9uKCl7dmFyIHQ9bmV3IGE7cmV0dXJuIHQucj10aGlzLnIsdC5nPXRoaXMuZyx0LmI9dGhpcy5iLHQuYT10aGlzLmEsdH0sY29weTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5yPXQucix0aGlzLmc9dC5nLHRoaXMuYj10LmIsdGhpcy5hPXQuYSx0aGlzfX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIG4odCl7dz10Lmxlbmd0aCx3JiYoYj10WzBdLmxlbmd0aCksdz4xJiZiPjEmJihtPXRbMF1bMF1bMF0sXz10WzBdWzBdWzFdLHk9dFsxXVswXVswXS10WzBdWzBdWzBdLFM9dFswXVsxXVsxXS10WzBdWzBdWzFdKX1mdW5jdGlvbiByKHQsZSl7dmFyIG49aSghMCx0LGUpLHI9aSghMSx0LGUpO3JldHVybltuLHJdfWZ1bmN0aW9uIGkodCxlLG4pe3ZhciByPXcsaT1iLHM9W107dD9pLS06ci0tO2Zvcih2YXIgbz0wO288cjtvKyspe3Nbb109W107Zm9yKHZhciB1PTA7dTxpO3UrKyl7c1tvXVt1XT17fTt2YXIgYyxsO2lmKGM9ZVtvXVt1XVsyXSxsPXQ/ZVtvXVt1KzFdWzJdOmVbbysxXVt1XVsyXSxhKGMsbCkpc1tvXVt1XS5yYXRlPS0yLHNbb11bdV0uaGF2ZV9pc29fcG9pbnQ9ITE7ZWxzZXt2YXIgaD1hKG4sYyksZj1hKG4sbCksZz0obi1jKSoobi1sKTtpZihofHxmKXtoP2MrPU06bCs9TTt2YXIgcD1zW29dW3VdLnJhdGU9KG4tYykvKGwtYyk7cD4wJiZwPDE/c1tvXVt1XS5oYXZlX2lzb19wb2ludD0hMDpzW29dW3VdLmhhdmVfaXNvX3BvaW50PSExfWVsc2UgZz4wPyhzW29dW3VdLnJhdGU9LTIsc1tvXVt1XS5oYXZlX2lzb19wb2ludD0hMSk6ZzwwJiYoc1tvXVt1XS5yYXRlPShuLWMpLyhsLWMpLHNbb11bdV0uaGF2ZV9pc29fcG9pbnQ9ITApfX19cmV0dXJuIHN9ZnVuY3Rpb24gYSh0LGUpe3JldHVybiBNYXRoLmFicyh0LWUpPDFlLTl9ZnVuY3Rpb24gcyh0LGUsbixyKXt2YXIgaT0wLGE9MCxzPWMoKSx1PWMoKTtmb3IoaT0wO2k8dy0xO2krKyllW2ldWzBdLmhhdmVfaXNvX3BvaW50JiYocz1jKGksLTEsITEpLHU9YyhpLDAsITEpLG8ocyx1LG4scix0LGUpKTtmb3IoYT0wO2E8Yi0xO2ErKyl0W3ctMV1bYV0uaGF2ZV9pc29fcG9pbnQmJihzPWModyxhLCEwKSx1PWMody0xLGEsITApLG8ocyx1LG4scix0LGUpKTtmb3IoaT0wO2k8dy0xO2krKyllW2ldW2ItMV0uaGF2ZV9pc29fcG9pbnQmJihzPWMoaSxiLCExKSx1PWMoaSxiLTEsITEpLG8ocyx1LG4scix0LGUpKTtmb3IoYT0wO2E8Yi0xO2ErKyl0WzBdW2FdLmhhdmVfaXNvX3BvaW50JiYocz1jKC0xLGEsITApLHU9YygwLGEsITApLG8ocyx1LG4scix0LGUpKX1mdW5jdGlvbiBvKHQsZSxuLHIsaSxhKXt2YXIgcz0hMSxvPXt2YWx1ZTpuLHBhdGg6W119O2ZvcihoKGUsaSxhKSxvLnBhdGgucHVzaCh1KGUsaSxhKSk7IXMmJmYoZSx0LGksYSxvKTspcz0hZS5yb3cmJmUuaXNIb3Jpem9ufHwhZS5jb2wmJiFlLmlzSG9yaXpvbnx8ZS5yb3c9PXctMXx8ZS5jb2w9PWItMTtyLnB1c2gobyl9ZnVuY3Rpb24gdSh0LGUsbil7dmFyIHI9dC5yb3csaT10LmNvbCxhPXQuaXNIb3Jpem9uLHM9bStyKnksbz1fK2kqUztyZXR1cm4gYT9vKz1lW3JdW2ldLnJhdGUqUzpzKz1uW3JdW2ldLnJhdGUqeSxbcyxvXX1mdW5jdGlvbiBjKHQsZSxuKXtyZXR1cm57cm93OnR8fDAsY29sOmV8fDAsaXNIb3Jpem9uOm58fDAsY2xvbmU6bH19ZnVuY3Rpb24gbCh0KXt0aGlzLnJvdz10LnJvdyx0aGlzLmNvbD10LmNvbCx0aGlzLmlzSG9yaXpvbj10LmlzSG9yaXpvbn1mdW5jdGlvbiBoKHQsZSxuKXt2YXIgcj10LnJvdyxpPXQuY29sLGE9dC5pc0hvcml6b247cmV0dXJuIGE/ZVtyXVtpXS5oYXZlX2lzb19wb2ludD0hMTpuW3JdW2ldLmhhdmVfaXNvX3BvaW50PSExLHR9ZnVuY3Rpb24gZih0LGUsbixyLGkpe3ZhciBhPWMoKSxzPWMoKSxvPWMoKTtnKGEscyxvLHQsZSk7Zm9yKHZhciBsPVthLHMsb10sZj1bXSxkPXt9LHg9ITEsbT0wO208MzttKyspZlttXT1wKG4scixsW21dKTtpZihmWzBdJiZmWzFdJiZmWzJdKWQ9dih0LGxbMF0sbixyKTx2KHQsbFsxXSxuLHIpP2gobFswXSxuLHIpOmgobFsxXSxuLHIpLHg9ITA7ZWxzZSBmb3IodmFyIG09MDttPDM7bSsrKWlmKGZbbV0pe2Q9aChsW21dLG4scikseD0hMDticmVha31yZXR1cm4geCYmKGkucGF0aC5wdXNoKHUoZCxuLHIpKSxlLmNsb25lKHQpLHQuY2xvbmUoZCkpLHh9ZnVuY3Rpb24gZyh0LGUsbixyLGkpe3JldHVybiByLnJvdz5pLnJvdz8odC5jbG9uZShyKSx0LmlzSG9yaXpvbj0hMSxlLmNsb25lKHQpLGUuY29sKz0xLG4uY2xvbmUociksdm9pZChuLnJvdys9MSkpOnIuY29sPmkuY29sPyhlLmNsb25lKHIpLGUuaXNIb3Jpem9uPSEwLHQuY2xvbmUoZSksdC5yb3crPTEsbi5jbG9uZShyKSx2b2lkKG4uY29sKz0xKSk6ci5pc0hvcml6b24/KGUuY2xvbmUociksZS5yb3ctPTEsZS5pc0hvcml6b249ITEsdC5jbG9uZShlKSx0LmNvbCs9MSxuLmNsb25lKHIpLHZvaWQobi5yb3ctPTEpKToodC5jbG9uZShyKSx0LmNvbC09MSx0LmlzSG9yaXpvbj0hMCxlLmNsb25lKHQpLGUucm93Kz0xLG4uY2xvbmUociksdm9pZChuLmNvbC09MSkpfWZ1bmN0aW9uIHAodCxlLG4pe3ZhciByPW4ucm93LGk9bi5jb2wsYT1uLmlzSG9yaXpvbjtyZXR1cm4gYT90W3JdW2ldLmhhdmVfaXNvX3BvaW50OmVbcl1baV0uaGF2ZV9pc29fcG9pbnR9ZnVuY3Rpb24gdih0LGUsbixyKXt2YXIgaT11KHQsbixyKSxhPXUoZSxuLHIpLHM9aS54LWEueCxvPWkueS1hLnk7cmV0dXJuIE1hdGguc3FydChzKnMrbypvKX1mdW5jdGlvbiBkKHQsZSxuLHIpe3ZhciBpLGEscz1jKCksbz1jKCk7Zm9yKGE9MDthPGItMTthKyspZm9yKGk9MDtpPHctMTtpKyspZVtpXVthXS5oYXZlX2lzb19wb2ludCYmKHM9YyhpLDAsITEpLG89YyhpLGEsITEpLHgocyxvLHQsZSxuLHIpKX1mdW5jdGlvbiB4KHQsZSxuLHIsaSxhKXt2YXIgcz1lLnJvdyxvPWUuY29sLGM9ITEsbD17dmFsdWU6aSxwYXRoOltdfTtmb3IobC5wYXRoLnB1c2godShlLG4scikpOyFjJiZmKGUsdCxuLHIsbCk7KWM9ZS5yb3c9PXMmJmUuY29sPT1vJiYhZS5pc0hvcml6b247YS5wdXNoKGwpfXZhciBtLHksXyxTLHc9MCxiPTAsTT0uMDAxLEE9ZnVuY3Rpb24odCxlKXt2YXIgaSxhPVtdLG89W10sdT1bXTtuKHQpO2Zvcih2YXIgYz0wO2M8ZS5sZW5ndGg7YysrKXtpPWVbY107dmFyIGw9cih0LGkpO2E9bFswXSxvPWxbMV0scyhhLG8saSx1KSxkKGEsbyxpLHUpfXJldHVybiB1fTt0LmV4cG9ydHM9QX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDUxKSxhPWZ1bmN0aW9uKHQpe3QuaW5uZXI9dC5pbm5lcnx8MCxhLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtyLmV4dGVuZChhLGkpLHIuYXVnbWVudChhLHt0eXBlOlwiY2xvY2tcIn0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oNTEpLGE9ZnVuY3Rpb24odCl7dC5pbm5lcj10LmlubmVyfHwwLGEuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3IuZXh0ZW5kKGEsaSksci5hdWdtZW50KGEse3R5cGU6XCJnYXVnZVwifSksdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big3MiksYT1uKDE4Nykscz1mdW5jdGlvbih0KXt2YXIgZT17fTtyLm1peChlLHMuQVRUUlMsdCkscy5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyxlKTt2YXIgbj10aGlzLmdldChcInByb2plY3Rpb25cIiksaT10aGlzLmdldChcImJhc2ljXCIpLG89YVtuXTt0aGlzLnNldChcInByb2plY3RcIixuZXcgbyh7YmFzaWM6aX0pKX07cy5BVFRSUz17cHJvamVjdGlvbjpcIm1lcmNhdG9yXCJ9LHIuZXh0ZW5kKHMsaSksci5hdWdtZW50KHMse3R5cGU6XCJtYXBcIixfZ2V0T3JpZ2luUmFuZ2U6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJvcmlnaW5NaW5cIilbMF0sbj10LmdldChcIm9yaWdpbk1pblwiKVsxXSxyPXQuZ2V0KFwib3JpZ2luTWF4XCIpWzBdLGk9dC5nZXQoXCJvcmlnaW5NYXhcIilbMV0sYT17eDpyLWUseTppLW59O3JldHVybnt4TWluOmUseU1pbjpuLHJhbmdlOmF9fSxfZ2V0UHJvamVjdFJhbmdlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwibWluXCIpP3QuZ2V0KFwibWluXCIpOnQuZ2V0KFwib3JpZ2luTWluXCIpLG49dC5nZXQoXCJtYXhcIik/dC5nZXQoXCJtYXhcIik6dC5nZXQoXCJvcmlnaW5NYXhcIikscj1lWzBdLGk9ZVsxXSxhPW5bMF0scz1uWzFdLG89e3g6YS1yLHk6cy1pfTtyZXR1cm57eE1pbjpyLHlNaW46aSxyYW5nZTpvfX0sX2ludmVydDpmdW5jdGlvbih0LGUpe3ZhciBuO1wib3JpZ2luXCI9PT1lP249dGhpcy5fZ2V0T3JpZ2luUmFuZ2UoKTpcInByb2plY3RcIj09PWUmJihuPXRoaXMuX2dldFByb2plY3RSYW5nZSgpKTt2YXIgcj1uLnhNaW4saT1uLnlNaW4sYT1uLnJhbmdlO3JldHVybiB0Lng9cit0LngqYS54LHQueT1pK3QueSphLnksdH0sX3NjYWxlOmZ1bmN0aW9uKHQsZSl7dmFyIG47XCJvcmlnaW5cIj09PWU/bj10aGlzLl9nZXRPcmlnaW5SYW5nZSgpOlwicHJvamVjdFwiPT09ZSYmKG49dGhpcy5fZ2V0UHJvamVjdFJhbmdlKCkpO3ZhciByPW4ueE1pbixpPW4ueU1pbixhPW4ucmFuZ2U7cmV0dXJuIHQueD0odC54LXIpL2EueCx0Lnk9KHQueS1pKS9hLnksdH0sY29udmVydFBvaW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmlzVHJhbnNwb3NlZD90Lnk6dC54LHI9ZS5pc1RyYW5zcG9zZWQ/dC54OnQueSxpPWUuZ2V0KFwicHJvamVjdFwiKSxhPWUuX2ludmVydCh7eDpuLHk6cn0sXCJvcmlnaW5cIik7cmV0dXJuIGE9aS5wcm9qZWN0KGEueCxhLnkpLGE9ZS5fc2NhbGUoYSxcInByb2plY3RcIikse3g6dGhpcy5jb252ZXJ0RGltKGEueCxcInhcIikseTp0aGlzLmNvbnZlcnREaW0oYS55LFwieVwiKX19LGludmVydFBvaW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10aGlzLmludmVydERpbSh0LngsXCJ4XCIpLHI9dGhpcy5pbnZlcnREaW0odC55LFwieVwiKSxpPXt9O2kueD1lLmlzVHJhbnNwb3NlZD9yOm4saS55PWUuaXNUcmFuc3Bvc2VkP246cjt2YXIgYT1lLmdldChcInByb2plY3RcIik7cmV0dXJuIGk9ZS5faW52ZXJ0KGksXCJwcm9qZWN0XCIpLGk9YS5pbnZlcnQoaSksaT1lLl9zY2FsZShpLFwib3JpZ2luXCIpfX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMzkpLGE9bigzKSxzPWEuVmVjdG9yMixvPWZ1bmN0aW9uKHQpe3QuaW5uZXI9dC5pbm5lcnx8MCxvLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpO3ZhciBlPXRoaXMuZ2V0KFwieFwiKTt0aGlzLnNldChcInhcIix0aGlzLmdldChcInlcIikpLHRoaXMuc2V0KFwieVwiLGUpfTtyLmV4dGVuZChvLGkpLHIuYXVnbWVudChvLHt0eXBlOlwicmhvXCIsY29udmVydFBvaW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldENlbnRlcigpLHI9ZS5nZXQoXCJ5XCIpLnN0YXJ0LGk9ZS5jb252ZXJ0RGltKHQueCxcInhcIik7cmV0dXJue3g6bi54K01hdGguY29zKHIpKmkseTpuLnkrTWF0aC5zaW4ocikqaX19LGludmVydFBvaW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldENlbnRlcigpLHI9bmV3IHModC54LW4ueCx0Lnktbi55KSxpPXIubGVuZ3RoKCk7cmV0dXJue3g6ZS5pbnZlcnREaW0oaSxcInhcIil9fX0pLHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMzkpLGE9bigzKSxzPW4oNCksbz1hLlZlY3RvcjIsdT1hLk1hdHJpeDMsYz1hLlZlY3RvcjMsbD1mdW5jdGlvbih0KXt0LmlubmVyPXQuaW5uZXJ8fDAsbC5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQobCxpKSxyLmF1Z21lbnQobCx7dHlwZTpcInRoZXRhXCIsY29udmVydFBvaW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldENlbnRlcigpLHI9ZS5jb252ZXJ0RGltKHQueCxcInhcIiksaT1lLmdldChcInlcIikuZW5kO3JldHVybnt4Om4ueCtNYXRoLmNvcyhyKSppLHk6bi55K01hdGguc2luKHIpKml9fSxpbnZlcnRQb2ludDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXRDZW50ZXIoKSxyPW5ldyBvKHQueC1uLngsdC55LW4ueSksaT1lLmdldChcInhcIiksYT1uZXcgdTthLnJvdGF0ZShpLnN0YXJ0KTt2YXIgbD1uZXcgYygxLDAsMCk7bC5hcHBseU1hdHJpeChhKSxsPW5ldyBvKGwueCxsLnkpO3ZhciBoPWwuYW5nbGVUbyhyLGkuZW5kPGkuc3RhcnQpO3MuZXF1YWwoaCwyKk1hdGguUEkpJiYoaD0wKTt2YXIgZj1oLyhpLmVuZC1pLnN0YXJ0KTtyZXR1cm4gZj1pLmVuZC1pLnN0YXJ0PjA/ZjotZix7eDpmfX19KSx0LmV4cG9ydHM9bH0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7dmFyIGU9e307aS5taXgoZSxyLkFUVFJTLHQpLHIuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsZSksdGhpcy5faW5pdCgpfXZhciBpPW4oMSksYT1uKDM4KTtyLkFUVFJTPXtzdGFydDp7eDowLHk6MH0sZW5kOnt4OjAseTowfSx0b3A6LjV9LGkuZXh0ZW5kKHIsYSksaS5hdWdtZW50KHIse3R5cGU6XCJ0cmlBbmdsZVwiLHRyaUFuZ2xlOiEwLF9pbml0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2V0VG9wZmFjdG9yKCksdGhpc30sc2V0VG9wZmFjdG9yOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwic3RhcnRcIiksbj10LmdldChcImVuZFwiKSxyPXt4Om4ueCx5OmUueX0saT17eDplLngrKG4ueC1lLngpKnQuZ2V0KFwidG9wXCIpLHk6bi55fTt0LmdldFhTdGFydD1mdW5jdGlvbih0KXtyZXR1cm4gZS54KyhpLngtZS54KS8oaS55LWUueSkqKHQtZS55KX0sdC5nZXRYRW5kPWZ1bmN0aW9uKHQpe3JldHVybiByLngrKGkueC1yLngpLyhpLnktci55KSoodC1yLnkpfX0sc2V0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX2F0dHJzW3RdPWUsXCJ0b3BcIj09PXQmJnRoaXMuc2V0VG9wZmFjdG9yKCksdGhpc30sY29udmVydFBvaW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldChcInN0YXJ0XCIpLHI9ZS5nZXQoXCJlbmRcIiksaT10LnksYT10Lng7aXNOYU4oaSkmJihpPTApLGk9bi55KyhyLnktbi55KSppO3ZhciBzPWUuZ2V0WFN0YXJ0KGkpLG89ZS5nZXRYRW5kKGkpO3JldHVybiBhPXMrKG8tcykqYSx7eDphLHk6aX19LGludmVydFBvaW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldChcInN0YXJ0XCIpLHI9ZS5nZXQoXCJlbmRcIiksaT1lLmdldFhTdGFydCh0LnkpLGE9ZS5nZXRYRW5kKHQueSkscz0odC54LWkpLyhpLWEpO3JldHVybnt4Oi1zLHk6LSh0Lnktbi55KS8oci55LW4ueSl9fX0pLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIG4odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBEYXRlP3Q6bmV3IERhdGUodCl9ZnVuY3Rpb24gcih0LGUsbil7dmFyIHI9bmV3IERhdGUobik7c3dpdGNoKGlzTmFOKHIpJiYocj1uZXcgRGF0ZSksZT1wYXJzZUludChlLDEwKSx0KXtjYXNlXCJzXCI6cj1uZXcgRGF0ZShyLmdldFRpbWUoKSsxZTMqZSk7YnJlYWs7Y2FzZVwiblwiOnI9bmV3IERhdGUoci5nZXRUaW1lKCkrNmU0KmUpO2JyZWFrO2Nhc2VcImhcIjpyPW5ldyBEYXRlKHIuZ2V0VGltZSgpKzM2ZTUqZSk7YnJlYWs7Y2FzZVwiZFwiOnI9bmV3IERhdGUoci5nZXRUaW1lKCkrODY0ZTUqZSk7YnJlYWs7Y2FzZVwid1wiOnI9bmV3IERhdGUoci5nZXRUaW1lKCkrNjA0OGU1KmUpO2JyZWFrO2Nhc2VcIm1cIjpyPW5ldyBEYXRlKHIuZ2V0RnVsbFllYXIoKSxyLmdldE1vbnRoKCkrZSxyLmdldERhdGUoKSxyLmdldEhvdXJzKCksci5nZXRNaW51dGVzKCksci5nZXRTZWNvbmRzKCkpO2JyZWFrO2Nhc2VcInlcIjpyPW5ldyBEYXRlKHIuZ2V0RnVsbFllYXIoKStlLHIuZ2V0TW9udGgoKSxyLmdldERhdGUoKSxyLmdldEhvdXJzKCksci5nZXRNaW51dGVzKCksci5nZXRTZWNvbmRzKCkpfXJldHVybiByfXZhciBpPS9eKD86KD8hMDAwMClbMC05XXs0fShbLVxcLy5dKykoPzooPzowP1sxLTldfDFbMC0yXSlcXDEoPzowP1sxLTldfDFbMC05XXwyWzAtOF0pfCg/OjA/WzEzLTldfDFbMC0yXSlcXDEoPzoyOXwzMCl8KD86MD9bMTM1NzhdfDFbMDJdKVxcMSg/OjMxKSl8KD86WzAtOV17Mn0oPzowWzQ4XXxbMjQ2OF1bMDQ4XXxbMTM1NzldWzI2XSl8KD86MFs0OF18WzI0NjhdWzA0OF18WzEzNTc5XVsyNl0pMDApKFstXFwvLl0/KTA/MlxcMig/OjI5KSkoXFxzKyhbMDFdfChbMDFdWzAtOV18MlswLTNdKSk6KFswLTldfFswLTVdWzAtOV0pOihbMC05XXxbMC01XVswLTldKSk/JC8sYT1mdW5jdGlvbigpe3ZhciB0PS93ezF9fGR7MSw0fXxtezEsNH18eXkoPzp5eSk/fChbSGhNc1R0XSlcXDE/fFtMbG9TWl18XCJbXlwiXSpcInwnW14nXSonL2csZT0vXFxiKD86W1BNQ0VBXVtTRFBdVHwoPzpQYWNpZmljfE1vdW50YWlufENlbnRyYWx8RWFzdGVybnxBdGxhbnRpYykgKD86U3RhbmRhcmR8RGF5bGlnaHR8UHJldmFpbGluZykgVGltZXwoPzpHTVR8VVRDKSg/OlstK11cXGR7NH0pPylcXGIvZyxuPS9bXi0rXFxkQS1aXS9nLHI9ZnVuY3Rpb24odCxlKXtmb3IodD1TdHJpbmcodCksZT1lfHwyO3QubGVuZ3RoPGU7KXQ9XCIwXCIrdDtyZXR1cm4gdH0saT17XCJkZWZhdWx0XCI6XCJkZGQgbW1tIGRkIHl5eXkgSEg6TU06c3NcIixzaG9ydERhdGU6XCJtL2QveXlcIixsb25nRGF0ZTpcIm1tbW0gZCwgeXl5eVwiLGZ1bGxEYXRlOlwiZGRkZCwgbW1tbSBkLCB5eXl5XCIsc2hvcnRUaW1lOlwiaDpNTSBUVFwiLGxvbmdUaW1lOlwiaDpNTTpzcyBUVCBaXCIsaXNvRGF0ZTpcInl5eXktbW0tZGRcIixpc29UaW1lOlwiSEg6TU06c3NcIixpc29EYXRlVGltZTpcInl5eXktbW0tZGQnVCdISDpNTTpzc1wiLGlzb1VUQ0RhdGVUaW1lOlwiVVRDOnl5eXktbW0tZGQnVCdISDpNTTpzcydaJ1wiLGxvY2FsU2hvcnREYXRlOlwieXlcXHU1ZTc0bW1cXHU2NzA4ZGRcXHU2NWU1XCIsbG9jYWxTaG9ydERhdGVUaW1lOlwieXlcXHU1ZTc0bW1cXHU2NzA4ZGRcXHU2NWU1IGhoOk1NOnNzIFRUXCIsbG9jYWxMb25nRGF0ZTpcInl5eXlcXHU1ZTc0bW1cXHU2NzA4ZGRcXHU2NWU1XCIsbG9jYWxMb25nRGF0ZVRpbWU6XCJ5eXl5XFx1NWU3NG1tXFx1NjcwOGRkXFx1NjVlNSBoaDpNTTpzcyBUVFwiLGxvY2FsRnVsbERhdGU6XCJ5eXl5XFx1NWU3NG1tXFx1NjcwOGRkXFx1NjVlNSB3XCIsbG9jYWxGdWxsRGF0ZVRpbWU6XCJ5eXl5XFx1NWU3NG1tXFx1NjcwOGRkXFx1NjVlNSB3IGhoOk1NOnNzIFRUXCJ9LGE9e2RheU5hbWVzOltcIlN1blwiLFwiTW9uXCIsXCJUdWVcIixcIldlZFwiLFwiVGh1XCIsXCJGcmlcIixcIlNhdFwiLFwiU3VuZGF5XCIsXCJNb25kYXlcIixcIlR1ZXNkYXlcIixcIldlZG5lc2RheVwiLFwiVGh1cnNkYXlcIixcIkZyaWRheVwiLFwiU2F0dXJkYXlcIixcIlxcdTY2MWZcXHU2NzFmXFx1NjVlNVwiLFwiXFx1NjYxZlxcdTY3MWZcXHU0ZTAwXCIsXCJcXHU2NjFmXFx1NjcxZlxcdTRlOGNcIixcIlxcdTY2MWZcXHU2NzFmXFx1NGUwOVwiLFwiXFx1NjYxZlxcdTY3MWZcXHU1NmRiXCIsXCJcXHU2NjFmXFx1NjcxZlxcdTRlOTRcIixcIlxcdTY2MWZcXHU2NzFmXFx1NTE2ZFwiXSxtb250aE5hbWVzOltcIkphblwiLFwiRmViXCIsXCJNYXJcIixcIkFwclwiLFwiTWF5XCIsXCJKdW5cIixcIkp1bFwiLFwiQXVnXCIsXCJTZXBcIixcIk9jdFwiLFwiTm92XCIsXCJEZWNcIixcIkphbnVhcnlcIixcIkZlYnJ1YXJ5XCIsXCJNYXJjaFwiLFwiQXByaWxcIixcIk1heVwiLFwiSnVuZVwiLFwiSnVseVwiLFwiQXVndXN0XCIsXCJTZXB0ZW1iZXJcIixcIk9jdG9iZXJcIixcIk5vdmVtYmVyXCIsXCJEZWNlbWJlclwiXX07cmV0dXJuIGZ1bmN0aW9uKHMsbyx1KXtpZigxIT09YXJndW1lbnRzLmxlbmd0aHx8XCJbb2JqZWN0IFN0cmluZ11cIiE9PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChzKXx8L1xcZC8udGVzdChzKXx8KG89cyxzPXZvaWQgMCkscz1zP25ldyBEYXRlKHMpOm5ldyBEYXRlLGlzTmFOKHMpKXRocm93IFN5bnRheEVycm9yKFwiaW52YWxpZCBkYXRlXCIpO289U3RyaW5nKGlbb118fG98fGlbXCJkZWZhdWx0XCJdKSxcIlVUQzpcIj09PW8uc2xpY2UoMCw0KSYmKG89by5zbGljZSg0KSx1PSEwKTt2YXIgYz11P1wiZ2V0VVRDXCI6XCJnZXRcIixsPXNbYytcIkRhdGVcIl0oKSxoPXNbYytcIkRheVwiXSgpLGY9c1tjK1wiTW9udGhcIl0oKSxnPXNbYytcIkZ1bGxZZWFyXCJdKCkscD1zW2MrXCJIb3Vyc1wiXSgpLHY9c1tjK1wiTWludXRlc1wiXSgpLGQ9c1tjK1wiU2Vjb25kc1wiXSgpLHg9c1tjK1wiTWlsbGlzZWNvbmRzXCJdKCksbT11PzA6cy5nZXRUaW1lem9uZU9mZnNldCgpLHk9e2Q6bCxkZDpyKGwsdm9pZCAwKSxkZGQ6YS5kYXlOYW1lc1toXSxkZGRkOmEuZGF5TmFtZXNbaCs3XSx3OmEuZGF5TmFtZXNbaCsxNF0sbTpmKzEsbW06cihmKzEsdm9pZCAwKSxtbW06YS5tb250aE5hbWVzW2ZdLG1tbW06YS5tb250aE5hbWVzW2YrMTJdLHl5OlN0cmluZyhnKS5zbGljZSgyKSx5eXl5OmcsaDpwJTEyfHwxMixoaDpyKHAlMTJ8fDEyLHZvaWQgMCksSDpwLEhIOnIocCx2b2lkIDApLE06dixNTTpyKHYsdm9pZCAwKSxzOmQsc3M6cihkLHZvaWQgMCksbDpyKHgsMyksTDpyKHg+OTk/TWF0aC5yb3VuZCh4LzEwKTp4LHZvaWQgMCksdDpwPDEyP1wiYVwiOlwicFwiLHR0OnA8MTI/XCJhbVwiOlwicG1cIixUOnA8MTI/XCJBXCI6XCJQXCIsVFQ6cDwxMj9cIkFNXCI6XCJQTVwiLFo6dT9cIlVUQ1wiOihTdHJpbmcocykubWF0Y2goZSl8fFtcIlwiXSkucG9wKCkucmVwbGFjZShuLFwiXCIpLG86KG0+MD9cIi1cIjpcIitcIikrcigxMDAqTWF0aC5mbG9vcihNYXRoLmFicyhtKS82MCkrTWF0aC5hYnMobSklNjAsNCksUzpbXCJ0aFwiLFwic3RcIixcIm5kXCIsXCJyZFwiXVtsJTEwPjM/MDoobCUxMDAtbCUxMCE9PTEwKSpsJTEwXX07cmV0dXJuIG8ucmVwbGFjZSh0LGZ1bmN0aW9uKHQpe3JldHVybiB0IGluIHk/eVt0XTp0LnNsaWNlKDEsdC5sZW5ndGgtMSl9KX19KCkscz17YWRkOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gcih0LGUsbil9LGFkZEhvdXI6ZnVuY3Rpb24odCxlKXtyZXR1cm4gcihcImhcIix0LGUpfSxhZGRNaW51dGU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gcihcIm5cIix0LGUpfSxhZGRTZWNvbmQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gcihcInNcIix0LGUpfSxhZGREYXk6ZnVuY3Rpb24odCxlKXtyZXR1cm4gcihcImRcIix0LGUpfSxhZGRXZWVrOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIoXCJ3XCIsdCxlKX0sYWRkTW9udGhzOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIoXCJtXCIsdCxlKX0sYWRkWWVhcjpmdW5jdGlvbih0LGUpe3JldHVybiByKFwieVwiLHQsZSl9LGlzRGF0ZUVxdWFsczpmdW5jdGlvbih0LGUpe3JldHVybiB0LmdldEZ1bGxZZWFyKCk9PT1lLmdldEZ1bGxZZWFyKCkmJnQuZ2V0TW9udGgoKT09PWUuZ2V0TW9udGgoKSYmdC5nZXREYXRlKCk9PT1lLmdldERhdGUoKX0saXNFcXVhbHM6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD09PWV8fCEoIXR8fCFlKSYmKCEoIXQuZ2V0VGltZXx8IWUuZ2V0VGltZSkmJnQuZ2V0VGltZSgpPT09ZS5nZXRUaW1lKCkpfSxpc0RhdGVTdHJpbmc6ZnVuY3Rpb24odCl7cmV0dXJuIGkudGVzdCh0KX0sZm9ybWF0OmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gYSh0LGUsbil9LHBhcnNlOmZ1bmN0aW9uKHQpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0JiYodD10LnJlcGxhY2UoLy0vZyxcIi9cIikpLG4odCl9LHRvZGF5OmZ1bmN0aW9uKCl7dmFyIHQ9bmV3IERhdGU7cmV0dXJuIG5ldyBEYXRlKHQuZ2V0RnVsbFllYXIoKSx0LmdldE1vbnRoKCksdC5nZXREYXRlKCkpfSxnZXREYXRlOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgRGF0ZSh0LmdldEZ1bGxZZWFyKCksdC5nZXRNb250aCgpLHQuZ2V0RGF0ZSgpKX19O3QuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPWZ1bmN0aW9uKHQsZSxuLHIpe3RoaXMudHlwZT10LHRoaXMudGFyZ2V0PW51bGwsdGhpcy5jdXJyZW50VGFyZ2V0PW51bGwsdGhpcy5idWJibGVzPW4sdGhpcy5jYW5jZWxhYmxlPXIsdGhpcy50aW1lU3RhbXA9KG5ldyBEYXRlKS5nZXRUaW1lKCksdGhpcy5kZWZhdWx0UHJldmVudGVkPSExLHRoaXMucHJvcGFnYXRpb25TdG9wcGVkPSExLHRoaXMucmVtb3ZlZD0hMSx0aGlzLmV2ZW50PWV9O3IuYXVnbWVudChpLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD10aGlzLmNhbmNlbGFibGUmJiEwfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt0aGlzLnByb3BhZ2F0aW9uU3RvcHBlZD0hMH0scmVtb3ZlOmZ1bmN0aW9uKCl7dGhpcy5yZW1vdmU9ITB9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuIHIuY2xvbmUodGhpcyl9LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuXCJbRXZlbnQgKHR5cGU9XCIrdGhpcy50eXBlK1wiKV1cIn19KSx0LmV4cG9ydHM9aX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oNDEpO3IuRmFjZXQ9bigzMCksXG5yLlJlY3Q9big3NCksci5MaXN0PW4oNzMpLHIuQ2lyY2xlPW4oMTYzKSxyLlRyZWU9bigxNjUpLHIuTWlycm9yPW4oMTY0KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCxlLG4pe3JldHVybnt4OnQueCtlKk1hdGguY29zKG4pLHk6dC55K2UqTWF0aC5zaW4obil9fXZhciBpPW4oMSksYT1uKDQxKSxzPW4oMiksbz1uKDMwKSx1PWZ1bmN0aW9uKHQpe3Uuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2kuZXh0ZW5kKHUsYSksaS5hdWdtZW50KHUse2dldFJlZ2lvbjpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMsaT1uLnBsb3RSYW5nZSxhPU1hdGgubWluKGkuZ2V0V2lkdGgoKSxpLmdldEhlaWdodCgpKS8yLHM9MipNYXRoLlBJL3Qsbz0tMSpNYXRoLlBJLzIrcyplLHU9YS8oMSsxL01hdGguc2luKHMvMikpLGM9bi5nZXRDZW50ZXIoKSxsPXIoYyxhLXUsbyk7cmV0dXJuIG4uZ2V0RmFjZXRSZWdpb24obCx1KX0sZ2V0RmFjZXRSZWdpb246ZnVuY3Rpb24odCxlKXt2YXIgbj0zKk1hdGguUEkvNCxpPU1hdGguUEkqLTEqMS80O3JldHVybntzdGFydDpyKHQsZSxuKSxlbmQ6cih0LGUsaSl9fSxnZXRDZW50ZXI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5wbG90UmFuZ2Usbj1lLnRsLHI9ZS5nZXRXaWR0aCgpLGk9ZS5nZXRIZWlnaHQoKSxhPXt4Om4ueCtyLzIseTpuLnkraS8yfTtyZXR1cm4gYX0sZ2VuZXJhdGVGYWNldHM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZGltcyxyPW5bMF07aWYoIXIpdGhyb3cgbmV3IEVycm9yKFwiUGxlYXNlIHNwZWNpZnkgZm9yIHRoZSBmaWVsZCBmb3IgZmFjZXQhXCIpO3ZhciBhPWUuZ2V0RGltVmFsdWVzKHIsdCksdT1hLmxlbmd0aCxjPVtdLGw9MDtyZXR1cm4gaS5lYWNoKGEsZnVuY3Rpb24obixpKXt2YXIgaD1be2RpbTpyLHZhbHVlOm4sdmFsdWVzOmF9XSxmPWUuZ2V0RmlsdGVyKGgpLGc9cy5maWx0ZXIodCxmKSxwPW5ldyBvKHt0eXBlOmUudHlwZSx4VmFsdWU6bix4RGltOnIsY29sSW5kZXg6aSxjb2xzOnUscm93czoxLHJvd0luZGV4OjAsZnJhbWU6ZyxyZWdpb246ZS5nZXRSZWdpb24odSxpKSxpbmRleDpsKyt9KTtjLnB1c2gocCl9KSxjfX0pLHQuZXhwb3J0cz11fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oNzMpLGE9ZnVuY3Rpb24odCl7YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KSx0aGlzLl9pbml0KCl9O3IuZXh0ZW5kKGEsaSksci5hdWdtZW50KGEse3R5cGU6XCJtaXJyb3JcIix0cmFuc3Bvc2U6ITEsZHJhd1RpdGxlczpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMsaT1uLmRpbXMsYT1uLnRyYW5zcG9zZT9cImNvbFwiOlwicm93XCI7ci5lYWNoKHQsZnVuY3Rpb24odCl7bi5kcmF3RmFjZXRUaXRsZShhLHQsZSl9KSxuLmRyYXdEaW1UaXRsZShhLGlbMF0sZSl9LF9pbml0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZGltcyxuPWVbMF07aWYoIW4pdGhyb3cgbmV3IEVycm9yKFwiUGxlYXNlIHNwZWNpZnkgZm9yIHRoZSBmaWVsZCBmb3IgZmFjZXQhXCIpO3QudHJhbnNwb3NlPyh0LmNvbHM9Mix0LnJvd3M9MSk6KHQuY29scz0xLHQucm93cz0yKX0sZ2V0UmVnaW9uOmZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBpLGEscz10aGlzLG89cy5wbG90UmFuZ2UsdT1zLm1hcmdpbixjPW8udGwsbD1vLmJyO2U+MT8oaT0obC54LWMueC11KS9lLGE9bC55LWMueSk6KGk9bC54LWMueCxhPShsLnktYy55LXUpL3QpO3ZhciBoPXt4OmMueCtpKm4rbip1LHk6Yy55K2EqKHIrMSkrdSpyfSxmPXt4OmgueCtpLHk6aC55LWF9O3JldHVybntzdGFydDpoLGVuZDpmfX19KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDQxKSxhPW4oMikscz1uKDMwKSxvPWZ1bmN0aW9uKHQpe28uc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3IuZXh0ZW5kKG8saSksci5hdWdtZW50KG8se3Jvb3RUaXRsZTpcIlwiLGxpbmU6e3N0cm9rZTpcInJlZFwifSxzbW9vdGg6ITEsZ2VuZXJhdGVGYWNldHM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZGltcztpZighbi5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiUGxlYXNlIHNwZWNpZnkgZm9yIHRoZSBmaWVsZHMgZm9yIGZhY2V0IVwiKTt2YXIgcj1bXSxpPWUuZ2V0Um9vdEZhY2V0KHQpO3JldHVybiByLnB1c2goaSksaS5jaGlsZHJlbj1lLmdldENoaWxkRmFjZXRzKHQsMSxyKSxlLnNldFJlZ2lvbihyKSxyfSxnZXRSb3dzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGltcy5sZW5ndGgrMX0sZHJhd1RpdGxlczpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7bi5kcmF3TGluZXModCxlKSxyLmVhY2godCxmdW5jdGlvbih0KXtuLmRyYXdGYWNldFRpdGxlKFwiY29sXCIsdCxlKX0pfSxkcmF3TGluZXM6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGk9ZS5hZGRHcm91cCgpO3IuZWFjaCh0LGZ1bmN0aW9uKHQpe2lmKCFuLmlzTGVhZih0KSl7dmFyIGU9dC5jaGlsZHJlbjtuLl9hZGRGYWNldExpbmVzKHQsZSxpKX19KX0sX2FkZEZhY2V0TGluZXM6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXMsYT10LnJlZ2lvbixzPXt4OmEuc3RhcnQueCsoYS5lbmQueC1hLnN0YXJ0LngpLzIseTphLnN0YXJ0Lnl9O3IuZWFjaChlLGZ1bmN0aW9uKHQpe3ZhciBlPXQucmVnaW9uLHI9e3g6ZS5zdGFydC54KyhlLmVuZC54LWUuc3RhcnQueCkvMix5OmUuZW5kLnl9LGE9e3g6cy54LHk6cy55KyhyLnktcy55KS8yfSxvPXt4OnIueCx5OmEueX07aS5fZHJhd0xpbmUoW3MsYSxvLHJdLG4pfSl9LF9nZXRQYXRoOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1cIlwiLGk9ZS5zbW9vdGg7aWYoaSl7dmFyIGE9W107YS5wdXNoKFtcIk1cIix0WzBdLngsdFswXS55XSksYS5wdXNoKFtcIkNcIix0WzFdLngsdFsxXS55LHRbMl0ueCx0WzJdLnksdFszXS54LHRbM10ueV0pLG49YS5qb2luKFwiIFwiKX1lbHNlIHIuZWFjaCh0LGZ1bmN0aW9uKHQsZSl7dmFyIGk9MD09PWU/XCJNIHt4fSB7eX1cIjpcIkwge3h9IHt5fVwiO24rPXIuc3Vic3RpdHV0ZShpLHQpfSk7cmV0dXJuIG59LF9kcmF3TGluZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMsaT1uLl9nZXRQYXRoKHQpLGE9bi5saW5lO2UuYWRkU2hhcGUoXCJQYXRoXCIse2F0dHJzOnIubWl4KHtwYXRoOml9LGEpfSl9LGdldFJvb3RGYWNldDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49bmV3IHMoe3R5cGU6ZS50eXBlLHJvd3M6ZS5nZXRSb3dzKCkscm93SW5kZXg6MCxjb2xJbmRleDowLHhWYWx1ZTplLnJvb3RUaXRsZSxmcmFtZTp0LGluZGV4OjB9KTtyZXR1cm4gbn0sZ2V0Q2hpbGRGYWNldHM6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXMsbz1bXSx1PWkuZGltcyxjPXUubGVuZ3RoO2lmKGM8ZSlyZXR1cm5bXTt2YXIgbD11W2UtMV0saD1pLmdldERpbVZhbHVlcyhsLHQpO3JldHVybiByLmVhY2goaCxmdW5jdGlvbihyLHUpe3ZhciBjPVt7ZGltOmwsdmFsdWU6cix2YWx1ZXM6aH1dLGY9aS5nZXRGaWx0ZXIoYyksZz1hLmZpbHRlcih0LGYpO2lmKGcucm93Q291bnQoKSl7dmFyIHA9bmV3IHMoe3R5cGU6aS50eXBlLHhWYWx1ZTpyLHhEaW06bCxjb2xJbmRleDp1LHJvd3M6aS5nZXRSb3dzKCkscm93SW5kZXg6ZSxmcmFtZTpnLGNoaWxkcmVuOmkuZ2V0Q2hpbGRGYWNldHMoZyxlKzEsbiksaW5kZXg6bi5sZW5ndGh9KTtvLnB1c2gocCksbi5wdXNoKHApfX0pLG99LGdldEZhY2V0c0J5TGV2ZWw6ZnVuY3Rpb24odCxlKXt2YXIgbj1bXTtyZXR1cm4gci5lYWNoKHQsZnVuY3Rpb24odCl7dC5yb3dJbmRleD09PWUmJm4ucHVzaCh0KX0pLG59LGdldFJlZ2lvbjpmdW5jdGlvbih0LGUsbixyKXt2YXIgaT10aGlzLGE9aS5wbG90UmFuZ2Uscz1pLm1hcmdpbixvPWEuYmwsdT1hLnRyLGM9KHUueC1vLngpL2UsbD0odS55LW8ueSkvdCxoPXt4Om8ueCtjKm4rcyx5Om8ueStsKnItc30sZj17eDpoLngrYy1zLHk6aC55KzIqbC8zK3N9O3JldHVybntzdGFydDpoLGVuZDpmfX0sZ2V0UmVnaW9uSW5kZXg6ZnVuY3Rpb24odCl7dmFyIGU9dFswXSxuPXRbdC5sZW5ndGgtMV07cmV0dXJuKG4uY29sSW5kZXgtZS5jb2xJbmRleCkvMitlLmNvbEluZGV4fSxzZXRSZWdpb246ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztlLmZvcmNlQ29sSW5kZXgodCksci5lYWNoKHQsZnVuY3Rpb24odCl7dC5yZWdpb249ZS5nZXRSZWdpb24odC5yb3dzLHQuY29scyx0LmNvbEluZGV4LHQucm93cy10LnJvd0luZGV4LTEpfSl9LGlzTGVhZjpmdW5jdGlvbih0KXtyZXR1cm4hdC5jaGlsZHJlbnx8IXQuY2hpbGRyZW4ubGVuZ3RofSxmb3JjZUNvbEluZGV4OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1bXSxpPTA7ci5lYWNoKHQsZnVuY3Rpb24odCl7ZS5pc0xlYWYodCkmJihuLnB1c2godCksdC5jb2xJbmRleD1pLGkrKyl9KSxyLmVhY2gobixmdW5jdGlvbih0KXt0LmNvbHM9bi5sZW5ndGh9KTtmb3IodmFyIGE9ZS5kaW1zLmxlbmd0aCxzPWEtMTtzPj0wO3MtLSlmb3IodmFyIG89ZS5nZXRGYWNldHNCeUxldmVsKHQscyksdT0wO3U8by5sZW5ndGg7dSsrKXt2YXIgYz1vW3VdO2UuaXNMZWFmKGMpfHwoYy5vcmlnaW5Db2xJbmRleD1jLmNvbEluZGV4LGMuY29sSW5kZXg9ZS5nZXRSZWdpb25JbmRleChjLmNoaWxkcmVuKSxjLmNvbHM9bi5sZW5ndGgpfX19KSx0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDMxKTtyLmF1Z21lbnQoaSx7cm93OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmNvbE5hbWVzKCkscj1bXTtyZXR1cm4gci5wdXNoKGUuX2dldE9iamVjdCh0LG4pKSxuZXcgaShyLHtuYW1lczpuLnNsaWNlKDApfSl9LGFkZFJvdzpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5jb2xOYW1lcygpLGk9ZS5hcnI7ci5lYWNoKG4sZnVuY3Rpb24oZSxuKXtpW25dLnB1c2godFtlXSl9KX0scm93czpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5jb2xOYW1lcygpLHI9ZS5kYXRhLGE9W107aWYocilmb3IodmFyIHM9MDtzPHQubGVuZ3RoO3MrKylhLnB1c2goZS5fZ2V0T2JqZWN0KHMsbikpO3JldHVybiBuZXcgaShhLHtuYW1lczpuLnNsaWNlKDApfSl9LF9nZXRDb2xBcnJheTpmdW5jdGlvbih0LGUsbil7dmFyIGk9dGhpcyxhPWkuYXJyLHM9aS5jb2xOYW1lcygpLG89W10sdT1pLnJvd0NvdW50KCksYz1yLm1hcCh0LGZ1bmN0aW9uKHQpe3JldHVybiByLmluZGV4T2Yocyx0KX0pO2U9ZXx8MCxuPXIuaXNOdWxsKG4pP3U6bjtmb3IodmFyIGw9MDtsPGMubGVuZ3RoO2wrKyl7dmFyIGg9YVtjW2xdXXx8W10sZj1oLnNsaWNlKGUsbik7by5wdXNoKGYpfXJldHVybiBvfSxjb2w6ZnVuY3Rpb24odCl7dmFyIGUsbj10aGlzLGE9bi5jb2xOYW1lcygpO3IuaXNTdHJpbmcodCk/KGU9dCx0PXIuaW5kZXhPZihhLGUpKTplPWFbdF07dmFyIHM9bi5fZ2V0Q29sQXJyYXkoW2VdKTtyZXR1cm4gbmV3IGkocyx7bmFtZXM6W2VdfSl9LGNvbHM6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMsbj0wO248dC5sZW5ndGg7bisrKXt2YXIgYT10W25dO3IuaXNOdW1iZXIoYSkmJih0W25dPWUubmFtZXNbYV0pfXZhciBzPWUuX2dldENvbEFycmF5KHQpO3JldHVybiBuZXcgaShzLHtuYW1lczp0fSl9LGNlbGw6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGk9bi5jb2xOYW1lcygpLGE9bi5hcnI7cmV0dXJuIHIuaXNTdHJpbmcoZSkmJihlPXIuaW5kZXhPZihpLGUpKSxhW2VdP2FbZV1bdF06dm9pZCAwfSxzdWI6ZnVuY3Rpb24odCxlLG4sYSl7dmFyIHMsbz10aGlzLHU9by5jb2xOYW1lcygpO3JldHVybiB0PXR8fDAsZT9lKz0xOmU9dm9pZCAwLHU9dS5zbGljZSh0LGUpLHIuaXNOdWxsKG4pfHwoYT9hKz0xOmE9by5yb3dDb3VudC0xKSxzPW8uX2dldENvbEFycmF5KHUsbixhKSxuZXcgaShzLHtuYW1lczp1fSl9LHRvU3RyaW5nOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPVtdLG49dC5hcnIscj10LmNvbE5hbWVzKCksaT10LnJvd0NvdW50KCk7ZS5wdXNoKHIuam9pbihcIlxcdFwiKSk7Zm9yKHZhciBhPTA7YTxpO2ErKyl7Zm9yKHZhciBzPVtdLG89MDtvPG4ubGVuZ3RoO28rKylzLnB1c2gobltvXVthXSk7ZS5wdXNoKHMuam9pbihcIlxcdFwiKSl9cmV0dXJuIGUuam9pbihcIlxcblwiKX0sczpmdW5jdGlvbigpe3JldHVybiB0aGlzLnRvU3RyaW5nKCl9fSksdC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big3NyksYT1uKDMxKSxzPW4oMzMxKTtyLm1peChhLHttZWFuOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5jb2xBcnJheShlKTtyZXR1cm4gbj1pLmZvcm1hdEFycmF5KG4pLG49aS5maWx0ZXJOdWxsKG4pLHMubWVhbihuKX0sZ2VvbWV0cmljX21lYW46ZnVuY3Rpb24odCxlKXt2YXIgbj10LmNvbEFycmF5KGUpO3JldHVybiBuPWkuZm9ybWF0QXJyYXkobiksbj1pLmZpbHRlck51bGwobikscy5nZW9tZXRyaWNfbWVhbihuKX0sbWVkaWFuOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5jb2xBcnJheShlKTtyZXR1cm4gbj1pLmZvcm1hdEFycmF5KG4pLG49aS5maWx0ZXJOdWxsKG4pLHMubWVkaWFuKG4pfSxtYXg6ZnVuY3Rpb24odCxlKXt2YXIgbj10LmNvbEFycmF5KGUpO3JldHVybiBuPWkuZm9ybWF0QXJyYXkobiksbj1pLmZpbHRlck51bGwobikscy5tYXgobil9LG1pbjpmdW5jdGlvbih0LGUpe3ZhciBuPXQuY29sQXJyYXkoZSk7cmV0dXJuIG49aS5mb3JtYXRBcnJheShuKSxuPWkuZmlsdGVyTnVsbChuKSxzLm1pbihuKX0sbW9kZTpmdW5jdGlvbih0LGUpe3ZhciBuPXQuY29sQXJyYXkoZSk7cmV0dXJuIG49aS5mb3JtYXRBcnJheShuKSxuPWkuZmlsdGVyTnVsbChuKSxzLm1vZGUobil9LHJhbmdlOmZ1bmN0aW9uKHQsZSl7dmFyIG49YS5tYXgodCxlKSxyPWEubWluKHQsZSk7cmV0dXJuW3Isbl19LHN1bTpmdW5jdGlvbih0LGUpe3ZhciBuPXQuY29sQXJyYXkoZSk7cmV0dXJuIG49aS5mb3JtYXRBcnJheShuKSxuPWkuZmlsdGVyTnVsbChuKSxzLnN1bShuKX0scXVhbnRpbGU6ZnVuY3Rpb24odCxlLG4pe3ZhciByPXQuY29sQXJyYXkoZSk7cmV0dXJuIHI9aS5mb3JtYXRBcnJheShyKSxyPWkuZmlsdGVyTnVsbChyKSxzLnF1YW50aWxlKHIsbil9LHZhcmlhbmNlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5jb2xBcnJheShlKTtyZXR1cm4gbj1pLmZvcm1hdEFycmF5KG4pLG49aS5maWx0ZXJOdWxsKG4pLHMudmFyaWFuY2Uobil9LHNhbXBsZV92YXJpYW5jZTpmdW5jdGlvbih0LGUpe3ZhciBuPXQuY29sQXJyYXkoZSk7cmV0dXJuIG49aS5mb3JtYXRBcnJheShuKSxuPWkuZmlsdGVyTnVsbChuKSxzLnNhbXBsZV92YXJpYW5jZShuKX0sc3RhbmRhcmRfZGV2aWF0aW9uOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5jb2xBcnJheShlKTtyZXR1cm4gbj1pLmZvcm1hdEFycmF5KG4pLG49aS5maWx0ZXJOdWxsKG4pLHMuc3RhbmRhcmRfZGV2aWF0aW9uKG4pfSxzZDpmdW5jdGlvbih0LGUpe3JldHVybiBhLnN0YW5kYXJkX2RldmlhdGlvbih0LGUpfSxzZTpmdW5jdGlvbih0LGUpe3ZhciBuPXQuY29sQXJyYXkoZSk7bj1pLmZvcm1hdEFycmF5KG4pLG49aS5maWx0ZXJOdWxsKG4pO3ZhciByPXMuc2FtcGxlX3ZhcmlhbmNlKG4pO3JldHVybiBNYXRoLnNxcnQocikvTWF0aC5zcXJ0KG4ubGVuZ3RoKX0sc29ydEJ5OmZ1bmN0aW9uKHQsZSl7dmFyIG49dC50b0pTT04oKTtyZXR1cm4gbi5zb3J0KGUpLG5ldyBhKG4se25hbWVzOnQuY29sTmFtZXMoKX0pfSxmaWx0ZXI6ZnVuY3Rpb24odCxlKXt2YXIgbj1bXTtyZXR1cm4gZT8odC5lYWNoKGZ1bmN0aW9uKHQscil7ZSh0LHIpJiZuLnB1c2godCl9KSxuZXcgYShuKSk6dH0sY3VtdWxhdGl2ZTpmdW5jdGlvbih0LGUpe3ZhciBuPXQuY29sQXJyYXkoZSk7bj1pLmZpbHRlck51bGwobik7dmFyIGE9W10scz0wO3JldHVybiByLmVhY2gobixmdW5jdGlvbih0KXtzKz10LGEucHVzaChzKX0pLGF9LGNvbXBsZW1lbnQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10LmNvbE5hbWVzKCkuc2xpY2UoMCk7cmV0dXJuIHIuZWFjaChlLGZ1bmN0aW9uKHQpe3IucmVtb3ZlKG4sdCl9KSx0LmNvbHMobil9LGZvcmNlTWVyZ2U6ZnVuY3Rpb24oKXt2YXIgdD1yLnRvQXJyYXkoYXJndW1lbnRzKSxlPVtdLG49W107cmV0dXJuIHIuZWFjaCh0LGZ1bmN0aW9uKHQpe3ZhciBuPXQuY29sTmFtZXMoKTtyLmVhY2gobixmdW5jdGlvbih0KXtyLmluZGV4T2YoZSx0KT09PS0xJiZlLnB1c2godCl9KX0pLHIuZWFjaCh0LGZ1bmN0aW9uKHQpe3ZhciBlPXQudG9KU09OKCk7bj1uLmNvbmNhdChlKX0pLG5ldyBhKG4se25hbWVzOmV9KX0sY29tYmluOmZ1bmN0aW9uKCl7dmFyIHQ9ci50b0FycmF5KGFyZ3VtZW50cyksZT1bXSxuPVtdO3JldHVybiByLmVhY2godCxmdW5jdGlvbih0KXtlPWUuY29uY2F0KHQuY29sTmFtZXMoKSksbj1uLmNvbmNhdCh0LnRvQXJyYXkoKSl9KSxuZXcgYShuLHtuYW1lczplfSl9LGNvbWJpbkNvbHVtbnM6ZnVuY3Rpb24odCxlLG4scyxvKXtpZihzPXN8fFwidHlwZVwiLHIuaXNTdHJpbmcobykmJihvPVtvXSksIW8pe289W107dmFyIHU9dC5jb2xOYW1lcygpO3IuZWFjaCh1LGZ1bmN0aW9uKHQpe3IuaW5kZXhPZihlLHQpPT09LTEmJm8ucHVzaCh0KX0pfXZhciBjPVtdO3JldHVybiB0LmVhY2goZnVuY3Rpb24odCl7ci5lYWNoKGUsZnVuY3Rpb24oZSl7dmFyIHI9e307cltuXT10W2VdLHJbc109ZSxpLm1peElmKHIsdCxvKSxjLnB1c2gocil9KX0pLG5ldyBhKGMpfSxjb21iaW5BcnJheTpmdW5jdGlvbigpe3ZhciB0LGU9ci50b0FycmF5KGFyZ3VtZW50cyk7dD1yLmlzU3RyaW5nKGVbMF0pP2Uuc2hpZnQoKTpcInR5cGVcIjt2YXIgbj1bXTtyZXR1cm4gci5lYWNoKGUsZnVuY3Rpb24oZSxpKXtyLmVhY2goZSxmdW5jdGlvbihlKXtlW3RdPWl9KSxuPW4uY29uY2F0KGUpfSksbmV3IGEobil9fSksYS5BcnJheT17cmVwZWF0OmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPVtdLHI9MDtyPGU7cisrKW4ucHVzaCh0KTtyZXR1cm4gbn19LHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUpe3ZhciBuPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcixpLGEscyxvPSEwO2ZvcihyPTA7cjxuLTE7cisrKXtpZigwPT10W3JdW3JdKXtvPSExO2JyZWFrfWZvcihpPXIrMTtpPG47aSsrKWZvcihzPS10W2ldW3JdL3Rbcl1bcl0sZVtpXT1lW2ldK3MqZVtyXSxhPXI7YTxuO2ErKyl0W2ldW2FdPXRbaV1bYV0rcyp0W3JdW2FdfWZvcihyPTA7cjxuO3IrKylpZigwPT10W3JdW3JdKXtvPSExO2JyZWFrfXJldHVybiBvfSxyPWZ1bmN0aW9uKHQsZSl7dmFyIHI9W10saT10LGE9ZSxzPWEubGVuZ3RoLG89bihpLGEscyk7aWYobyl7cltzLTFdPWFbcy0xXS9pW3MtMV1bcy0xXTtmb3IodmFyIHU9cy0yO3U+PTA7dS0tKXtyW3VdPWFbdV07Zm9yKHZhciBjPXUrMTtjPHM7YysrKXJbdV09clt1XS1pW3VdW2NdKnJbY107clt1XT1yW3VdL2lbdV1bdV19fWVsc2Ugcj0hMTtyZXR1cm4gcn07dC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDE3KTtyLkltYWdlPW4oMTcxKSxyLlRleHQ9bigxNzUpLHIuTGluZT1uKDE3Miksci5UYWc9bigxNzQpLHIuUmVjdD1uKDE3Myksci5BcmM9bigxNzApLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMTcpLGE9bigzKSxzPWEuVmVjdG9yMixvPWZ1bmN0aW9uKHQpe28uc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3IuZXh0ZW5kKG8saSksci5hdWdtZW50KG8se3N0YXJ0OltdLGVuZDpbXSxjZmc6e3N0cm9rZTpcIiMwMDBcIn0sZ2V0Q2ZnOmZ1bmN0aW9uKHQpe3ZhciBlLG4scixpPXRoaXMsYT1pLnBhcnNlUG9pbnQodCxpLnN0YXJ0KSxvPWkucGFyc2VQb2ludCh0LGkuZW5kKSx1PXQuaW52ZXJ0UG9pbnQoYSksYz10LmludmVydFBvaW50KG8pLGw9e3g6KGMueCt1LngpLzIseTp1Lnl9LGg9dC5jb252ZXJ0UG9pbnQobCksZj10LmdldENlbnRlcigpLGc9bmV3IHMoMSwwKSxwPW5ldyBzLnN1YihhLGYpLmxlbmd0aCgpLHY9bmV3IHMuc3ViKG8sYSk7cmV0dXJuIHY9di52ZXJ0aWNhbCgpLHYuc2V0TGVuZ3RoKHApLHYuYWRkKGgpLGU9bmV3IHMuc3ViKGEsdiksbj1uZXcgcy5zdWIobyx2KSxyPXt4OnYueCx5OnYueSxzdGFydEFuZ2xlOmUuYW5nbGVUbyhnLCEwKS9NYXRoLlBJKjE4MCxlbmRBbmdsZTpuLmFuZ2xlVG8oZywhMCkvTWF0aC5QSSoxODAscjpwfX0scGFpbnQ6ZnVuY3Rpb24odCxlKXt2YXIgbj1yLm1peCh7fSx0aGlzLmNmZyx0aGlzLmdldENmZyh0KSk7ZS5hZGRTaGFwZShcIkFyY1wiLHthdHRyczpufSl9fSksdC5leHBvcnRzPW99LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigxNyksYT1mdW5jdGlvbih0KXthLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtyLmV4dGVuZChhLGkpLHIuYXVnbWVudChhLHtzdGFydDpbXSxlbmQ6bnVsbCxzcmM6XCJcIixwYWludDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMsaT1uLnBhcnNlUG9pbnQodCxuLnN0YXJ0KSxhPW4uY2ZnO2lmKGEuaW1nPWEuc3JjLGE9ci5taXgoe3NyYzpuLnNyY30sYSxpKSxuLmVuZCl7dmFyIHM9bi5wYXJzZVBvaW50KHQsbi5lbmQpO2EueD1pLngsYS55PXMueSxhLndpZHRoPXMueC1pLngsYS5oZWlnaHQ9aS55LXMueX1lbHNlIGEueT1hLnktYS5oZWlnaHQ7ZS5hZGRTaGFwZShcIkltYWdlXCIse2F0dHJzOmF9KX19KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDE3KSxhPWZ1bmN0aW9uKHQpe2Euc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3IuZXh0ZW5kKGEsaSksci5hdWdtZW50KGEse2Zyb206W10sdG86W10sY2ZnOntzdHJva2U6XCIjMDAwXCIsbGluZVdpZHRoOjF9LHBhaW50OmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxpPW4ucGFyc2VQb2ludCh0LG4uZnJvbSksYT1uLnBhcnNlUG9pbnQodCxuLnRvKSxzPW4uY2ZnLG89ci5zdWJzdGl0dXRlKFwiTSB7eH0ge3l9XCIsaSkrci5zdWJzdGl0dXRlKFwiTCB7eH0ge3l9XCIsYSk7cz1yLm1peCh7cGF0aDpvfSxzKSxlLmFkZFNoYXBlKFwiUGF0aFwiLHthdHRyczpzfSl9fSksdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigxNyksYT1mdW5jdGlvbih0KXthLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtyLmV4dGVuZChhLGkpLHIuYXVnbWVudChhLHtzdGFydDpbXSxlbmQ6W10sY2ZnOntzdHJva2U6XCIjMDAwXCJ9LGdldFBhdGg6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUucGFyc2VQb2ludCh0LGUuc3RhcnQpLHI9ZS5wYXJzZVBvaW50KHQsZS5lbmQpLGk9W107cmV0dXJuIGkucHVzaChbXCJNXCIsbi54LG4ueV0pLGkucHVzaChbXCJMXCIsci54LG4ueV0pLGkucHVzaChbXCJMXCIsci54LHIueV0pLGkucHVzaChbXCJMXCIsbi54LHIueV0pLGkucHVzaChbXCJ6XCJdKSxpfSxwYWludDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMsaT1uLmNmZyxhPW4uZ2V0UGF0aCh0KTtpPXIubWl4KHtwYXRoOmF9LGkpLGUuYWRkU2hhcGUoXCJQYXRoXCIse2F0dHJzOml9KX19KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDE3KSxhPTEwLHM9ZnVuY3Rpb24odCl7cy5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQocyxpKSxyLmF1Z21lbnQocyx7ZnJvbTpbXSx0bzpbXSx0ZXh0OlwiXCIsY2ZnOntsaW5lOntzdHJva2U6XCIjMDAwXCIsbGluZVdpZHRoOjF9LHRleHQ6e2ZpbGw6XCIjMDAwXCJ9LHJlY3Q6e3N0cm9rZTpcIiMwMDBcIixsaW5lV2lkdGg6MSxmaWxsOlwiI2ZmZlwifX0scGFpbnQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5wYXJzZVBvaW50KHQsbi5mcm9tKSxpPW4ucGFyc2VQb2ludCh0LG4udG8pLGE9ZS5hZGRHcm91cCgpO24uZHJhd0xpbmUocixpLGEpLG4uZHJhd1RleHQoaSxhKX0sZHJhd0xpbmU6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXMsYT1yLnN1YnN0aXR1dGUoXCJNIHt4fSB7eX1cIix0KStyLnN1YnN0aXR1dGUoXCJMIHt4fSB7eX1cIixlKSxzPXIubWl4KHtwYXRoOmF9LGkuY2ZnLmxpbmUpO24uYWRkU2hhcGUoXCJQYXRoXCIse2F0dHJzOnN9KX0sZHJhd1RleHQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGk9ci5taXgoe3RleHQ6bi50ZXh0fSxuLmNmZy50ZXh0LHQpLHM9ZS5hZGRTaGFwZShcIlRleHRcIix7ekluZGV4OjEsYXR0cnM6aX0pLG89cy5nZXRCQkJveCgpLHU9ci5taXgoe3g6by5taW5YLWEseTpvLm1pblktYSx3aWR0aDpvLndpZHRoKzIqYSxoZWlnaHQ6by5oZWlnaHQrMiphfSxuLmNmZy5yZWN0KTtlLmFkZFNoYXBlKFwicmVjdFwiLHthdHRyczp1fSksZS5zb3J0KCl9fSksdC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigxNyksYT1mdW5jdGlvbih0KXthLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtyLmV4dGVuZChhLGkpLHIuYXVnbWVudChhLHtwb3NpdGlvbjpbXSx0ZXh0OlwiXCIsY2ZnOntmaWxsOlwiIzAwMFwiLHRleHRBbGlnbjpcImNlbnRlclwifSxwYWludDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMsaT1uLnBvc2l0aW9uLGE9bi5wYXJzZVBvaW50KHQsaSkscz1uLmNmZztzPXIubWl4KHt0ZXh0Om4udGV4dH0scyxhKSxlLmFkZFNoYXBlKFwiVGV4dFwiLHthdHRyczpzfSl9fSksdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigzMjgpLGE9ZnVuY3Rpb24odCl7ci5taXgodGhpcyx0KX07ci5hdWdtZW50KGEse2dldDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpc1t0XX0sc2V0OmZ1bmN0aW9uKHQsZSl7dGhpc1t0XT1lfSx3aWR0aDo1MDAsaGVpZ2h0OjUwMCx4OjAseTowLG1pbjpudWxsLG1heDpudWxsLGZvcm1hdHRlcjpmdW5jdGlvbih0KXtyZXR1cm4gdH0scmFkaXVzOjYwLGJsdXI6MCxjb2xvcnM6W1wicmdiKDAsMCwyNTUpXCIsXCJyZ2IoMCwwLDI1NSlcIixcInJnYigwLDI1NSwwKVwiLFwieWVsbG93XCIsXCJyZ2IoMjU1LDAsMClcIl0sX21rY2lyY2xlOmZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBpPXRoaXMuYmx1cixhPXRoaXMucmFkaXVzLHM9ci5jcmVhdGVSYWRpYWxHcmFkaWVudCh0LGUsYSppLHQsZSxhKTtzLmFkZENvbG9yU3RvcCgwLFwicmdiYSgwLCAwLCAwLCAxKVwiKSxzLmFkZENvbG9yU3RvcCgxLFwicmdiYSgwLCAwLCAwLCAwKVwiKSxyLmdsb2JhbEFscGhhPW4sci5maWxsU3R5bGU9c30sX2NvbG9yaXNlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLndpZHRoLG49dGhpcy5oZWlnaHQscj10LmdldEltYWdlRGF0YSh0aGlzLngsdGhpcy55LGUsbiksYT1yLmRhdGEscz1hLmxlbmd0aCxvPXRoaXMuY29sb3JzLHU9aS5ncmFkaWVudChvKSxjPTM7YzxzO2MrPTQpe3ZhciBsPWFbY107aWYobCl7dmFyIGg9aS5VdGlsLnJnYjJhcnIodShsLzI1NikpO2FbYy0zXT1oWzBdLGFbYy0yXT1oWzFdLGFbYy0xXT1oWzJdLGFbY109bH19cmV0dXJuIHJ9LGdldERhdGE6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLG49dC5sZW5ndGgtMTtuPj0wO24tLSllLnB1c2godFtuXVsyXSk7dmFyIGk9ci5pc051bGwodGhpcy5tYXgpP01hdGgubWF4LmFwcGx5KG51bGwsZSk6dGhpcy5tYXgsYT1yLmlzTnVsbCh0aGlzLm1pbik/TWF0aC5taW4uYXBwbHkobnVsbCxlKTp0aGlzLm1pbjtpZihpPT09YSlyZXR1cm4hMTt2YXIgcz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpLG89cy5nZXRDb250ZXh0KFwiMmRcIik7cy53aWR0aD10aGlzLndpZHRoK3RoaXMueCxzLmhlaWdodD10aGlzLmhlaWdodCt0aGlzLnk7Zm9yKHZhciB1PXRoaXMuZm9ybWF0dGVyLG49dC5sZW5ndGgtMTtuPj0wO24tLSl7dmFyIGM9KHUodFtuXVsyXSktdShhKSkvKHUoaSktdShhKSk7dGhpcy5fbWtjaXJjbGUodFtuXVswXSx0W25dWzFdLGMsbyksby5maWxsUmVjdCgwLDAsdGhpcy53aWR0aCt0aGlzLngsdGhpcy5oZWlnaHQrdGhpcy55KX1yZXR1cm4gdGhpcy5fY29sb3Jpc2Uobyl9fSksdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDE4MCk7dC5leHBvcnRzPXtpbnRlcnBvbGF0aW9uOnIuaW50ZXJwb2xhdGlvbix1bkludGVycG9sYXRpb246ci51bkludGVycG9sYXRpb259fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUpe2Zvcih2YXIgbj1bXSxyPU1hdGgubWluKHQubGVuZ3RoLGUubGVuZ3RoKSxpPTA7aTxyO2krKyluW2ldPWEuc2luZ3VsYXIodFtpXSxlW2ldKTtyZXR1cm4gZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLGk9MDtpPHI7aSsrKWVbaV09bltpXSh0KTtyZXR1cm4gZX19ZnVuY3Rpb24gaSh0LGUpe2Zvcih2YXIgbj1bXSxyPU1hdGgubWluKHQubGVuZ3RoLGUubGVuZ3RoKSxpPTA7aTxyO2krKyluW2ldPWEudW5TaW5ndWxhcih0W2ldLGVbaV0pO3JldHVybiBmdW5jdGlvbih0KXtmb3IodmFyIGU9TWF0aC5taW4obi5sZW5ndGgsdC5sZW5ndGgpLHI9MCxpPTAsYT0wO2E8ZTthKyspcis9blthXSh0W2FdKSxpKys7cmV0dXJuIDA9PT1pPzA6ci9pfX12YXIgYT1uKDQyKTt0LmV4cG9ydHM9e2FycmF5OnIsdW5BcnJheTppfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCxlKXtzd2l0Y2goZS5nZXRUeXBlKCkpe2Nhc2VcInJnYlwiOnJldHVybiBhKHQsZSk7Y2FzZVwiaHNsXCI6cmV0dXJuIG8odCxlKX19ZnVuY3Rpb24gaSh0LGUpe3N3aXRjaChlLmdldFR5cGUoKSl7Y2FzZVwicmdiXCI6cmV0dXJuIHModCxlKTtjYXNlXCJoc2xcIjpyZXR1cm4gdSh0LGUpfX1mdW5jdGlvbiBhKHQsZSl7dmFyIG49dC5nZXRSKCkscj10LmdldEcoKSxpPXQuZ2V0QigpLGE9dC5nZXRBKCkscz1lLmdldFIoKS1uLG89ZS5nZXRHKCktcix1PWUuZ2V0QigpLWksbD1lLmdldEEoKTtyZXR1cm4gdm9pZCAwPT09YSYmdm9pZCAwPT09bHx8KGE9YXx8MSxsPSh2b2lkIDA9PT1sPzE6bCktYSksZnVuY3Rpb24odCl7dmFyIGU9bmV3IGM7cmV0dXJuIGUuc2V0UkdCKG4rcyp0LHIrbyp0LGkrdSp0LHZvaWQgMCE9PWEmJnZvaWQgMCE9PWw/YStsKnQ6dm9pZCAwKSxlLmdldFJHQlN0eWxlKCl9fWZ1bmN0aW9uIHModCxlKXt2YXIgbj10LmdldFIoKSxyPXQuZ2V0RygpLGk9dC5nZXRCKCksYT10LmdldEEoKSxzPWUuZ2V0UigpLW4sbz1lLmdldEcoKS1yLHU9ZS5nZXRCKCktaSxsPWUuZ2V0QSgpO3JldHVybiB2b2lkIDA9PT1hJiZ2b2lkIDA9PT1sfHwoYT1hfHwxLGw9KHZvaWQgMD09PWw/MTpsKS1hKSxmdW5jdGlvbih0KXtpZih0PW5ldyBjKHQpLCF0LmdldFR5cGUoKSlyZXR1cm4gMDt2YXIgZT10LmdldFIoKSxoPXQuZ2V0RygpLGY9dC5nZXRCKCksZz10LmdldEEoKTtnPWd8fDE7dmFyIHA9MCx2PTA7cmV0dXJuIDAhPT1zJiYocCs9KGUtbikvcyx2KyspLDAhPT1vJiYocCs9KGgtcikvbyx2KyspLDAhPT11JiYocCs9KGYtaSkvdSx2KyspLDAhPT1sJiZsJiYocCs9KGctYSkvbCx2KyspLDA9PT12PzA6cC92fX1mdW5jdGlvbiBvKHQsZSl7dmFyIG49dC5nZXRIKCkscj10LmdldFMoKSxpPXQuZ2V0TCgpLGE9dC5nZXRBKCkscz1lLmdldEgoKS1uLG89ZS5nZXRTKCktcix1PWUuZ2V0TCgpLWksbD1lLmdldEEoKTtyZXR1cm4gdm9pZCAwPT09YSYmdm9pZCAwPT09bHx8KGE9YXx8MSxsPSh2b2lkIDA9PT1sPzE6bCktYSksZnVuY3Rpb24odCl7dmFyIGU9bmV3IGM7cmV0dXJuIGUuc2V0SFNMKG4rcyp0LHIrbyp0LGkrdSp0LHZvaWQgMCE9PWEmJnZvaWQgMCE9PWw/YStsKnQ6dm9pZCAwKSxlLmdldEhTTFN0eWxlKCl9fWZ1bmN0aW9uIHUodCxlKXt2YXIgbj10LmdldEgoKSxyPXQuZ2V0UygpLGk9dC5nZXRMKCksYT10LmdldEEoKSxzPWUuZ2V0SCgpLW4sbz1lLmdldFMoKS1yLHU9ZS5nZXRMKCktaSxsPWUuZ2V0QSgpO3JldHVybiB2b2lkIDA9PT1hJiZ2b2lkIDA9PT1sfHwoYT1hfHwxLGw9KHZvaWQgMD09PWw/MTpsKS1hKSxmdW5jdGlvbih0KXtpZih0PW5ldyBjKHQpLCF0LmdldFR5cGUoKSlyZXR1cm4gMDt2YXIgZT10LmdldEgoKSxoPXQuZ2V0UygpLGY9dC5nZXRMKCksZz10LmdldEEoKTtnPWd8fDE7dmFyIHA9MCx2PTA7cmV0dXJuIDAhPT1zJiYocCs9KGUtbikvcyx2KyspLDAhPT1vJiYocCs9KGgtcikvbyx2KyspLDAhPT11JiYocCs9KGYtaSkvdSx2KyspLDAhPT1sJiZsJiYocCs9KGctYSkvbCx2KyspLDA9PT12PzA6cC92fX12YXIgYz1uKDM3KTt0LmV4cG9ydHM9e2NvbG9yOnIsdW5Db2xvcjppfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCxlKXtyZXR1cm4gdCBpbnN0YW5jZW9mIGgmJmUgaW5zdGFuY2VvZiBoP2MubWF0cml4KHQsZSk6YS5pc0FycmF5KHQpJiZhLmlzQXJyYXkoZSk/cy5hcnJheSh0LGUpOmEuaXNPYmplY3QodCkmJmEuaXNPYmplY3QoZSk/by5vYmplY3QodCxlKTp1LnNpbmd1bGFyKHQsZSl9ZnVuY3Rpb24gaSh0LGUpe3JldHVybiB0IGluc3RhbmNlb2YgaCYmZSBpbnN0YW5jZW9mIGg/Yy51bk1hdHJpeCh0LGUpOmEuaXNBcnJheSh0KSYmYS5pc0FycmF5KGUpP3MudW5BcnJheSh0LGUpOmEuaXNPYmplY3QodCkmJmEuaXNPYmplY3QoZSk/by51bk9iamVjdCh0LGUpOnUudW5TaW5ndWxhcih0LGUpfXZhciBhPW4oMSkscz1uKDE3OCksbz1uKDE4MyksdT1uKDQyKSxjPW4oMTgxKSxsPW4oMyksaD1sLk1hdHJpeDM7dC5leHBvcnRzPXtpbnRlcnBvbGF0aW9uOnIsdW5JbnRlcnBvbGF0aW9uOml9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUpe2Zvcih2YXIgbj1bXSxyPXQuZWxlbWVudHMsaT1lLmVsZW1lbnRzLHM9MDtzPHU7cysrKW5bc109YS5zaW5ndWxhcihyW3NdLGlbc10pO3JldHVybiBmdW5jdGlvbih0KXtmb3IodmFyIGU9bmV3IG8scj1lLmVsZW1lbnRzLGk9MDtpPHU7aSsrKXJbaV09bltpXSh0KTtyZXR1cm4gZX19ZnVuY3Rpb24gaSh0LGUpe2Zvcih2YXIgbj1bXSxyPXQuZWxlbWVudHMsaT1lLmVsZW1lbnRzLHM9MDtzPHU7cysrKW5bc109YS51blNpbmd1bGFyKHJbc10saVtzXSk7cmV0dXJuIGZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10LmVsZW1lbnRzLHI9MCxpPTAsYT0wO2E8dTthKyspe3ZhciBzPW5bYV0oZVthXSk7MCE9PXMmJihyKz1zLGkrKyl9cmV0dXJuIHIvaX19dmFyIGE9big0Mikscz1uKDMpLG89cy5NYXRyaXgzLHU9OTt0LmV4cG9ydHM9e21hdHJpeDpyLHVuTWF0cml4Oml9fSxmdW5jdGlvbih0LGUpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIG4odCxlKXtyZXR1cm4gdD0rdCxlPStlLGZ1bmN0aW9uKG4pe3JldHVybiB0KigxLW4pK2Uqbn19ZnVuY3Rpb24gcih0LGUpe3JldHVybiBlLT10LGZ1bmN0aW9uKG4pe3JldHVybiAwPT09ZT8wOihuLXQpL2V9fXQuZXhwb3J0cz17bnVtYmVyOm4sdW5OdW1iZXI6cn19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQsZSl7dmFyIG49e307Zm9yKHZhciByIGluIHQpciBpbiBlJiYobltyXT1hLnNpbmd1bGFyKHRbcl0sZVtyXSkpO3JldHVybiBmdW5jdGlvbih0KXt2YXIgZT17fTtmb3IodmFyIHIgaW4gbillW3JdPW5bcl0odCk7cmV0dXJuIGV9fWZ1bmN0aW9uIGkodCxlKXt2YXIgbj17fTtmb3IodmFyIHIgaW4gdClyIGluIGUmJihuW3JdPWEudW5TaW5ndWxhcih0W3JdLGVbcl0pKTtyZXR1cm4gZnVuY3Rpb24odCl7dmFyIGU9MCxyPTA7Zm9yKHZhciBpIGluIG4paSBpbiB0JiYoZSs9bltpXSh0W2ldKSxyKyspO3JldHVybiAwPT09cj8wOmUvcn19dmFyIGE9big0Mik7dC5leHBvcnRzPXtvYmplY3Q6cix1bk9iamVjdDppfX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPXt9O3IuVHJlZT1uKDE4NiksdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9ZnVuY3Rpb24odCl7ci5taXgodGhpcyx0KX07ci5hdWdtZW50KGkse3BhcmVudDpudWxsLGxldmVsOjAsY2hpbGRyZW46bnVsbCx4OjAseTowfSksdC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3JldHVybih0LTEpLzIrMX12YXIgaT1uKDEpLGE9XCJsZXZlbFwiLHM9bigxODUpLG89ZnVuY3Rpb24odCl7aS5taXgodGhpcyx0KSx0aGlzLl9pbml0KCl9O2kuYXVnbWVudChvLHtub2RlczpudWxsLGNoaWxkcmVuRmllbGQ6XCJjaGlsZHJlblwiLHdpZHRoOjEsaGVpZ2h0OjEsX2xldmVsczoxLF9wcmVYOnt9LGR4OjAsZHk6MCxfdG90YWxMZWFmQ291bnQ6MCxfaW5pdDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10Lm5vZGVzLnNsaWNlKDApO3QuX3RyYXZlcnNlTm9kZXMoZSk7dmFyIG49dC5fbGV2ZWxzO2lmKHQuX3ByZVg9e30sIXQuZHgpe3ZhciByPXQuX2dldEFsaWduQ291bnQoZSk7dC5fdG90YWxMZWFmQ291bnQ9cix0LmR4PXQud2lkdGgvcn10LmR5fHwodC5keT10LmhlaWdodC9uKSx0Lm5vZGVzPWV9LF90cmF2ZXJzZU5vZGVzOmZ1bmN0aW9uKHQsZSl7dmFyIG4scixzPXRoaXM7ZT8obj1lW2FdKzEscj1lLmlkKToobj0wLHI9XCJcIik7dmFyIG89cy5jaGlsZHJlbkZpZWxkO2kuZWFjaCh0LGZ1bmN0aW9uKHQsaSl7dFthXT1uLHQucGFyZW50PWUsdC5pZHx8KHQuaWQ9cj9yK1wiLVwiK2k6aS50b1N0cmluZygpKTt2YXIgdT10W29dO3UmJnUubGVuZ3RoP3MuX3RyYXZlcnNlTm9kZXModFtvXSx0KTpuKzE+cy5fbGV2ZWxzJiYocy5fbGV2ZWxzPW4rMSl9KX0sX2dldEFsaWduQ291bnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPTAsYT0wLHM9MCxvPWUuY2hpbGRyZW5GaWVsZDtyZXR1cm4gaS5lYWNoKHQsZnVuY3Rpb24odCl7dmFyIGk9dFtvXTtpZihpJiZpLmxlbmd0aCl7YS09cihzKSxuKz1NYXRoLmFicyhhKTt2YXIgdT1lLl9nZXRBbGlnbkNvdW50KGkpO2lmKHU+MSl7dmFyIGM9cih1KTthPjA/KGEtPWMsbis9TWF0aC5hYnMoYSkpOm4rPWMsYT0wfWVsc2UgYSs9MTtzPXV9ZWxzZSBhKz0xfSkscz4xJiYoYS09cihzKSksbis9TWF0aC5hYnMoYSl9LF9sYXlvdXROb2RlczpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLmNoaWxkcmVuRmllbGQ7aS5lYWNoKHQsZnVuY3Rpb24odCl7dmFyIGk9dFtyXSxvPXRbYV0sdT1uLmR4LGM9bi5keTtpZih0Lnk9bypjLGkmJmkubGVuZ3RoKXtuLl9sYXlvdXROb2RlcyhpLGUpO3ZhciBsPWlbMF0saD1pW2kubGVuZ3RoLTFdO3QueD0obC54K2gueCkvMixuLl9wcmVYW28rMV0rPS4zKnV9ZWxzZXt2YXIgZj1uLl9wcmVYW29dfHwwLGc9dC5wYXJlbnQscD1uLl9wcmVYW28tMV18fDA7aWYoZyl7dmFyIHY9Z1tyXS5sZW5ndGg7cC09KHYtLjUpKnUvMn1mPU1hdGgubWF4KGYscCksdC54PWYrdX1uLl9wcmVYW29dPXQueCxlLnB1c2gobmV3IHModCkpfSl9LF9nZXRFZGdlczpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1bXSxhPW4uY2hpbGRyZW5GaWVsZDtyZXR1cm4gaS5lYWNoKHQsZnVuY3Rpb24odCl7aWYoZSl7dmFyIGk9e3NvdXJjZTplLmlkLHRhcmdldDp0LmlkfTtyLnB1c2goaSl9dFthXSYmKHI9ci5jb25jYXQobi5fZ2V0RWRnZXModFthXSx0KSkpfSkscn0sZ2V0Tm9kZXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5ub2RlcyxuPVtdO3JldHVybiB0Ll9sYXlvdXROb2RlcyhlLG4pLG59LGdldEVkZ2VzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQubm9kZXM7cmV0dXJuIHQuX2dldEVkZ2VzKGUpfX0pLHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7dmFyIHI7cj17YWxiZXJzOm4oMTg4KSxtZXJjYXRvcjpuKDE4OSksb3J0aG9ncmFwaGljOm4oMTkwKX0sdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big1MyksYT1mdW5jdGlvbih0KXthLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpLHRoaXMuX2luaXQoKX07ci5leHRlbmQoYSxpKSxyLmF1Z21lbnQoYSx7XCJcXHUwM2JiMFwiOjAsXCJcXHUwM2M2MFwiOjAsXCJcXHUwM2M2MVwiOjAsXCJcXHUwM2M2MlwiOjAsYmFzaWM6WzAsMCwwLDYwXSxfaW5pdDpmdW5jdGlvbigpe3RoaXMuXFx1MDNiYjA9dGhpcy50b1JhZGlhbnModGhpcy5iYXNpY1swXSksdGhpcy5cXHUwM2M2MD10aGlzLnRvUmFkaWFucyh0aGlzLmJhc2ljWzFdKSx0aGlzLlxcdTAzYzYxPXRoaXMudG9SYWRpYW5zKHRoaXMuYmFzaWNbMl0pLHRoaXMuXFx1MDNjNjI9dGhpcy50b1JhZGlhbnModGhpcy5iYXNpY1szXSl9LHByb2plY3Q6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLlxcdTAzYmIwLHI9KHRoaXMuXFx1MDNjNjAsdGhpcy5cXHUwM2M2MSksaT10aGlzLlxcdTAzYzYyLGE9LjUqKE1hdGguc2luKHIpK01hdGguc2luKGkpKSxzPU1hdGguY29zKHIpLG89cypzKzIqYSpNYXRoLnNpbihyKSx1PU1hdGguc3FydChvLTIqYSpNYXRoLnNpbihuKSkvYSxjPWEqKHRoaXMudG9SYWRpYW5zKHQpLW4pLGw9TWF0aC5zcXJ0KG8tMiphKk1hdGguc2luKHRoaXMudG9SYWRpYW5zKGUpKSkvYTtyZXR1cm57eDp0aGlzLnRvRGVncmVlcyhsKk1hdGguc2luKGMpKSx5OnRoaXMudG9EZWdyZWVzKHUtbCpNYXRoLmNvcyhjKSl9fSxpbnZlcnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5cXHUwM2JiMCxuPSh0aGlzLlxcdTAzYzYwLHRoaXMuXFx1MDNjNjEpLHI9dGhpcy5cXHUwM2M2MixpPXRoaXMudG9SYWRpYW5zKHQueCksYT10aGlzLnRvUmFkaWFucyh0LnkpLHM9LjUqKE1hdGguc2luKG4pK01hdGguc2luKHIpKSxvPU1hdGguY29zKG4pLHU9bypvKzIqcypNYXRoLnNpbihuKSxjPU1hdGguc3FydCh1LTIqcypNYXRoLnNpbihlKSkvcyxsPU1hdGguYXRhbihpLyhjLWEpKSxoPU1hdGguc3FydChpKmkrTWF0aC5wb3coYy1hLDIpKTtyZXR1cm57eDp0aGlzLnRvRGVncmVlcyhlK2wvcykseTp0aGlzLnRvRGVncmVlcyhNYXRoLmFzaW4oKHUtaCpoKnMqcykvKDIqcykpKX19fSksdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big1MyksYT1mdW5jdGlvbih0KXthLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpLHRoaXMuX2luaXQoKX07ci5leHRlbmQoYSxpKSxyLmF1Z21lbnQoYSx7XCJcXHUwM2JiMFwiOjAsX2luaXQ6ZnVuY3Rpb24oKXt0aGlzLlxcdTAzYmIwPXRoaXMudG9SYWRpYW5zKHRoaXMuXFx1MDNiYjApfSxwcm9qZWN0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ9dGhpcy50b1JhZGlhbnModCksZT10aGlzLnRvUmFkaWFucyhlKSx7eDp0aGlzLnRvRGVncmVlcyh0LXRoaXMuXFx1MDNiYjApLHk6dGhpcy50b0RlZ3JlZXMoTWF0aC5sb2coTWF0aC50YW4oTWF0aC5QSS80K2UvMikpKX19LGludmVydDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnRvUmFkaWFucyh0LngpLG49dGhpcy50b1JhZGlhbnModC55KTtyZXR1cm57eDp0aGlzLnRvRGVncmVlcyhlK3RoaXMuXFx1MDNiYjApLHk6dGhpcy50b0RlZ3JlZXMoMipNYXRoLmF0YW4oTWF0aC5leHAobikpLU1hdGguUEkvMil9fX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oNTMpLGE9ZnVuY3Rpb24odCl7YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KSx0aGlzLl9pbml0KCl9O3IuZXh0ZW5kKGEsaSksci5hdWdtZW50KGEse1wiXFx1MDNiYjBcIjoxMTAsXCJcXHUwM2M2MVwiOjI1LF9pbml0OmZ1bmN0aW9uKCl7dGhpcy5cXHUwM2JiMD10aGlzLnRvUmFkaWFucyh0aGlzLlxcdTAzYmIwKSx0aGlzLlxcdTAzYzYxPXRoaXMudG9SYWRpYW5zKHRoaXMuXFx1MDNjNjEpfSxwcm9qZWN0OmZ1bmN0aW9uKHQsZSl7dD10aGlzLnRvUmFkaWFucyh0KSxlPXRoaXMudG9SYWRpYW5zKGUpO3ZhciBuPU1hdGguY29zKGUpKk1hdGguc2luKHQtdGhpcy5cXHUwM2JiMCkscj1NYXRoLmNvcyhcXHUwM2M2MSkqTWF0aC5zaW4oZSktTWF0aC5zaW4oXFx1MDNjNjEpKk1hdGguY29zKGUpKk1hdGguY29zKHQtXFx1MDNiYjApO3JldHVybnt4OnRoaXMudG9EZWdyZWVzKG4pLHk6dGhpcy50b0RlZ3JlZXMocil9fSxpbnZlcnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy50b1JhZGlhbnModC54KSxuPXRoaXMudG9SYWRpYW5zKHQueSkscj1NYXRoLnNxcnQoZSplK24qbiksaT1NYXRoLmFzaW4ociksYT10aGlzLlxcdTAzYmIwK01hdGguYXRhbihlKk1hdGguc2luKGkpLyhyKk1hdGguY29zKHRoaXMuXFx1MDNjNjEpKk1hdGguY29zKGkpLW4qTWF0aC5zaW4odGhpcy5cXHUwM2M2MTEpKk1hdGguc2luKGkpKSkscz1NYXRoLmFzaW4oTWF0aC5jb3MoaSkqTWF0aC5zaW4odGhpcy5cXHUwM2M2MSkrbipNYXRoLnNpbihpKSpNYXRoLmNvcyh0aGlzLlxcdTAzYzYxKS9yKTtyZXR1cm57eDp0aGlzLnRvRGVncmVlcyhhKSx5OnRoaXMudG9EZWdyZWVzKHMpfX19KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPShuKDIpLG4oMzIpLHtyZWdpb246bigxOTUpLGNlbnRlcjpuKDE5MiksbmFtZTpuKDE5NCksbG9jYXRpb246bigxOTMpfSk7dC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3JldHVybiBNYXRoLm1pbi5hcHBseShudWxsLHQpfWZ1bmN0aW9uIGkodCl7cmV0dXJuIE1hdGgubWF4LmFwcGx5KG51bGwsdCl9dmFyIGE9bigxKSxzPW4oMzIpLG89ZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IHMoe2RpbXM6dCxtYXBEYXRhOmUsYWRkR2VvSW5mbzpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLmdldERpbXMoKSxpPXJbci5sZW5ndGgtMV0scz10W2ldLG89bi5tYXBEYXRhLmZlYXR1cmVzLHU9ZVswXSxjPWVbMV07cmV0dXJuIHRbdV09W10sdFtjXT1bXSxvJiZhLmVhY2gobyxmdW5jdGlvbihlKXt2YXIgcj1lLnByb3BlcnRpZXM/ZS5wcm9wZXJ0aWVzLm5hbWU6XCJcIjtpZihyPT09cyl7dmFyIGk9ZS5wcm9wZXJ0aWVzLmNwO2lmKCFpKXt2YXIgYT1lLmdlb21ldHJ5LG89YS5jb29yZGluYXRlcyxsPW4uX2dldEJCb3gobyk7aT1bbFswXSsobFsyXS1sWzBdKS8yLGxbMV0rKGxbM10tbFsxXSkvMl19cmV0dXJuIHRbdV09aVswXSx0W2NdPWlbMV0sITF9fSksdH0sX2dldEJCb3g6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPVtdLHM9W10sbz1lLl9nZXRQb2ludHModCk7cmV0dXJuIGEuZWFjaChvLGZ1bmN0aW9uKHQpe24ucHVzaCh0WzBdKSxzLnB1c2godFsxXSl9KSxbcihuKSxyKHMpLGkobiksaShzKV19LF9nZXRQb2ludHM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPVtdO3JldHVybiBhLmlzQXJyYXkodFswXSk/YS5lYWNoKHQsZnVuY3Rpb24odCl7dmFyIHI9ZS5fZ2V0UG9pbnRzKHQpO249bi5jb25jYXQocil9KTpuLnB1c2godCksbn19KX07dC5leHBvcnRzPW99LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDMyKSxpPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgcih7ZGltczp0LGluaXREaW1zOmZ1bmN0aW9uKHQpe3ZhciBlPXQuc2xpY2UoMCwyKSxuPXQuc2xpY2UoMik7dD1uLmNvbmNhdChlKSx0LnVuc2hpZnQoXCIuLmxhbnRcIiksdC51bnNoaWZ0KFwiLi5sb25nXCIpLHRoaXMuZGltcz10fSxhZGRHZW9JbmZvOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPWVbMF0saT1lWzFdLGE9bi5nZXREaW1zKCkscz1hLmxlbmd0aDtyZXR1cm4gdFtyXT10W2Fbcy0yXV0sdFtpXT10W2Fbcy0xXV0sdH19KX07dC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigzMiksYT1mdW5jdGlvbih0LGUpe3JldHVybiBuZXcgaSh7ZGltczp0LG1hcERhdGE6ZSxpbml0RGltczpmdW5jdGlvbih0KXt0LnB1c2goXCIuLm5hbWVcIil9LGFkZEdlb0luZm86ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGk9bi5nZXREaW1zKCksYT1pWzBdLHM9aVsxXSxvPVt0W2FdLHRbc11dLHU9ITEsYz1uLm1hcERhdGEuZmVhdHVyZXM7cmV0dXJuIHRbZV09XCJcIixjJiZyLmVhY2goYyxmdW5jdGlvbihpKXt2YXIgYT1pLmdlb21ldHJ5LmNvb3JkaW5hdGVzO2lmKFwiUG9seWdvblwiPT09aS5nZW9tZXRyeS50eXBlP3IuZWFjaChhLGZ1bmN0aW9uKHQpe2lmKHU9bi5faXNJbnNpZGUobyx0KSlyZXR1cm4hMX0pOlwiTXVsdGlQb2x5Z29uXCI9PT1pLmdlb21ldHJ5LnR5cGUmJnIuZWFjaChhLGZ1bmN0aW9uKHQpe3JldHVybiF1JiZ2b2lkIHIuZWFjaCh0LGZ1bmN0aW9uKHQpe2lmKHU9bi5faXNJbnNpZGUobyx0KSlyZXR1cm4hMX0pfSksdSl7dmFyIHM9aS5wcm9wZXJ0aWVzP2kucHJvcGVydGllcy5uYW1lOlwiXCI7cmV0dXJuIHRbZV09bi5uYW1lcz9uLm5hbWVzLmluZGV4T2Yocyk6cywhMX19KSx0fSxfaXNJbnNpZGU6ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dFswXSxyPXRbMV0saT0hMSxhPTAscz1lLmxlbmd0aC0xO2E8ZS5sZW5ndGg7cz1hKyspe3ZhciBvPWVbYV1bMF0sdT1lW2FdWzFdLGM9ZVtzXVswXSxsPWVbc11bMV0saD11PnIhPWw+ciYmbjwoYy1vKSooci11KS8obC11KStvO2gmJihpPSFpKX1yZXR1cm4gaX19KX07dC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigzMiksYT1mdW5jdGlvbih0LGUpe3JldHVybiBuZXcgaSh7ZGltczp0LG1hcERhdGE6ZSxhZGRHZW9JbmZvOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxpPW4uZ2V0RGltcygpLGE9aVtpLmxlbmd0aC0xXSxzPXRbYV0sbz1uLm1hcERhdGEsdT1vLmZlYXR1cmVzLGM9ZVswXSxsPWVbMV07cmV0dXJuIHRbY109W10sdFtsXT1bXSx1JiZyLmVhY2godSxmdW5jdGlvbihlKXt2YXIgcj1lLnByb3BlcnRpZXM/ZS5wcm9wZXJ0aWVzLm5hbWU6XCJcIjtpZihyPT09cyl7dmFyIGk9ZS5nZW9tZXRyeSxhPWkuY29vcmRpbmF0ZXM7cmV0dXJuXCJQb2x5Z29uXCI9PT1pLnR5cGU/YS5mb3JFYWNoKGZ1bmN0aW9uKGUpe24uX2dldENvb3JkaW5hdGVzKGUsdFtjXSx0W2xdKX0pOlwiTXVsdGlQb2x5Z29uXCI9PT1pLnR5cGU/YS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UuZm9yRWFjaChmdW5jdGlvbihlKXtuLl9nZXRDb29yZGluYXRlcyhlLHRbY10sdFtsXSl9KX0pOlwiTXVsdGlMaW5lU3RyaW5nXCI9PT1pLnR5cGUmJmEuZm9yRWFjaChmdW5jdGlvbihlKXtuLl9nZXRDb29yZGluYXRlcyhlLHRbY10sdFtsXSxcImxpbmVcIil9KSwhMX19KSx0fSxfZ2V0Q29vcmRpbmF0ZXM6ZnVuY3Rpb24odCxlLG4saSl7cmV0dXJuIHIuZWFjaCh0LGZ1bmN0aW9uKHQpe2UucHVzaCh0WzBdKSxuLnB1c2godFsxXSl9KSxpJiZcImxpbmVcIj09PWkmJihlLnB1c2godFswXVswXSksbi5wdXNoKHRbMF1bMV0pKSwhMX19KX07dC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gbih0LGUpe3ZhciBuPXQubGVuZ3RoO2lmKDA9PT1uKXJldHVybiBOYU47dmFyIHI9dFswXTtpZihlPHRbMF0pcmV0dXJuIE5hTjtpZihlPj10W24tMV0pcmV0dXJuIHRbbi0xXTtmb3IodmFyIGk9MTtpPHQubGVuZ3RoJiYhKGU8dFtpXSk7aSsrKXI9dFtpXTtyZXR1cm4gcn1mdW5jdGlvbiByKHQsZSl7dmFyIG49dC5sZW5ndGg7aWYoMD09PW4pcmV0dXJuIE5hTjt2YXIgcixpPXRbMF07aWYoZT50W24tMV0pcmV0dXJuIE5hTjtpZihlPHRbMF0pcmV0dXJuIHRbMF07Zm9yKHZhciBhPTE7YTx0Lmxlbmd0aDthKyspe2lmKGU8PXRbYV0pe3I9dFthXTticmVha31pPXRbYV19cmV0dXJuIHJ9dmFyIGk9e1BSRUNJU0lPTjoxZS01LGVxdWFsOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIE1hdGguYWJzKHQtZSk8aS5QUkVDSVNJT059LGNsYW1wOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdDxlP2U6dD5uP246dH0sc25hcFRvOmZ1bmN0aW9uKHQsZSl7dmFyIGk9bih0LGUpLGE9cih0LGUpO2lmKGlzTmFOKGkpfHxpc05hTihhKSl7aWYodFswXT49ZSlyZXR1cm4gdFswXTt2YXIgcz10W3QubGVuZ3RoLTFdO2lmKHM8PWUpcmV0dXJuIHN9cmV0dXJuIE1hdGguYWJzKGUtaSk8TWF0aC5hYnMoYS1lKT9pOmF9LHNuYXBGbG9vcjpmdW5jdGlvbih0LGUpe3JldHVybiBuKHQsZSl9LHNuYXBDZWlsaW5nOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIodCxlKX0sZGVncmVlVG9SYWQ6ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGguUEkvMTgwKnR9LHJhZFRvRGVncmVlOmZ1bmN0aW9uKHQpe3JldHVybiAxODAvTWF0aC5QSSp0fSxtb2Q6ZnVuY3Rpb24odCxlKXtyZXR1cm4odCVlK2UpJWV9fTt0LmV4cG9ydHM9aX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoKXtcInVuZGVmaW5lZFwiIT10eXBlb2YgRmxvYXQzMkFycmF5P3RoaXMuZWxlbWVudHM9bmV3IEZsb2F0MzJBcnJheShbMSwwLDAsMCwxLDAsMCwwLDFdKTp0aGlzLmVsZW1lbnRzPVsxLDAsMCwwLDEsMCwwLDAsMV19dmFyIGk9bigxKSxhPW4oNCk7ci5tdWx0aXBseT1mdW5jdGlvbih0LGUpe3ZhciBuPXQuZWxlbWVudHMsaT1lLmVsZW1lbnRzLGE9bmV3IHI7cmV0dXJuIGEuc2V0KG5bMF0qaVswXStuWzNdKmlbMV0rbls2XSppWzJdLG5bMF0qaVszXStuWzNdKmlbNF0rbls2XSppWzVdLG5bMF0qaVs2XStuWzNdKmlbN10rbls2XSppWzhdLG5bMV0qaVswXStuWzRdKmlbMV0rbls3XSppWzJdLG5bMV0qaVszXStuWzRdKmlbNF0rbls3XSppWzVdLG5bMV0qaVs2XStuWzRdKmlbN10rbls3XSppWzhdLG5bMl0qaVswXStuWzVdKmlbMV0rbls4XSppWzJdLG5bMl0qaVszXStuWzVdKmlbNF0rbls4XSppWzVdLG5bMl0qaVs2XStuWzVdKmlbN10rbls4XSppWzhdKX0sci5lcXVhbD1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj10LmVsZW1lbnRzLHI9ZS5lbGVtZW50cyxpPSEwLHM9MCxvPW4ubGVuZ3RoO3M8bztzKyspaWYoIWEuZXF1YWwobltzXSxyW3NdKSl7aT0hMTticmVha31yZXR1cm4gaX0saS5hdWdtZW50KHIse3R5cGU6XCJtYXRyaXgzXCIsc2V0OmZ1bmN0aW9uKHQsZSxuLHIsaSxhLHMsbyx1KXt2YXIgYz10aGlzLmVsZW1lbnRzO3JldHVybiBjWzBdPXQsY1szXT1lLGNbNl09bixjWzFdPXIsY1s0XT1pLGNbN109YSxjWzJdPXMsY1s1XT1vLGNbOF09dSx0aGlzfSxnZXQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC0tLGUtLSx0aGlzLmVsZW1lbnRzWzMqZSt0XX0saWRlbnRpdHk6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zZXQoMSwwLDAsMCwxLDAsMCwwLDEpfSxtdWx0aXBseVNjYWxhcjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmVsZW1lbnRzO3JldHVybiBlWzBdKj10LGVbM10qPXQsZVs2XSo9dCxlWzFdKj10LGVbNF0qPXQsZVs3XSo9dCxlWzJdKj10LGVbNV0qPXQsZVs4XSo9dCx0aGlzfSxkZXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVsZW1lbnRzLGU9dFswXSxuPXRbMV0scj10WzJdLGk9dFszXSxhPXRbNF0scz10WzVdLG89dFs2XSx1PXRbN10sYz10WzhdO3JldHVybiBlKmEqYy1lKnMqdS1uKmkqYytuKnMqbytyKmkqdS1yKmEqb30saW52ZXJzZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5jb3B5KHRoaXMuZ2V0SW52ZXJzZSh0KSl9LGdldEludmVyc2U6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5kZXQoKTtpZigwPT09ZSl7aWYodCl0aHJvd1wibWF0cml4IGV4Y2VwdGlvbjogZ2V0IGludmVyc2UgbWF0cml4IHdpdGggMCBkZXRcIjtyZXR1cm4gY29uc29sZS53YXJuKFwibWF0cml4IGNhbm5vdCBpbnZlcnNlXCIpLG5ldyByfXZhciBuPXRoaXMuZWxlbWVudHMsaT0oblswXSxuWzNdLG5bNl0sblsxXSxuWzRdLG5bN10sblsyXSxuWzVdLG5bOF0sbmV3IHIpO3JldHVybiBpLnNldChuWzRdKm5bOF0tbls3XSpuWzVdLC0oblszXSpuWzhdLW5bNl0qbls1XSksblszXSpuWzddLW5bNl0qbls0XSwtKG5bMV0qbls4XS1uWzddKm5bMl0pLG5bMF0qbls4XS1uWzZdKm5bMl0sLShuWzBdKm5bN10tbls2XSpuWzFdKSxuWzFdKm5bNV0tbls0XSpuWzJdLC0oblswXSpuWzVdLW5bM10qblsyXSksblswXSpuWzRdLW5bM10qblsxXSksaS5tdWx0aXBseVNjYWxhcigxL2UpLGl9LHRyYW5zcG9zZTpmdW5jdGlvbigpe3ZhciB0LGU9dGhpcy5lbGVtZW50cztyZXR1cm4gdD1lWzFdLGVbMV09ZVszXSxlWzNdPXQsdD1lWzJdLGVbMl09ZVs2XSxlWzZdPXQsdD1lWzVdLGVbNV09ZVs3XSxlWzddPXQsdGhpc30sbXVsdGlwbHk6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY29weShyLm11bHRpcGx5KHRoaXMsdCkpfSx0cmFuc2xhdGU6ZnVuY3Rpb24odCxlKXt2YXIgbj1uZXcgcjtyZXR1cm4gbi5zZXQoMSwwLHQsMCwxLGUsMCwwLDEpLHRoaXMuY29weShyLm11bHRpcGx5KG4sdGhpcykpfSxyb3RhdGU6ZnVuY3Rpb24odCl7dmFyIGU9bmV3IHI7cmV0dXJuIGUuc2V0KE1hdGguY29zKHQpLC1NYXRoLnNpbih0KSwwLE1hdGguc2luKHQpLE1hdGguY29zKHQpLDAsMCwwLDEpLHRoaXMuY29weShyLm11bHRpcGx5KGUsdGhpcykpfSxzY2FsZTpmdW5jdGlvbih0LGUpe3ZhciBuPW5ldyByO3JldHVybiBuLnNldCh0LDAsMCwwLGUsMCwwLDAsMSksdGhpcy5jb3B5KHIubXVsdGlwbHkobix0aGlzKSl9LGVxdWFsOmZ1bmN0aW9uKHQpe3JldHVybiByLmVxdWFsKHRoaXMsdCl9LGNvcHk6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQuZWxlbWVudHMsbj10aGlzLmVsZW1lbnRzLHI9MCxpPWUubGVuZ3RoO3I8aTtyKyspbltyXT1lW3JdO3JldHVybiB0aGlzfSxjbG9uZTpmdW5jdGlvbigpe2Zvcih2YXIgdD1uZXcgcixlPXQuZWxlbWVudHMsbj10aGlzLmVsZW1lbnRzLGk9MCxhPW4ubGVuZ3RoO2k8YTtpKyspZVtpXT1uW2ldO3JldHVybiB0fSx0bzJET2JqZWN0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5lbGVtZW50cztyZXR1cm57YTp0WzBdLGI6dFsxXSxjOnRbM10sZDp0WzRdLGU6dFs2XSxmOnRbN119fSxmcm9tMkRPYmplY3Q6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5lbGVtZW50cztyZXR1cm4gZVswXT10LmEsZVsxXT10LmIsZVszXT10LmMsZVs0XT10LmQsZVs2XT10LmUsZVs3XT10LmYsdGhpc319KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCxlKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aCl7dmFyIG49dDt0PW5bMF0sZT1uWzFdfXRoaXMueD10fHwwLHRoaXMueT1lfHwwfXZhciBpPW4oMSksYT1uKDQpO3IuYWRkPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyByKHQueCtlLngsdC55K2UueSl9LHIuc3ViPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyByKHQueC1lLngsdC55LWUueSl9LHIubGVycD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIG5ldyByKHQueCsoZS54LXQueCkqbix0LnkrKGUueS10LnkpKm4pfSxyLmFuZ2xlPWZ1bmN0aW9uKHQsZSl7dmFyIG49dC5kb3QoZSkvKHQubGVuZ3RoKCkqZS5sZW5ndGgoKSk7cmV0dXJuIE1hdGguYWNvcyhhLmNsYW1wKG4sLTEsMSkpfSxyLmRpcmVjdGlvbj1mdW5jdGlvbih0LGUpe3JldHVybiB0LngqZS55LWUueCp0Lnl9LGkuYXVnbWVudChyLHt0eXBlOlwidmVjdG9yMlwiLHNldDpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLng9dCx0aGlzLnk9ZSx0aGlzfSxzZXRDb21wb25lbnQ6ZnVuY3Rpb24odCxlKXtzd2l0Y2godCl7Y2FzZSAwOnJldHVybiB0aGlzLng9ZSx0aGlzO2Nhc2UgMTpyZXR1cm4gdGhpcy55PWUsdGhpcztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcInRoZSBpbmRleCBvdXQgb2YgcmFuZ2U6XCIrdCl9fSxnZXRDb21wb25lbnQ6ZnVuY3Rpb24odCl7c3dpdGNoKHQpe2Nhc2UgMDpyZXR1cm4gdGhpcy54O2Nhc2UgMTpyZXR1cm4gdGhpcy55O2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwidGhlIGluZGV4IG91dCBvZiByYW5nZTpcIit0KX19LGNvcHk6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueD10LngsdGhpcy55PXQueSx0aGlzfSxhZGQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY29weShyLmFkZCh0aGlzLHQpKX0sc3ViOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNvcHkoci5zdWIodGhpcyx0KSl9LHN1YkJ5OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNvcHkoci5zdWIodCx0aGlzKSl9LG11bHRpcGx5U2NhbGVyOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLngqPXQsdGhpcy55Kj10LHRoaXN9LGRpdmlkZVNjYWxlcjpmdW5jdGlvbih0KXtpZigwIT09dCl7dmFyIGU9MS90O3RoaXMueCo9ZSx0aGlzLnkqPWV9ZWxzZSB0aGlzLng9MCx0aGlzLnk9MDtyZXR1cm4gdGhpc30sbWluOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLng+dC54JiYodGhpcy54PXQueCksdGhpcy55PnQueSYmKHRoaXMueT10LnkpLHRoaXN9LG1heDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy54PHQueCYmKHRoaXMueD10LngpLHRoaXMueTx0LnkmJih0aGlzLnk9dC55KSx0aGlzfSxjbGFtcDpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLng8dC54P3RoaXMueD10Lng6dGhpcy54PmUueCYmKHRoaXMueD1lLngpLHRoaXMueTx0Lnk/dGhpcy55PXQueTp0aGlzLnk+ZS55JiYodGhpcy55PWUueSksdGhpc30sY2xhbXBTY2FsZTpmdW5jdGlvbigpe3ZhciB0LGU7cmV0dXJuIGZ1bmN0aW9uKG4saSl7cmV0dXJuIHZvaWQgMD09PXQmJih0PW5ldyByLGU9bmV3IHIpLHQuc2V0KG4sbiksZS5zZXQoaSxpKSx0aGlzLmNsYW1wKHQsZSl9fSgpLGZsb29yOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueD1NYXRoLmZsb29yKHRoaXMueCksdGhpcy55PU1hdGguZmxvb3IodGhpcy55KSx0aGlzfSxjZWlsOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueD1NYXRoLmNlaWwodGhpcy54KSx0aGlzLnk9TWF0aC5jZWlsKHRoaXMueSksdGhpc30scm91bmQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54PU1hdGgucm91bmQodGhpcy54KSx0aGlzLnk9TWF0aC5yb3VuZCh0aGlzLnkpLHRoaXN9LHJvdW5kVG9aZXJvOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueD10aGlzLng8MD9NYXRoLmNlaWwodGhpcy54KTpNYXRoLmZsb29yKHRoaXMueCksdGhpcy55PXRoaXMueTwwP01hdGguY2VpbCh0aGlzLnkpOk1hdGguZmxvb3IodGhpcy55KSx0aGlzfSxuZWdhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54PS10aGlzLngsdGhpcy55PS10aGlzLnksdGhpc30sZG90OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLngqdC54K3RoaXMueSp0Lnl9LGxlbmd0aFNxOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueCp0aGlzLngrdGhpcy55KnRoaXMueX0sbGVuZ3RoOmZ1bmN0aW9uKCl7cmV0dXJuIE1hdGguc3FydCh0aGlzLmxlbmd0aFNxKCkpfSxub3JtYWxpemU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kaXZpZGVTY2FsZXIodGhpcy5sZW5ndGgoKSl9LGRpc3RhbmNlVG9TcXVhcmVkOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMueC10Lngsbj10aGlzLnktdC55O3JldHVybiBlKmUrbipufSxkaXN0YW5jZVRvOmZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLnNxcnQodGhpcy5kaXN0YW5jZVRvU3F1YXJlZCh0KSl9LGFuZ2xlVG86ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmFuZ2xlKHQpLGk9ci5kaXJlY3Rpb24odGhpcyx0KT49MDtyZXR1cm4gZT9pPzIqTWF0aC5QSS1uOm46aT9uOjIqTWF0aC5QSS1ufSx2ZXJ0aWNhbDpmdW5jdGlvbih0KXtyZXR1cm4gdD9uZXcgcih0aGlzLnksKC10aGlzLngpKTpuZXcgcigoLXRoaXMueSksdGhpcy54KX0sYW5nbGU6ZnVuY3Rpb24odCl7cmV0dXJuIHIuYW5nbGUodGhpcyx0KX0sc2V0TGVuZ3RoOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMubGVuZ3RoKCk7cmV0dXJuIDAhPT1lJiZ0IT09ZSYmdGhpcy5tdWx0aXBseVNjYWxlcih0L2UpLHRoaXN9LGlzWmVybzpmdW5jdGlvbigpe3JldHVybiAwPT09dGhpcy54JiYwPT09dGhpcy55fSxsZXJwOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuY29weShyLmxlcnAodGhpcyx0LGUpKX0sZXF1YWw6ZnVuY3Rpb24odCl7cmV0dXJuIGEuZXF1YWwodGhpcy54LHQueCkmJmEuZXF1YWwodGhpcy55LHQueSl9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMueCx0aGlzLnkpfX0pLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUsbil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpaWYoaS5pc0FycmF5KHQpKXt2YXIgcj10O3Q9clswXSxlPXJbMV0sbj1yWzJdfWVsc2UgaWYoXCJ2ZWN0b3IyXCI9PT10LnR5cGUpe3ZhciBhPXQ7dD1hLngsZT1hLnksbj0xfXRoaXMueD10fHwwLHRoaXMueT1lfHwwLHRoaXMuej1ufHwwfXZhciBpPW4oMSksYT1uKDQpO3IuYWRkPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyByKHQueCtlLngsdC55K2UueSx0LnorZS56KX0sci5zdWI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IHIodC54LWUueCx0LnktZS55LHQuei1lLnopfSxyLmxlcnA9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBuZXcgcih0LngrKGUueC10LngpKm4sdC55KyhlLnktdC55KSpuLHQueisoZS56LXQueikqbil9LFxuci5jcm9zcz1mdW5jdGlvbih0LGUpe3ZhciBuPXQueCxpPXQueSxhPXQueixzPWUueCxvPWUueSx1PWUuejtyZXR1cm4gbmV3IHIoaSp1LWEqbyxhKnMtbip1LG4qby1pKnMpfSxyLmFuZ2xlPWZ1bmN0aW9uKHQsZSl7dmFyIG49dC5kb3QoZSkvKHQubGVuZ3RoKCkqZS5sZW5ndGgoKSk7cmV0dXJuIE1hdGguYWNvcyhhLmNsYW1wKG4sLTEsMSkpfSxpLmF1Z21lbnQocix7dHlwZTpcInZlY3RvcjNcIixzZXQ6ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0aGlzLng9dCx0aGlzLnk9ZSx0aGlzLno9bix0aGlzfSxzZXRDb21wb25lbnQ6ZnVuY3Rpb24odCxlKXtzd2l0Y2godCl7Y2FzZSAwOnJldHVybiB0aGlzLng9ZSx0aGlzO2Nhc2UgMTpyZXR1cm4gdGhpcy55PWUsdGhpcztjYXNlIDI6cmV0dXJuIHRoaXMuej1lLHRoaXM7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJpbmRleCBpcyBvdXQgb2YgcmFuZ2U6XCIrdCl9fSxnZXRDb21wb25lbnQ6ZnVuY3Rpb24odCl7c3dpdGNoKHQpe2Nhc2UgMDpyZXR1cm4gdGhpcy54O2Nhc2UgMTpyZXR1cm4gdGhpcy55O2Nhc2UgMjpyZXR1cm4gdGhpcy56O2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiaW5kZXggaXMgb3V0IG9mIHJhbmdlOlwiK3QpfX0sYWRkOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNvcHkoci5hZGQodGhpcyx0KSl9LHN1YjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5jb3B5KHIuc3ViKHRoaXMsdCkpfSxzdWJCeTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5jb3B5KHIuc3ViKHQsdGhpcykpfSxtdWx0aXBseVNjYWxlcjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy54Kj10LHRoaXMueSo9dCx0aGlzLnoqPXQsdGhpc30sZGl2aWRlU2NhbGVyOmZ1bmN0aW9uKHQpe2lmKDAhPT10KXt2YXIgZT0xL3Q7dGhpcy54Kj1lLHRoaXMueSo9ZSx0aGlzLnoqPWV9ZWxzZSB0aGlzLng9MCx0aGlzLnk9MCx0aGlzLno9MDtyZXR1cm4gdGhpc30sbWluOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLng+dC54JiYodGhpcy54PXQueCksdGhpcy55PnQueSYmKHRoaXMueT10LnkpLHRoaXMuej50LnomJih0aGlzLno9dC56KSx0aGlzfSxtYXg6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueDx0LngmJih0aGlzLng9dC54KSx0aGlzLnk8dC55JiYodGhpcy55PXQueSksdGhpcy56PHQueiYmKHRoaXMuej10LnopLHRoaXN9LGNsYW1wOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMueDx0Lng/dGhpcy54PXQueDp0aGlzLng+ZS54JiYodGhpcy54PWUueCksdGhpcy55PHQueT90aGlzLnk9dC55OnRoaXMueT5lLnkmJih0aGlzLnk9ZS55KSx0aGlzLno8dC56P3RoaXMuej10Lno6dGhpcy56PmUueiYmKHRoaXMuej1lLnopLHRoaXN9LGNsYW1wU2NhbGU6ZnVuY3Rpb24oKXt2YXIgdCxlO3JldHVybiBmdW5jdGlvbihuLGkpe3JldHVybiB2b2lkIDA9PT10JiYodD1uZXcgcixlPW5ldyByKSx0LnNldChuLG4sbiksZS5zZXQoaSxpLGkpLHRoaXMuY2xhbXAodCxlKX19KCksZmxvb3I6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54PU1hdGguZmxvb3IodGhpcy54KSx0aGlzLnk9TWF0aC5mbG9vcih0aGlzLnkpLHRoaXMuej1NYXRoLmZsb29yKHRoaXMueiksdGhpc30sY2VpbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLng9TWF0aC5jZWlsKHRoaXMueCksdGhpcy55PU1hdGguY2VpbCh0aGlzLnkpLHRoaXMuej1NYXRoLmNlaWwodGhpcy56KSx0aGlzfSxyb3VuZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLng9TWF0aC5yb3VuZCh0aGlzLngpLHRoaXMueT1NYXRoLnJvdW5kKHRoaXMueSksdGhpcy56PU1hdGgucm91bmQodGhpcy56KSx0aGlzfSxyb3VuZFRvWmVybzpmdW5jdGlvbigpe3JldHVybiB0aGlzLng9dGhpcy54PDA/TWF0aC5jZWlsKHRoaXMueCk6TWF0aC5mbG9vcih0aGlzLngpLHRoaXMueT10aGlzLnk8MD9NYXRoLmNlaWwodGhpcy55KTpNYXRoLmZsb29yKHRoaXMueSksdGhpcy56PXRoaXMuejwwP01hdGguY2VpbCh0aGlzLnopOk1hdGguZmxvb3IodGhpcy56KSx0aGlzfSxuZWdhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54PS10aGlzLngsdGhpcy55PS10aGlzLnksdGhpcy56PS10aGlzLnosdGhpc30sZG90OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLngqdC54K3RoaXMueSp0LnkrdGhpcy56KnQuen0sbGVuZ3RoU3E6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54KnRoaXMueCt0aGlzLnkqdGhpcy55K3RoaXMueip0aGlzLnp9LGxlbmd0aDpmdW5jdGlvbigpe3JldHVybiBNYXRoLnNxcnQodGhpcy5sZW5ndGhTcSgpKX0sbGVuZ3RoTWFuaGF0dGFuOmZ1bmN0aW9uKCl7cmV0dXJuIE1hdGguYWJzKHRoaXMueCkrTWF0aC5hYnModGhpcy55KStNYXRoLmFicyh0aGlzLnopfSxub3JtYWxpemU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kaXZpZGVTY2FsZXIodGhpcy5sZW5ndGgoKSl9LHNldExlbmd0aDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmxlbmd0aCgpO3JldHVybiAwIT09ZSYmdCE9PWUmJnRoaXMubXVsdGlwbHlTY2FsZXIodC9lKSx0aGlzfSxsZXJwOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuY29weShyLmxlcnAodGhpcyx0LGUpKX0sY3Jvc3M6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY29weShyLmNyb3NzKHRoaXMsdCkpfSxhbmdsZTpmdW5jdGlvbih0KXtyZXR1cm4gci5hbmdsZSh0aGlzLHQpfSxkaXN0YW5jZVRvU3F1YXJlZDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLngtdC54LG49dGhpcy55LXQueSxyPXRoaXMuei10Lno7cmV0dXJuIGUqZStuKm4rcipyfSxkaXN0YW5jZVRvOmZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLnNxcnQodGhpcy5kaXN0YW5jZVRvU3F1YXJlZCh0KSl9LGFwcGx5TWF0cml4OmZ1bmN0aW9uKHQpe3ZhciBlPXQuZWxlbWVudHMsbj1lWzBdKnRoaXMueCtlWzNdKnRoaXMueStlWzZdKnRoaXMueixyPWVbMV0qdGhpcy54K2VbNF0qdGhpcy55K2VbN10qdGhpcy56LGk9ZVsyXSp0aGlzLngrZVs1XSp0aGlzLnkrZVs4XSp0aGlzLno7cmV0dXJuIHRoaXMueD1uLHRoaXMueT1yLHRoaXMuej1pLHRoaXN9LGNvcHk6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueD10LngsdGhpcy55PXQueSx0aGlzLno9dm9pZCAwIT09dC56P3QuejoxLHRoaXN9LGVxdWFsOmZ1bmN0aW9uKHQpe3JldHVybiBhLmVxdWFsKHRoaXMueCx0LngpJiZhLmVxdWFsKHRoaXMueSx0LnkpJiZhLmVxdWFsKHRoaXMueix0LnopfSxjbG9uZTpmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLngsdGhpcy55LHRoaXMueil9fSksdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDIwMik7aWYod2luZG93Lkcpe25ldyByKHdpbmRvdy5HKX1lbHNlIHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oNTIpLGE9ZnVuY3Rpb24odCl7dGhpcy5jYW52YXM9dCx0aGlzLmVsPXQuZ2V0KFwiZWxcIiksdGhpcy5jdXJyZW50PW51bGwsdGhpcy5wcmU9bnVsbH07ci5hdWdtZW50KGEse3RyeVRyaWdnZXI6ZnVuY3Rpb24odCxlKXt0Ll9fbGlzdGVuZXJzJiZ0LnRyaWdnZXIoZSl9LGdldEN1cnJlbnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5jYW52YXMsbj1lLmdldFBvaW50QnlDbGllbnQodC5jbGllbnRYLHQuY2xpZW50WSk7dGhpcy5wb2ludD1uLHRoaXMucHJlPXRoaXMuY3VycmVudCx0aGlzLmN1cnJlbnQ9ZS5nZXRTaGFwZShuLngsbi55KX0sbW91c2Vtb3ZlOmZ1bmN0aW9uKHQpe3RoaXMuZ2V0Q3VycmVudCh0KTt2YXIgZT10aGlzLnBvaW50LG49dGhpcy5jYW52YXM7aWYobi5oYXMoXCJjYW52YXMtbW91c2Vtb3ZlXCIpKXt2YXIgcj1uZXcgaShcImNhbnZhcy1tb3VzZW1vdmVcIix0LCghMCksKCEwKSk7ci54PWUueCxyLnk9ZS55LHIuY2xpZW50WD10LmNsaWVudFgsci5jbGllbnRZPXQuY2xpZW50WSxyLmN1cnJlbnRUYXJnZXQ9bix0aGlzLnRyeVRyaWdnZXIobixyKX1pZih0aGlzLnByZSYmdGhpcy5wcmUhPT10aGlzLmN1cnJlbnQpe3ZhciBhPW5ldyBpKFwibW91c2VsZWF2ZVwiLHQsKCEwKSwoITApKTthLng9ZS54LGEueT1lLnksYS5jbGllbnRYPXQuY2xpZW50WCxhLmNsaWVudFk9dC5jbGllbnRZLGEuY3VycmVudFRhcmdldD10aGlzLnByZSxhLnRhcmdldD10aGlzLnByZSx0aGlzLnRyeVRyaWdnZXIodGhpcy5wcmUsYSl9aWYodGhpcy5jdXJyZW50KXt2YXIgcz1uZXcgaShcIm1vdXNlbW92ZVwiLHQsKCEwKSwoITApKTtpZihzLng9ZS54LHMueT1lLnkscy5jbGllbnRYPXQuY2xpZW50WCxzLmNsaWVudFk9dC5jbGllbnRZLHMuY3VycmVudFRhcmdldD10aGlzLmN1cnJlbnQscy50YXJnZXQ9dGhpcy5jdXJyZW50LHRoaXMudHJ5VHJpZ2dlcih0aGlzLmN1cnJlbnQscyksdGhpcy5wcmUhPT10aGlzLmN1cnJlbnQpe3ZhciBvPW5ldyBpKFwibW91c2VlbnRlclwiLHQsKCEwKSwoITApKTtvLng9ZS54LG8ueT1lLnksby5jbGllbnRYPXQuY2xpZW50WCxvLmNsaWVudFk9dC5jbGllbnRZLG8uY3VycmVudFRhcmdldD10aGlzLmN1cnJlbnQsby50YXJnZXQ9dGhpcy5jdXJyZW50LHRoaXMudHJ5VHJpZ2dlcih0aGlzLmN1cnJlbnQsbyl9fX0sbW91c2Vkb3duOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMucG9pbnQsbj10aGlzLmNhbnZhcztpZihuLmhhcyhcImNhbnZhcy1tb3VzZWRvd25cIikpe3ZhciByPW5ldyBpKFwiY2FudmFzLW1vdXNlZG93blwiLHQsKCEwKSwoITApKTtyLng9ZS54LHIueT1lLnksci5jbGllbnRYPXQuY2xpZW50WCxyLmNsaWVudFk9dC5jbGllbnRZLHIuY3VycmVudFRhcmdldD1uLHRoaXMudHJ5VHJpZ2dlcihuLHIpfWlmKHRoaXMuY3VycmVudCl7dmFyIGE9bmV3IGkoXCJtb3VzZWRvd25cIix0LCghMCksKCEwKSk7YS54PWUueCxhLnk9ZS55LGEuY2xpZW50WD10LmNsaWVudFgsYS5jbGllbnRZPXQuY2xpZW50WSxhLmN1cnJlbnRUYXJnZXQ9dGhpcy5jdXJyZW50LGEudGFyZ2V0PXRoaXMuY3VycmVudCx0aGlzLnRyeVRyaWdnZXIodGhpcy5jdXJyZW50LGEpfX0sbW91c2V1cDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnBvaW50LG49dGhpcy5jYW52YXM7aWYobi5oYXMoXCJjYW52YXMtbW91c2V1cFwiKSl7dmFyIHI9bmV3IGkoXCJjYW52YXMtbW91c2V1cFwiLHQsKCEwKSwoITApKTtyLng9ZS54LHIueT1lLnksci5jbGllbnRYPXQuY2xpZW50WCxyLmNsaWVudFk9dC5jbGllbnRZLHIuY3VycmVudFRhcmdldD1uLHRoaXMudHJ5VHJpZ2dlcihuLHIpfWlmKHRoaXMuY3VycmVudCl7dmFyIGE9bmV3IGkoXCJtb3VzZXVwXCIsdCwoITApLCghMCkpO2EueD1lLngsYS55PWUueSxhLmNsaWVudFg9dC5jbGllbnRYLGEuY2xpZW50WT10LmNsaWVudFksYS5jdXJyZW50VGFyZ2V0PXRoaXMuY3VycmVudCxhLnRhcmdldD10aGlzLmN1cnJlbnQsdGhpcy50cnlUcmlnZ2VyKHRoaXMuY3VycmVudCxhKX19LGNsaWNrOmZ1bmN0aW9uKHQpe3RoaXMuZ2V0Q3VycmVudCh0KTt2YXIgZT10aGlzLnBvaW50LG49dGhpcy5jYW52YXM7aWYobi5oYXMoXCJjYW52YXMtY2xpY2tcIikpe3ZhciByPW5ldyBpKFwiY2FudmFzLWNsaWNrXCIsdCwoITApLCghMCkpO3IueD1lLngsci55PWUueSxyLmNsaWVudFg9dC5jbGllbnRYLHIuY2xpZW50WT10LmNsaWVudFksci5jdXJyZW50VGFyZ2V0PW4sdGhpcy50cnlUcmlnZ2VyKG4scil9aWYodGhpcy5jdXJyZW50KXt2YXIgYT1uZXcgaShcImNsaWNrXCIsdCwoITApLCghMCkpO2EueD1lLngsYS55PWUueSxhLmNsaWVudFg9dC5jbGllbnRYLGEuY2xpZW50WT10LmNsaWVudFksYS5jdXJyZW50VGFyZ2V0PXRoaXMuY3VycmVudCxhLnRhcmdldD10aGlzLmN1cnJlbnQsdGhpcy50cnlUcmlnZ2VyKHRoaXMuY3VycmVudCxhKX19LGRibGNsaWNrOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMucG9pbnQsbj10aGlzLmNhbnZhcztpZihuLmhhcyhcImNhbnZhcy1kYmxjbGlja1wiKSl7dmFyIHI9bmV3IGkoXCJjYW52YXMtZGJsY2xpY2tcIix0LCghMCksKCEwKSk7ci54PWUueCxyLnk9ZS55LHIuY2xpZW50WD10LmNsaWVudFgsci5jbGllbnRZPXQuY2xpZW50WSxyLmN1cnJlbnRUYXJnZXQ9bix0aGlzLnRyeVRyaWdnZXIobixyKX1pZih0aGlzLmN1cnJlbnQpe3ZhciBhPW5ldyBpKFwiZGJsY2xpY2tcIix0LCghMCksKCEwKSk7YS54PWUueCxhLnk9ZS55LGEuY2xpZW50WD10LmNsaWVudFgsYS5jbGllbnRZPXQuY2xpZW50WSxhLmN1cnJlbnRUYXJnZXQ9dGhpcy5jdXJyZW50LGEudGFyZ2V0PXRoaXMuY3VycmVudCx0aGlzLnRyeVRyaWdnZXIodGhpcy5jdXJyZW50LGEpfX0sbW91c2VvdXQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5wb2ludCxuPXRoaXMuY2FudmFzLHI9bmV3IGkoXCJjYW52YXMtbW91c2VsZWF2ZVwiLHQsKCEwKSwoITApKTtyLng9ZS54LHIueT1lLnksci5jdXJyZW50VGFyZ2V0PW4sdGhpcy50cnlUcmlnZ2VyKG4scil9LG1vdXNlb3ZlcjpmdW5jdGlvbih0KXt2YXIgZT0odGhpcy5wb2ludCx0aGlzLmNhbnZhcyksbj1uZXcgaShcImNhbnZhcy1tb3VzZWVudGVyXCIsdCwoITApLCghMCkpO24uY3VycmVudFRhcmdldD1lLHRoaXMudHJ5VHJpZ2dlcihlLG4pfX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXt0aGlzLm5hbWU9XCJtb3VzZUV2ZW50XCIsdGhpcy50eXBlPVwiZXZlbnRcIixyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfXZhciBpPW4oMSksYT1uKDIwMSkscz1uKDIwMyk7aS5leHRlbmQocixzKSxpLmF1Z21lbnQocix7X19ldmVudHM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJlbFwiKSxuPW5ldyBhKHRoaXMpO2UuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlb3V0XCIsZnVuY3Rpb24odCl7bi5tb3VzZW91dCh0KX0sITEpLGUuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlb3ZlclwiLGZ1bmN0aW9uKHQpe24ubW91c2VvdmVyKHQpfSwhMSksZS5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsZnVuY3Rpb24odCl7bi5tb3VzZW1vdmUodCl9LCExKSxlLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIixmdW5jdGlvbih0KXtuLm1vdXNlZG93bih0KX0sITEpLGUuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIixmdW5jdGlvbih0KXtuLm1vdXNldXAodCl9LCExKSxlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKHQpe24uY2xpY2sodCl9LCExKSxlLmFkZEV2ZW50TGlzdGVuZXIoXCJkYmxjbGlja1wiLGZ1bmN0aW9uKHQpe24uZGJsY2xpY2sodCl9LCExKX19KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMjA0KTt0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7dGhpcy5yZWdpc3Rlcih0KX12YXIgaT1uKDEpO2kuYXVnbWVudChyLHtyZWdpc3RlcjpmdW5jdGlvbih0KXt2YXIgZT10aGlzO2lmKHQucGx1Z2luc3x8KHQucGx1Z2lucz17fSksIXQucGx1Z2luc1tlLm5hbWVdKXN3aXRjaCh0LnBsdWdpbnNbZS5uYW1lXT1lLGUudHlwZSl7Y2FzZVwiZXZlbnRcIjplLl9fcmVnaXN0ZXJFdmVudCh0KX19LF9fcmVnaXN0ZXJFdmVudDpmdW5jdGlvbih0KXt2YXIgZT10aGlzO2lmKGUuX19ldmVudHMpe3ZhciBuPXQuQ2FudmFzLnByb3RvdHlwZS5fX2V2ZW50cztpLmF1Z21lbnQodC5DYW52YXMse19fZXZlbnRzOmZ1bmN0aW9uKCl7biYmbi5jYWxsKHRoaXMpLGUuX19ldmVudHMuY2FsbCh0aGlzKX19KX19fSksdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDMzKSxpPW4oMSksYT1mdW5jdGlvbih0KXthLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtpLmV4dGVuZChhLHIpLGkuYXVnbWVudChhLHt0eXBlOlwiY29uZGl0aW9uXCIsY29uZGl0aW9uOm51bGx9KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMzMpLGk9bigxKSxhPWZ1bmN0aW9uKHQpe2Euc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2kuZXh0ZW5kKGEsciksaS5hdWdtZW50KGEse3R5cGU6XCJncm91cFwiLGdyb3VwOm51bGx9KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNDQpLGk9bigxKSxhPWZ1bmN0aW9uKHQpe2Euc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2kuZXh0ZW5kKGEsciksaS5hdWdtZW50KGEse3R5cGU6XCJpZGVudGl0eVwiLHZhbHVlOm51bGwsZ2V0VGV4dDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnZhbHVlLnRvU3RyaW5nKCl9LHNjYWxlOmZ1bmN0aW9uKCl7cmV0dXJuIDF9LGludmVydDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnZhbHVlfX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUpe3JldHVybiAxPT09dD8xOk1hdGgubG9nKGUpL01hdGgubG9nKHQpfXZhciBpPW4oMSksYT1uKDQzKSxzPWZ1bmN0aW9uKHQpe3Muc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2kuZXh0ZW5kKHMsYSksaS5hdWdtZW50KHMse3R5cGU6XCJsb2dcIixiYXNlOjIsdGlja0NvdW50OjEwLGNhbGN1bGF0ZVRpY2tzOmZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLG49ZS5iYXNlLGk9cihuLGUubWF4KTt0PWUubWluPjA/TWF0aC5mbG9vcihyKG4sZS5taW4pKTppLTE7Zm9yKHZhciBhPWktdCxzPWUudGlja0NvdW50LG89TWF0aC5jZWlsKGEvcyksdT1bXSxjPXQ7YzxpK287Yys9byl1LnB1c2goTWF0aC5wb3cobixjKSk7cmV0dXJuIHV9LGdldFNjYWxlUGVyY2VudDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLm1heCxuPXRoaXMubWluO2lmKGU9PT1uKXJldHVybiAwO3ZhciBpPXRoaXMuYmFzZSxhPShyKGksdCktcihpLG4pKS8ocihpLGUpLXIoaSxuKSk7cmV0dXJuIGF9LHNjYWxlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0U2NhbGVQZXJjZW50KHQpLG49dGhpcy5yYW5nZU1pbigpLHI9dGhpcy5yYW5nZU1heCgpO3JldHVybiBuK2UqKHItbil9LGludmVydDpmdW5jdGlvbih0KXt2YXIgZT0odC10aGlzLnJhbmdlTWluKCkpLyh0aGlzLnJhbmdlTWF4KCktdGhpcy5yYW5nZU1pbigpKSxuPXRoaXMuYmFzZSxpPXIobix0aGlzLm1heCksYT1yKG4sdGhpcy5taW4pLHM9ZSooaS1hKSthO3JldHVybiBNYXRoLnBvdyhuLHMpfX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigzMyksaT1uKDEpLGE9ZnVuY3Rpb24odCl7YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07aS5leHRlbmQoYSxyKSxpLmF1Z21lbnQoYSx7dHlwZTpcIm51bWJlckNhdFwiLGluaXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnZhbHVlczt0LnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC1lfSksaS5lYWNoKHQsZnVuY3Rpb24oZSxuKXt0W25dPWUudG9TdHJpbmcoKX0pLHRoaXMudGlja3M9dH19KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCxlKXt2YXIgbj1NYXRoLkUscj1NYXRoLnBvdyhuLE1hdGgubG9nKGUpL3QpO3JldHVybiByfXZhciBpPW4oMSksYT1uKDQzKSxzPWZ1bmN0aW9uKHQpe3Muc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2kuZXh0ZW5kKHMsYSksaS5hdWdtZW50KHMse3R5cGU6XCJwb3dcIixleHBvbmVudDoyLHRpY2tDb3VudDoxMixjYWxjdWxhdGVUaWNrczpmdW5jdGlvbigpe3ZhciB0LGU9dGhpcyxuPWUuZXhwb25lbnQsaT1NYXRoLmNlaWwocihuLGUubWF4KSk7aWYodD1lLm1pbj49MD9NYXRoLnJvdW5kKHIobixlLm1pbikpOjAsdD5pKXt2YXIgYT1pO2k9dCx0PWF9Zm9yKHZhciBzPWktdCxvPWUudGlja0NvdW50LHU9TWF0aC5jZWlsKHMvbyksYz1bXSxsPXQ7bDxpK3U7bCs9dSljLnB1c2goTWF0aC5wb3cobCxuKSk7cmV0dXJuIGN9LGdldFNjYWxlUGVyY2VudDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLm1heCxuPXRoaXMubWluO2lmKGU9PT1uKXJldHVybiAwO3ZhciBpPXRoaXMuZXhwb25lbnQsYT0ocihpLHQpLXIoaSxuKSkvKHIoaSxlKS1yKGksbikpO3JldHVybiBhfSxzY2FsZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldFNjYWxlUGVyY2VudCh0KSxuPXRoaXMucmFuZ2VNaW4oKSxyPXRoaXMucmFuZ2VNYXgoKTtyZXR1cm4gbitlKihyLW4pfSxpbnZlcnQ6ZnVuY3Rpb24odCl7dmFyIGU9KHQtdGhpcy5yYW5nZU1pbigpKS8odGhpcy5yYW5nZU1heCgpLXRoaXMucmFuZ2VNaW4oKSksbj10aGlzLmV4cG9uZW50LGk9cihuLHRoaXMubWF4KSxhPXIobix0aGlzLm1pbikscz1lKihpLWEpK2E7cmV0dXJuIE1hdGgucG93KHMsbil9fSksdC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDMzKSxpPW4oMSksYT1uKDQwKSxzPW4oMzYpLG89ZnVuY3Rpb24odCl7by5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07aS5leHRlbmQobyxyKSxpLmF1Z21lbnQobyx7dHlwZTpcInRpbWVDYXRcIixtYXNrOlwieXl5eS1tbS1kZCBISDpNTTpzc1wiLHRpY2tDb3VudDo1LGluaXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dGhpcy52YWx1ZXM7ZS5zb3J0KGZ1bmN0aW9uKGUsbil7cmV0dXJuIGU9dC5fdG9UaW1lU3RhbXAoZSksbj10Ll90b1RpbWVTdGFtcChuKSxlLW59KSxpLmVhY2goZSxmdW5jdGlvbihuLHIpe2Vbcl09dC5fdG9UaW1lU3RhbXAobil9KSx0aGlzLnRpY2tzPXRoaXMuY2FsY3VsYXRlVGlja3MoITApfSxjYWxjdWxhdGVUaWNrczpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS50aWNrQ291bnQscj1zLkNhdGVnb3J5LmNhY3VsYXRlKHttYXhDb3VudDpuLGRhdGE6ZS52YWx1ZXN9KSxvPXIudGlja3M7cmV0dXJuIHQmJmkuZWFjaChvLGZ1bmN0aW9uKHQsbil7b1tuXT1hLmZvcm1hdCh0LGUubWFzayl9KSxvfSx0cmFuc2xhdGU6ZnVuY3Rpb24odCl7dD10aGlzLl90b1RpbWVTdGFtcCh0KTt2YXIgZT10aGlzLnZhbHVlcy5pbmRleE9mKHQpO3JldHVybiBlPT09LTEmJihlPWkuaXNOdW1iZXIodCkmJnQ8dGhpcy52YWx1ZXMubGVuZ3RoP3Q6TmFOKSxlfSxzY2FsZTpmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMucmFuZ2VNaW4oKSxyPXRoaXMucmFuZ2VNYXgoKSxpPXRoaXMudHJhbnNsYXRlKHQpO3JldHVybiBlPXRoaXMudmFsdWVzLmxlbmd0aD4xJiZpPi0xP2kvKHRoaXMudmFsdWVzLmxlbmd0aC0xKTowLG4rZSooci1uKX0sZ2V0VGV4dDpmdW5jdGlvbih0KXt2YXIgZT1cIlwiLG49dGhpcy50cmFuc2xhdGUodCk7bj4tMSYmKGU9dGhpcy52YWx1ZXNbbl0pO3ZhciByPXRoaXMuZm9ybWF0dGVyO3JldHVybiBlPXBhcnNlSW50KGUsMTApLGU9cj9yKGUpOmEuZm9ybWF0KGUsdGhpcy5tYXNrKX0sZ2V0VGlja3M6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dGhpcy5jYWxjdWxhdGVUaWNrcyghMSksbj1bXTtyZXR1cm4gaS5lYWNoKGUsZnVuY3Rpb24oZSl7dmFyIHI7cj1pLmlzT2JqZWN0KGUpP2U6e3RleHQ6dC5nZXRUZXh0KGUpLHZhbHVlOnQuc2NhbGUoZSl9LG4ucHVzaChyKX0pLG59LF90b1RpbWVTdGFtcDpmdW5jdGlvbih0KXtyZXR1cm4gaS5pc1N0cmluZyh0KSYmKHQ9dC5yZXBsYWNlKC8tL2dpLFwiL1wiKS5yZXBsYWNlKFwiVFwiLFwiIFwiKS5yZXBsYWNlKFwiWlwiLFwiXCIpLHQ9bmV3IERhdGUodCkuZ2V0VGltZSgpKSxpLmlzRGF0ZSh0KSYmKHQ9dC5nZXRUaW1lKCkpLHR9fSksdC5leHBvcnRzPW99LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDQzKSxpPW4oMSksYT1uKDM2KSxzPW4oNDApLG89ZnVuY3Rpb24odCl7by5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07aS5leHRlbmQobyxyKSxpLmF1Z21lbnQobyx7dHlwZTpcInRpbWVcIixtYXNrOlwieXl5eS1tbS1kZFwiLGluaXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dGhpcy52YWx1ZXM7aWYoZSl7dmFyIG49W107aS5lYWNoKGUsZnVuY3Rpb24oZSl7bi5wdXNoKHQuX3RvVGltZVN0YW1wKGUpKX0pLHRoaXMubWluPU1hdGgubWluLmFwcGx5KG51bGwsbiksdGhpcy5tYXg9TWF0aC5tYXguYXBwbHkobnVsbCxuKX1vLnN1cGVyY2xhc3MuaW5pdC5jYWxsKHRoaXMpfSxjYWxjdWxhdGVUaWNrczpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10Lm1pbixuPXQubWF4LHI9dC50aWNrQ291bnQsaT10LnRpY2tJbnRlcnZhbCxzPWEuVGltZS5jYWN1bGF0ZSh7bWluOmUsbWF4Om4sbWluQ291bnQ6cixtYXhDb3VudDpyLGludGVydmFsOml9KTtyZXR1cm4gcy50aWNrc30sZ2V0VGV4dDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmZvcm1hdHRlcjtyZXR1cm4gdD10aGlzLnRyYW5zbGF0ZSh0KSx0PWU/ZSh0KTpzLmZvcm1hdCh0LHRoaXMubWFzayl9LHNjYWxlOmZ1bmN0aW9uKHQpe3JldHVybiBpLmlzU3RyaW5nKHQpJiYodD10aGlzLnRyYW5zbGF0ZSh0KSksby5zdXBlcmNsYXNzLnNjYWxlLmNhbGwodGhpcyx0KX0sdHJhbnNsYXRlOmZ1bmN0aW9uKHQpe3JldHVybiBpLmlzU3RyaW5nKHQpJiYodD10LnJlcGxhY2UoLy0vZ2ksXCIvXCIpLnJlcGxhY2UoXCJUXCIsXCIgXCIpLnJlcGxhY2UoXCJaXCIsXCJcIiksdD1uZXcgRGF0ZSh0KS5nZXRUaW1lKCkpLGkuaXNEYXRlKHQpJiYodD10LmdldFRpbWUoKSksdH0sX3RvVGltZVN0YW1wOmZ1bmN0aW9uKHQpe3JldHVybiBpLmlzU3RyaW5nKHQpJiYodD10LnJlcGxhY2UoLy0vZ2ksXCIvXCIpLnJlcGxhY2UoXCJUXCIsXCIgXCIpLnJlcGxhY2UoXCJaXCIsXCJcIiksdD1uZXcgRGF0ZSh0KS5nZXRUaW1lKCkpLGkuaXNEYXRlKHQpJiYodD10LmdldFRpbWUoKSksdH19KSx0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMjE0KTt0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCxlLG4scil7dmFyIGksbyxjLGwsaD1bXSxmPSEhcjtpZihmKXtjPW5ldyB1KDEvMCwxLzApLGw9bmV3IHUoKC0oMS8wKSksKC0oMS8wKSkpO2Zvcih2YXIgZz0wLHA9dC5sZW5ndGg7ZzxwO2crKyl7dmFyIHY9YSh0W2ddKTtjLm1pbih2KSxsLm1heCh2KX1jLm1pbihhKHJbMF0pKSxsLm1heChhKHJbMV0pKX1mb3IodmFyIGc9MCxkPXQubGVuZ3RoO2c8ZDtnKyspe3ZhciB2PWEodFtnXSk7aWYobilpPWEodFtnP2ctMTpkLTFdKSxvPWEodFsoZysxKSVkXSk7ZWxzZXtpZigwPT09Z3x8Zz09PWQtMSl7aC5wdXNoKFt2Lngsdi55XSk7Y29udGludWV9aT1hKHRbZy0xXSksbz1hKHRbZysxXSl9dmFyIHg9dS5zdWIobyxpKTtzKHgsZSk7dmFyIG09di5kaXN0YW5jZVRvKGkpLHk9di5kaXN0YW5jZVRvKG8pLF89bSt5OzAhPT1fJiYobS89Xyx5Lz1fKTt2YXIgUz1zKHguY2xvbmUoKSwtbSksdz1zKHguY2xvbmUoKSx5KSxiPXUuYWRkKHYsUyksTT11LmFkZCh2LHcpO2YmJihiLm1heChjKSxiLm1pbihsKSxNLm1heChjKSxNLm1pbihsKSksaC5wdXNoKFtiLngsYi55XSksaC5wdXNoKFtNLngsTS55XSl9cmV0dXJuIG4mJmgucHVzaChoLnNoaWZ0KCkpLGh9ZnVuY3Rpb24gaSh0LGUsbil7Zm9yKHZhciBpPSEhZSxhPVtdLHM9MCxvPXQubGVuZ3RoO3M8bztzKz0yKWEucHVzaChbdFtzXSx0W3MrMV1dKTtmb3IodmFyIHUsYyxsLGg9cihhLC40LGksbiksZj1hLmxlbmd0aCxnPVtdLHM9MDtzPGYtMTtzKyspdT1oWzIqc10sYz1oWzIqcysxXSxsPWFbcysxXSxnLnB1c2goW1wiQ1wiLHVbMF0sdVsxXSxjWzBdLGNbMV0sbFswXSxsWzFdXSk7cmV0dXJuIGkmJih1PWhbZl0sYz1oW2YrMV0sbD1hWzBdLGcucHVzaChbXCJDXCIsdVswXSx1WzFdLGNbMF0sY1sxXSxsWzBdLGxbMV1dKSksZ31mdW5jdGlvbiBhKHQpe3JldHVybiBuZXcgdSh0WzBdLHRbMV0pfWZ1bmN0aW9uIHModCxlKXtyZXR1cm4gdC54Kj1lLHQueSo9ZSx0fXZhciBvPW4oMyksdT1vLlZlY3RvcjI7dC5leHBvcnRzPXtjYXRtdWxsUm9tMmJlemllcjppfX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMTgpLGk9bigyMTYpO3IubGluaz1mdW5jdGlvbih0LGUpe3JldHVybiBuZXcgaSh7ZGltczp0LG5vZGVzOmV9KX0sdC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDEpLGk9bigxOCksYT1uKDIpLHM9XCIuLnhcIixvPVwiLi55XCIsdT1mdW5jdGlvbih0KXt1LnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtyLmV4dGVuZCh1LGkpLHIuYXVnbWVudCh1LHt0eXBlOlwibGlua1wiLG5vZGVzOm51bGwsZ2V0RnJvbUZpZWxkOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXREaW1zKCk7cmV0dXJuIHRbMl19LGdldFRvRmllbGQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldERpbXMoKTtyZXR1cm4gdFszXX0saW5pdERpbXM6ZnVuY3Rpb24odCl7dC51bnNoaWZ0KG8pLHQudW5zaGlmdChzKX0sZXhlY0ZyYW1lOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldEZyb21GaWVsZCgpLHI9ZS5nZXRUb0ZpZWxkKCksaT1bXTtyZXR1cm4gdC5lYWNoKGZ1bmN0aW9uKHQpe3ZhciBhPXRbbl0sdT10W3JdLGM9ZS5maW5kT2JqKGEpLGw9ZS5maW5kT2JqKHUpO3Rbc109W2MueCxsLnhdLHRbb109W2MueSxsLnldLGkucHVzaCh0KX0pLG5ldyBhKGkpfSxmaW5kT2JqOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLm5vZGVzLGk9bnVsbDtyZXR1cm4gci5lYWNoKG4sZnVuY3Rpb24oZSl7aWYoZS5pZD09PXQpcmV0dXJuIGk9ZSwhMX0pLGl9fSksdC5leHBvcnRzPXV9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDE4KSxpPXtkb3Q6bigyMTgpLHJlY3Q6bigyMTkpfTtyLnRyZWU9aSx0LmV4cG9ydHM9aX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oODEpLGk9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyByKHtkaW1zOnR9KX07dC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big4MSksYT1cIi4ueFwiLHM9XCIuLnlcIixvPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgaSh7ZGltczp0LGdldFN0YXRPYmplY3Q6ZnVuY3Rpb24odCxlKXt2YXIgbj1yLm1peCh7fSx0KTtyZXR1cm4gblthXT1bZS5zdGFydC54LGUuc3RhcnQueCxlLmVuZC54LGUuZW5kLnhdLG5bc109W2Uuc3RhcnQueSxlLmVuZC55LGUuZW5kLnksZS5zdGFydC55XSxufX0pfTt0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCxlLG4pe3JldHVybiBlPWV8fDEsbmV3IGkoe2RpbXM6dCxyYXRpbzplLG1vZGU6bn0pfXZhciBpPW4oMjIxKSxhPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIodCxlLFwic3F1YXJpZnlcIil9O2Euc3F1YXJpZnk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0LGUsXCJzcXVhcmlmeVwiKX0sYS5zbGljZURpY2U9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0LGUsXCJzbGljZS1kaWNlXCIpfSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7cmV0dXJuIDEtdH12YXIgaT1uKDEpLGE9bigxOCkscz1uKDI1OSksbz1uKDIpLHU9XCIuLnhcIixjPVwiLi55XCIsbD1cIl92YWx1ZVwiLGg9ZnVuY3Rpb24odCl7aC5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07aS5leHRlbmQoaCxhKSxpLmF1Z21lbnQoaCx7dHlwZTpcInRyZWVtYXBcIixtb2RlOlwic3F1YXJpZnlcIixyYXRpbzoxLGdldFZhbHVlRmllbGQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldERpbXMoKTtyZXR1cm4gdFszXXx8bH0sZ2V0Q2hpbGRyZW5GaWVsZDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0RGltcygpO3JldHVybiB0WzJdfSxpbml0RGltczpmdW5jdGlvbih0KXt0LnVuc2hpZnQoYyksdC51bnNoaWZ0KHUpfSxfY29weU9iamVjdDpmdW5jdGlvbih0KXt2YXIgZT1pLm1peCh7fSx0KTtyZXR1cm4gZX0sX2V4dHJhY3REYXRhOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXRoaXMsYT10Lmxlbmd0aC0xO2E+PTA7YS0tKXt2YXIgcz10W2FdLG89bi5fY29weU9iamVjdChzKTtvW3VdPVtdLG9bY109W10sb1t1XS5wdXNoKHMueCksb1tjXS5wdXNoKHIocy55K3MuZHkpKSxvW3VdLnB1c2gocy54KSxvW2NdLnB1c2gocihzLnkpKSxvW3VdLnB1c2gocy54K3MuZHgpLG9bY10ucHVzaChyKHMueSkpLG9bdV0ucHVzaChzLngrcy5keCksb1tjXS5wdXNoKHIocy55K3MuZHkpKSxlLnB1c2gobyk7dmFyIGw9bi5nZXRDaGlsZHJlbkZpZWxkKCk7aS5pc0FycmF5KHNbbF0pJiZuLl9leHRyYWN0RGF0YShzW2xdLGUpfX0sZXhlYzpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49W10scj1vLm1lcmdlLmFwcGx5KG51bGwsdCk7cmV0dXJuIG4ucHVzaChlLmV4ZWNGcmFtZShyKSksbn0sZXhlY0ZyYW1lOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10LnRvSlNPTigpLHI9KGUuZ2V0RGltcygpLG5ldyBzLlNxdWFyaWZ5KHtub2RlczpuLG1vZGU6ZS5tb2RlLGNoaWxkcmVuRmllbGQ6ZS5nZXRDaGlsZHJlbkZpZWxkKCksdmFsdWVGaWVsZDplLmdldFZhbHVlRmllbGQoKSxyYXRpbzplLnJhdGlvfSkpLGk9ci5nZXROb2RlcygpLG49W107ZS5fZXh0cmFjdERhdGEoaSxuKTt2YXIgdD1uZXcgbyhuKTtyZXR1cm4gdH19KSx0LmV4cG9ydHM9aH0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNDUpLGk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IHIoe2RpbXM6dCxiaW5XaWR0aDplfSl9O3QuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUsbil7dmFyIHI9W107cmV0dXJuIHMuZWFjaCh0LGZ1bmN0aW9uKHQpe3IucHVzaCh0KmUqbi8yKX0pLHJ9ZnVuY3Rpb24gaSh0LGUpe3ZhciBuPVtdO3JldHVybiBzLmVhY2godCxmdW5jdGlvbih0KXtuLnB1c2godCplLzIpfSksbn12YXIgYT1uKDQ1KSxzPW4oMSksbz1mdW5jdGlvbih0LGUsbil7cmV0dXJuIG5ldyBhKHtyYXRpbzpufHwuNSxkaW1zOnQsYmluV2lkdGg6ZXx8LjAzLF9nZXREaW1WYXVlczpmdW5jdGlvbih0LGUsbil7dmFyIHI9dGhpcyxpPXIuZ2V0RGltUmFuZ2UoZSksYT1pLm1heC1pLm1pbixvPVtdO3JldHVybiBzLmVhY2gobixmdW5jdGlvbihlKXtvLnB1c2godCthKmUpfSksb30sdG9CaW46ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0QmluRGltcygpO2lmKG48Mil0aHJvd1widGhlIGJpbi5yZWN0IG1ldGhvZCBvbmx5IHN1cHBvcnQgMiBkaW1lbnNzaW9uIVwiO3ZhciBhPW5bMF0scz1uWzFdLG89ZS5iaW5XaWR0aCx1PWUucmF0aW8sYz1lLl9jZW50ZXIoW3RbYV0sdFtzXV0pLGw9cihbLS41LC0xLjUsLS41LC41LDEuNSwuNV0sbyx1KSxoPWkoWy0xLDAsMSwxLDAsLTFdLG8pO3RbYV09ZS5fZ2V0RGltVmF1ZXMoY1swXSxhLGwpLHRbc109ZS5fZ2V0RGltVmF1ZXMoY1sxXSxzLGgpfSxfY2VudGVyOmZ1bmN0aW9uKHQpe3ZhciBlLG4scixpPXRoaXMsYT1pLmJpbldpZHRoLHM9aS5nZXRCaW5EaW1zKCksbz1zWzBdLHU9aS5nZXREaW1SYW5nZShvKSxjPWEqKHUubWF4LXUubWluKS8yLGw9c1sxXSxoPWkuZ2V0RGltUmFuZ2UobCksZj1hKihoLm1heC1oLm1pbikvMixnPWkucmF0aW87cmV0dXJuIG49W3RbMF0vKGMqZyksdFsxXS9mXSxyPWkuX2NlbnRlckZvckJhc2lzKG4pLGU9W3JbMF0qYyxyWzFdKmZdfSxfY2hrT2RkOmZ1bmN0aW9uKHQpe3ZhciBlPXBhcnNlSW50KHQpO3JldHVybiBlPyEhKGUlMik6XCIwXCJ9LF9hcm91bmRYOmZ1bmN0aW9uKHQpe3ZhciBlLG4scixpPXRoaXM7cmV0dXJuIHQ9dDwxPzE6dCxpLl9jaGtPZGQodCk/bj1yPXBhcnNlSW50KHQpKy41OnQlMj09PTA/bj1yPXBhcnNlSW50KHQpLS41OihuPXBhcnNlSW50KHQpLS41LHI9bisyKSxlPVtuLHJdfSxfYXJvdW5kWTpmdW5jdGlvbih0KXt2YXIgZSxuLHI7cmV0dXJuIHQ9dDwxPzE6dCxuPXBhcnNlSW50KHQpLHI9bisxLGU9W24scl19LF9zaG9ydFBvaW50OmZ1bmN0aW9uKHQsZSxuKXt2YXIgcixpLGE9dGhpcyxzPSh0WzFdLS41KSU0OzE9PT1zP2EuX2Noa09kZChlWzFdKT8ocj1bdFswXSxlWzBdXSxpPVt0WzFdLGVbMV1dKToocj1bdFsxXSxlWzBdXSxpPVt0WzBdLGVbMV1dKTphLl9jaGtPZGQoZVswXSk/KHI9W3RbMF0sZVswXV0saT1bdFsxXSxlWzFdXSk6KHI9W3RbMV0sZVswXV0saT1bdFswXSxlWzFdXSk7dmFyIG89TWF0aC5hYnMoblswXS1yWzBdKStNYXRoLmFicyhuWzFdLXJbMV0pLHU9TWF0aC5hYnMoblswXS1pWzBdKStNYXRoLmFicyhuWzFdLWlbMV0pO3JldHVybiBvPT09dT9yWzBdPGlbMF0/cjppOm88dT9yOml9LF9jZW50ZXJGb3JCYXNpczpmdW5jdGlvbih0KXt2YXIgZSxuLHIsaSxhPXRoaXMscz1hLl9hcm91bmRYKHRbMF0pLG89YS5yYXRpbztyZXR1cm4gc1swXT09PXNbMV0/KHI9c1swXSxyPjImJmEuX2Noa09kZChyLzIpPyh0WzFdPXRbMV08MT8xOnRbMV0saT1hLl9jaGtPZGQocGFyc2VJbnQodFsxXSkpP3BhcnNlSW50KHRbMV0pKzE6cGFyc2VJbnQodFsxXSkpOih0WzFdPXRbMV08MT8xOnRbMV0saT1hLl9jaGtPZGQocGFyc2VJbnQodFsxXSkpP3BhcnNlSW50KHRbMV0pOnBhcnNlSW50KHRbMV0pLTEpLGU9W3IsaV0pOih0WzFdPXRbMV08MT8xOnRbMV0sbj1hLl9hcm91bmRZKHRbMV0pLGU9YS5fc2hvcnRQb2ludChzLG4sdCkpLGVbMF09ZVswXSpvLGV9fSl9O3QuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9e2RvdDpuKDIyMikscmVjdDpuKDIyNyksaGV4Om4oMjIzKSxxdWFudGlsZTpuKDIyNSl9O3QuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9big4Mik7ci5sZXR0ZXI9bigyMjYpLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big4MiksaT1mdW5jdGlvbih0LGUpe3JldHVybiBuZXcgcih7ZGltczp0LGJpbldpZHRoOmUsZnJhY3Rpb25zOjR9KX07dC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDQ1KSxpPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyByKHtkaW1zOnQsYmluV2lkdGg6ZSx0b0JpbjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXRCaW5EaW1zKCk7aWYobi5sZW5ndGg8MSl0aHJvd1widGhlIGJpbi5yZWN0IG1ldGhvZCBzdXBwb3J0IGZvciBtaW5pbXVtIG9uZSBkaW1lbnNpb24hXCI7aWYoMT09PW4ubGVuZ3RoKXt2YXIgcj1uWzBdO3Rbcl09ZS5fZ2V0VmFsdWVSYW5nZShyLHRbcl0pfWVsc2V7dmFyIGk9blswXSxhPW5bMV0scz1lLl9nZXRWYWx1ZVJhbmdlKGksdFtpXSksbz1lLl9nZXRWYWx1ZVJhbmdlKGEsdFthXSk7dFtpXT1bc1swXSxzWzBdLHNbMV0sc1sxXV0sdFthXT1bb1swXSxvWzFdLG9bMV0sb1swXV19fSxfZ2V0VmFsdWVSYW5nZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLmJpbldpZHRoLGk9bi5nZXREaW1SYW5nZSh0KSxhPWkubWF4LWkubWluLHM9bi5nZXRDZW50ZXJWYWx1ZShlLGkubWF4LGkubWluKTtyZXR1cm5bcy1hKnIqMS8yLHMrYSpyKjEvMl19fSl9O3QuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUsbil7cmV0dXJuIGU9ZXx8LjAxLG5ldyBpKHtkaW1zOnQsYmFuZFdpZHRoOmUsa2VybmVsVHlwZTpufSl9dmFyIGk9bigyMjkpLGE9bigyMzApLHM9e307cy5rZXJuZWw9e30scy5rZXJuZWwudW5pZm9ybT1mdW5jdGlvbih0LGUpe3JldHVybiByKHQsZSxcInVuaWZvcm1cIil9LHMua2VybmVsLnRyaWFuZ3VsYXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0LGUsXCJ0cmlhbmd1bGFyXCIpfSxzLmtlcm5lbC5lcGFuZWNobmlrb3Y9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0LGUsXCJlcGFuZWNobmlrb3ZcIil9LHMua2VybmVsLnF1YXJ0aWM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0LGUsXCJxdWFydGljXCIpfSxzLmtlcm5lbC50cml3ZWlnaHQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0LGUsXCJ0cml3ZWlnaHRcIil9LHMua2VybmVsLnRyaWN1YmU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0LGUsXCJ0cmljdWJlXCIpfSxzLmtlcm5lbC5nYXVzc2lhbj1mdW5jdGlvbih0LGUpe3JldHVybiByKHQsZSxcImdhdXNzaWFuXCIpfSxzLmtlcm5lbC5jb3NpbmU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0LGUsXCJjb3NpbmVcIil9LHMubm9ybWFsPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGU9ZXx8LjAxLG5ldyBhKHtkaW1zOnQsYmFuZFdpZHRoOmV9KX0sdC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigyKSxhPW4oNzgpLHM9big4Myksbz1cIi4uZGVuc2l0eVwiLHU9ZnVuY3Rpb24odCl7dS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQodSxzKSxyLmF1Z21lbnQodSx7a2VybmVsVHlwZTpcIlwiLGV4ZWNGcmFtZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5rZXJuZWxUeXBlO2lmKCFuKXJldHVybiB0O3ZhciByPWFbbl0scz1lLmdldERpbXMoKSxvPVtdO3JldHVybiAyPT09cy5sZW5ndGg/bz1lLl9nZXRPbmVEaW1EZW5zaXR5KHQscixzKTozPT09cy5sZW5ndGgmJihvPWUuX2dldFR3b0RpbURlbnNpdHkodCxyLHMpKSxuZXcgaShvKX0sX2dldE9uZURpbURlbnNpdHk6ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgaT1uW24ubGVuZ3RoLTJdLGE9dC5jb2xBcnJheShpKSxzPXRoaXMuZ2V0V2luZG93V2lkdGgodCxpKSx1PXRoaXMuZ2V0Q29vcmRpbmF0ZSh0LGkscyksYz11Lmxlbmd0aCxsPWEubGVuZ3RoLGg9dC5yb3dPYmplY3QoMCksZj1bXSxnPTA7ZzxjO2crKyl7Zm9yKHZhciBwPTAsdj11W2ddLGQ9MDtkPGw7ZCsrKXArPWUoKHYtYVtkXSkvcyk7dmFyIHg9MS8obCpzKSpwLG09ci5taXgoe30saCk7bVtpXT12LG1bb109eCxmW2ddPW19cmV0dXJuIGZ9LF9nZXRUd29EaW1EZW5zaXR5OmZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIGk9bltuLmxlbmd0aC0zXSxhPW5bbi5sZW5ndGgtMl0scz10aGlzLmdldFdpbmRvd1dpZHRoKHQsaSksdT10aGlzLmdldFdpbmRvd1dpZHRoKHQsYSksYz10aGlzLmdldENvb3JkaW5hdGUodCxpLHMpLGw9Yy5sZW5ndGgsaD10aGlzLmdldENvb3JkaW5hdGUodCxhLHUpLGY9aC5sZW5ndGgsZz10LnJvd0NvdW50KCkscD10LnJvd09iamVjdCgwKSx2PVtdLGQ9MDtkPGw7ZCsrKWZvcih2YXIgeD0wO3g8Zjt4Kyspe2Zvcih2YXIgbT0wLHk9Y1tkXSxfPWhbeF0sUz0wO1M8ZztTKyspbSs9ZSgoeS10LmRhdGFbU11baV0pL3MpKmUoKF8tdC5kYXRhW1NdW2FdKS91KTt2YXIgdz0xLyhnKnMqdSkqbSxiPXIubWl4KHt9LHApO2JbaV09eSxiW2FdPV8sYltvXT13LHYucHVzaChiKX1yZXR1cm4gdn19KSx0LmV4cG9ydHM9dX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDIpLGE9big4Mykscz1cIi4uZGVuc2l0eVwiLG89ZnVuY3Rpb24odCl7by5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQobyxhKSxyLmF1Z21lbnQobyx7ZXhlY0ZyYW1lOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLG49dC5yb3dPYmplY3QoMCksYT1lLmdldERpbXMoKSxvPWFbYS5sZW5ndGgtMl0sdT10aGlzLmdldFdpbmRvd1dpZHRoKHQsbyksYz10aGlzLmdldENvb3JkaW5hdGUodCxvLHUpLGw9Yy5sZW5ndGgsaD1pLm1lYW4odCxvKSxmPWkuc3RhbmRhcmRfZGV2aWF0aW9uKHQsbyksZz1bXSxwPTA7cDxsO3ArKyl7dmFyIHY9Y1twXSxkPWUuZ2V0Tm9ybWFsKHYsaCxmKSx4PXIubWl4KHt9LG4pO3hbb109dix4W3NdPWQsZy5wdXNoKHgpfXJldHVybiBuZXcgaShnKX0sZ2V0Tm9ybWFsOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj0xLyhNYXRoLnNxcnQoMipNYXRoLlBJKSpuKSpNYXRoLmV4cCgtKHQtZSkqKHQtZSkvKDIqbipuKSk7cmV0dXJuIHJ9fSksdC5leHBvcnRzPW99LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj17c3ByZWFkOntyYW5nZTpuKDIzMiksc2Q6bigyMzMpLHNlOm4oMjM0KX0sY29uZmk6e319O3QuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big1NCksaT1uKDIpLGE9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyByKHtkaW1zOnQsdHJhbnNmb3JtOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5yb3dPYmplY3QoMCk7cmV0dXJuIG5bZV09aS5yYW5nZSh0LGUpLG5ldyBpKFtuXSl9fSl9O3QuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big1NCksaT1uKDIpLGE9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyByKHtkaW1zOnQsdHJhbnNmb3JtOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5yb3dPYmplY3QoMCkscj1pLm1lYW4odCxlKSxhPWkuc2QodCxlKTtyZXR1cm4gbltlXT1bci1hLHIrYV0sbmV3IGkoW25dKX19KX07dC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDU0KSxpPW4oMiksYT1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IHIoe2RpbXM6dCx0cmFuc2Zvcm06ZnVuY3Rpb24odCxlKXt2YXIgbj10LnJvd09iamVjdCgwKSxyPWkubWVhbih0LGUpLGE9aS5zZSh0LGUpO3JldHVybiBuW2VdPVtyLWEscithXSxuZXcgaShbbl0pfX0pfTt0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDE0KSxhPW4oMjUpLHM9bigyMiksbz1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IGkoci5taXgoe30scyx7ZGltczp0LHJlZ3Jlc3Npb25UeXBlOlwiY3ViaWNcIixnZXRSZWdyZXNzaW9uOmZ1bmN0aW9uKHQpe3JldHVybiBhKFwicG9seW5vbWlhbFwiLHQsMyl9fSkpfTt0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDE0KSxhPW4oMjUpLHM9bigyMiksbz1uKDIpLHU9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBpKHIubWl4KHt9LHMse2RpbXM6dCxyZWdyZXNzaW9uVHlwZTpcImV4cFwiLHByZUV4ZWN1dGU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRZRGltKCk7ci5lYWNoKHQsZnVuY3Rpb24odCl7dmFyIG49by5taW4odCxlKTtpZihuPDApdGhyb3dcInRoZSBmaWVsZCBcIitlK1wiIGhhcyB2YWx1ZSBsZXNzIHRoYW4gMCx5b3UgY2FuJ3QgdXNlIHRoaXMgcmVncmVzc2lvbiFcIn0pfSxnZXRSZWdyZXNzaW9uOmZ1bmN0aW9uKHQpe3JldHVybiBhKFwiZXhwb25lbnRpYWxcIix0KX19KSl9O3QuZXhwb3J0cz11fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUpe2Zvcih2YXIgbj0wLHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIGk9dFtyXTtuKz1pKk1hdGgucG93KGUscil9cmV0dXJuIG59dmFyIGk9bigxKSxhPVtcImxpbmVhclwiLFwiY3ViaWNcIixcInF1YWRyYXRpY1wiXSxzPXtleGVjRm5jdGlvbjpmdW5jdGlvbih0LGUsbil7dmFyIHI7cmV0dXJuIHI9aS5pbmRleE9mKGEsdCk+PTA/cy5wb2x5KGUsbik6c1t0XT9zW3RdKGVbMF0sZVsxXSxuKTpufSxsaW5lYXI6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPVtlLHRdO3JldHVybiByKGksbil9LHBvbHk6ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0LGUpfSxsb2c6ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0K2UqTWF0aC5sb2cobil9LHBvdzpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHQqTWF0aC5wb3cobixlKX0sZXhwOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdCpNYXRoLnBvdyhNYXRoLkUsZSpuKX19O3QuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUsbil7cmV0dXJuIGU9ZXx8LjAxLG5ldyBhKHtkaW1zOnQsYmFuZFdpZHRoOmUsa2VybmVsVHlwZTpufSl9dmFyIGk9big1NSk7aS5tZWFuPW4oMjQyKSxpLm1lZGlhbj1uKDI0MyksaS5saW5lYXI9bigyMzkpLGkucXVhZHJhdGljPW4oMjQ1KSxpLmN1YmljPW4oMjM1KSxpLmxvZz1uKDI0MSksaS5wb3c9bigyNDQpLGkuZXhwPW4oMjM2KTt2YXIgYT1uKDI0MCk7aS5sb2Vzcz17fSxpLmxvZXNzLnVuaWZvcm09ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0LGUsXCJ1bmlmb3JtXCIpfSxpLmxvZXNzLnRyaWFuZ3VsYXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0LGUsXCJ0cmlhbmd1bGFyXCIpfSxpLmxvZXNzLmVwYW5lY2huaWtvdj1mdW5jdGlvbih0LGUpe3JldHVybiByKHQsZSxcImVwYW5lY2huaWtvdlwiKX0saS5sb2Vzcy5xdWFydGljPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIodCxlLFwicXVhcnRpY1wiKX0saS5sb2Vzcy50cml3ZWlnaHQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0LGUsXCJ0cml3ZWlnaHRcIil9LGkubG9lc3MudHJpY3ViZT1mdW5jdGlvbih0LGUpe3JldHVybiByKHQsZSxcInRyaWN1YmVcIil9LGkubG9lc3MuZ2F1c3NpYW49ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0LGUsXCJnYXVzc2lhblwiKX0saS5sb2Vzcy5jb3NpbmU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0LGUsXCJjb3NpbmVcIil9LHQuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMTQpLGE9bigyNSkscz1uKDIyKSxvPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgaShyLm1peCh7fSxzLHtkaW1zOnQscmVncmVzc2lvblR5cGU6XCJsaW5lYXJcIixnZXRSZWdyZXNzaW9uOmZ1bmN0aW9uKHQpe3JldHVybiBhKFwicG9seW5vbWlhbFwiLHQsMSl9fSkpfTt0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNTUpLGk9bigxKSxhPW4oNzgpLHM9bigyKSxvPW4oMTY4KSx1PWZ1bmN0aW9uKHQpe3Uuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2kuZXh0ZW5kKHUsciksaS5hdWdtZW50KHUse2tlcm5lbFR5cGU6XCJcIixrOjEwLGV4ZWNGcmFtZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXREaW1zKCkscj1bXTtpZigyPT09bi5sZW5ndGgpe3ZhciBhPWUuZ2V0WERpbSgpLG89ZS5nZXRZRGltKCksdT1lLmdldERhdGEodCksYz1lLmdldEludGVyQXJyYXkodCxhKSxsPWUuZXhlY1Ntb290aCh1LGMpLGg9dC5yb3dPYmplY3QoMCk7aS5lYWNoKGwsZnVuY3Rpb24odCl7dmFyIGU9aS5taXgoe30saCk7ZVthXT10WzBdLGVbb109dFsxXSxyLnB1c2goZSl9KX1lbHNle3ZhciBhPWUuZ2V0WERpbSgpLG89ZS5nZXRZRGltKCksZj1lLmdldFpEaW0oKSx1PWUuZ2V0RGF0YSh0KSxjPVtdO2NbMF09ZS5nZXRJbnRlckFycmF5KHQsYSksY1sxXT1lLmdldEludGVyQXJyYXkodCxvKTt2YXIgbD1lLmV4ZWNTbW9vdGhUaHJlZURpbSh1LGMpLGg9dC5yb3dPYmplY3QoMCk7aS5lYWNoKGwsZnVuY3Rpb24odCl7dmFyIGU9aS5taXgoe30saCk7ZVthXT10WzBdLGVbb109dFsxXSxlW2ZdPXRbMl0sci5wdXNoKGUpfSl9cmV0dXJuIG5ldyBzKHIpfSxleGVjU21vb3RoOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXRoaXMscj1lLmxlbmd0aCxpPXQubGVuZ3RoLHM9bi5rZXJuZWxUeXBlLG89YVtzXSx1PVtdLGM9W10sbD1lWzFdLWVbMF0saD0wO2g8cjtoKyspe2Zvcih2YXIgZixnLHAsdixkPTAseD0wLG09MCx5PTAsXz0wLFM9ZVtoXSx3PW4uZ2V0V2luZG93V2lkdGgoW1NdLHQsW2xdKVswXSxiPTA7YjxpO2IrKylnPXRbYl1bMF0scD10W2JdWzFdLGY9bygoUy1nKS93KSwwIT09ZiYmKGQrPWYseCs9ZipnLG0rPWYqZypnLHkrPWYqcCxfKz1mKmcqcCk7ZCptLXgqeCE9PTAmJihjWzFdPSh4KnktZCpfKS8oeCp4LWQqbSksY1swXT15L2QteC9kKmNbMV0sdj1jWzBdK2NbMV0qUyx1LnB1c2goW1Msdl0pKX1yZXR1cm4gdX0sZXhlY1Ntb290aFRocmVlRGltOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXRoaXMscj1lWzBdLmxlbmd0aCxpPWVbMV0ubGVuZ3RoLHM9dC5sZW5ndGgsdT1uLmtlcm5lbFR5cGUsYz1hW3VdLGw9W10saD1bXSxmPWVbMF1bMV0tZVswXVswXSxnPWVbMV1bMV0tZVsxXVswXSxwPTA7cDxyO3ArKylmb3IodmFyIHY9MDt2PGk7disrKXtmb3IodmFyIGQseCxtLHksXyxTPTAsdz0wLGI9MCxNPTAsQT0wLEM9MCxrPTAsVD0wLFA9MCxJPWVbMF1bcF0sRD1lWzFdW3ZdLEw9bi5nZXRXaW5kb3dXaWR0aChbSSxEXSx0LFtmLGddKSxSPUxbMF0sQj1MWzFdLEY9MDtGPHM7RisrKXg9dFtGXVswXSxtPXRbRl1bMV0seT10W0ZdWzJdLGQ9YygoSS14KS9SKSpjKChELW0pL0IpLDAhPT1kJiYoUys9ZCx3Kz1kKngsYis9ZCptLE0rPWQqeCptLEErPWQqeCp4LEMrPWQqbSptLGsrPWQqeSxUKz1kKngqeSxQKz1kKm0qeSk7dmFyIE89W1tTLHcsYl0sW3csQSxNXSxbYixNLENdXSxHPVtrLFQsUF07aD1vKE8sRyksaCYmKF89aFswXStoWzFdKkkraFsyXSpELGwucHVzaChbSSxELF9dKSl9cmV0dXJuIGx9LGdldFdpbmRvd1dpZHRoOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10aGlzLGk9ci5rLGE9ZS5sZW5ndGgscz1bXSxvPWVbMF0ubGVuZ3RoLTEsdT0wO2E8PWkmJihpPWEpLGUuc29ydChmdW5jdGlvbihlLHIpe2Zvcih2YXIgaT0wLGE9MCxzPTA7czxvO3MrKylpKz0oZVtzXS10W3NdKSooZVtzXS10W3NdKS8obltzXSpuW3NdKSxhKz0ocltzXS10W3NdKSoocltzXS10W3NdKS8obltzXSpuW3NdKTtyZXR1cm4gaS1hfSk7Zm9yKHZhciBjPTA7YzxvO2MrKyl7Zm9yKDtlW2ktMV1bY109PT1lWzBdW2NdOylpKys7dmFyIGw9MS4xKk1hdGguYWJzKGVbaS0xXVtjXS10W2NdKS9uW2NdO3UrPWwqbH11PU1hdGguc3FydCh1KTtmb3IodmFyIGM9MDtjPG87YysrKXNbY109dSpuW2NdO3JldHVybiBzfX0pLHQuZXhwb3J0cz11fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMTQpLGE9bigyNSkscz1uKDIyKSxvPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgaShyLm1peCh7fSxzLHtkaW1zOnQscmVncmVzc2lvblR5cGU6XCJsb2dcIixnZXRSZWdyZXNzaW9uOmZ1bmN0aW9uKHQpe3JldHVybiBhKFwibG9nYXJpdGhtaWNcIix0KX19KSl9O3QuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMiksYT1uKDE0KSxzPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgYSh7ZGltczp0LGdldFJlZ3Jlc3Npb25TdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm5cInkgPSBcIit0aGlzLmN1ck1lYW59LGV4ZWNTbW9vdGg6ZnVuY3Rpb24odCxlLG4pe3ZhciBhPXRoaXMscz1hLmdldFlEaW0oKSxvPWkubWVhbihuLHMpO2EuY3VyTWVhbj1vO3ZhciB1PVtdO3JldHVybiByLmVhY2goZSxmdW5jdGlvbih0KXt1LnB1c2goW3Qsb10pfSksdX19KX07dC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigyKSxhPW4oMTQpLHM9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBhKHtkaW1zOnQsZ2V0UmVncmVzc2lvblN0cmluZzpmdW5jdGlvbigpe3JldHVyblwieSA9IFwiK3RoaXMuY3VyTWVkaWFufSxleGVjU21vb3RoOmZ1bmN0aW9uKHQsZSxuKXt2YXIgYT10aGlzLHM9YS5nZXRZRGltKCksbz1pLm1lZGlhbihuLHMpO2EuY3VyTWVkaWFuPW87dmFyIHU9W107cmV0dXJuIHIuZWFjaChlLGZ1bmN0aW9uKHQpe3UucHVzaChbdCxvXSl9KSx1fX0pfTt0LmV4cG9ydHM9c30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDE0KSxhPW4oMjUpLHM9bigyMiksbz1uKDIpLHU9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBpKHIubWl4KHt9LHMse2RpbXM6dCxyZWdyZXNzaW9uVHlwZTpcInBvd1wiLHByZUV4ZWN1dGU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRZRGltKCk7ci5lYWNoKHQsZnVuY3Rpb24odCl7dmFyIG49by5taW4odCxlKTtpZihuPDApdGhyb3dcInRoZSBmaWVsZCBcIitlK1wiIGhhcyB2YWx1ZSBsZXNzIHRoYW4gMCx5b3UgY2FuJ3QgdXNlIHRoaXMgcmVncmVzc2lvbiFcIn0pfSxnZXRSZWdyZXNzaW9uOmZ1bmN0aW9uKHQpe3JldHVybiBhKFwicG93ZXJcIix0KX19KSl9O3QuZXhwb3J0cz11fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMTQpLGE9bigyNSkscz1uKDIyKSxvPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgaShyLm1peCh7fSxzLHtyZWdyZXNzaW9uVHlwZTpcInF1YWRyYXRpY1wiLGRpbXM6dCxnZXRSZWdyZXNzaW9uOmZ1bmN0aW9uKHQpe3JldHVybiBhKFwicG9seW5vbWlhbFwiLHQsMil9fSkpfTt0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTApLGk9bigyKSxhPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgcih7ZGltczp0LGluaXREaW1zOmZ1bmN0aW9uKHQpe3QucHVzaChcIi4uY291bnRcIil9LHRyYW5zZm9ybTpmdW5jdGlvbih0LGUpe3ZhciBuPXQucm93T2JqZWN0KDApO3JldHVybiBuW2VdPXQucm93Q291bnQoKSxuZXcgaShbbl0pfX0pfTt0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTApLGk9bigyKSxhPW4oMSkscz1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IHIoe2RpbXM6dCxnZXRTdGF0RGltczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuc3RhdDtpZih0KXJldHVybiB0LmdldFN0YXREaW1zKCk7dmFyIGU9dGhpcy5nZXREaW1zKCksbj1lLmxlbmd0aCxyPVtlW24tMV1dO3JldHVybiByfSxleGVjRnJhbWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRTdGF0RGltcygpLG49ZVtlLmxlbmd0aC0xXSxyPXRoaXMuZ2V0RGltcygpWzBdO3ImJnIhPT1uJiYodD1pLnNvcnQodCxyKSk7dmFyIHM9dGhpcy5zdGF0LG89W107aWYocyYmXCJkZW5zaXR5XCI9PT1zLnR5cGUpe3ZhciB1PXMuZ2V0V2luZG93V2lkdGgodCxyKSxjPXQuY29sQXJyYXkobiksbD0wO2EuZWFjaChjLGZ1bmN0aW9uKHQpe2wrPXQqdSxvLnB1c2gobCl9KX1lbHNlIG89aS5jdW11bGF0aXZlKHQsbik7cmV0dXJuIHQuY29sUmVwbGFjZShuLG8pLHR9fSl9O3QuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9e2NvdW50Om4oMjQ2KSxtYXg6bigyNDkpLG1pbjpuKDI1MiksbWVhbjpuKDI1MCksbWVkaWFuOm4oMjUxKSxwcm9wb3J0aW9uOm4oMjU1KSxyYW5nZTpuKDI1NikscGVyY2VudDpuKDI1NCksc2Q6bigyNTcpLG1vZGU6bigyNTMpLHN1bTpuKDI1OCksY3VtdWxhdGl2ZTpuKDI0Nyl9O3QuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxMCksaT1uKDIpLGE9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyByKHtkaW1zOnQsdHJhbnNmb3JtOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5yb3dPYmplY3QoMCk7cmV0dXJuIG5bZV09aS5tYXgodCxlKSxuZXcgaShbbl0pfX0pfTt0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTApLGk9bigyKSxhPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgcih7ZGltczp0LHRyYW5zZm9ybTpmdW5jdGlvbih0LGUpe3ZhciBuPXQucm93T2JqZWN0KDApO3JldHVybiBuW2VdPWkubWVhbih0LGUpLG5ldyBpKFtuXSl9fSl9O3QuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxMCksaT1uKDIpLGE9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyByKHtkaW1zOnQsdHJhbnNmb3JtOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5yb3dPYmplY3QoMCk7cmV0dXJuIG5bZV09aS5tZWRpYW4odCxlKSxuZXcgaShbbl0pfX0pfTt0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTApLGk9bigyKSxhPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgcih7ZGltczp0LHRyYW5zZm9ybTpmdW5jdGlvbih0LGUpe3ZhciBuPXQucm93T2JqZWN0KDApO3JldHVybiBuW2VdPWkubWluKHQsZSksbmV3IGkoW25dKX19KX07dC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEwKSxpPW4oMiksYT1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IHIoe2RpbXM6dCx0cmFuc2Zvcm06ZnVuY3Rpb24odCxlKXt2YXIgbj10LnJvd09iamVjdCgwKTtyZXR1cm4gbltlXT1pLm1vZGUodCxlKSxuZXcgaShbbl0pfX0pfTt0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDEwKSxhPW4oMikscz1uKDg0KSxvPVwiLi5wZXJjZW50XCIsdT1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IGkoci5taXgoe2RpbXM6dCxpbml0RGltczpmdW5jdGlvbih0KXt2YXIgZT10W3QubGVuZ3RoLTFdO3Quc3BsaWNlKHQubGVuZ3RoLTEsMCxvKSx0aGlzLnBlcmNldERpbT1lfSxnZXRTdGF0RGltczpmdW5jdGlvbigpe3JldHVybltvXX0sdHJhbnNmb3JtOmZ1bmN0aW9uKHQsZSxuKXtlPXRoaXMucGVyY2V0RGltO3ZhciByPWEuc3VtKHQsZSksaT1hLnN1bShuLGUpLHM9dC5yb3dPYmplY3QoMCk7cmV0dXJuIHNbXCIuLnBlcmNlbnRcIl09ci9pLHNbZV09cixuZXcgYShbc10pfX0scykpfTt0LmV4cG9ydHM9dX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDEwKSxhPW4oMikscz1uKDg0KSxvPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgaShyLm1peCh7ZGltczp0LGluaXREaW1zOmZ1bmN0aW9uKHQpe3QucHVzaChcIi4ucHJvcG9ydGlvblwiKX0sdHJhbnNmb3JtOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10LnJvd0NvdW50KCkvbi5yb3dDb3VudCgpLGk9dC5yb3dPYmplY3QoMCk7cmV0dXJuIGlbZV09cixuZXcgYShbaV0pfX0scykpfTt0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTApLGk9bigyKSxhPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgcih7ZGltczp0LHRyYW5zZm9ybTpmdW5jdGlvbih0LGUpe3ZhciBuPXQucm93T2JqZWN0KDApO3JldHVybiBuW2VdPWkubWF4KHQsZSktaS5taW4odCxlKSxuZXcgaShbbl0pfX0pfTt0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTApLGk9bigyKSxhPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgcih7ZGltczp0LHRyYW5zZm9ybTpmdW5jdGlvbih0LGUpe3ZhciBuPXQucm93T2JqZWN0KDApO3JldHVybiBuW2VdPWkuc3RhbmRhcmRfZGV2aWF0aW9uKHQsZSksbmV3IGkoW25dKX19KX07dC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEwKSxpPW4oMiksYT1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IHIoe2RpbXM6dCx0cmFuc2Zvcm06ZnVuY3Rpb24odCxlKXt2YXIgbj10LnJvd09iamVjdCgwKTtyZXR1cm4gbltlXT1pLnN1bSh0LGUpLG5ldyBpKFtuXSl9fSl9O3QuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9big4NSk7ci5TcXVhcmlmeT1uKDI2MCksdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big4NSksYT1mdW5jdGlvbih0KXthLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtyLmV4dGVuZChhLGkpLHIuYXVnbWVudChhLHttb2RlOlwic3F1YXJpZnlcIixyYXRpbzouNSooMStNYXRoLnNxcnQoNSkpLHByb2Nlc3NOb2RlczpmdW5jdGlvbih0LGUsbil7dmFyIGk9dGhpcztpZihyLmlzQXJyYXkodCkmJnQubGVuZ3RoKXt2YXIgYSxzLG8sdT1bXSxjPXRbMF0sbD1pLm1vZGUsaD1pLnZhbHVlRmllbGQsZj1pLmNoaWxkcmVuRmllbGQsZz10LnNsaWNlKCkscD0xLzAsdj1cInNsaWNlXCI9PT1sP2UuZHg6XCJkaWNlXCI9PT1sP2UuZHk6XCJzbGljZS1kaWNlXCI9PT1sP2MuZGVwdGglMj9lLmR5OmUuZHg6TWF0aC5taW4oZS5keCxlLmR5KTtmb3IoaS5zY2FsZShnLGUuZHgqZS5keS9uKSx1LmFyZWE9MDsobz1nLmxlbmd0aCk+MDspdS5wdXNoKGE9Z1tvLTFdKSx1LmFyZWErPWEuYXJlYSxcInNxdWFyaWZ5XCIhPT1sfHwocz1pLndvcnN0KHUsdikpPD1wPyhnLnBvcCgpLHA9cyk6KHUuYXJlYS09dS5wb3AoKS5hcmVhLGkucG9zaXRpb24odSx2LGUsITEpLHY9TWF0aC5taW4oZS5keCxlLmR5KSx1Lmxlbmd0aD11LmFyZWE9MCxwPTEvMCk7dS5sZW5ndGgmJihpLnBvc2l0aW9uKHUsdixlLCEwKSx1Lmxlbmd0aD11LmFyZWE9MCksdC5mb3JFYWNoKGZ1bmN0aW9uKHQpe2kucHJvY2Vzc05vZGVzKHRbZl0saS5wYWQodCksdFtoXSl9KX19LHdvcnN0OmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuLHI9dGhpcyxpPXQuYXJlYSxhPTAscz0xLzAsbz0tMSx1PXQubGVuZ3RoOysrbzx1Oykobj10W29dLmFyZWEpJiYobjxzJiYocz1uKSxuPmEmJihhPW4pKTtyZXR1cm4gaSo9aSxlKj1lLGk/TWF0aC5tYXgoZSphKnIucmF0aW8vaSxpLyhlKnMqci5yYXRpbykpOjEvMH19KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMjYyKTt0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBuKHQsZSxyKXtyPXJ8fDA7Zm9yKHZhciBpIGluIGUpaWYoZS5oYXNPd25Qcm9wZXJ0eShpKSl7dmFyIG89ZVtpXTtudWxsIT09byYmcy5pc09iamVjdChvKT8ocy5pc09iamVjdCh0W2ldKXx8KHRbaV09e30pLHI8YT9uKHRbaV0sZVtpXSk6dFtpXT1lW2ldKTpzLmlzQXJyYXkobyk/KHRbaV09W10sdFtpXT10W2ldLmNvbmNhdChvKSk6dm9pZCAwIT09byYmKHRbaV09ZVtpXSl9fXZhciByPU9iamVjdC5wcm90b3R5cGUsaT1yLnRvU3RyaW5nLGE9NSxzPXtcbnN1YnN0aXR1dGU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdCYmZT90LnJlcGxhY2UoL1xcXFw/XFx7KFtee31dKylcXH0vZyxmdW5jdGlvbih0LG4pe3JldHVyblwiXFxcXFwiPT09dC5jaGFyQXQoMCk/dC5zbGljZSgxKTp2b2lkIDA9PT1lW25dP1wiXCI6ZVtuXX0pOnR9LHVjZmlyc3Q6ZnVuY3Rpb24odCl7cmV0dXJuIHQrPVwiXCIsdC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSt0LnN1YnN0cmluZygxKX0saXNTdHJpbmc6ZnVuY3Rpb24odCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHR9LGlzTnVtYmVyOmZ1bmN0aW9uKHQpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiB0fSxpc051bWVyaWM6ZnVuY3Rpb24odCl7cmV0dXJuIWlzTmFOKHBhcnNlRmxvYXQodCkpJiZpc0Zpbml0ZSh0KX0saXNCb29sZWFuOmZ1bmN0aW9uKHQpe3JldHVyblwiYm9vbGVhblwiPT10eXBlb2YgdH0saXNGdW5jdGlvbjpmdW5jdGlvbih0KXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0fSxpc0FycmF5OlwiaXNBcnJheVwiaW4gQXJyYXk/QXJyYXkuaXNBcnJheTpmdW5jdGlvbih0KXtyZXR1cm5cIltvYmplY3QgQXJyYXldXCI9PT1pLmNhbGwodCl9LGlzRGF0ZTpmdW5jdGlvbih0KXtyZXR1cm5cIltvYmplY3QgRGF0ZV1cIj09PWkuY2FsbCh0KX0saXNOdWxsOmZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10fHxudWxsPT09dH0sbm90TnVsbDpmdW5jdGlvbih0KXtyZXR1cm4hcy5pc051bGwodCl9LGlzQmxhbms6ZnVuY3Rpb24odCl7aWYocy5pc0FycmF5KHQpKXJldHVybiAwPT09dC5sZW5ndGg7aWYocy5pc09iamVjdCh0KSl7dmFyIGU9MDtyZXR1cm4gcy5lYWNoKHQsZnVuY3Rpb24odCxuKXtlKyt9KSwwPT09ZX1yZXR1cm4hMX0saXNPYmplY3Q6XCJbb2JqZWN0IE9iamVjdF1cIj09PWkuY2FsbChudWxsKT9mdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9PXQmJnZvaWQgMCE9PXQmJlwiW29iamVjdCBPYmplY3RdXCI9PT1pLmNhbGwodCkmJnZvaWQgMD09PXQub3duZXJEb2N1bWVudH06ZnVuY3Rpb24odCl7cmV0dXJuXCJbb2JqZWN0IE9iamVjdF1cIj09PWkuY2FsbCh0KX0sZXh0ZW5kOmZ1bmN0aW9uKHQsZSxuLHIpe3MuaXNGdW5jdGlvbihlKXx8KG49ZSxlPXQsdD1mdW5jdGlvbigpe30pO3ZhciBpPU9iamVjdC5jcmVhdGU/ZnVuY3Rpb24odCxlKXtyZXR1cm4gT2JqZWN0LmNyZWF0ZSh0LHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZX19KX06ZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBuKCl7fW4ucHJvdG90eXBlPXQ7dmFyIHI9bmV3IG47cmV0dXJuIHIuY29uc3RydWN0b3I9ZSxyfSxhPWkoZS5wcm90b3R5cGUsdCk7cmV0dXJuIHQucHJvdG90eXBlPXMubWl4KGEsdC5wcm90b3R5cGUpLHQuc3VwZXJjbGFzcz1pKGUucHJvdG90eXBlLGUpLHMubWl4KGEsbikscy5taXgodCxyKSx0fSxhdWdtZW50OmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1zLnRvQXJyYXkoYXJndW1lbnRzKSxuPTE7bjxlLmxlbmd0aDtuKyspe3ZhciByPWVbbl07cy5pc0Z1bmN0aW9uKHIpJiYocj1yLnByb3RvdHlwZSkscy5taXgodC5wcm90b3R5cGUscil9fSx0b0FycmF5OmZ1bmN0aW9uKHQpe3JldHVybiB0JiZ0Lmxlbmd0aD9BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0KTpbXX0sbWl4OmZ1bmN0aW9uKCl7dmFyIHQ9cy50b0FycmF5KGFyZ3VtZW50cyksZT10WzBdO2lmKGU9PT0hMCl7ZT10WzFdO2Zvcih2YXIgcj0yO3I8dC5sZW5ndGg7cisrKXt2YXIgaT10W3JdO24oZSxpKX19ZWxzZSBmb3IodmFyIHI9MTtyPHQubGVuZ3RoO3IrKyl7dmFyIGk9dFtyXTtmb3IodmFyIGEgaW4gaSlpLmhhc093blByb3BlcnR5KGEpJiZcImNvbnN0cnVjdG9yXCIhPT1hJiYoZVthXT1pW2FdKX1yZXR1cm4gZX0sZWFjaDpmdW5jdGlvbih0LGUpe2lmKHQpaWYocy5pc09iamVjdCh0KSl7Zm9yKHZhciBuIGluIHQpaWYodC5oYXNPd25Qcm9wZXJ0eShuKSl7dmFyIHI9ZSh0W25dLG4pO2lmKHI9PT0hMSlicmVha319ZWxzZSBpZih0Lmxlbmd0aClmb3IodmFyIGk9MDtpPHQubGVuZ3RoO2krKyl7dmFyIHI9ZSh0W2ldLGkpO2lmKHI9PT0hMSlicmVha319LHJlcXVlc3RBbmltYXRpb25GcmFtZTpmdW5jdGlvbih0KXt2YXIgZT13aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lfHx3aW5kb3cud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lfHxmdW5jdGlvbih0KXtyZXR1cm4gc2V0VGltZW91dCh0LDE2KX07cmV0dXJuIGUodCl9LGNhbmNlbEFuaW1hdGlvbkZyYW1lOmZ1bmN0aW9uKHQpe3ZhciBlPXdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZXx8d2luZG93LndlYmtpdENhbmNlbEFuaW1hdGlvbkZyYW1lfHxmdW5jdGlvbih0KXtyZXR1cm4gY2xlYXJUaW1lb3V0KHQpfTtyZXR1cm4gZSh0KX19O3QuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUpe3ZhciBuPWUudG9TdHJpbmcoKSxyPW4uaW5kZXhPZihcIi5cIik7aWYocj09PS0xKXJldHVybiBNYXRoLnJvdW5kKHQpO3ZhciBpPW4uc3Vic3RyKHIrMSkubGVuZ3RoO3JldHVybiBwYXJzZUZsb2F0KHQudG9GaXhlZChpKSl9dmFyIGk9T2JqZWN0LnByb3RvdHlwZSxhPShpLnRvU3RyaW5nLG4oMjYxKSk7YS5taXgoYSx7bWl4aW46ZnVuY3Rpb24odCxlKXtpZih0JiZlKXt0Ll9taXhpbnM9ZSx0LkFUVFJTPXQuQVRUUlN8fHt9O3ZhciBuPXt9O2EuZWFjaChlLGZ1bmN0aW9uKGUpe2EuYXVnbWVudCh0LGUpO3ZhciByPWUuQVRUUlM7ciYmYS5taXgobixyKX0pLHQuQVRUUlM9YS5taXgobix0LkFUVFJTKX19LG1hcDpmdW5jdGlvbih0LGUpe3ZhciBuPVtdO3JldHVybiBhLmVhY2godCxmdW5jdGlvbih0LHIpe24ucHVzaChlKHQscikpfSksbn0sZmlsdGVyOmZ1bmN0aW9uKHQsZSl7dmFyIG49W107cmV0dXJuIGEuZWFjaCh0LGZ1bmN0aW9uKHQscil7ZSh0LHIpJiZuLnB1c2godCl9KSxufSxndWlkOmZ1bmN0aW9uKCl7dmFyIHQ9e307cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBlPWV8fFwiZ1wiLHRbZV0/dFtlXSs9MTp0W2VdPTEsZSt0W2VdfX0oKSxpbkFycmF5OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGEuaW5kZXhPZih0LGUpIT09LTF9LGluZGV4T2Y6ZnVuY3Rpb24odCxlKXt2YXIgbj1BcnJheS5wcm90b3R5cGUuaW5kZXhPZjtpZihuKXJldHVybiBuLmNhbGwodCxlKTtmb3IodmFyIHI9LTEsaT0wO2k8dC5sZW5ndGg7aSsrKWlmKHRbaV09PT1lKXtyPWk7YnJlYWt9cmV0dXJuIHJ9LHJlbW92ZTpmdW5jdGlvbih0LGUpe3ZhciBuPWEuaW5kZXhPZih0LGUpO24hPT0tMSYmdC5zcGxpY2UobiwxKX0sZW1wdHk6ZnVuY3Rpb24odCl7aWYoISh0IGluc3RhbmNlb2YgQXJyYXkpKWZvcih2YXIgZT10Lmxlbmd0aC0xO2U+PTA7ZS0tKWRlbGV0ZSB0W2VdO3QubGVuZ3RoPTB9LGVxdWFsc0FycmF5OmZ1bmN0aW9uKHQsZSl7aWYodD09PWUpcmV0dXJuITA7aWYoIXR8fCFlKXJldHVybiExO2lmKHQubGVuZ3RoIT09ZS5sZW5ndGgpcmV0dXJuITE7Zm9yKHZhciBuPSEwLHI9MDtyPHQubGVuZ3RoO3IrKylpZih0W3JdIT09ZVtyXSl7bj0hMTticmVha31yZXR1cm4gbn0sd3JhcEJlaGF2aW9yOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRbXCJfd3JhcF9cIitlXT1mdW5jdGlvbihuKXt0W2VdKG4pfX0sZ2V0V3JhcEJlaGF2aW9yOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRbXCJfd3JhcF9cIitlXX0sZml4ZWRCYXNlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIodCxlKX0sbGVuZ3RoOmZ1bmN0aW9uKHQpe2lmKGEuaXNBcnJheSh0KSlyZXR1cm4gdC5sZW5ndGg7aWYoYS5pc09iamVjdCh0KSl7dmFyIGU9MDtyZXR1cm4gYS5lYWNoKHQsZnVuY3Rpb24oKXtlKyt9KSxlfXJldHVybiAwfSxjbG9uZTpmdW5jdGlvbih0KXtpZihcIm9iamVjdFwiIT10eXBlb2YgdHx8bnVsbD09PXQpcmV0dXJuIHQ7aWYoYS5pc0FycmF5KHQpKWZvcih2YXIgZT1bXSxuPTAscj10Lmxlbmd0aDtuPHI7bisrKVwib2JqZWN0XCI9PXR5cGVvZiB0W25dJiZudWxsIT10W25dP2Vbbl09YS5jbG9uZSh0W25dKTplW25dPXRbbl07ZWxzZXt2YXIgZT17fTtmb3IodmFyIG4gaW4gdClcIm9iamVjdFwiPT10eXBlb2YgdFtuXSYmbnVsbCE9dFtuXT9lW25dPWEuY2xvbmUodFtuXSk6ZVtuXT10W25dfXJldHVybiBlfX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big2KSxpPW4oMjY2KSxhPW4oMjY3KSxzPW4oODgpLG89KG4oMTMpLG4oMjY1KSksdT1uKDMpLGM9dS5WZWN0b3IzLGw9ZnVuY3Rpb24odCl7fTtyLmF1Z21lbnQobCx7Y2FuRmlsbDohMSxjYW5TdHJva2U6ITEsaW5pdEF0dHJzOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9fYXR0cnM9e30sdGhpcy5hdHRyKHIubWl4KHt9LHRoaXMuZ2V0RGVmYXVsdEF0dHJzKCksdCkpLHRoaXN9LGdldERlZmF1bHRBdHRyczpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmNvbnN0cnVjdG9yLG49ZS5fX2F0dHJzO3JldHVybiByLm1peCghMCx7fSxuKX0sYXR0cjpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7aWYoMD09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIG4uX19hdHRycztpZihyLmlzT2JqZWN0KHQpKXJldHVybiByLmVhY2godCxmdW5jdGlvbih0LGUpe24uX3NldEF0dHIoZSx0KX0pLG4uX19hZnRlclNldEF0dHJBbGwmJm4uX19hZnRlclNldEF0dHJBbGwodCksbjtpZigyPT09YXJndW1lbnRzLmxlbmd0aCl7aWYobi5fc2V0QXR0cih0LGUpIT09ITEpe3ZhciBpPVwiX19hZnRlclNldEF0dHJcIityLnVjZmlyc3QodCk7bltpXSYmbltpXShlKX1yZXR1cm4gbn1yZXR1cm4gbi5fZ2V0QXR0cih0KX0scmVzZXRBdHRyczpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LG49dC5nZXQoXCJjb250ZXh0XCIpLG89ZS5fX2F0dHJzO2UuaXNHcm91cD9yLmVhY2gobyxmdW5jdGlvbih0LGEpe2lbYV0mJihcImZpbGxTdHlsZVwiPT09YSYmKHQ9cy5wYXJzZVN0eWxlKHQsZSxvLmZpbGxPcGFjaXR5KSksXCJzdHJva2VTdHlsZVwiPT09YSYmKHQ9cy5wYXJzZVN0eWxlKHQsZSxvLnN0cm9rZU9wYWNpdHkpKSxcImxpbmVEYXNoXCI9PT1hJiZuLnNldExpbmVEYXNoP3IuaXNBcnJheSh0KT9uLnNldExpbmVEYXNoKHQpOnIuaXNTdHJpbmcodCkmJm4uc2V0TGluZURhc2godC5zcGxpdChcIiBcIikpOm5bYV09dCl9KTpyLmVhY2gobyxmdW5jdGlvbih0LGkpe2FbaV0mJihcImZpbGxTdHlsZVwiPT09aSYmKHQ9cy5wYXJzZVN0eWxlKHQsZSxvLmZpbGxPcGFjaXR5KSksXCJzdHJva2VTdHlsZVwiPT09aSYmKHQ9cy5wYXJzZVN0eWxlKHQsZSxvLnN0cm9rZU9wYWNpdHkpKSxcImxpbmVEYXNoXCI9PT1pJiZuLnNldExpbmVEYXNoP3IuaXNBcnJheSh0KT9uLnNldExpbmVEYXNoKHQpOnIuaXNTdHJpbmcodCkmJm4uc2V0TGluZURhc2godC5zcGxpdChcIiBcIikpOm5baV09dCl9KX0sX2dldEF0dHI6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuX19hdHRyc1t0XSxpPVwiX19nZXRBdHRyXCIrci51Y2ZpcnN0KHQpO3JldHVybiBlW2ldJiYobj1lW2ldKG4pKSxufSxfc2V0QXR0cjpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMsaT1cIl9fc2V0QXR0clwiK3IudWNmaXJzdCh0KTtyZXR1cm4gbltpXSYmKGU9bltpXShlLG4uX19hdHRyc1t0XSkpLGUhPT1uLl9fYXR0cnNbdF0mJihuLl9fYXR0cnNbdF09ZSxuKX0sX19zZXRBdHRyRmlsbDpmdW5jdGlvbih0KXt2YXIgZT10aGlzO2lmKGUuY2FuRmlsbClyZXR1cm4gZS5fX2F0dHJzLmZpbGxTdHlsZT10LHR9LGhhc0ZpbGw6ZnVuY3Rpb24oKXtpZih0aGlzLmNhbkZpbGwpZm9yKHZhciB0PXRoaXM7dDspe2lmKHQuX19hdHRycy5maWxsKXJldHVybiB0Ll9fYXR0cnMuZmlsbDt0PXQuZ2V0KFwicGFyZW50XCIpfX0sX19zZXRBdHRyU3Ryb2tlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYoZS5jYW5TdHJva2UpcmV0dXJuIHRoaXMuX19hdHRycy5zdHJva2VTdHlsZT10LHR9LGhhc1N0cm9rZTpmdW5jdGlvbigpe2lmKHRoaXMuY2FuU3Ryb2tlKWZvcih2YXIgdD10aGlzO3Q7KXtpZih0Ll9fYXR0cnMuc3Ryb2tlKXJldHVybiB0Ll9fYXR0cnMuc3Ryb2tlO3Q9dC5nZXQoXCJwYXJlbnRcIil9fSxfX3NldEF0dHJPcGFjaXR5OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9fYXR0cnMuZ2xvYmFsQWxwaGE9dCx0fSxfX2dldEF0dHJPcGFjaXR5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX19hdHRycy5nbG9iYWxBbHBoYX0sX19zZXRBdHRyTGluZVdpZHRoOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ+PTA/dDplfHwxfSxfX3NldEF0dHJDbGlwOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYodCYmdC50eXBlIGluIG8pcmV0dXJuIG51bGw9PT10LmdldChcImNhbnZhc1wiKSYmKHQ9ci5jbG9uZSh0KSksdC5zZXQoXCJwYXJlbnRcIixlLmdldChcInBhcmVudFwiKSksdC5zZXQoXCJjb250ZXh0XCIsZS5nZXQoXCJjb250ZXh0XCIpKSx0Lmluc2lkZT1mdW5jdGlvbihuLHIpe3ZhciBpPW5ldyBjKG4sciwxKTtyZXR1cm4gdC5pbnZlcnQoaSxlLmdldChcImNhbnZhc1wiKSksdC5fX2lzUG9pbnRJbkZpbGwoaS54LGkueSl9LHR9fSksdC5leHBvcnRzPWx9LGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7dC5leHBvcnRzPXtjaXJjbGU6MSxlbGxpcHNlOjEsZmFuOjEscG9seWdvbjoxLHJlY3Q6MSxwYXRoOjF9fSxmdW5jdGlvbih0LGUpe1widXNlIHN0cmljdFwiO3QuZXhwb3J0cz17ZmlsbFN0eWxlOjEsc3Ryb2tlU3R5bGU6MSxnbG9iYWxBbHBoYToxLHNoYWRvd0JsdXI6MSxzaGFkb3dDb2xvcjoxLHNoYWRvd09mZnNldFg6MSxzaGFkb3dPZmZzZXRZOjEsbGluZURhc2g6MX19LGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7dC5leHBvcnRzPXtmaWxsU3R5bGU6MSxmb250OjEsZ2xvYmFsQWxwaGE6MSxsaW5lQ2FwOjEsbGluZVdpZHRoOjEsbGluZUpvaW46MSxtaXRlckxpbWl0OjEsc2hhZG93Qmx1cjoxLHNoYWRvd0NvbG9yOjEsc2hhZG93T2Zmc2V0WDoxLHNoYWRvd09mZnNldFk6MSxzdHJva2VTdHlsZToxLHRleHRBbGlnbjoxLHRleHRCYXNlbGluZToxLGxpbmVEYXNoOjF9fSxmdW5jdGlvbih0LGUsbil7dmFyIHI9big2KSxpPW4oODcpLGE9ZnVuY3Rpb24odCl7YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQoYSxpKSxyLmF1Z21lbnQoYSx7aW5pdDpmdW5jdGlvbigpe2Euc3VwZXJjbGFzcy5pbml0LmNhbGwodGhpcyk7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwiY2FudmFzSWRcIiksbj1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChlKTt0LnNldChcImVsXCIsbiksdC5zZXQoXCJjb250ZXh0XCIsbi5nZXRDb250ZXh0KFwiMmRcIikpLHQuc2V0KFwiY2FudmFzXCIsdCksdC5fX2V2ZW50cygpfSxfX2V2ZW50czpmdW5jdGlvbigpe30sZ2V0UG9pbnRCeUNsaWVudDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLmdldChcImVsXCIpLGk9ci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxhPWkucmlnaHQtaS5sZWZ0LHM9aS5ib3R0b20taS50b3A7cmV0dXJue3g6KHQtaS5sZWZ0KSooci53aWR0aC9hKSx5OihlLWkudG9wKSooci5oZWlnaHQvcyl9fSxnZXRDbGllbnRCeVBvaW50OmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uZ2V0KFwiZWxcIiksaT1yLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLGE9aS5yaWdodC1pLmxlZnQscz1pLmJvdHRvbS1pLnRvcDtyZXR1cm57Y2xpZW50WDp0LyhyLndpZHRoL2EpK2kubGVmdCxjbGllbnRZOmUvKHIuaGVpZ2h0L3MpK2kudG9wfX0sYmVmb3JlRHJhdzpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcImNvbnRleHRcIiksbj10LmdldChcImVsXCIpO2UuY2xlYXJSZWN0KDAsMCxuLndpZHRoLG4uaGVpZ2h0KX19KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNiksaT1mdW5jdGlvbigpe307ci5hdWdtZW50KGkse2luaXRFdmVudERpc3BhdGNoZXI6ZnVuY3Rpb24oKXt0aGlzLl9fbGlzdGVuZXJzPXt9fSxvbjpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuX19saXN0ZW5lcnM7cmV0dXJuIHIuaXNOdWxsKG5bdF0pJiYoblt0XT1bXSksblt0XS5pbmRleE9mKGUpPT09LTEmJm5bdF0ucHVzaChlKSx0aGlzfSxvZmY6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLl9fbGlzdGVuZXJzO3JldHVybiAwPT09YXJndW1lbnRzLmxlbmd0aD8odGhpcy5fX2xpc3RlbmVycz17fSx0aGlzKToxPT09YXJndW1lbnRzLmxlbmd0aCYmci5pc1N0cmluZyh0KT8oblt0XT1bXSx0aGlzKToyPT09YXJndW1lbnRzLmxlbmd0aCYmci5pc1N0cmluZyh0KSYmci5pc0Z1bmN0aW9uKGUpPyhyLnJlbW92ZShuW3RdLGUpLHRoaXMpOnZvaWQgMH0saGFzOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5fX2xpc3RlbmVycztyZXR1cm4gMD09PWFyZ3VtZW50cy5sZW5ndGgmJiFyLmlzQmxhbmsobil8fCghKDEhPT1hcmd1bWVudHMubGVuZ3RofHwhblt0XXx8ci5pc0JsYW5rKG5bdF0pKXx8ISgyIT09YXJndW1lbnRzLmxlbmd0aHx8IW5bdF18fG5bdF0uaW5kZXhPZihlKT09PS0xKSl9LHRyaWdnZXI6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuX19saXN0ZW5lcnMsaT1uW3QudHlwZV07aWYodC50YXJnZXQ9ZSxyLm5vdE51bGwoaSkmJnIuZWFjaChpLGZ1bmN0aW9uKG4pe24uY2FsbChlLHQpfSksdC5idWJibGVzKXt2YXIgYT1lLmdldChcInBhcmVudFwiKTthJiYhdC5wcm9wYWdhdGlvblN0b3BwZWQmJmEudHJpZ2dlcih0KX1yZXR1cm4gZX19KSx0LmV4cG9ydHM9aX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNiksaT1uKDMpLGE9aS5NYXRyaXgzLHM9KGkuVmVjdG9yMyxuKDQpKSxvPWZ1bmN0aW9uKCl7fTtyLmF1Z21lbnQobyx7aW5pdFRyYW5zZm9ybTpmdW5jdGlvbigpe3RoaXMuX19tPW5ldyBhfSx0cmFuc2xhdGU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5fX20udHJhbnNsYXRlKHQsZSksdGhpc30scm90YXRlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9fbS5yb3RhdGUocy5kZWdyZWVUb1JhZCh0KSksdGhpc30sc2NhbGU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5fX20uc2NhbGUodCxlKSx0aGlzfSx0cmFuc2Zvcm06ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztyZXR1cm4gci5lYWNoKHQsZnVuY3Rpb24odCl7c3dpdGNoKHRbMF0pe2Nhc2VcInRcIjplLnRyYW5zbGF0ZSh0WzFdLHRbMl0pO2JyZWFrO2Nhc2VcInNcIjplLnNjYWxlKHRbMV0sdFsyXSk7YnJlYWs7Y2FzZVwiclwiOmUucm90YXRlKHRbMV0pO2JyZWFrO2Nhc2VcIm1cIjplLl9fbT1hLm11bHRpcGx5KHRbMV0sZS5fX20pfX0pLHRoaXN9LHNldFRyYW5zZm9ybTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fX20uaWRlbnRpdHkoKSx0aGlzLnRyYW5zZm9ybSh0KX0sZ2V0TWF0cml4OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX19tfSxzZXRNYXRyaXg6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX19tPXQsdGhpc30sYXBwbHk6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO2U9ZXx8bjtmb3IodmFyIGk9bixzPVtdO2khPT1lOylzLnVuc2hpZnQoaSksaT1pLmdldChcInBhcmVudFwiKTtzLnVuc2hpZnQoaSk7dmFyIG89bmV3IGE7cmV0dXJuIHIuZWFjaChzLGZ1bmN0aW9uKHQpe28ubXVsdGlwbHkodC5fX20pfSksdC5hcHBseU1hdHJpeChvKSx0aGlzfSxpbnZlcnQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO2U9ZXx8bjtmb3IodmFyIGk9bixzPVtdO2khPT1lOylzLnVuc2hpZnQoaSksaT1pLmdldChcInBhcmVudFwiKTtzLnVuc2hpZnQoaSk7dmFyIG89bmV3IGE7ci5lYWNoKHMsZnVuY3Rpb24odCl7by5tdWx0aXBseSh0Ll9fbSl9KTt2YXIgdT1vLmdldEludmVyc2UoKTtyZXR1cm4gdC5hcHBseU1hdHJpeCh1KSx0aGlzfSxyZXNldFRyYW5zZm9ybTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcImNvbnRleHRcIiksbj10Ll9fbS50bzJET2JqZWN0KCk7ZS50cmFuc2Zvcm0obi5hLG4uYixuLmMsbi5kLG4uZSxuLmYpfX0pLHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big2KSxpPW4oOCksYT1uKDcpLHM9big1Niksbz1uKDQpLHU9bigzNSksYz1uKDMpLGw9Yy5WZWN0b3IyLGg9bigxMyksZj1mdW5jdGlvbih0KXtmLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtmLkFUVFJTPXt4OjAseTowLHI6MCxzdGFydEFuZ2xlOjAsZW5kQW5nbGU6MCxjbG9ja3dpc2U6ITEsbGluZVdpZHRoOjEsYXJyb3c6ITF9LHIuZXh0ZW5kKGYsaSksci5hdWdtZW50KGYse2NhblN0cm9rZTohMCx0eXBlOlwiYXJjXCIsX19zZXRBdHRyUjpmdW5jdGlvbih0LGUpe3JldHVybiB0Pj0wP3Q6KGgud2FybihcInIgXFx1NWZjNVxcdTk4N2JcXHU1OTI3XFx1NGU4ZTBcIiksZSl9LF9fc2V0QXR0ckNsb2Nrd2lzZTpmdW5jdGlvbih0LGUpe3JldHVybiByLmlzQm9vbGVhbih0KT90OihoLndhcm4oXCJjbG9ja3dpc2UgXFx1NWZjNVxcdTk4N2JcXHU2NjJmYm9vbGVhblxcdTUwM2NcIiksZSl9LF9fc2V0QXR0clN0YXJ0QW5nbGU6ZnVuY3Rpb24odCl7cmV0dXJuIG8uZGVncmVlVG9SYWQodCl9LF9fZ2V0QXR0clN0YXJ0QW5nbGU6ZnVuY3Rpb24odCl7cmV0dXJuIG8ucmFkVG9EZWdyZWUodCl9LF9fc2V0QXR0ckVuZEFuZ2xlOmZ1bmN0aW9uKHQpe3JldHVybiBvLmRlZ3JlZVRvUmFkKHQpfSxfX2dldEF0dHJFbmRBbmdsZTpmdW5jdGlvbih0KXtyZXR1cm4gby5yYWRUb0RlZ3JlZSh0KX0sX19hZnRlclNldEF0dHJYOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0clk6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyUjpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19hZnRlclNldEF0dHJTdGFydEFuZ2xlOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0ckVuZEFuZ2xlOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0ckNsb2Nrd2lzZTpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19hZnRlclNldEF0dHJMaW5lV2lkdGg6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyQWxsOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2NhbGN1bGF0ZUJveDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10Ll9fYXR0cnMsbj1lLngscj1lLnksaT1lLnIsYT1lLnN0YXJ0QW5nbGUsbz1lLmVuZEFuZ2xlLHU9ZS5jbG9ja3dpc2UsYz1lLmxpbmVXaWR0aCxsPXMuYm94KG4scixpLGEsbyx1KSxoPWMvMjtsLm1pblgtPWgsbC5taW5ZLT1oLGwubWF4WCs9aCxsLm1heFkrPWgsdGhpcy5zZXQoXCJib3hcIixsKX0saXNQb2ludEluUGF0aDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLl9fYXR0cnMsaT1yLngscz1yLnksbz1yLnIsdT1yLnN0YXJ0QW5nbGUsYz1yLmVuZEFuZ2xlLGw9ci5jbG9ja3dpc2UsaD1yLmxpbmVXaWR0aDtyZXR1cm4hIW4uaGFzU3Ryb2tlKCkmJmEuYXJjbGluZShpLHMsbyx1LGMsbCxoLHQsZSl9LGNyZWF0ZVBhdGg6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJjb250ZXh0XCIpLG49dC5fX2F0dHJzLHI9bi54LGk9bi55LGE9bi5yLHM9bi5zdGFydEFuZ2xlLG89bi5lbmRBbmdsZSxjPW4uY2xvY2t3aXNlLGg9bi5saW5lV2lkdGgsZj1uLmFycm93O2lmKGUuYmVnaW5QYXRoKCksZS5hcmMocixpLGEscyxvLGMpLGYpe3ZhciBnPXt4OnIrYSpNYXRoLmNvcyhvKSx5OmkrYSpNYXRoLnNpbihvKX0scD1uZXcgbCgtYSpNYXRoLnNpbihvKSxhKk1hdGguY29zKG8pKTtjJiZwLm11bHRpcGx5U2NhbGVyKC0xKSx1Lm1ha2VBcnJvdyhlLHAsZyxoKX19fSksdC5leHBvcnRzPWZ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDYpLGk9big4KSxhPW4oNykscz1uKDEzKSxvPWZ1bmN0aW9uKHQpe28uc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O28uQVRUUlM9e3g6MCx5OjAscjowLGxpbmVXaWR0aDoxfSxyLmV4dGVuZChvLGkpLHIuYXVnbWVudChvLHtjYW5GaWxsOiEwLGNhblN0cm9rZTohMCx0eXBlOlwiY2lyY2xlXCIsX19zZXRBdHRyUjpmdW5jdGlvbih0LGUpe3JldHVybiB0Pj0wP3Q6KHMud2FybihcInIgXFx1NWZjNVxcdTk4N2JcXHU1OTI3XFx1NGU4ZVxcdTdiNDlcXHU0ZThlMFwiKSxlKX0sX19hZnRlclNldEF0dHJYOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0clk6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyUjpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19hZnRlclNldEF0dHJMaW5lV2lkdGg6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyQWxsOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2NhbGN1bGF0ZUJveDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10Ll9fYXR0cnMsbj1lLngscj1lLnksaT1lLnIsYT1lLmxpbmVXaWR0aCxzPWEvMitpO3RoaXMuc2V0KFwiYm94XCIse21pblg6bi1zLG1pblk6ci1zLG1heFg6bitzLG1heFk6citzfSl9LGlzUG9pbnRJblBhdGg6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5oYXNGaWxsKCksaT1uLmhhc1N0cm9rZSgpO3JldHVybiByJiZpP24uX19pc1BvaW50SW5GaWxsKHQsZSl8fG4uX19pc1BvaW50SW5TdHJva2UodCxlKTpyP24uX19pc1BvaW50SW5GaWxsKHQsZSk6ISFpJiZuLl9faXNQb2ludEluU3Ryb2tlKHQsZSl9LF9faXNQb2ludEluRmlsbDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLl9fYXR0cnMsaT1yLngscz1yLnksbz1yLnI7cmV0dXJuIGEuY2lyY2xlKGkscyxvLHQsZSl9LF9faXNQb2ludEluU3Ryb2tlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uX19hdHRycyxpPXIueCxzPXIueSxvPXIucix1PXIubGluZVdpZHRoO3JldHVybiBhLmFyY2xpbmUoaSxzLG8sMCwyKk1hdGguUEksITEsdSx0LGUpfSxjcmVhdGVQYXRoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwiY29udGV4dFwiKSxuPXQuX19hdHRycyxyPW4ueCxpPW4ueSxhPW4ucjtlLmJlZ2luUGF0aCgpLGUuYXJjKHIsaSxhLDAsMipNYXRoLlBJLCExKSxlLmNsb3NlUGF0aCgpfX0pLHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big2KSxpPW4oOCksYT1uKDcpLHM9KG4oNCksbigzNSkpLG89big1NyksdT1uKDMpLGM9dS5WZWN0b3IyLGw9ZnVuY3Rpb24odCl7bC5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07bC5BVFRSUz17cDE6bnVsbCxwMjpudWxsLHAzOm51bGwscDQ6bnVsbCxsaW5lV2lkdGg6MSxhcnJvdzohMX0sci5leHRlbmQobCxpKSxyLmF1Z21lbnQobCx7Y2FuU3Ryb2tlOiEwLHR5cGU6XCJjdWJpY1wiLF9fYWZ0ZXJTZXRBdHRyUDE6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyUDI6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyUDM6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyUDQ6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyTGluZVdpZHRoOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0ckFsbDpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19jYWxjdWxhdGVCb3g6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5fX2F0dHJzLG49ZS5wMSxpPWUucDIsYT1lLnAzLHM9ZS5wNDtpZighKHIuaXNOdWxsKG4pfHxyLmlzTnVsbChpKXx8ci5pc051bGwoYSl8fHIuaXNOdWxsKHMpKSl7Zm9yKHZhciB1PWUubGluZVdpZHRoLzIsYz1vLmV4dHJlbWEoblswXSxpWzBdLGFbMF0sc1swXSksbD0wLGg9Yy5sZW5ndGg7bDxoO2wrKyljW2xdPW8uYXQoblswXSxpWzBdLGFbMF0sc1swXSxjW2xdKTtmb3IodmFyIGY9by5leHRyZW1hKG5bMV0saVsxXSxhWzFdLHNbMV0pLGw9MCxoPWYubGVuZ3RoO2w8aDtsKyspZltsXT1vLmF0KG5bMV0saVsxXSxhWzFdLHNbMV0sZltsXSk7Yy5wdXNoKG5bMF0sc1swXSksZi5wdXNoKG5bMV0sc1sxXSksdC5zZXQoXCJib3hcIix7bWluWDpNYXRoLm1pbi5hcHBseShNYXRoLGMpLXUsbWF4WDpNYXRoLm1heC5hcHBseShNYXRoLGMpK3UsbWluWTpNYXRoLm1pbi5hcHBseShNYXRoLGYpLXUsbWF4WTpNYXRoLm1heC5hcHBseShNYXRoLGYpK3V9KX19LGlzUG9pbnRJblBhdGg6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5fX2F0dHJzLGk9ci5wMSxzPXIucDIsbz1yLnAzLHU9ci5wNCxjPXIubGluZVdpZHRoO3JldHVybiBhLmN1YmljbGluZShpWzBdLGlbMV0sc1swXSxzWzFdLG9bMF0sb1sxXSx1WzBdLHVbMV0sYyx0LGUpfSxjcmVhdGVQYXRoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwiY29udGV4dFwiKSxuPXQuX19hdHRycyxpPW4ucDEsYT1uLnAyLG89bi5wMyx1PW4ucDQsbD1uLmxpbmVXaWR0aCxoPW4uYXJyb3c7aWYoIShyLmlzTnVsbChpKXx8ci5pc051bGwoYSl8fHIuaXNOdWxsKG8pfHxyLmlzTnVsbCh1KSkmJihlLmJlZ2luUGF0aCgpLGUubW92ZVRvKGlbMF0saVsxXSksZS5iZXppZXJDdXJ2ZVRvKGFbMF0sYVsxXSxvWzBdLG9bMV0sdVswXSx1WzFdKSxoKSl7dmFyIGY9bmV3IGModVswXS1vWzBdLHVbMV0tb1sxXSk7cy5tYWtlQXJyb3coZSxmLHt4OnVbMF0seTp1WzFdfSxsKX19LGdldFBvaW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX19hdHRycztyZXR1cm57eDpvLmF0KGUucDRbMF0sZS5wM1swXSxlLnAyWzBdLGUucDFbMF0sdCkseTpvLmF0KGUucDRbMV0sZS5wM1sxXSxlLnAyWzFdLGUucDFbMV0sdCl9fX0pLHQuZXhwb3J0cz1sfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big2KSxpPW4oOCksYT1uKDcpLHM9bigzKSxvPXMuTWF0cml4Myx1PXMuVmVjdG9yMyxjPW4oMTMpLGw9ZnVuY3Rpb24odCl7bC5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07bC5BVFRSUz17eDowLHk6MCxyeDoxLHJ5OjEsbGluZVdpZHRoOjF9LHIuZXh0ZW5kKGwsaSksci5hdWdtZW50KGwse2NhbkZpbGw6ITAsY2FuU3Ryb2tlOiEwLHR5cGU6XCJlbGxpcHNlXCIsX19zZXRBdHRyUng6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD4wP3Q6KGMud2FybihcInJ4IFxcdTU5MjdcXHU0ZThlXFx1N2I0OVxcdTRlOGUwXCIpLGUpfSxfX3NldEF0dHJSeTpmdW5jdGlvbih0LGUpe3JldHVybiB0PjA/dDooYy53YXJuKFwicnkgXFx1NTkyN1xcdTRlOGVcXHU3YjQ5XFx1NGU4ZTBcIiksZSl9LF9fYWZ0ZXJTZXRBdHRyWDpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19hZnRlclNldEF0dHJZOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0clJ4OmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0clJ5OmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0ckxpbmVXaWR0aDpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19hZnRlclNldEF0dHJBbGw6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fY2FsY3VsYXRlQm94OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuX19hdHRycyxuPWUueCxyPWUueSxpPWUucngsYT1lLnJ5LHM9ZS5saW5lV2lkdGgsbz1pK3MvMix1PWErcy8yO3RoaXMuc2V0KFwiYm94XCIse21pblg6bi1vLG1pblk6ci11LG1heFg6bitvLG1heFk6cit1fSl9LGlzUG9pbnRJblBhdGg6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5oYXNGaWxsKCksaT1uLmhhc1N0cm9rZSgpO3JldHVybiByJiZpP24uX19pc1BvaW50SW5GaWxsKHQsZSl8fG4uX19pc1BvaW50SW5TdHJva2UodCxlKTpyP24uX19pc1BvaW50SW5GaWxsKHQsZSk6ISFpJiZuLl9faXNQb2ludEluU3Ryb2tlKHQsZSl9LF9faXNQb2ludEluRmlsbDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLl9fYXR0cnMsaT1yLngscz1yLnksYz1yLnJ4LGw9ci5yeSxoPWM+bD9jOmwsZj1jPmw/MTpjL2wsZz1jPmw/bC9jOjEscD1uZXcgdSh0LGUsMSksdj1uZXcgbzt2LnNjYWxlKGYsZyksdi50cmFuc2xhdGUoaSxzKTt2YXIgZD12LmdldEludmVyc2UoKTtyZXR1cm4gcC5hcHBseU1hdHJpeChkKSxhLmNpcmNsZSgwLDAsaCxwLngscC55KX0sX19pc1BvaW50SW5TdHJva2U6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5fX2F0dHJzLGk9ci54LHM9ci55LGM9ci5yeCxsPXIucnksaD1yLmxpbmVXaWR0aCxmPWM+bD9jOmwsZz1jPmw/MTpjL2wscD1jPmw/bC9jOjEsdj1uZXcgdSh0LGUsMSksZD1uZXcgbztkLnNjYWxlKGcscCksZC50cmFuc2xhdGUoaSxzKTt2YXIgeD1kLmdldEludmVyc2UoKTtyZXR1cm4gdi5hcHBseU1hdHJpeCh4KSxhLmFyY2xpbmUoMCwwLGYsMCwyKk1hdGguUEksITEsaCx2Lngsdi55KX0sY3JlYXRlUGF0aDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcImNvbnRleHRcIiksbj10Ll9fYXR0cnMscj1uLngsaT1uLnksYT1uLnJ4LHM9bi5yeSx1PWE+cz9hOnMsYz1hPnM/MTphL3MsbD1hPnM/cy9hOjEsaD1uZXcgbztoLnNjYWxlKGMsbCksaC50cmFuc2xhdGUocixpKTt2YXIgZj1oLnRvMkRPYmplY3QoKTtlLmJlZ2luUGF0aCgpLGUuc2F2ZSgpLGUudHJhbnNmb3JtKGYuYSxmLmIsZi5jLGYuZCxmLmUsZi5mKSxlLmFyYygwLDAsdSwwLDIqTWF0aC5QSSksZS5yZXN0b3JlKCksZS5jbG9zZVBhdGgoKX19KSx0LmV4cG9ydHM9bH0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNiksaT1uKDgpLGE9big3KSxzPW4oNCksbz1uKDU2KSx1PW4oMyksYz11LlZlY3RvcjIsbD1uKDEzKSxoPWZ1bmN0aW9uKHQpe2guc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2guQVRUUlM9e3g6MCx5OjAscnM6MCxyZTowLHN0YXJ0QW5nbGU6MCxlbmRBbmdsZTowLGNsb2Nrd2lzZTohMSxsaW5lV2lkdGg6MX0sci5leHRlbmQoaCxpKSxyLmF1Z21lbnQoaCx7Y2FuRmlsbDohMCxjYW5TdHJva2U6ITAsdHlwZTpcImZhblwiLF9fc2V0QXR0clJzOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ+PTA/dDoobC53YXJuKFwicnMgXFx1NWZjNVxcdTk4N2JcXHU1OTI3XFx1NGU4ZVxcdTdiNDlcXHU0ZThlMFwiKSxlKX0sX19zZXRBdHRyUmU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD49MD90OihsLndhcm4oXCJyZSBcXHU1ZmM1XFx1OTg3YlxcdTU5MjdcXHU0ZThlXFx1N2I0OVxcdTRmNjAwXCIpLGUpfSxfX3NldEF0dHJDbG9ja3dpc2U6ZnVuY3Rpb24odCxlKXtyZXR1cm4gci5pc0Jvb2xlYW4odCk/dDoobC53YXJuKFwiY2xvY2t3aXNlIFxcdTVmYzVcXHU5ODdiXFx1NGUzYWJvb2xlYW5cXHU1MDNjXCIpLGUpfSxfX3NldEF0dHJTdGFydEFuZ2xlOmZ1bmN0aW9uKHQpe3JldHVybiBzLmRlZ3JlZVRvUmFkKHQpfSxfX2dldEF0dHJTdGFydEFuZ2xlOmZ1bmN0aW9uKHQpe3JldHVybiBzLnJhZFRvRGVncmVlKHQpfSxfX3NldEF0dHJFbmRBbmdsZTpmdW5jdGlvbih0KXtyZXR1cm4gcy5kZWdyZWVUb1JhZCh0KX0sX19nZXRBdHRyRW5kQW5nbGU6ZnVuY3Rpb24odCl7cmV0dXJuIHMucmFkVG9EZWdyZWUodCl9LF9fYWZ0ZXJTZXRBdHRyWDpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19hZnRlclNldEF0dHJZOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0clJzOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0clJlOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0clN0YXJ0QW5nbGU6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyRW5kQW5nbGU6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyQ2xvY2t3aXNlOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0ckxpbmVXaWR0aDpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19hZnRlclNldEF0dHJBbGw6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fY2FsY3VsYXRlQm94OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuX19hdHRycyxuPWUueCxyPWUueSxpPWUucnMsYT1lLnJlLHM9ZS5zdGFydEFuZ2xlLHU9ZS5lbmRBbmdsZSxjPWUuY2xvY2t3aXNlLGw9ZS5saW5lV2lkdGgsaD1vLmJveChuLHIsaSxzLHUsYyksZj1vLmJveChuLHIsYSxzLHUsYyksZz1NYXRoLm1pbihoLm1pblgsZi5taW5YKSxwPU1hdGgubWluKGgubWluWSxmLm1pblkpLHY9TWF0aC5tYXgoaC5tYXhYLGYubWF4WCksZD1NYXRoLm1heChoLm1heFksZi5tYXhZKSx4PWwvMjt0aGlzLnNldChcImJveFwiLHttaW5YOmcteCxtaW5ZOnAteCxtYXhYOnYreCxtYXhZOmQreH0pfSxpc1BvaW50SW5QYXRoOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uaGFzRmlsbCgpLGk9bi5oYXNTdHJva2UoKTtyZXR1cm4gciYmaT9uLl9faXNQb2ludEluRmlsbCh0LGUpfHxuLl9faXNQb2ludEluU3Ryb2tlKHQsZSk6cj9uLl9faXNQb2ludEluRmlsbCh0LGUpOiEhaSYmbi5fX2lzUG9pbnRJblN0cm9rZSh0LGUpfSxfX2lzUG9pbnRJbkZpbGw6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5fX2F0dHJzLGk9ci54LGE9ci55LHU9ci5ycyxsPXIucmUsaD1yLnN0YXJ0QW5nbGUsZj1yLmVuZEFuZ2xlLGc9ci5jbG9ja3dpc2UscD1uZXcgYygxLDApLHY9bmV3IGModC1pLGUtYSksZD1wLmFuZ2xlVG8odikseD1vLm5lYXJBbmdsZShkLGgsZixnKTtpZihzLmVxdWFsKGQseCkpe3ZhciBtPXYubGVuZ3RoU3EoKTtpZih1KnU8PW0mJm08PWwqbClyZXR1cm4hMH1yZXR1cm4hMX0sX19pc1BvaW50SW5TdHJva2U6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5fX2F0dHJzLGk9ci54LHM9ci55LG89ci5ycyx1PXIucmUsYz1yLnN0YXJ0QW5nbGUsbD1yLmVuZEFuZ2xlLGg9ci5jbG9ja3dpc2UsZj1yLmxpbmVXaWR0aCxnPXt4Ok1hdGguY29zKGMpKm8raSx5Ok1hdGguc2luKGMpKm8rc30scD17eDpNYXRoLmNvcyhjKSp1K2kseTpNYXRoLnNpbihjKSp1K3N9LHY9e3g6TWF0aC5jb3MobCkqbytpLHk6TWF0aC5zaW4obCkqbytzfSxkPXt4Ok1hdGguY29zKGwpKnUraSx5Ok1hdGguc2luKGwpKnUrc307cmV0dXJuISFhLmxpbmUoZy54LGcueSxwLngscC55LGYsdCxlKXx8KCEhYS5saW5lKHYueCx2LnksZC54LGQueSxmLHQsZSl8fCghIWEuYXJjbGluZShpLHMsbyxjLGwsaCxmLHQsZSl8fCEhYS5hcmNsaW5lKGkscyx1LGMsbCxoLGYsdCxlKSkpfSxjcmVhdGVQYXRoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwiY29udGV4dFwiKSxuPXQuX19hdHRycyxyPW4ueCxpPW4ueSxhPW4ucnMscz1uLnJlLG89bi5zdGFydEFuZ2xlLHU9bi5lbmRBbmdsZSxjPW4uY2xvY2t3aXNlLGw9e3g6TWF0aC5jb3MobykqYStyLHk6TWF0aC5zaW4obykqYStpfSxoPXt4Ok1hdGguY29zKG8pKnMrcix5Ok1hdGguc2luKG8pKnMraX0sZj17eDpNYXRoLmNvcyh1KSphK3IseTpNYXRoLnNpbih1KSphK2l9Oyh7eDpNYXRoLmNvcyh1KSpzK3IseTpNYXRoLnNpbih1KSpzK2l9KTtlLmJlZ2luUGF0aCgpLGUubW92ZVRvKGwueCxsLnkpLGUubGluZVRvKGgueCxoLnkpLGUuYXJjKHIsaSxzLG8sdSxjKSxlLmxpbmVUbyhmLngsZi55KSxlLmFyYyhyLGksYSx1LG8sIWMpLGUuY2xvc2VQYXRoKCl9fSksdC5leHBvcnRzPWh9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDYpLGk9big4KSxhPW4oNykscz1uKDEzKSxvPWZ1bmN0aW9uKHQpe28uc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O28uQVRUUlM9e3g6MCx5OjAsaW1nOnZvaWQgMCx3aWR0aDowLGhlaWdodDowLHN4Om51bGwsc3k6bnVsbCxzd2lkdGg6bnVsbCxzaGVpZ2h0Om51bGx9LHIuZXh0ZW5kKG8saSksci5hdWdtZW50KG8se3R5cGU6XCJpbWFnZVwiLGdldERlZmF1bHRBdHRyczpmdW5jdGlvbigpe3JldHVybiBvLkFUVFJTfSxfX3NldEF0dHJXaWR0aDpmdW5jdGlvbih0LGUpe3JldHVybiB0Pj0wP3Q6KHMud2FybihcIndpZHRoIFxcdTVmYzVcXHU5ODdiXFx1NTkyN1xcdTRlOGVcXHU3YjQ5XFx1NGU4ZTBcIiksZSl9LF9fc2V0QXR0ckhlaWdodDpmdW5jdGlvbih0LGUpe3JldHVybiB0Pj0wP3Q6KHMud2FybihcImhlaWdodCBcXHU1ZmM1XFx1OTg3YlxcdTU5MjdcXHU0ZThlXFx1N2I0OVxcdTRlOGUwXCIpLGUpfSxfX2FmdGVyU2V0QXR0clg6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyWTpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19hZnRlclNldEF0dHJXaWR0aDpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19hZnRlclNldEF0dHJIZWlnaHQ6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyQWxsOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2NhbGN1bGF0ZUJveDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10Ll9fYXR0cnMsbj1lLngscj1lLnksaT1lLndpZHRoLGE9ZS5oZWlnaHQ7dGhpcy5zZXQoXCJib3hcIix7bWluWDpuLG1pblk6cixtYXhYOm4raSxtYXhZOnIrYX0pfSxpc1BvaW50SW5QYXRoOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uX19hdHRycztpZihuLmdldChcInRvRHJhd1wiKXx8IXIuaW1nKXJldHVybiExO3ZhciBpPXIueCxzPXIueSxvPXIud2lkdGgsdT1yLmhlaWdodDtyZXR1cm4gYS5yZWN0KGkscyxvLHUsdCxlKX0sX19zZXRMb2FkaW5nOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldChcImNhbnZhc1wiKTtyZXR1cm4gdD09PSExJiZlLmdldChcInRvRHJhd1wiKT09PSEwJiYoZS5fX2NmZy5sb2FkaW5nPSExLG4uZHJhdygpKSx0fSxfX3NldEF0dHJJbWc6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuX19hdHRycztlLmdldChcImNvbnRleHRcIik7aWYoIXIuaXNTdHJpbmcodCkpcmV0dXJuIHQgaW5zdGFuY2VvZiBJbWFnZT8obi53aWR0aHx8ZS5hdHRyKFwid2lkdGhcIix0LndpZHRoKSxuLmhlaWdodHx8ZS5hdHRyKFwiaGVpZ2h0XCIsdC5oZWlnaHQpLHQpOnQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCYmci5pc1N0cmluZyh0Lm5vZGVOYW1lKSYmXCJDQU5WQVNcIj09PXQubm9kZU5hbWUudG9VcHBlckNhc2UoKT8obi53aWR0aHx8ZS5hdHRyKFwid2lkdGhcIixOdW1iZXIodC5nZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiKSkpLG4uaGVpZ2h0fHxlLmF0dHIoXCJoZWlnaHRcIixOdW1iZXIodC5nZXRBdHRyaWJ1dGUoXCJoZWlnaHRcIikpKSx0KTp0IGluc3RhbmNlb2YgSW1hZ2VEYXRhPyhuLndpZHRofHxlLmF0dHIoXCJ3aWR0aFwiLHQud2lkdGgpLG4uaGVpZ2h0fHxlLmF0dHIoXCJoZWlnaHRcIix0LmhlaWdodCksdCk6dm9pZCAwO3ZhciBpPW5ldyBJbWFnZTtpLm9ubG9hZD1mdW5jdGlvbigpe3JldHVybiFlLmdldChcImRlc3Ryb3llZFwiKSYmKGUuYXR0cihcImltZ1NyY1wiLHQpLGUuYXR0cihcImltZ1wiLGkpLHZvaWQgZS5zZXQoXCJsb2FkaW5nXCIsITEpKX0saS5zcmM9dCxlLnNldChcImxvYWRpbmdcIiwhMCl9LGRyYXdJbm5lcjpmdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIHQuZ2V0KFwibG9hZGluZ1wiKT92b2lkIHQuc2V0KFwidG9EcmF3XCIsITApOnZvaWQgdC5fX2RyYXdJbWFnZSgpfSxfX2RyYXdJbWFnZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcImNvbnRleHRcIiksbj10Ll9fYXR0cnMsaT1uLngsYT1uLnkscz1uLmltZyxvPW4ud2lkdGgsdT1uLmhlaWdodCxjPW4uc3gsbD1uLnN5LGg9bi5zd2lkdGgsZj1uLnNoZWlnaHQ7cmV0dXJuIHQuc2V0KFwidG9EcmF3XCIsITEpLHMgaW5zdGFuY2VvZiBJbWFnZXx8cyBpbnN0YW5jZW9mIEhUTUxFbGVtZW50JiZyLmlzU3RyaW5nKHMubm9kZU5hbWUpJiZcIkNBTlZBU1wiPT09cy5ub2RlTmFtZS50b1VwcGVyQ2FzZSgpP3IuaXNOdWxsKGMpfHxyLmlzTnVsbChsKXx8ci5pc051bGwoaCl8fHIuaXNOdWxsKGYpP3ZvaWQgZS5kcmF3SW1hZ2UocyxpLGEsbyx1KTpyLm5vdE51bGwoYykmJnIubm90TnVsbChsKSYmci5ub3ROdWxsKGgpJiZyLm5vdE51bGwoZik/dm9pZCBlLmRyYXdJbWFnZShzLGMsbCxoLGYsaSxhLG8sdSk6dm9pZCAwOnMgaW5zdGFuY2VvZiBJbWFnZURhdGE/dm9pZCBlLnB1dEltYWdlRGF0YShzLGksYSxjfHwwLGx8fDAsaHx8byxmfHx1KTp2b2lkIDB9fSksdC5leHBvcnRzPW99LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDYpLGk9big4KSxhPW4oNykscz1uKDMpLG89cy5WZWN0b3IyLHU9bigzNSksYz1uKDg5KSxsPWZ1bmN0aW9uKHQpe2wuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2wuQVRUUlM9e3gxOjAseTE6MCx4MjowLHkyOjAsbGluZVdpZHRoOjEsYXJyb3c6ITF9LHIuZXh0ZW5kKGwsaSksci5hdWdtZW50KGwse2NhblN0cm9rZTohMCx0eXBlOlwibGluZVwiLF9fYWZ0ZXJTZXRBdHRyWDE6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyWTE6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyWDI6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyWTI6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyTGluZVdpZHRoOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0ckFsbDpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19jYWxjdWxhdGVCb3g6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5fX2F0dHJzLG49ZS54MSxyPWUueTEsaT1lLngyLGE9ZS55MixzPWUubGluZVdpZHRoO3RoaXMuc2V0KFwiYm94XCIsYy5ib3gobixyLGksYSxzKSl9LGlzUG9pbnRJblBhdGg6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5fX2F0dHJzLGk9ci54MSxzPXIueTEsbz1yLngyLHU9ci55MixjPXIubGluZVdpZHRoO3JldHVybiEhbi5oYXNTdHJva2UoKSYmYS5saW5lKGkscyxvLHUsYyx0LGUpfSxjcmVhdGVQYXRoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwiY29udGV4dFwiKSxuPXQuX19hdHRycyxyPW4ueDEsaT1uLnkxLGE9bi54MixzPW4ueTIsYz1uLmFycm93LGw9bi5saW5lV2lkdGg7aWYoZS5iZWdpblBhdGgoKSxlLm1vdmVUbyhyLGkpLGMpe3ZhciBoPW5ldyBvKGEtcixzLWkpLGY9dS5nZXRFbmRQb2ludChoLG5ldyBvKGEscyksbCk7ZS5saW5lVG8oZi54LGYueSksdS5tYWtlQXJyb3coZSxoLGYsbCl9ZWxzZSBlLmxpbmVUbyhhLHMpfSxnZXRQb2ludDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9fYXR0cnM7cmV0dXJue3g6Yy5hdChlLngxLGUueDIsdCkseTpjLmF0KGUueTEsZS55Mix0KX19fSksdC5leHBvcnRzPWx9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQsZSxuLHIsaSl7cmV0dXJuIGUqTWF0aC5jb3ModCkqTWF0aC5jb3MoaSktbipNYXRoLnNpbih0KSpNYXRoLnNpbihpKStyfWZ1bmN0aW9uIGkodCxlLG4scixpKXtyZXR1cm4gZSpNYXRoLnNpbih0KSpNYXRoLmNvcyhpKStuKk1hdGguY29zKHQpKk1hdGguc2luKGkpK3J9ZnVuY3Rpb24gYSh0LGUsbil7cmV0dXJuIE1hdGguYXRhbigtbi9lKk1hdGgudGFuKHQpKX1mdW5jdGlvbiBzKHQsZSxuKXtyZXR1cm4gTWF0aC5hdGFuKG4vKGUqTWF0aC50YW4odCkpKX12YXIgbz1uKDMpO28uVmVjdG9yMixuKDQpO3QuZXhwb3J0cz17eEF0OnIseUF0OmkseEV4dHJlbWE6YSx5RXh0cmVtYTpzfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNiksaT1uKDgpLGE9bigyODUpLHM9big4OCksbz1mdW5jdGlvbih0KXtvLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtvLkFUVFJTPXtwYXRoOm51bGwsbGluZVdpZHRoOjF9LHIuZXh0ZW5kKG8saSksci5hdWdtZW50KG8se2NhbkZpbGw6ITAsY2FuU3Ryb2tlOiEwLHR5cGU6XCJwYXRoXCIsX19hZnRlclNldEF0dHJQYXRoOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYoci5pc051bGwodCkpcmV0dXJuIGUuc2V0KFwic2VnbWVudHNcIixudWxsKSx2b2lkIGUuc2V0KFwiYm94XCIsdm9pZCAwKTt2YXIgbixpPXMucGFyc2VQYXRoKHQpLG89W107IXIuaXNBcnJheShpKXx8MD09PWkubGVuZ3RofHxcIk1cIiE9PWlbMF1bMF0mJlwibVwiIT09aVswXVswXXx8KHIuZWFjaChpLGZ1bmN0aW9uKHQpe249bmV3IGEodCxuKSxvLnB1c2gobil9KSxlLnNldChcInNlZ21lbnRzXCIsbyksZS5fX2NhbGN1bGF0ZUJveCgpKX0sX19hZnRlclNldEF0dHJMaW5lV2lkdGg6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztlLmdldChcInNlZ21lbnRzXCIpO2UuX19jYWxjdWxhdGVCb3goKX0sX19hZnRlclNldEF0dHJBbGw6ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0LnBhdGg/ZS5fX2FmdGVyU2V0QXR0clBhdGgodC5wYXRoKTplLl9fY2FsY3VsYXRlQm94KCl9LF9fY2FsY3VsYXRlQm94OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuX19hdHRycyxuPWUubGluZVdpZHRoLGk9dC5nZXQoXCJzZWdtZW50c1wiKTtpZihpKXt2YXIgYT0xLzAscz0tKDEvMCksbz0xLzAsdT0tKDEvMCk7ci5lYWNoKGksZnVuY3Rpb24odCxlKXt0LmdldEJCb3gobik7dmFyIHI9dC5ib3g7ciYmKHIubWluWDxhJiYoYT1yLm1pblgpLHIubWF4WD5zJiYocz1yLm1heFgpLHIubWluWTxvJiYobz1yLm1pblkpLHIubWF4WT51JiYodT1yLm1heFkpKX0pLHRoaXMuc2V0KFwiYm94XCIse21pblg6YSxtaW5ZOm8sbWF4WDpzLG1heFk6dX0pfX0saXNQb2ludEluUGF0aDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLmhhc0ZpbGwoKSxpPW4uaGFzU3Ryb2tlKCk7cmV0dXJuIHImJmk/bi5fX2lzUG9pbnRJbkZpbGwodCxlKXx8bi5fX2lzUG9pbnRJblN0cm9rZSh0LGUpOnI/bi5fX2lzUG9pbnRJbkZpbGwodCxlKTohIWkmJm4uX19pc1BvaW50SW5TdHJva2UodCxlKX0sX19pc1BvaW50SW5GaWxsOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uZ2V0KFwiY29udGV4dFwiKTtpZihyKXJldHVybiBuLmNyZWF0ZVBhdGgoKSxyLmlzUG9pbnRJblBhdGgodCxlKX0sX19pc1BvaW50SW5TdHJva2U6ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dGhpcyxyPW4uZ2V0KFwic2VnbWVudHNcIiksaT1uLl9fYXR0cnMsYT1pLmxpbmVXaWR0aCxzPTAsbz1yLmxlbmd0aDtzPG87cysrKWlmKHJbc10uaXNJbnNpZGUodCxlLGEpKXJldHVybiEwO3JldHVybiExfSxjcmVhdGVQYXRoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwiY29udGV4dFwiKSxuPXQuZ2V0KFwic2VnbWVudHNcIik7ZS5iZWdpblBhdGgoKTtmb3IodmFyIHI9MCxpPW4ubGVuZ3RoO3I8aTtyKyspbltyXS5kcmF3KGUpfX0pLHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big2KSxpPW4oOCksYT1uKDcpLHM9ZnVuY3Rpb24odCl7cy5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07cy5BVFRSUz17cG9pbnRzOm51bGwsbGluZVdpZHRoOjF9LHIuZXh0ZW5kKHMsaSksci5hdWdtZW50KHMse2NhbkZpbGw6ITAsY2FuU3Ryb2tlOiEwLHR5cGU6XCJwb2x5Z29uXCIsX19hZnRlclNldEF0dHJQb2ludHM6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyTGluZVdpZHRoOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0ckFsbDpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19jYWxjdWxhdGVCb3g6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5fX2F0dHJzLG49ZS5wb2ludHMsaT1lLmxpbmVXaWR0aDtpZihuJiYwIT09bi5sZW5ndGgpe3ZhciBhPTEvMCxzPTEvMCxvPS0oMS8wKSx1PS0oMS8wKTtyLmVhY2gobixmdW5jdGlvbih0KXt2YXIgZT10WzBdLG49dFsxXTtlPGEmJihhPWUpLGU+byYmKG89ZSksbjxzJiYocz1uKSxuPnUmJih1PW4pfSk7dmFyIGM9aS8yO3Quc2V0KFwiYm94XCIse21pblg6YS1jLG1pblk6cy1jLG1heFg6bytjLG1heFk6dStjfSl9fSxpc1BvaW50SW5QYXRoOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uaGFzRmlsbCgpLGk9bi5oYXNTdHJva2UoKTtyZXR1cm4gciYmaT9uLl9faXNQb2ludEluRmlsbCh0LGUpfHxuLl9faXNQb2ludEluU3Ryb2tlKHQsZSk6cj9uLl9faXNQb2ludEluRmlsbCh0LGUpOiEhaSYmbi5fX2lzUG9pbnRJblN0cm9rZSh0LGUpfSxfX2lzUG9pbnRJbkZpbGw6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5nZXQoXCJjb250ZXh0XCIpO3JldHVybiBuLmNyZWF0ZVBhdGgoKSxyLmlzUG9pbnRJblBhdGgodCxlKX0sX19pc1BvaW50SW5TdHJva2U6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5fX2F0dHJzLGk9ci5wb2ludHM7aWYoaS5sZW5ndGg8MilyZXR1cm4hMTt2YXIgcz1yLmxpbmVXaWR0aCxvPWkuc2xpY2UoMCk7cmV0dXJuIGkubGVuZ3RoPj0zJiZvLnB1c2goaVswXSksYS5wb2x5bGluZShvLHMsdCxlKX0sY3JlYXRlUGF0aDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcImNvbnRleHRcIiksbj10Ll9fYXR0cnMsaT1uLnBvaW50cztpLmxlbmd0aDwyfHwoZS5iZWdpblBhdGgoKSxyLmVhY2goaSxmdW5jdGlvbih0LG4pezA9PT1uP2UubW92ZVRvKHRbMF0sdFsxXSk6ZS5saW5lVG8odFswXSx0WzFdKX0pLGUuY2xvc2VQYXRoKCkpfX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big2KSxpPW4oOCksYT1uKDcpLHM9bigzKSxvPXMuVmVjdG9yMix1PW4oMzUpLGM9ZnVuY3Rpb24odCl7Yy5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07Yy5BVFRSUz17cG9pbnRzOm51bGwsbGluZVdpZHRoOjEsYXJyb3c6ITF9LHIuZXh0ZW5kKGMsaSksci5hdWdtZW50KGMse2NhblN0cm9rZTohMCx0eXBlOlwicG9seWxpbmVcIixfX2FmdGVyU2V0QXR0clBvaW50czpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19hZnRlclNldEF0dHJMaW5lV2lkdGg6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyQWxsOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2NhbGN1bGF0ZUJveDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10Ll9fYXR0cnMsbj1lLmxpbmVXaWR0aCxpPWUucG9pbnRzO2lmKGkmJjAhPT1pLmxlbmd0aCl7dmFyIGE9MS8wLHM9MS8wLG89LSgxLzApLHU9LSgxLzApO3IuZWFjaChpLGZ1bmN0aW9uKHQpe3ZhciBlPXRbMF0sbj10WzFdO2U8YSYmKGE9ZSksZT5vJiYobz1lKSxuPHMmJihzPW4pLG4+dSYmKHU9bil9KTt2YXIgYz1uLzI7dGhpcy5zZXQoXCJib3hcIix7bWluWDphLWMsbWluWTpzLWMsbWF4WDpvK2MsbWF4WTp1K2N9KX19LGlzUG9pbnRJblBhdGg6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5fX2F0dHJzO2lmKG4uaGFzU3Ryb2tlKCkpe3ZhciBpPXIucG9pbnRzO2lmKGkubGVuZ3RoPDIpcmV0dXJuITE7dmFyIHM9ci5saW5lV2lkdGg7cmV0dXJuIGEucG9seWxpbmUoaSxzLHQsZSl9cmV0dXJuITF9LGNyZWF0ZVBhdGg6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJjb250ZXh0XCIpLG49dC5fX2F0dHJzLHI9bi5wb2ludHMsaT1uLmFycm93LGE9bi5saW5lV2lkdGg7aWYoIShyLmxlbmd0aDwyKSl7ZS5iZWdpblBhdGgoKSxlLm1vdmVUbyhyWzBdWzBdLHJbMF1bMV0pO2Zvcih2YXIgcz0xLGM9ci5sZW5ndGgtMTtzPGM7cysrKWUubGluZVRvKHJbc11bMF0scltzXVsxXSk7aWYoaSl7dmFyIGw9bmV3IG8ocltjXVswXS1yW2MtMV1bMF0scltjXVsxXS1yW2MtMV1bMV0pLGg9dS5nZXRFbmRQb2ludChsLG5ldyBvKHJbY11bMF0scltjXVsxXSksYSk7ZS5saW5lVG8oaC54LGgueSksdS5tYWtlQXJyb3coZSxsLGgsYSl9ZWxzZSBlLmxpbmVUbyhyW2NdWzBdLHJbY11bMV0pfX19KSx0LmV4cG9ydHM9Y30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNiksaT1uKDgpLGE9big3KSxzPShuKDQpLG4oMzUpKSxvPW4oNTgpLHU9bigzKSxjPXUuVmVjdG9yMixsPWZ1bmN0aW9uKHQpe2wuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2wuQVRUUlM9e3AxOm51bGwscDI6bnVsbCxwMzpudWxsLGxpbmVXaWR0aDoxLGFycm93OiExfSxyLmV4dGVuZChsLGkpLHIuYXVnbWVudChsLHtjYW5TdHJva2U6ITAsdHlwZTpcInF1YWRyYXRpY1wiLF9fYWZ0ZXJTZXRBdHRyUDE6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyUDI6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyUDM6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyTGluZVdpZHRoOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0ckFsbDpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19jYWxjdWxhdGVCb3g6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5fX2F0dHJzLG49ZS5wMSxpPWUucDIsYT1lLnAzO2lmKCEoci5pc051bGwobil8fHIuaXNOdWxsKGkpfHxyLmlzTnVsbChhKSkpe2Zvcih2YXIgcz1lLmxpbmVXaWR0aC8yLHU9by5leHRyZW1hKG5bMF0saVswXSxhWzBdKSxjPTAsbD11Lmxlbmd0aDtjPGw7YysrKXVbY109by5hdChuWzBdLGlbMF0sYVswXSx1W2NdKTt1LnB1c2goblswXSxhWzBdKTtmb3IodmFyIGg9by5leHRyZW1hKG5bMV0saVsxXSxhWzFdKSxjPTAsbD1oLmxlbmd0aDtjPGw7YysrKWhbY109by5hdChuWzFdLGlbMV0sYVsxXSxoW2NdKTtoLnB1c2goblsxXSxhWzFdKSx0LnNldChcImJveFwiLHttaW5YOk1hdGgubWluLmFwcGx5KE1hdGgsdSktcyxtYXhYOk1hdGgubWF4LmFwcGx5KE1hdGgsdSkrcyxtaW5ZOk1hdGgubWluLmFwcGx5KE1hdGgsaCktcyxtYXhZOk1hdGgubWF4LmFwcGx5KE1hdGgsaCkrc30pfX0saXNQb2ludEluUGF0aDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLl9fYXR0cnMsaT1yLnAxLHM9ci5wMixvPXIucDMsdT1yLmxpbmVXaWR0aDtyZXR1cm4gYS5xdWFkcmF0aWNsaW5lKGlbMF0saVsxXSxzWzBdLHNbMV0sb1swXSxvWzFdLHUsdCxlKX0sY3JlYXRlUGF0aDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcImNvbnRleHRcIiksbj10Ll9fYXR0cnMsaT1uLnAxLGE9bi5wMixvPW4ucDMsdT1uLmxpbmVXaWR0aCxsPW4uYXJyb3c7aWYoIShyLmlzTnVsbChpKXx8ci5pc051bGwoYSl8fHIuaXNOdWxsKG8pKSYmKGUuYmVnaW5QYXRoKCksZS5tb3ZlVG8oaVswXSxpWzFdKSxlLnF1YWRyYXRpY0N1cnZlVG8oYVswXSxhWzFdLG9bMF0sb1sxXSksbCkpe3ZhciBoPW5ldyBjKG9bMF0tYVswXSxvWzFdLWFbMV0pO3MubWFrZUFycm93KGUsaCx7eDpvWzBdLHk6b1sxXX0sdSl9fSxnZXRQb2ludDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9fYXR0cnM7cmV0dXJue3g6by5hdChlLnAxWzBdLGUucDJbMF0sZS5wM1swXSx0KSx5Om8uYXQoZS5wMVsxXSxlLnAyWzFdLGUucDNbMV0sdCl9fX0pLHQuZXhwb3J0cz1sfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big2KSxpPW4oOCksYT1uKDcpLHM9bigxMyksbz1mdW5jdGlvbih0KXtvLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtvLkFUVFJTPXt4OjAseTowLHdpZHRoOjAsaGVpZ2h0OjAscmFkaXVzOjAsbGluZVdpZHRoOjF9LHIuZXh0ZW5kKG8saSksci5hdWdtZW50KG8se2NhbkZpbGw6ITAsY2FuU3Ryb2tlOiEwLHR5cGU6XCJyZWN0XCIsX19zZXRBdHRyV2lkdGg6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD49MD90OihzLndhcm4oXCJ3aWR0aCBcXHU1ZmM1XFx1OTg3YlxcdTU5MjdcXHU0ZThlXFx1N2I0OVxcdTRlOGUwXCIpLGUpfSxfX3NldEF0dHJIZWlnaHQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD49MD90OihzLndhcm4oXCJoZWlnaHQgXFx1NWZjNVxcdTk4N2JcXHU1OTI3XFx1NGU4ZVxcdTdiNDlcXHU0ZThlMFwiKSxlKX0sX19zZXRBdHRyUmFkaXVzOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ+PTA/dDoocy53YXJuKFwicmFkaXVzIFxcdTVmYzVcXHU5ODdiXFx1NTkyN1xcdTRlOGVcXHU3YjQ5XFx1NGU4ZTBcIiksZSl9LF9fYWZ0ZXJTZXRBdHRyWDpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19hZnRlclNldEF0dHJZOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0cldpZHRoOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0ckhlaWdodDpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19hZnRlclNldEF0dHJMaW5lV2lkdGg6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyQWxsOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2NhbGN1bGF0ZUJveDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10Ll9fYXR0cnMsbj1lLngscj1lLnksaT1lLndpZHRoLGE9ZS5oZWlnaHQscz1lLmxpbmVXaWR0aCxvPXMvMjt0aGlzLnNldChcImJveFwiLHttaW5YOm4tbyxtaW5ZOnItbyxtYXhYOm4raStvLG1heFk6cithK299KX0saXNQb2ludEluUGF0aDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLmhhc0ZpbGwoKSxpPW4uaGFzU3Ryb2tlKCk7cmV0dXJuIHImJmk/bi5fX2lzUG9pbnRJbkZpbGwodCxlKXx8bi5fX2lzUG9pbnRJblN0cm9rZSh0LGUpOnI/bi5fX2lzUG9pbnRJbkZpbGwodCxlKTohIWkmJm4uX19pc1BvaW50SW5TdHJva2UodCxlKX0sX19pc1BvaW50SW5GaWxsOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uX19hdHRycyxpPShyLngsci55LHIud2lkdGgsci5oZWlnaHQsci5yYWRpdXMsbi5nZXQoXCJjb250ZXh0XCIpKTtyZXR1cm4hIWkmJihuLmNyZWF0ZVBhdGgoKSxpLmlzUG9pbnRJblBhdGgodCxlKSl9LF9faXNQb2ludEluU3Ryb2tlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uX19hdHRycyxpPXIueCxzPXIueSxvPXIud2lkdGgsdT1yLmhlaWdodCxjPXIucmFkaXVzLGw9ci5saW5lV2lkdGg7aWYoMD09PWMpe3ZhciBoPWwvMjtyZXR1cm4gYS5saW5lKGktaCxzLGkrbytoLHMsbCx0LGUpfHxhLmxpbmUoaStvLHMtaCxpK28scyt1K2gsbCx0LGUpfHxhLmxpbmUoaStvK2gscyt1LGktaCxzK3UsbCx0LGUpfHxhLmxpbmUoaSxzK3UraCxpLHMtaCxsLHQsZSl9cmV0dXJuIGEubGluZShpK2MscyxpK28tYyxzLGwsdCxlKXx8YS5saW5lKGkrbyxzK2MsaStvLHMrdS1jLGwsdCxlKXx8YS5saW5lKGkrby1jLHMrdSxpK2Mscyt1LGwsdCxlKXx8YS5saW5lKGkscyt1LWMsaSxzK2MsbCx0LGUpfHxhLmFyY2xpbmUoaStvLWMscytjLGMsMS41Kk1hdGguUEksMipNYXRoLlBJLCExLGwsdCxlKXx8YS5hcmNsaW5lKGkrby1jLHMrdS1jLGMsMCwuNSpNYXRoLlBJLCExLGwsdCxlKXx8YS5hcmNsaW5lKGkrYyxzK3UtYyxjLC41Kk1hdGguUEksTWF0aC5QSSwhMSxsLHQsZSl8fGEuYXJjbGluZShpK2MscytjLGMsTWF0aC5QSSwxLjUqTWF0aC5QSSwhMSxsLHQsZSl9LGNyZWF0ZVBhdGg6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJjb250ZXh0XCIpLG49dC5fX2F0dHJzLHI9bi54LGk9bi55LGE9bi53aWR0aCxzPW4uaGVpZ2h0LG89bi5yYWRpdXM7ZS5iZWdpblBhdGgoKSwwPT09bz8oZS5tb3ZlVG8ocixpKSxlLmxpbmVUbyhyK2EsaSksZS5saW5lVG8ocithLGkrcyksZS5saW5lVG8ocixpK3MpLGUubGluZVRvKHIsaSkpOihlLm1vdmVUbyhyK28saSksZS5saW5lVG8ocithLW8saSksZS5hcmMocithLW8saStvLG8sLU1hdGguUEkvMiwwLCExKSxlLmxpbmVUbyhyK2EsaStzLW8pLGUuYXJjKHIrYS1vLGkrcy1vLG8sMCxNYXRoLlBJLzIsITEpLGUubGluZVRvKHIrbyxpK3MpLGUuYXJjKHIrbyxpK3MtbyxvLE1hdGguUEkvMixNYXRoLlBJLCExKSxlLmxpbmVUbyhyLGkrbyksZS5hcmMocitvLGkrbyxvLE1hdGguUEksMypNYXRoLlBJLzIsITEpKSxlLmNsb3NlUGF0aCgpfX0pLHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big2KSxpPW4oOCksYT1uKDcpLHM9bigxMyksbz1mdW5jdGlvbih0KXtvLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtvLkFUVFJTPXt4OjAseTowLHRleHQ6bnVsbCxmb250U2l6ZToxMixmb250RmFtaWx5Olwic2Fucy1zZXJpZlwiLGZvbnRTdHlsZTpcIm5vcm1hbFwiLGZvbnRXZWlnaHQ6XCJub3JtYWxcIixmb250VmFyaWFudDpcIm5vcm1hbFwiLHRleHRBbGlnbjpcInN0YXJ0XCIsdGV4dEJhc2VsaW5lOlwiYm90dG9tXCIsXG5saW5lV2lkdGg6MX07dmFyIHU9e3N0YXJ0OjEscmlnaHQ6MSxsZWZ0OjEsZW5kOjEsY2VudGVyOjF9LGM9e3RvcDoxLG1pZGRsZToxLGJvdHRvbToxfSxsPXtub3JtYWw6MSxpdGFsaWM6MSxvYmxpcXVlOjF9LGg9e25vcm1hbDoxLFwic21hbGwtY2Fwc1wiOjF9LGY9e25vcm1hbDoxLGJvbGQ6MSxib2xkZXI6MSxsaWdodGVyOjEsMTAwOjEsMjAwOjEsMzAwOjEsNDAwOjEsNTAwOjEsNjAwOjEsNzAwOjEsODAwOjEsOTAwOjF9O3IuZXh0ZW5kKG8saSksci5hdWdtZW50KG8se2NhbkZpbGw6ITAsY2FuU3Ryb2tlOiEwLHR5cGU6XCJ0ZXh0XCIsX19zZXRBdHRyVGV4dEFsaWduOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQgaW4gdT90OmV9LF9fc2V0QXR0clRleHRCYXNlbGluZTpmdW5jdGlvbih0LGUpe3JldHVybiB0IGluIGM/dDplfSxfX3NldEF0dHJGb250U2l6ZTpmdW5jdGlvbih0LGUpe3JldHVybiB0Pj0xMj90OmV9LF9fc2V0QXR0ckZvbnRTdHlsZTpmdW5jdGlvbih0LGUpe3JldHVybiB0IGluIGw/dDplfSxfX3NldEF0dHJGb250VmFyaWFudDpmdW5jdGlvbih0LGUpe3JldHVybiB0IGluIGg/dDplfSxfX3NldEF0dHJGb250V2VpZ2h0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQgaW4gZj90OmV9LF9fYXNzZW1ibGVGb250OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuYXR0cihcImZvbnRTaXplXCIpLG49dC5hdHRyKFwiZm9udEZhbWlseVwiKSxyPXQuYXR0cihcImZvbnRXZWlnaHRcIiksaT10LmF0dHIoXCJmb250U3R5bGVcIiksYT10LmF0dHIoXCJmb250VmFyaWFudFwiKTt0LmF0dHIoXCJmb250XCIsW2ksYSxyLGUrXCJweFwiLG5dLmpvaW4oXCIgXCIpKX0sX19hZnRlclNldEF0dHJGb250U2l6ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzO2UuYXR0cih7aGVpZ2h0OnR9KSxlLl9fYXNzZW1ibGVGb250KCl9LF9fYWZ0ZXJTZXRBdHRyRm9udEZhbWlseTpmdW5jdGlvbigpe3RoaXMuX19hc3NlbWJsZUZvbnQoKX0sX19hZnRlclNldEF0dHJGb250V2VpZ2h0OmZ1bmN0aW9uKCl7dGhpcy5fX2Fzc2VtYmxlRm9udCgpfSxfX2FmdGVyU2V0QXR0ckZvbnRTdHlsZTpmdW5jdGlvbigpe3RoaXMuX19hc3NlbWJsZUZvbnQoKX0sX19hZnRlclNldEF0dHJGb250VmFyaWFudDpmdW5jdGlvbigpe3RoaXMuX19hc3NlbWJsZUZvbnQoKX0sX19hZnRlclNldEF0dHJGb250OmZ1bmN0aW9uKCl7dGhpcy5hdHRyKFwid2lkdGhcIix0aGlzLm1lYXN1cmVUZXh0KCkpfSxfX2FmdGVyU2V0QXR0clRleHQ6ZnVuY3Rpb24oKXt0aGlzLmF0dHIoXCJ3aWR0aFwiLHRoaXMubWVhc3VyZVRleHQoKSl9LF9fYWZ0ZXJTZXRBdHRyVGV4dEFsaWduOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0clRleHRCYXNlbGluZTpmdW5jdGlvbigpe3RoaXMuX19jYWxjdWxhdGVCb3goKX0sX19hZnRlclNldEF0dHJYOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0clk6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyV2lkdGg6ZnVuY3Rpb24oKXt0aGlzLl9fY2FsY3VsYXRlQm94KCl9LF9fYWZ0ZXJTZXRBdHRyTGluZVdpZHRoOmZ1bmN0aW9uKCl7dGhpcy5fX2NhbGN1bGF0ZUJveCgpfSxfX2FmdGVyU2V0QXR0ckFsbDpmdW5jdGlvbih0KXt2YXIgZT10aGlzO1wiZm9udFNpemVcImluIHQmJmUuYXR0cihcImhlaWdodFwiLHQuZm9udFNpemUpLChcImZvbnRTaXplXCJpbiB0fHxcImZvbnRXZWlnaHRcImluIHR8fFwiZm9udFN0eWxlXCJpbiB0fHxcImZvbnRWYXJpYW50XCJpbiB0fHxcImZvbnRGYW1pbHlcImluIHQpJiZlLl9fYXNzZW1ibGVGb250KCksXCJ0ZXh0XCJpbiB0JiZlLl9fYWZ0ZXJTZXRBdHRyVGV4dCh0LnRleHQpLGUuX19jYWxjdWxhdGVCb3goKX0sX19jYWxjdWxhdGVCb3g6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5fX2F0dHJzLG49ZS54LHI9ZS55LGk9ZS53aWR0aDtpZihpKXt2YXIgYT1lLmhlaWdodCxzPWUudGV4dEFsaWduLG89ZS50ZXh0QmFzZWxpbmUsdT1lLmxpbmVXaWR0aCxjPXt4Om4seTpyLWF9O3MmJihcImVuZFwiPT09c3x8XCJyaWdodFwiPT09cz9jLngtPWk6XCJjZW50ZXJcIj09PXMmJihjLngtPWkvMikpLG8mJihcInRvcFwiPT09bz9jLnkrPWE6XCJtaWRkbGVcIj09PW8mJihjLnkrPWEvMikpLHRoaXMuc2V0KFwic3RhcnRQb2ludFwiLGMpO3ZhciBsPXUvMjt0aGlzLnNldChcImJveFwiLHttaW5YOmMueC1sLG1pblk6Yy55LWwsbWF4WDpjLngraStsLG1heFk6Yy55K2ErbH0pfX0saXNQb2ludEluUGF0aDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLmdldEJCb3goKTtpZihuLmhhc0ZpbGwoKXx8bi5oYXNTdHJva2UoKSlyZXR1cm4gYS5ib3goci5taW5YLHIubWF4WCxyLm1pblksci5tYXhZLHQsZSl9LGRyYXdJbm5lcjpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcImNvbnRleHRcIiksbj10Ll9fYXR0cnMsaT1uLnRleHQsYT1uLngscz1uLnk7ci5pc051bGwoaSl8fChlLmJlZ2luUGF0aCgpLHQuaGFzRmlsbCgpJiZlLmZpbGxUZXh0KGksYSxzKSx0Lmhhc1N0cm9rZSgpJiZlLnN0cm9rZVRleHQoaSxhLHMpKX0sbWVhc3VyZVRleHQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5fX2F0dHJzLG49ZS50ZXh0LGk9ZS5mb250O2lmKCFyLmlzTnVsbChuKSl7dmFyIGE9cy5iYWNrdXBDb250ZXh0O2Euc2F2ZSgpLGEuZm9udD1pO3ZhciBvPWEubWVhc3VyZVRleHQobikud2lkdGg7cmV0dXJuIGEucmVzdG9yZSgpLG99fX0pLHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUpe3RoaXMucHJlU2VnbWVudD1lLHRoaXMuaW5pdCh0LGUpfWZ1bmN0aW9uIGkodCxlLG4pe3JldHVybnt4Om4ueCt0LHk6bi55K2V9fWZ1bmN0aW9uIGEodCxlKXtyZXR1cm57eDplLngrKGUueC10LngpLHk6ZS55KyhlLnktdC55KX19ZnVuY3Rpb24gcyh0KXtyZXR1cm4gTWF0aC5zcXJ0KHRbMF0qdFswXSt0WzFdKnRbMV0pfWZ1bmN0aW9uIG8odCxlKXtyZXR1cm4odFswXSplWzBdK3RbMV0qZVsxXSkvKHModCkqcyhlKSl9ZnVuY3Rpb24gdSh0LGUpe3JldHVybih0WzBdKmVbMV08dFsxXSplWzBdPy0xOjEpKk1hdGguYWNvcyhvKHQsZSkpfWZ1bmN0aW9uIGModCxlLG4scixpLGEscyl7dmFyIGM9aC5tb2QoaC5kZWdyZWVUb1JhZChzKSwyKk1hdGguUEkpLGw9dC54LGY9dC55LGc9ZS54LHA9ZS55LHY9TWF0aC5jb3MoYykqKGwtZykvMitNYXRoLnNpbihjKSooZi1wKS8yLGQ9LTEqTWF0aC5zaW4oYykqKGwtZykvMitNYXRoLmNvcyhjKSooZi1wKS8yLHg9dip2LyhpKmkpK2QqZC8oYSphKTt4PjEmJihpKj1NYXRoLnNxcnQoeCksYSo9TWF0aC5zcXJ0KHgpKTt2YXIgbT1NYXRoLnNxcnQoKGkqaSooYSphKS1pKmkqKGQqZCktYSphKih2KnYpKS8oaSppKihkKmQpK2EqYSoodip2KSkpO249PT1yJiYobSo9LTEpLGlzTmFOKG0pJiYobT0wKTt2YXIgeT1tKmkqZC9hLF89bSotYSp2L2ksUz0obCtnKS8yK01hdGguY29zKGMpKnktTWF0aC5zaW4oYykqXyx3PShmK3ApLzIrTWF0aC5zaW4oYykqeStNYXRoLmNvcyhjKSpfLGI9dShbMSwwXSxbKHYteSkvaSwoZC1fKS9hXSksTT1bKHYteSkvaSwoZC1fKS9hXSxBPVsoLTEqdi15KS9pLCgtMSpkLV8pL2FdLEM9dShNLEEpO3JldHVybiBvKE0sQSk8PS0xJiYoQz1NYXRoLlBJKSxvKE0sQSk+PTEmJihDPTApLDA9PT1yJiZDPjAmJihDLT0yKk1hdGguUEkpLDE9PT1yJiZDPDAmJihDKz0yKk1hdGguUEkpLFt0LFMsdyxpLGEsYixDLGMscl19dmFyIGw9big2KSxoPW4oNCksZj1uKDMpLGc9big3KSxwPW4oNTcpLHY9big1OCksZD1uKDI3OCkseD1mLlZlY3RvcjMsbT1mLk1hdHJpeDM7bC5hdWdtZW50KHIse2luaXQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10WzBdO2U9ZXx8e2VuZFBvaW50Ont4OjAseTowfX07dmFyIHI9L1thLXpdLy50ZXN0KG4pLHM9bi50b1VwcGVyQ2FzZSgpLG89dDtzd2l0Y2gocyl7Y2FzZVwiTVwiOmlmKHIpdmFyIHU9aShvWzFdLG9bMl0sZS5lbmRQb2ludCk7ZWxzZSB2YXIgdT17eDpvWzFdLHk6b1syXX07dGhpcy5jb21tYW5kPVwiTVwiLHRoaXMucGFyYW1zPVtlLmVuZFBvaW50LHVdLHRoaXMuc3ViU3RhcnQ9dSx0aGlzLmVuZFBvaW50PXU7YnJlYWs7Y2FzZVwiTFwiOmlmKHIpdmFyIHU9aShvWzFdLG9bMl0sZS5lbmRQb2ludCk7ZWxzZSB2YXIgdT17eDpvWzFdLHk6b1syXX07dGhpcy5jb21tYW5kPVwiTFwiLHRoaXMucGFyYW1zPVtlLmVuZFBvaW50LHVdLHRoaXMuc3ViU3RhcnQ9ZS5zdWJTdGFydCx0aGlzLmVuZFBvaW50PXU7YnJlYWs7Y2FzZVwiSFwiOmlmKHIpdmFyIHU9aShvWzFdLDAsZS5lbmRQb2ludCk7ZWxzZSB2YXIgdT17eDpvWzFdLHk6ZS5lbmRQb2ludC55fTt0aGlzLmNvbW1hbmQ9XCJMXCIsdGhpcy5wYXJhbXM9W2UuZW5kUG9pbnQsdV0sdGhpcy5zdWJTdGFydD1lLnN1YlN0YXJ0LHRoaXMuZW5kUG9pbnQ9dTticmVhaztjYXNlXCJWXCI6aWYocil2YXIgdT1pKDAsb1sxXSxlLmVuZFBvaW50KTtlbHNlIHZhciB1PXt4OmUuZW5kUG9pbnQueCx5Om9bMV19O3RoaXMuY29tbWFuZD1cIkxcIix0aGlzLnBhcmFtcz1bZS5lbmRQb2ludCx1XSx0aGlzLnN1YlN0YXJ0PWUuc3ViU3RhcnQsdGhpcy5lbmRQb2ludD11O2JyZWFrO2Nhc2VcIlFcIjppZihyKXZhciBsPWkob1sxXSxvWzJdLGUuZW5kUG9pbnQpLGg9aShvWzNdLG9bNF0sZS5lbmRQb2ludCk7ZWxzZSB2YXIgbD17eDpvWzFdLHk6b1syXX0saD17eDpvWzNdLHk6b1s0XX07dGhpcy5jb21tYW5kPVwiUVwiLHRoaXMucGFyYW1zPVtlLmVuZFBvaW50LGwsaF0sdGhpcy5zdWJTdGFydD1lLnN1YlN0YXJ0LHRoaXMuZW5kUG9pbnQ9aDticmVhaztjYXNlXCJUXCI6aWYocil2YXIgaD1pKG9bMV0sb1syXSxlLmVuZFBvaW50KTtlbHNlIHZhciBoPXt4Om9bMV0seTpvWzJdfTtpZihcIlFcIj09PWUuY29tbWFuZCl7dmFyIGw9YShlLnBhcmFtc1sxXSxlLmVuZFBvaW50KTt0aGlzLmNvbW1hbmQ9XCJRXCIsdGhpcy5wYXJhbXM9W2UuZW5kUG9pbnQsbCxoXSx0aGlzLnN1YlN0YXJ0PWUuc3ViU3RhcnQsdGhpcy5lbmRQb2ludD1ofWVsc2UgdGhpcy5jb21tYW5kPVwiVExcIix0aGlzLnBhcmFtcz1bZS5lbmRQb2ludCxoXSx0aGlzLnN1YlN0YXJ0PWUuc3ViU3RhcnQsdGhpcy5lbmRQb2ludD1oO2JyZWFrO2Nhc2VcIkNcIjppZihyKXZhciBsPWkob1sxXSxvWzJdLGUuZW5kUG9pbnQpLGg9aShvWzNdLG9bNF0sZS5lbmRQb2ludCksZj1pKG9bNV0sb1s2XSxlLmVuZFBvaW50KTtlbHNlIHZhciBsPXt4Om9bMV0seTpvWzJdfSxoPXt4Om9bM10seTpvWzRdfSxmPXt4Om9bNV0seTpvWzZdfTt0aGlzLmNvbW1hbmQ9XCJDXCIsdGhpcy5wYXJhbXM9W2UuZW5kUG9pbnQsbCxoLGZdLHRoaXMuc3ViU3RhcnQ9ZS5zdWJTdGFydCx0aGlzLmVuZFBvaW50PWY7YnJlYWs7Y2FzZVwiU1wiOmlmKHIpdmFyIGg9aShvWzFdLG9bMl0sZS5lbmRQb2ludCksZj1pKG9bM10sb1s0XSxlLmVuZFBvaW50KTtlbHNlIHZhciBoPXt4Om9bMV0seTpvWzJdfSxmPXt4Om9bM10seTpvWzRdfTtpZihcIkNcIj09PWUuY29tbWFuZCl7dmFyIGw9YShlLnBhcmFtc1syXSxlLmVuZFBvaW50KTt0aGlzLmNvbW1hbmQ9XCJDXCIsdGhpcy5wYXJhbXM9W2UuZW5kUG9pbnQsbCxoLGZdLHRoaXMuc3ViU3RhcnQ9ZS5zdWJTdGFydCx0aGlzLmVuZFBvaW50PWZ9ZWxzZSB0aGlzLmNvbW1hbmQ9XCJTUVwiLHRoaXMucGFyYW1zPVtlLmVuZFBvaW50LGgsZl0sdGhpcy5zdWJTdGFydD1lLnN1YlN0YXJ0LHRoaXMuZW5kUG9pbnQ9ZjticmVhaztjYXNlXCJBXCI6dmFyIGc9b1sxXSxwPW9bMl0sdj1vWzNdLGQ9b1s0XSx4PW9bNV07aWYocil2YXIgdT1pKG9bNl0sb1s3XSxlLmVuZFBvaW50KTtlbHNlIHZhciB1PXt4Om9bNl0seTpvWzddfTt0aGlzLmNvbW1hbmQ9XCJBXCIsdGhpcy5wYXJhbXM9YyhlLmVuZFBvaW50LHUsZCx4LGcscCx2KSx0aGlzLnN1YlN0YXJ0PWUuc3ViU3RhcnQsdGhpcy5lbmRQb2ludD11O2JyZWFrO2Nhc2VcIlpcIjp0aGlzLmNvbW1hbmQ9XCJaXCIsdGhpcy5wYXJhbXM9W2UuZW5kUG9pbnQsZS5zdWJTdGFydF0sdGhpcy5zdWJTdGFydD1lLnN1YlN0YXJ0LHRoaXMuZW5kUG9pbnQ9ZS5zdWJTdGFydH19LGlzSW5zaWRlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10aGlzLGk9ci5jb21tYW5kLGE9ci5wYXJhbXMscz1yLmJveDtpZihzJiYhZy5ib3gocy5taW5YLHMubWF4WCxzLm1pblkscy5tYXhZLHQsZSkpcmV0dXJuITE7c3dpdGNoKGkpe2Nhc2VcIk1cIjpyZXR1cm4hMTtjYXNlXCJUTFwiOmNhc2VcIkxcIjpjYXNlXCJaXCI6cmV0dXJuIGcubGluZShhWzBdLngsYVswXS55LGFbMV0ueCxhWzFdLnksbix0LGUpO2Nhc2VcIlNRXCI6Y2FzZVwiUVwiOnJldHVybiBnLnF1YWRyYXRpY2xpbmUoYVswXS54LGFbMF0ueSxhWzFdLngsYVsxXS55LGFbMl0ueCxhWzJdLnksbix0LGUpO2Nhc2VcIkNcIjpyZXR1cm4gZy5jdWJpY2xpbmUoYVswXS54LGFbMF0ueSxhWzFdLngsYVsxXS55LGFbMl0ueCxhWzJdLnksYVszXS54LGFbM10ueSxuLHQsZSk7Y2FzZVwiQVwiOnZhciBvPWEsdT1vWzFdLGM9b1syXSxsPW9bM10saD1vWzRdLGY9b1s1XSxwPW9bNl0sdj1vWzddLGQ9b1s4XSx5PWw+aD9sOmgsXz1sPmg/MTpsL2gsUz1sPmg/aC9sOjEsbz1uZXcgeCh0LGUsMSksdz1uZXcgbTtyZXR1cm4gdy50cmFuc2xhdGUoLXUsLWMpLHcucm90YXRlKC12KSx3LnNjYWxlKDEvXywxL1MpLG8uYXBwbHlNYXRyaXgodyksZy5hcmNsaW5lKDAsMCx5LGYsZitwLDEtZCxuLG8ueCxvLnkpfXJldHVybiExfSxkcmF3OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuY29tbWFuZCxuPXRoaXMucGFyYW1zO3N3aXRjaChlKXtjYXNlXCJNXCI6dC5tb3ZlVG8oblsxXS54LG5bMV0ueSk7YnJlYWs7Y2FzZVwiVExcIjpjYXNlXCJMXCI6dC5saW5lVG8oblsxXS54LG5bMV0ueSk7YnJlYWs7Y2FzZVwiU1FcIjpjYXNlXCJRXCI6dmFyIHI9blsxXSxpPW5bMl07dC5xdWFkcmF0aWNDdXJ2ZVRvKHIueCxyLnksaS54LGkueSk7YnJlYWs7Y2FzZVwiQ1wiOnZhciByPW5bMV0saT1uWzJdLGE9blszXTt0LmJlemllckN1cnZlVG8oci54LHIueSxpLngsaS55LGEueCxhLnkpO2JyZWFrO2Nhc2VcIkFcIjp2YXIgcz1uLG89c1sxXSx1PXNbMl0sYz1zWzNdLGw9c1s0XSxoPXNbNV0sZj1zWzZdLGc9c1s3XSxwPXNbOF0sdj1jPmw/YzpsLGQ9Yz5sPzE6Yy9sLHg9Yz5sP2wvYzoxO3QudHJhbnNsYXRlKG8sdSksdC5yb3RhdGUoZyksdC5zY2FsZShkLHgpLHQuYXJjKDAsMCx2LGgsaCtmLDEtcCksdC5zY2FsZSgxL2QsMS94KSx0LnJvdGF0ZSgtZyksdC50cmFuc2xhdGUoLW8sLXUpO2JyZWFrO2Nhc2VcIlpcIjp0LmNsb3NlUGF0aCgpfX0sZ2V0QkJveDpmdW5jdGlvbih0KXt2YXIgZT10LzIsbj10aGlzLnBhcmFtcztzd2l0Y2godGhpcy5jb21tYW5kKXtjYXNlXCJNXCI6Y2FzZVwiWlwiOmJyZWFrO2Nhc2VcIlRMXCI6Y2FzZVwiTFwiOnRoaXMuYm94PXttaW5YOk1hdGgubWluKG5bMF0ueCxuWzFdLngpLWUsbWF4WDpNYXRoLm1heChuWzBdLngsblsxXS54KStlLG1pblk6TWF0aC5taW4oblswXS55LG5bMV0ueSktZSxtYXhZOk1hdGgubWF4KG5bMF0ueSxuWzFdLnkpK2V9O2JyZWFrO2Nhc2VcIlNRXCI6Y2FzZVwiUVwiOmZvcih2YXIgcj12LmV4dHJlbWEoblswXS54LG5bMV0ueCxuWzJdLngpLGk9MCxhPXIubGVuZ3RoO2k8YTtpKyspcltpXT12LmF0KG5bMF0ueCxuWzFdLngsblsyXS54LHJbaV0pO3IucHVzaChuWzBdLngsblsyXS54KTtmb3IodmFyIHM9di5leHRyZW1hKG5bMF0ueSxuWzFdLnksblsyXS55KSxpPTAsYT1zLmxlbmd0aDtpPGE7aSsrKXNbaV09di5hdChuWzBdLnksblsxXS55LG5bMl0ueSxzKTtzLnB1c2goblswXS55LG5bMl0ueSksdGhpcy5ib3g9e21pblg6TWF0aC5taW4uYXBwbHkoTWF0aCxyKS1lLG1heFg6TWF0aC5tYXguYXBwbHkoTWF0aCxyKStlLG1pblk6TWF0aC5taW4uYXBwbHkoTWF0aCxzKS1lLG1heFk6TWF0aC5tYXguYXBwbHkoTWF0aCxzKStlfTticmVhaztjYXNlXCJDXCI6Zm9yKHZhciByPXAuZXh0cmVtYShuWzBdLngsblsxXS54LG5bMl0ueCxuWzNdLngpLGk9MCxhPXIubGVuZ3RoO2k8YTtpKyspcltpXT1wLmF0KG5bMF0ueCxuWzFdLngsblsyXS54LG5bM10ueCxyW2ldKTtmb3IodmFyIHM9cC5leHRyZW1hKG5bMF0ueSxuWzFdLnksblsyXS55LG5bM10ueSksaT0wLGE9cy5sZW5ndGg7aTxhO2krKylzW2ldPXAuYXQoblswXS55LG5bMV0ueSxuWzJdLnksblszXS55LHNbaV0pO3IucHVzaChuWzBdLngsblszXS54KSxzLnB1c2goblswXS55LG5bM10ueSksdGhpcy5ib3g9e21pblg6TWF0aC5taW4uYXBwbHkoTWF0aCxyKS1lLG1heFg6TWF0aC5tYXguYXBwbHkoTWF0aCxyKStlLG1pblk6TWF0aC5taW4uYXBwbHkoTWF0aCxzKS1lLG1heFk6TWF0aC5tYXguYXBwbHkoTWF0aCxzKStlfTticmVhaztjYXNlXCJBXCI6Zm9yKHZhciBvPW4sdT1vWzFdLGM9b1syXSxsPW9bM10saD1vWzRdLGY9b1s1XSxnPW9bNl0seD1vWzddLG09b1s4XSx5PWYsXz1mK2csUz1kLnhFeHRyZW1hKHgsbCxoKSx3PTEvMCxiPS0oMS8wKSxNPVt5LF9dLGk9MiotTWF0aC5QSTtpPD0yKk1hdGguUEk7aSs9TWF0aC5QSSl7dmFyIEE9UytpOzE9PT1tP3k8QSYmQTxfJiZNLnB1c2goQSk6XzxBJiZBPHkmJk0ucHVzaChBKX1mb3IodmFyIGk9MCxhPU0ubGVuZ3RoO2k8YTtpKyspe3ZhciBDPWQueEF0KHgsbCxoLHUsTVtpXSk7Qzx3JiYodz1DKSxDPmImJihiPUMpfWZvcih2YXIgaz1kLnlFeHRyZW1hKHgsbCxoKSxUPTEvMCxQPS0oMS8wKSxJPVt5LF9dLGk9MiotTWF0aC5QSTtpPD0yKk1hdGguUEk7aSs9TWF0aC5QSSl7dmFyIEQ9aytpOzE9PT1tP3k8RCYmRDxfJiZJLnB1c2goRCk6XzxEJiZEPHkmJkkucHVzaChEKX1mb3IodmFyIGk9MCxhPUkubGVuZ3RoO2k8YTtpKyspe3ZhciBMPWQueUF0KHgsbCxoLGMsSVtpXSk7TDxUJiYoVD1MKSxMPlAmJihQPUwpfXRoaXMuYm94PXttaW5YOnctZSxtYXhYOmIrZSxtaW5ZOlQtZSxtYXhZOlArZX19fX0pLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfXZhciBpPW4oMSksYT1uKDE5KSxzPW4oOTApLG89big5MSk7aS5leHRlbmQocixhKSxpLm1peGluKHIsW28sc10pLHIuQVRUUlM9e3R5cGU6XCJhcmVhXCJ9LGkuYXVnbWVudChyLHtkcmF3RnJhbWU6ZnVuY3Rpb24odCl7dmFyIGUsbixyLGE9dGhpcyxzPXQudG9KU09OKCksbz10aGlzLnNwbGl0RGF0YShzKSx1PXRoaXMuZ2V0KFwiY29udGFpbmVyXCIpLGM9dGhpcy5nZXQoXCJzaGFwZU9ialwiKSxsPXNbMF0saD10aGlzLmdldERyYXdDZmcobCk7aS5lYWNoKG8sZnVuY3Rpb24odCl7bj1bXTtmb3IodmFyIGk9MDtpPHQubGVuZ3RoO2krKylyPXRbaV0sbi5wdXNoKHIucG9pbnRzKTswIT09bi5sZW5ndGgmJihoLnBvaW50cz1uLGU9YS5nZXREcmF3U2hhcGUoaC5zaGFwZSksYy5kcmF3U2hhcGUoZSxoLHUpKX0pfX0pLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfXZhciBpPW4oMSksYT1uKDE5KTtyLkFUVFJTPXt0eXBlOlwiaW50ZXJ2YWxcIn0saS5leHRlbmQocixhKSxpLm1peGluKHIpLGkuYXVnbWVudChyLHtnZXREcmF3Q2ZnOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1yLnN1cGVyY2xhc3MuZ2V0RHJhd0NmZy5jYWxsKGUsdCksaT1lLmdldENvb3JkKCk7aWYoaS5pc1BvbGFyKXtpZihpLmlzVHJhbnNwb3NlZCl7dmFyIGE9bi5wb2ludHM7bi5wb2ludHM9W2FbMF0sYVszXSxhWzJdLGFbMV1dfW4uej0hMCxuLmNlbnRlcj1pLmdldChcImNlbnRlclwiKX1yZXR1cm4gbn19KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7ci5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX12YXIgaT1uKDEpLGE9big5Mikscz1uKDkwKTtpLmV4dGVuZChyLGEpLGkubWl4aW4ocixbc10pLHIuQVRUUlM9e3R5cGU6XCJsaW5lXCJ9LHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfXZhciBpPW4oMSksYT1uKDE5KTtpLmV4dGVuZChyLGEpLHIuQVRUUlM9e3R5cGU6XCJwb2ludFwifSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7ci5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX12YXIgaT1uKDEpLGE9bigxOSk7aS5leHRlbmQocixhKSxyLkFUVFJTPXt0eXBlOlwicG9seWdvblwifSxpLmF1Z21lbnQocix7Z2V0U2hhcGVQb2ludEluZm86ZnVuY3Rpb24odCl7dmFyIGUsbj1hLnByb3RvdHlwZS5nZXRTaGFwZVBvaW50SW5mby5jYWxsKHRoaXMsdCkscj10aGlzLHM9bi54LG89bi55O2lmKCFpLmlzQXJyYXkocyl8fCFpLmlzQXJyYXkobykpe3ZhciB1PXIuZ2V0WFNjYWxlKCksYz1yLmdldFlTY2FsZSgpLGw9LjUvdS50aWNrcy5sZW5ndGgsaD0uNS9jLnRpY2tzLmxlbmd0aDt1LmlzQ2F0ZWdvcnkmJmMuaXNDYXRlZ29yeT8ocz1bcy1sLHMtbCxzK2wscytsXSxvPVtvLWgsbytoLG8raCxvLWhdKTppLmlzQXJyYXkocyk/KGU9cyxzPVtlWzBdLGVbMF0sZVsxXSxlWzFdXSxvPVtvLWgvMixvK2gvMixvK2gvMixvLWgvMl0pOmkuaXNBcnJheShvKSYmKGU9byxvPVtlWzBdLGVbMV0sZVsxXSxlWzBdXSxzPVtzLWwvMixzLWwvMixzK2wvMixzK2wvMl0pfXZhciBuPWkubWl4KHt9LHQse3g6cyx5Om99KTtyZXR1cm4gbn19KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7ci5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX12YXIgaT1uKDEpLGE9bigxOSk7aS5leHRlbmQocixhKSxyLkFUVFJTPXt0eXBlOlwic2NoZW1hXCJ9LHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXt2YXIgZT10LnNsaWNlKDApLG49ZVswXSxyPWVbZS5sZW5ndGgtMV07cmV0dXJuIDAhPT1uLnZhbHVlJiZlLnVuc2hpZnQoe3ZhbHVlOjB9KSwxIT09ci52YWx1ZSYmZS5wdXNoKHt2YWx1ZToxfSksZX12YXIgaT1uKDEpLGE9bigxMSkscz1hLkNvbXBvbmVudHMuQXhpcyxvPW4oMyksdT1vLlZlY3RvcjIsYz1uKDUpLGw9W1wiLi54XCIsXCIuLnlcIixcIi4ubG9uZ1wiLFwiLi5sYW50XCIsXCIuLnBpZVhcIl0saD1mdW5jdGlvbih0KXt0aGlzLmF4aXNDZmc9e30saS5taXgodGhpcyx0KX07aS5hdWdtZW50KGgse2F4aXNDZmc6bnVsbCxlbmFibGU6ITAsY29udGFpbmVyOm51bGwsY2hhcnQ6bnVsbCxfaXNIaWRlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuYXhpc0NmZztyZXR1cm4hKCFpLmluQXJyYXkobCx0KXx8IWkuaXNOdWxsKGVbdF0pKXx8ZSYmZVt0XT09PSExfSxfZ2V0TWlkZGxlVmFsdWU6ZnVuY3Rpb24odCxlLG4pe3ZhciByPWUubGVuZ3RoO2lmKG49PT1yLTEpcmV0dXJuIG51bGw7dmFyIGk9ZVtuKzFdLnZhbHVlO3JldHVybih0K2kpLzJ9LF9nZXRMaW5lUmFuZ2U6ZnVuY3Rpb24odCxlLG4scil7dmFyIGksYSxzLG89ZS5kaW0sdT10aGlzLmF4aXNDZmcsYz1cIlwiO3JldHVybiB1W29dJiZ1W29dLnBvc2l0aW9uJiYoYz11W29dLnBvc2l0aW9uKSxcInhcIj09PW4/KGk9e3g6MCx5OlwidG9wXCI9PT1jPzE6MH0sYT17eDoxLHk6XCJ0b3BcIj09PWM/MTowfSxzPSExKToocj8oaT17eDpcInJpZ2h0XCI9PT1jPzA6MSx5OjB9LGE9e3g6XCJyaWdodFwiPT09Yz8wOjEseToxfSk6KGk9e3g6XCJyaWdodFwiPT09Yz8xOjAseTowfSxhPXt4OlwicmlnaHRcIj09PWM/MTowLHk6MX0pLHM9ITApLGk9dC5jb252ZXJ0KGkpLGE9dC5jb252ZXJ0KGEpLHtzdGFydDppLGVuZDphLGlzVmVydGljYWw6c319LF9nZXRMaW5lQ2ZnOmZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBpLGE9dGhpcy5fZ2V0TGluZVJhbmdlKHQsZSxuLHIpLHM9YS5pc1ZlcnRpY2FsLG89YS5zdGFydCx1PWEuZW5kLGM9dC5nZXQoXCJjZW50ZXJcIik7cmV0dXJuIHQuaXNUcmFuc3Bvc2VkJiYocz0hcyksaT1zJiZvLng+Yy54fHwhcyYmby55PmMueT8xOi0xLHtpc1ZlcnRpY2FsOnMsZmFjdG9yOmksc3RhcnQ6byxlbmQ6dX19LF9nZXRDaXJjbGVDZmc6ZnVuY3Rpb24odCl7dmFyIGUsbj17fSxyPXQuZ2V0KFwieFwiKSxpPXQuZ2V0KFwieVwiKSxhPWkuc3RhcnQ+aS5lbmQ7ZT10LmlzVHJhbnNwb3NlZD97eDphPzA6MSx5OjB9Ont4OjAseTphPzA6MX0sZT10LmNvbnZlcnQoZSk7dmFyIHMsbz10LmdldChcImNpcmNsZUNlbnRyZVwiKSxjPW5ldyB1KGUueC1vLngsZS55LW8ueSksbD1uZXcgdSgxLDApO3M9ZS55Pm8ueT91LmFuZ2xlKGMsbCk6dS5hbmdsZShjLGwpKi0xO3ZhciBoPXMrKHIuZW5kLXIuc3RhcnQpO3JldHVybiBuLnN0YXJ0QW5nbGU9cyxuLmVuZEFuZ2xlPWgsbi5jZW50ZXI9byxuLnJhZGl1cz1NYXRoLnNxcnQoTWF0aC5wb3coZS54LW8ueCwyKStNYXRoLnBvdyhlLnktby55LDIpKSxuLmlubmVyPXQuZ2V0KFwiaW5uZXJcIil8fDAsbn0sX2dldFJhZGl1c0NmZzpmdW5jdGlvbih0KXt2YXIgZSxuLHI9dC5nZXQoXCJ4XCIpLnN0YXJ0LGk9cjwwPy0xOjE7cmV0dXJuIHQuaXNUcmFuc3Bvc2VkPyhlPXt4OjAseTowfSxuPXt4OjEseTowfSk6KGU9e3g6MCx5OjB9LG49e3g6MCx5OjF9KSx7ZmFjdG9yOmksc3RhcnQ6dC5jb252ZXJ0KGUpLGVuZDp0LmNvbnZlcnQobil9fSxfZ2V0TXVsdGlMaW5lQ2ZnOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1lLmdldFRpY2tzKCksYT1bXSxzPXRoaXMuX2dldExpbmVSYW5nZSh0LGUsbiksbz1zLmlzVmVydGljYWw7cmV0dXJuIGkuZWFjaChyLGZ1bmN0aW9uKGUpe3ZhciBuPXQuY29udmVydCh7eDpvPzA6ZS52YWx1ZSx5Om8/ZS52YWx1ZTowfSk7YS5wdXNoKG4pfSkse3N0YXJ0OnMuc3RhcnQsZW5kOnMuZW5kLHRpY2tQb2ludHM6YX19LF9nZXRBeGlzUG9zaXRpb246ZnVuY3Rpb24odCxlLG4pe3ZhciByPXQudHlwZSxpPVwiXCI7cmV0dXJuIHQuaXNSZWN0Pyh0aGlzLmZhY2V0JiZcIm1pcnJvclwiPT09dGhpcy5mYWNldC50eXBlP1wieFwiPT09ZSYmKGk9XCJib3R0b21cIik6XCJ4XCI9PT1lJiYoaT1cImJvdHRvbVwiKSxcInlcIj09PWUmJihpPW4/XCJyaWdodFwiOlwibGVmdFwiKSk6aT1cImNsb2NrXCI9PT1yP1wiY2xvY2tcIjpcImdhdWdlXCI9PT1yP1wiZ2F1Z2VcIjpcInhcIj09PWU/dC5pc1RyYW5zcG9zZWQ/XCJyYWRpdXNcIjpcImNpcmNsZVwiOnQuaXNUcmFuc3Bvc2VkP1wiY2lyY2xlXCI6XCJyYWRpdXNcIixpfSxfZ2V0QXhpc0RlZmF1bHRDZmc6ZnVuY3Rpb24odCxlLG4scil7dmFyIGE9e30scz10aGlzLG89cy5mYWNldCx1PXMuYXhpc0NmZyxsPXQuZ2V0SGVpZ2h0KCksaD10LnR5cGU7aWYoXCJjYXJ0ZXNpYW5cIiE9PWh8fGkuaXNOdWxsKG8pfHxvJiYxPT09by5yb3dzJiYxPT09by5jb2xzKVwiY2FydGVzaWFuXCI9PT1oJiYoYS50aXRsZT17dGV4dDplLmFsaWFzfHxlLmRpbX0pO2Vsc2V7dmFyIGY9by5yb3dzLGc9by5jb2xzLHA9by5yb3dJbmRleCx2PW8uY29sSW5kZXgsZD1vLnR5cGU7YS50aXRsZT17dGV4dDplLmFsaWFzfHxlLmRpbX0sXCJ0cmVlXCI9PT1kPyhcInlcIj09PW4mJjAhPT1vLm9yaWdpbkNvbEluZGV4JiYwIT09dnx8XCJ4XCI9PT1uJiZvLmNoaWxkcmVuKSYmKGEubGFiZWxzPW51bGwsYS50aXRsZT1udWxsKTpcImNpcmNsZVwiPT09ZD8oYS5sYWJlbHM9bnVsbCxhLnRpdGxlPW51bGwpOihcIm1pcnJvclwiIT09ZCYmXCJ5XCI9PT1uJiYoMCE9PXYmJlwibGVmdFwiPT09cnx8diE9PWctMSYmXCJyaWdodFwiPT09cikmJihhLmxhYmVscz1udWxsLGEudGl0bGU9bnVsbCksXCJyZWN0XCI9PT1kP1wieFwiPT09biYmMCE9PXAmJihhLmxhYmVscz1udWxsLGEudGl0bGU9bnVsbCk6XCJsaXN0XCI9PT1kP1wieFwiPT09biYmcCE9PWYtMSYmZypwK3YrMStnPD1vLmNvdW50JiYoYS5sYWJlbHM9bnVsbCxhLnRpdGxlPW51bGwpOlwibWlycm9yXCI9PT1kJiZcInhcIj09PW4mJigxPT09ZiYmMT09PXZ8fDI9PT1mJiYwPT09cCkmJihhLmxhYmVscz1udWxsLGEudGl0bGU9bnVsbCkpLFwieVwiPT09biYmYS50aXRsZSYmcCE9PU1hdGguZmxvb3IoZi8yKSYmKGEudGl0bGU9bnVsbCksXCJ4XCI9PT1uJiZhLnRpdGxlJiZ2IT09TWF0aC5mbG9vcihnLzIpJiYoYS50aXRsZT1udWxsKX1pZihhPWkubWl4KCEwLHt9LGMuYXhpc1tyXSxhLHVbZS5kaW1dKSxhLnRpY2tzPWUuZ2V0VGlja3MoKSx0LmlzUG9sYXImJiFlLmlzQ2F0ZWdvcnkmJlwieFwiPT09biYmKFwiY2xvY2tcIj09PXQudHlwZT9hLnRpY2tzWzBdLnRleHQ9XCJcIjpcImdhdWdlXCIhPT10LnR5cGUmJmEudGlja3MucG9wKCkpLFwieVwiPT09bil7dmFyIHg9YS50aWNrcyxtPXgubGVuZ3RoLHk9MTY7aWYobC9tPHkpe3ZhciBfPVtdLFM9TWF0aC5mbG9vcihsL3kpKzEsdz1NYXRoLmZsb29yKG0vUyk7dzwxJiYodz0xKSxfLnB1c2goeFswXSk7Zm9yKHZhciBiPXc7Yjw9bS0yO2IrPXcpXy5wdXNoKHhbYl0pO18ucHVzaCh4W20tMV0pLGEudGlja3M9X319cmV0dXJuIGEuY29vcmQ9dCxhLmxhYmVscyYmaS5pc051bGwoYS5sYWJlbHMuYXV0b1JvdGF0ZSkmJihhLmxhYmVscy5hdXRvUm90YXRlPSEwKSxhfSxfZ2V0QXhpc0NmZzpmdW5jdGlvbih0LGUsbixhLHMpe3ZhciBvPXRoaXMsdT17fSxjPW8uX2dldEF4aXNQb3NpdGlvbih0LGEscyk7aWYodT1vLl9nZXRBeGlzRGVmYXVsdENmZyh0LGUsYSxjKSx1LmdyaWQmJm4pe3ZhciBsPVtdLGg9cihuLmdldFRpY2tzKCkpLGY9dS50aWNrcztpLmVhY2goZixmdW5jdGlvbihlLG4pe3ZhciByPVtdLHM9ZS52YWx1ZTtpZihcIm1pZGRsZVwiPT09dS5ncmlkQWxpZ24mJihzPW8uX2dldE1pZGRsZVZhbHVlKHMsZixuKSkscyl7dmFyIGM9dC5nZXQoXCJ4XCIpLGc9dC5nZXQoXCJ5XCIpO2kuZWFjaChoLGZ1bmN0aW9uKGUpe3ZhciBuPVwieFwiPT09YT9zOmUudmFsdWUsaT1cInhcIj09PWE/ZS52YWx1ZTpzLG89dC5jb252ZXJ0KHt4Om4seTppfSk7aWYodC5pc1BvbGFyKXt2YXIgdT10LmdldChcImNpcmNsZUNlbnRyZVwiKTtnLnN0YXJ0PmcuZW5kJiYoaT0xLWkpLG8uZmxhZz1jLnN0YXJ0PmMuZW5kPzA6MSxvLnJhZGl1cz1NYXRoLnNxcnQoTWF0aC5wb3coby54LXUueCwyKStNYXRoLnBvdyhvLnktdS55LDIpKX1yLnB1c2gobyl9KSxsLnB1c2gocil9fSksdS5ncmlkLml0ZW1zPWx9cmV0dXJuIHV9LF9kcmF3QXhpczpmdW5jdGlvbih0LGUsbixyLGEsbyl7dmFyIHUsYyxsPXRoaXMuY29udGFpbmVyO3QuaXNSZWN0P1wibWFwXCI9PT10LnR5cGUmJlwieFwiPT09cj8odT1zLk11bHRMaW5lLGM9dGhpcy5fZ2V0TXVsdGlMaW5lQ2ZnKHQsZSxyKSk6KHU9cyxjPXRoaXMuX2dldExpbmVDZmcodCxlLHIsbykpOlwieFwiPT09cj8odT1zLkNpcmNsZSxjPXRoaXMuX2dldENpcmNsZUNmZyh0KSk6KHU9cyxjPXRoaXMuX2dldFJhZGl1c0NmZyh0KSk7dmFyIGg9dGhpcy5fZ2V0QXhpc0NmZyh0LGUsbixyLG8pO3JldHVybiBoPWkubWl4KCEwLHt9LGgsYyksXCJ5XCI9PT1yJiZhJiZcImNpcmNsZVwiPT09YS5nZXQoXCJ0eXBlXCIpJiYoaC5jaXJjbGU9YSksbC5hZGRHcm91cCh1LGgpfSxjcmVhdGVBeGlzOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10aGlzO2lmKHIuZW5hYmxlKXt2YXIgYT10LmdldChcImNvb3JkXCIpLHM9YS50eXBlO2lmKHRoaXMuZmFjZXQ9dC5nZXQoXCJmYWNldFwiKSxcInRoZXRhXCIhPT1zJiYoXCJwb2xhclwiIT09c3x8IWEuaXNUcmFuc3Bvc2VkKSl7dmFyIG87ZSYmIXIuX2lzSGlkZShlLmRpbSkmJihvPXIuX2RyYXdBeGlzKGEsZSxuWzBdLFwieFwiKSksbiYmbi5sZW5ndGgmJmkuZWFjaChuLGZ1bmN0aW9uKHQsbil7ci5faXNIaWRlKHQuZGltKXx8ci5fZHJhd0F4aXMoYSx0LGUsXCJ5XCIsbyxuKX0pfX19fSksdC5leHBvcnRzPWh9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big3MSksYT1mdW5jdGlvbih0KXtyLm1peCh0aGlzLHQpLHRoaXMucmVzZXRBY3Rpb25zKCl9O3IuYXVnbWVudChhLHt0eXBlOlwicmVjdFwiLGNvb3JkQ2ZnOnt9LGFjdGlvbnM6W10sX2V4ZWNBY3Rpb25zOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuYWN0aW9ucztyLmVhY2goZSxmdW5jdGlvbihlKXt2YXIgbj1lWzBdO3Rbbl0oZVsxXSxlWzJdKX0pfSxoYXNBY3Rpb246ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5hY3Rpb25zLG49ITE7cmV0dXJuIHIuZWFjaChlLGZ1bmN0aW9uKGUpe2lmKHQ9PT1lWzBdKXJldHVybiBuPSEwLCExfSksbn0sY3JlYXRlQ29vcmQ6ZnVuY3Rpb24odCxlKXt2YXIgbixhLHM9dGhpcyxvPXMudHlwZXx8XCJyZWN0XCIsdT1yLm1peCh7c3RhcnQ6dCxlbmQ6ZX0scy5jb29yZENmZyk7cmV0dXJuXCJ0aGV0YVwiPT09bz8obj1pLlBvbGFyLHMuaGFzQWN0aW9uKFwidHJhbnNwb3NlXCIpfHxzLnRyYW5zcG9zZSgpLGE9bmV3IG4odSksYS50eXBlPW8pOihuPWlbci51Y2ZpcnN0KG8pXXx8aS5SZWN0LGE9bmV3IG4odSkpLHMuX2V4ZWNBY3Rpb25zKGEpLGF9LHJvdGF0ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmFjdGlvbnM7cmV0dXJuIHQ9dCpNYXRoLlBJLzE4MCxlLnB1c2goW1wicm90YXRlXCIsdF0pLHRoaXN9LHJlZmxlY3Q6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5hY3Rpb25zO3JldHVybiBlLnB1c2goW1wicmVmbGVjdFwiLHRdKSx0aGlzfSxzY2FsZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuYWN0aW9ucztyZXR1cm4gbi5wdXNoKFtcInNjYWxlXCIsdCxlXSksdGhpc30sdHJhbnNwb3NlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5hY3Rpb25zO3JldHVybiB0LnB1c2goW1widHJhbnNwb3NlXCJdKSx0aGlzfSxyZXNldEFjdGlvbnM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hY3Rpb25zPVtdLHRoaXN9fSksdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9ci5nZXRSYXRpbygpLGE9ZnVuY3Rpb24odCl7ci5taXgodGhpcyx0KX07ci5hdWdtZW50KGEse2NoYXJ0Om51bGwsX2dldENhbnZhczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuY2hhcnQ7cmV0dXJuIHQuZ2V0KFwiZnJvbnRDYW52YXNcIil9LF9nZXRQb2ludEluZm86ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5jaGFydCxuPXt4OnQueC9pLHk6dC55L2l9LHI9ZS5nZXRWaWV3c0J5UG9pbnQobik7cmV0dXJuIG4udmlld3M9cixufSxfZ2V0RXZlbnRPYmo6ZnVuY3Rpb24odCxlLG4pe3JldHVybnt4OmUueCx5OmUueSx0YXJnZXQ6dC50YXJnZXQsdG9FbGVtZW50OnQuZXZlbnQudG9FbGVtZW50LHZpZXdzOm59fSxiaW5kRXZlbnRzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuX2dldENhbnZhcygpO2Uub24oXCJjYW52YXMtbW91c2Vtb3ZlXCIsci53cmFwQmVoYXZpb3IodCxcIm9uTW92ZVwiKSksZS5vbihcImNhbnZhcy1tb3VzZWxlYXZlXCIsci53cmFwQmVoYXZpb3IodCxcIm9uT3V0XCIpKSxlLm9uKFwiY2FudmFzLWNsaWNrXCIsci53cmFwQmVoYXZpb3IodCxcIm9uQ2xpY2tcIikpfSxvbk91dDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5jaGFydCxyPWUuX2dldFBvaW50SW5mbyh0KTtuLmZpcmUoXCJwbG90bGVhdmVcIixlLl9nZXRFdmVudE9iaih0LHIsZS5jdXJWaWV3cykpfSxvbk1vdmU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuY2hhcnQscj1lLl9nZXRQb2ludEluZm8odCksaT1lLmN1clZpZXdzfHxbXTswPT09aS5sZW5ndGgmJnIudmlld3MubGVuZ3RoJiZuLmZpcmUoXCJwbG90ZW50ZXJcIixlLl9nZXRFdmVudE9iaih0LHIsci52aWV3cykpLGkubGVuZ3RoJiYwPT09ci52aWV3cy5sZW5ndGgmJm4uZmlyZShcInBsb3RsZWF2ZVwiLGUuX2dldEV2ZW50T2JqKHQscixpKSksci52aWV3cy5sZW5ndGgmJm4uZmlyZShcInBsb3Rtb3ZlXCIsZS5fZ2V0RXZlbnRPYmoodCxyLHIudmlld3MpKSxlLmN1clZpZXdzPXIudmlld3N9LG9uQ2xpY2s6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuY2hhcnQscj1lLl9nZXRQb2ludEluZm8odCksaT1yLnZpZXdzO2lmKGkmJmkubGVuZ3RoKXtmb3IodmFyIGE9ZS5fZ2V0RXZlbnRPYmoodCxyLGkpLHM9bnVsbCxvPWkubGVuZ3RoLTE7bz49MDtvLS0pe2Zvcih2YXIgdSxjPWlbb10sbD1jLmdldChcImdlb21zXCIpLGg9bC5sZW5ndGgtMTtoPj0wJiYodT1sW2hdLCEocz11LmdldFNpbmdsZVNoYXBlKHIpKSk7aC0tKTtpZihzKXt1JiZzJiZ1LmFsbG93U2VsZWN0ZWQoKSYmKHMuZ2V0KFwic2VsZWN0ZWRcIik/dS5zZXRTZWxlY3RlZChudWxsLGMpOnUuc2V0U2VsZWN0ZWQocy5nZXQoXCJvcmlnaW5cIiksYykpLGEuZ2VvbT11O2JyZWFrfX1zJiYoYS5zaGFwZT1zLGEuZGF0YT1zLmdldChcIm9yaWdpblwiKSksbi5maXJlKFwicGxvdGNsaWNrXCIsYSl9fSxjbGVhckV2ZW50czpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10Ll9nZXRDYW52YXMoKTtlLm9mZihcImNhbnZhcy1tb3VzZW1vdmVcIixyLmdldFdyYXBCZWhhdmlvcih0LFwib25Nb3ZlXCIpKSxlLm9mZihcImNhbnZhcy1tb3VzZWxlYXZlXCIsci5nZXRXcmFwQmVoYXZpb3IodCxcIm9uQ2xpY2tcIikpfX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMTYyKSxhPW4oNSkscz1mdW5jdGlvbih0KXtyLm1peCh0aGlzLHQpfTtyLmF1Z21lbnQocyx7cGxvdENvbnRhaW5lcjpudWxsLGZhY2V0Q2ZnOnt9LF9nZXRGYWNldENsYXNzOmZ1bmN0aW9uKHQpe3JldHVybiB0PXIudWNmaXJzdCh0KSxpW3RdfSxjcmVhdGVGYWNldHM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5mYWNldENmZztlPXIubWl4KHt9LGEuZmFjZXRDZmcsZSksZS5mYWNldFRpdGxlPXIubWl4KHt9LGEuZmFjZXRDZmcuZmFjZXRUaXRsZSxlLmZhY2V0VGl0bGUpO3ZhciBuPXRoaXMuX2dldEZhY2V0Q2xhc3MoZS50eXBlKSxpPW5ldyBuKGUpLHM9aS5nZW5lcmF0ZUZhY2V0cyh0KSxvPXRoaXMucGxvdENvbnRhaW5lcix1PW8uYWRkR3JvdXAoKTtyZXR1cm4gaS5kcmF3VGl0bGVzKHMsdSksc319KSx0LmV4cG9ydHM9c30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDE2OSksYT1uKDUpLHM9W1widGV4dFwiLFwidGFnXCJdLG89ZnVuY3Rpb24odCl7ci5taXgodGhpcyx0KSx0aGlzLmd1aWRlcz1bXX07ci5hdWdtZW50KG8se2d1aWRlczpudWxsLHhTY2FsZTpudWxsLHlTY2FsZTpudWxsLGJhY2tQbG90Om51bGwsZnJvbnRQbG90Om51bGwsX2FkZEd1aWRlOmZ1bmN0aW9uKHQpe3RoaXMuZ3VpZGVzLnB1c2godCl9LF9nZXREZWZhdWx0OmZ1bmN0aW9uKCl7cmV0dXJue3hTY2FsZTp0aGlzLnhTY2FsZSx5U2NhbGU6dGhpcy55U2NhbGV9fSxzZXRTY2FsZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZ3VpZGVzO3RoaXMueFNjYWxlPXQsdGhpcy55U2NhbGU9ZSxyLmVhY2gobixmdW5jdGlvbihuKXtuLnhTY2FsZT10LG4ueVNjYWxlPWV9KX0sbGluZTpmdW5jdGlvbih0LGUsbil7dmFyIHM9e3R5cGU6XCJsaW5lXCIsZnJvbTp0LHRvOmUsY2ZnOnIubWl4KHt9LGEuZ3VpZGUubGluZSxuKX07ci5taXgocyx0aGlzLl9nZXREZWZhdWx0KCkpO3ZhciBvPW5ldyBpLkxpbmUocyk7cmV0dXJuIHRoaXMuX2FkZEd1aWRlKG8pLHRoaXN9LHRleHQ6ZnVuY3Rpb24odCxlLG4pe3ZhciBzPXt0eXBlOlwidGV4dFwiLHBvc2l0aW9uOnQsdGV4dDplLGNmZzpyLm1peCh7fSxhLmd1aWRlLnRleHQsbil9O3IubWl4KHMsdGhpcy5fZ2V0RGVmYXVsdCgpKTt2YXIgbz1uZXcgaS5UZXh0KHMpO3JldHVybiB0aGlzLl9hZGRHdWlkZShvKSx0aGlzfSxpbWFnZTpmdW5jdGlvbih0LGUsbil7dmFyIGE9e3R5cGU6XCJpbWFnZVwiLHN0YXJ0OnR9O3IuaXNBcnJheShlKSYmKGEuZW5kPWUpLHIuaXNPYmplY3QoZSkmJihuPWUpLG4mJihhLmNmZz1uKSxyLm1peChhLHRoaXMuX2dldERlZmF1bHQoKSk7dmFyIHM9bmV3IGkuSW1hZ2UoYSk7cmV0dXJuIHRoaXMuX2FkZEd1aWRlKHMpLHRoaXN9LHJlY3Q6ZnVuY3Rpb24odCxlLG4pe3ZhciBzPXt0eXBlOlwicmVjdFwiLHN0YXJ0OnQsZW5kOmUsY2ZnOnIubWl4KHt9LGEuZ3VpZGUucmVjdCxuKX07ci5taXgocyx0aGlzLl9nZXREZWZhdWx0KCkpO3ZhciBvPW5ldyBpLlJlY3Qocyk7cmV0dXJuIHRoaXMuX2FkZEd1aWRlKG8pLHRoaXN9LGFyYzpmdW5jdGlvbih0LGUsbil7dmFyIHM9e3R5cGU6XCJhcmNcIixzdGFydDp0LGVuZDplLGNmZzpyLm1peCh7fSxhLmd1aWRlLmFyYyxuKX07ci5taXgocyx0aGlzLl9nZXREZWZhdWx0KCkpO3ZhciBvPW5ldyBpLkFyYyhzKTtyZXR1cm4gdGhpcy5fYWRkR3VpZGUobyksdGhpc30sdGFnOmZ1bmN0aW9uKHQsZSxuLHMpe3ZhciBvPXt0eXBlOlwidGFnXCIsZnJvbTp0LHRvOmUsdGV4dDpuLGNmZzpyLm1peCh7fSxhLmd1aWRlLnRhZyxzKX07ci5taXgobyx0aGlzLl9nZXREZWZhdWx0KCkpO3ZhciB1PW5ldyBpLlRhZyhvKTtyZXR1cm4gdGhpcy5fYWRkR3VpZGUodSksdGhpc30scGFpbnQ6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXMuZ3VpZGVzO2U9ZXx8dGhpcy5iYWNrUGxvdCxuPW58fHRoaXMuZnJvbnRQbG90LHIuZWFjaChpLGZ1bmN0aW9uKGkpe3IuaW5BcnJheShzLGkudHlwZSk/aS5wYWludCh0LG4pOmkucGFpbnQodCxlKX0pfSxjbGVhcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLmd1aWRlcz1bXSx0aGlzfX0pLHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtmb3IodmFyIGU9ITAsbj10WzBdLHI9bi5hdHRyVmFsdWUsaT0xO2k8dC5sZW5ndGg7aSsrKWlmKHRbaV0uYXR0clZhbHVlIT09cil7ZT0hMTticmVha31yZXR1cm4gZX1mdW5jdGlvbiBpKHQsZSl7dmFyIG49W107cmV0dXJuIHUuZWFjaCh0LGZ1bmN0aW9uKHQpe3Rbdl0uZW5kc1dpdGgoZSkmJm4ucHVzaCh0KX0pLG59ZnVuY3Rpb24gYSh0LGUpe3JldHVybiB0K1wiXFx1ZmYwOFwiK2UrXCJcXHVmZjA5XCJ9ZnVuY3Rpb24gcyh0KXtyZXR1cm4gdC5kaW18fHQuYWxpYXN9ZnVuY3Rpb24gbyh0LGUsbil7biYmdS5lYWNoKHQsZnVuY3Rpb24odCl7dC5jaGVja2VkPW4uaW5kZXhPZih0LnZhbHVlKSE9PS0xfSl9dmFyIHU9bigxKSxjPW4oMTEpLGw9Yy5Db21wb25lbnRzLkxlZ2VuZCxoPW4oNSksZj1uKDk4KSxnPTE2LHA9MTYsdj1cInZhbHVlXCIsZD1mdW5jdGlvbih0KXt1Lm1peCh0aGlzLHQpLHRoaXMubGVnZW5kQ2ZnPXt9LHRoaXMucmVzZXQoKTt2YXIgZT10aGlzLmNoYXJ0O3RoaXMuY29udGFpbmVyPWUuZ2V0KFwiZnJvbnRDYW52YXNcIiksdGhpcy5wbG90UmFuZ2U9ZS5nZXQoXCJwbG90UmFuZ2VcIil9O3UuYXVnbWVudChkLHtwbG90UmFuZ2U6bnVsbCxjb250YWluZXI6bnVsbCxjaGFydDpudWxsLGVuYWJsZTohMCxwb3NpdGlvbjpcInJpZ2h0XCIsbGVnZW5kQ2ZnOnt9LF9pc0ZpbHRlcmVkOmZ1bmN0aW9uKHQsZSxuKXtpZighdC5pc0NhdGVnb3J5KXJldHVybiEwO3ZhciByPSExO3JldHVybiBuPXQuaW52ZXJ0KG4pLHUuZWFjaChlLGZ1bmN0aW9uKGUpe2lmKHI9cnx8dC5nZXRUZXh0KGUpPT09dC5nZXRUZXh0KG4pKXJldHVybiExfSkscn0sX2dldEZpbHRlclZhbHM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5jaGFydCxuPWUuZ2V0KFwiZmlsdGVyc1wiKTtyZXR1cm4gblt0XX0sX2dldExheW91dFR5cGU6ZnVuY3Rpb24odCl7cmV0dXJuXCJyaWdodFwiPT09dHx8XCJsZWZ0XCI9PT10P1widmVydGljYWxcIjpcImhvcml6b250YWxcIn0sX2JpbmRFdmVudDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLmNoYXJ0LGk9W10sYT10LmdldChcIml0ZW1zXCIpO3UuZWFjaChhLGZ1bmN0aW9uKHQpe2kucHVzaCh0W3ZdKX0pLHQub24oXCJpdGVtY2hlY2tlZFwiLGZ1bmN0aW9uKHQpe3ZhciBpPXQuaXRlbS52YWx1ZSxhPW4uX2dldEZpbHRlclZhbHMoZSk7YS5wdXNoKGkpLHIucmVwYWludCgpfSksdC5vbihcIml0ZW11bmNoZWNrZWRcIixmdW5jdGlvbih0KXt2YXIgYT10Lml0ZW0udmFsdWUscz1uLl9nZXRGaWx0ZXJWYWxzKGUpO3N8fChzPWkuc2xpY2UoMCkpLHUucmVtb3ZlKHMsYSksci5maWx0ZXIoZSxzKSxyLnJlcGFpbnQoKX0pfSxfZ2V0UmVnaW9uOmZ1bmN0aW9uKHQpe3ZhciBlPTAsbj0wO3JldHVybiB1LmVhY2godCxmdW5jdGlvbih0KXt2YXIgcj10LmdldEJCQm94KCk7ZTxyLndpZHRoJiYoZT1yLndpZHRoKSxuKz1yLndpZHRofSkse21heFdpZHRoOmUsdG90YWxXaWR0aDpufX0sX2FsaWduTGVnZW5kOmZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBpPXRoaXMsYT1pLmNvbnRhaW5lcixzPWEuZ2V0KFwiY2FudmFzXCIpLG89cy5nZXQoXCJ3aWR0aFwiKSx1PXMuZ2V0KFwiaGVpZ2h0XCIpLGM9aS5wbG90UmFuZ2UsbD0wLGg9MCxmPXQuZ2V0KFwiZHhcIil8fDAsdj10LmdldChcImR5XCIpfHwwLGQ9dC5nZXRCQkJveCgpO2lmKFwibGVmdFwiPT09cnx8XCJyaWdodFwiPT09cil7dmFyIHg9bi5tYXhXaWR0aDtjPyh1PWMuYnIueSxsPVwibGVmdFwiPT09cj9nOmMuYnIueCtnKTpsPVwibGVmdFwiPT09cj9nOm8teCtnLGg9dS1kLmhlaWdodCxlJiYoaD1lLmdldChcInlcIiktZC5oZWlnaHQtcCl9ZWxzZXt2YXIgbT0wO2MmJihtPWMuYmwueCsoYy5nZXRXaWR0aCgpLW4udG90YWxXaWR0aCkvMiksbD1tLGg9XCJ0b3BcIj09PXI/Zzp1LWQuaGVpZ2h0LWcsZSYmKGw9ZS5nZXQoXCJ4XCIpK2UuZ2V0QkJCb3goKS53aWR0aCtwKX10Lm1vdmUobCtmLGgrdil9LGFkZE1peGVkTGVnZW5kOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYoIWUuZW5hYmxlKXJldHVybiBudWxsO3ZhciBuPWUuY29udGFpbmVyLHI9ZS5wb3NpdGlvbixpPWUubGVnZW5kQ2ZnLGE9ZS5sZWdlbmRzO2Fbcl09YVtyXXx8W107dmFyIHM9Zi5nZXRTaGFwZShcInBvaW50XCIpO3UuZWFjaCh0LGZ1bmN0aW9uKHQpe3QudHlwZT1udWxsLHQubWFya2VyPXMuZ2V0TWFya2VyQ2ZnKFwiY2lyY2xlXCIsdCksdC5jaGVja2VkPSEwfSk7dmFyIG89bi5hZGRHcm91cChsLHUubWl4KHt9LHtjaGVja2FibGU6ITEsbGF5b3V0OmUuX2dldExheW91dFR5cGUociksaXRlbXM6dCx3b3JkOntmaWxsOlwiIzMzM1wifX0saC5sZWdlbmRbcl0saSkpO3JldHVybiBhW3JdLnB1c2gobyksb30sYWRkTGVnZW5kOmZ1bmN0aW9uKHQsZSxuLGMpe3ZhciBsPXRoaXM7aWYobC5lbmFibGUpe3ZhciBmPWwubGVnZW5kQ2ZnLGc9dC5kaW07aWYoIWZ8fGZbZ10hPT0hMSl7dmFyIHA9Zi5wb3NpdGlvbnx8bC5wb3NpdGlvbixkPXUubWl4KHt0aXRsZVRleHQ6cyh0KSxhdHRyVHlwZTplLnR5cGV9KTtmW2ddJiZmW2ddLnBvc2l0aW9uJiYocD1mW2ddLnBvc2l0aW9uKSxkPXUubWl4KGQsaC5sZWdlbmRbcF0sZixmW2ddKTt2YXIgeCxtLHk9ZS5zY2FsZXMsXz1bXTtpZigxPT09eS5sZW5ndGh8fHQuaXNMaW5lYXIpXz1sLl9nZXRMZWdlbmRJdGVtcyh0LGUsbixjKSxtPXQuZGltLGQuY2hlY2thYmxlPXQuaXNDYXRlZ29yeSx4PWwuX2FkZExlZ2VuZCh0LGQsXyxwKTtlbHNle3ZhciBTPXlbMV0sdz10LmdldFRpY2tzKCksYj1bXTtpZihtPXQuZGltK1wiKlwiK1MuZGltLGQudGl0bGVUZXh0JiYoZC50aXRsZVRleHQ9YShzKFMpLHModCkpKSxTLmlzTGluZWFyJiYoZC5jaGVja2FibGU9ITEpLHUuZWFjaCh3LGZ1bmN0aW9uKGkpe3ZhciBhPXQuaW52ZXJ0KGkudmFsdWUpLHM9bC5fZ2V0Q2F0ZWdvcnlJdGVtcyhTLGUsbixjLGEpO2lmKHIocykpe3ZhciBvPXNbMF07b1t2XT1hLG8ubmFtZT10LmdldFRleHQoYSksby5hdHRyVmFsdWU9YSxfLnB1c2gobyl9ZWxzZSBiPWIuY29uY2F0KHMpfSksYi5sZW5ndGgpe3ZhciBNPVMuZ2V0VGlja3MoKTt1LmVhY2goTSxmdW5jdGlvbih0KXt2YXIgZT1TLmludmVydCh0LnZhbHVlKSxuPWkoYixlKTtpZihuLmxlbmd0aD09PXcubGVuZ3RoJiZyKG4pKXt2YXIgYT1uWzBdO2Fbdl09XCIqXCIrZSxhLm5hbWU9Uy5nZXRUZXh0KGUpLGEuYXR0clZhbHVlPWUsXy5wdXNoKGEpfWVsc2UgXz1fLmNvbmNhdChuKX0pfW8oXyxtLGMpLHg9bC5fYWRkTGVnZW5kKHQsZCxfLHApfXguZ2V0KFwiY2hlY2thYmxlXCIpJiZsLl9iaW5kRXZlbnQoeCxtKX19fSxfZ2V0TGVnZW5kSXRlbXM6ZnVuY3Rpb24odCxlLG4scixpKXt2YXIgYT10aGlzO3JldHVybiB0LmlzTGluZWFyP2EuX2dldENvbnRpbnVvdXNJdGVtcyh0LGUsaSk6YS5fZ2V0Q2F0ZWdvcnlJdGVtcyh0LGUsbixyLGkpfSxfZ2V0Q29udGludW91c0l0ZW1zOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcixpLGE9dGhpcyxzPVtdLG89dC5nZXRUaWNrcygpO3JldHVybiB1LmVhY2gobyxmdW5jdGlvbihvKXt2YXIgdT1vLnZhbHVlLGM9dC5pbnZlcnQodSksbD1hLl9tYXBwaW5nVmFsdWVzKGMsZSxuKTtzLnB1c2goe25hbWU6by50ZXh0LGNvbG9yOmwsdmFsdWU6dX0pLDA9PT11JiYocj0hMCksMT09PXUmJihpPSEwKX0pLHJ8fHMucHVzaCh7bmFtZTp0LmdldFRleHQodC5pbnZlcnQoMCkpLGNvbG9yOmEuX21hcHBpbmdWYWx1ZXModC5pbnZlcnQoMCksZSxuKSx2YWx1ZTowfSksaXx8cy5wdXNoKHtuYW1lOnQuZ2V0VGV4dCh0LmludmVydCgxKSksY29sb3I6YS5fbWFwcGluZ1ZhbHVlcyh0LmludmVydCgxKSxlLG4pLHZhbHVlOjF9KSxzfSxfZ2V0Q2F0ZWdvcnlJdGVtczpmdW5jdGlvbih0LGUsbixyLGkpe3ZhciBzLG8sYz10aGlzLGw9dC5nZXRUaWNrcygpLGg9W10sZz1cInBvaW50XCIscD1cImNpcmNsZVwiO3JldHVybiB1LmVhY2gobCxmdW5jdGlvbihsKXt2YXIgdj1sLnRleHQ7bz12O3ZhciBkPWwudmFsdWUseD10LmludmVydChkKSxtPXtpc0luQ2lyY2xlOm4uaXNJbkNpcmNsZSgpfSx5PWMuX21hcHBpbmdWYWx1ZXMoeCxlLGkpO1wiY29sb3JcIj09PWUudHlwZT9tLmNvbG9yPXk6XCJzaGFwZVwiPT09ZS50eXBlPyhnPW4uZ2V0KFwic2hhcGVUeXBlXCIpfHxuLmdldChcInR5cGVcIikscD15KTpcInNpemVcIj09PWUudHlwZSYmKHM9eSk7dmFyIF89Zi5nZXRTaGFwZShnKSxTPV8uZ2V0TWFya2VyQ2ZnKHAsbSk7dS5pc051bGwocyl8fChTLnJhZGl1cz1zKTt2YXIgdz0hMDt1LmlzTnVsbChpKT93PSFyfHxjLl9pc0ZpbHRlcmVkKHQscixkKTooeD1pK1wiKlwiK3gsbz1hKG8saSkpLGgucHVzaCh7bmFtZTpvLGNoZWNrZWQ6dyx0eXBlOm51bGwsbWFya2VyOlMsYXR0clZhbHVlOnksdmFsdWU6eH0pfSksaH0sX21hcHBpbmdWYWx1ZXM6ZnVuY3Rpb24odCxlLG4pe3ZhciByO2lmKHUuaXNOdWxsKG4pKXI9ZS5tYXBwaW5nVmFsdWVzKHQpLmpvaW4oXCJcIik7ZWxzZXt2YXIgaT1bbix0XTtyPWUubWFwcGluZ1ZhbHVlcy5hcHBseShlLGkpLmpvaW4oXCJcIil9cmV0dXJuIHJ9LF9hZGRMZWdlbmQ6ZnVuY3Rpb24odCxlLG4scil7dmFyIGksYSxzPXRoaXMsbz1zLl9nZXRMYXlvdXRUeXBlKHIpO2lmKHQuaXNMaW5lYXIpYT1sLkNvbnRpbnVvdXMsaT11Lm1peCh7bGF5b3V0Om99LGgubGVnZW5kLnNpemUsZSk7ZWxzZXthPWwuQ2F0ZWdvcnk7dmFyIGM9cy5wbG90UmFuZ2UsZj1cInJpZ2h0XCI9PT1yfHxcImxlZnRcIj09PXI/Yy5ibC55LWMudHIueTpjLnRyLngtYy5ibC54O2k9dS5taXgoe21heExlbmd0aDpmLGxheW91dDpvLGl0ZW1zOm4sd29yZDp7ZmlsbDpcIiMzMzNcIn19LGUpfWkuaXRlbXM9bjt2YXIgZz1zLmNvbnRhaW5lcixwPXMubGVnZW5kcyx2PWcuYWRkR3JvdXAoYSxpKTtyZXR1cm4gcFtyXT1wW3JdfHxbXSxwW3JdLnB1c2godiksdn0sYWxpZ25MZWdlbmRzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQubGVnZW5kcztyZXR1cm4gdS5lYWNoKGUsZnVuY3Rpb24oZSxuKXt2YXIgcj10Ll9nZXRSZWdpb24oZSk7dS5lYWNoKGUsZnVuY3Rpb24oaSxhKXt2YXIgcz1lW2EtMV07dC5fYWxpZ25MZWdlbmQoaSxzLHIsbil9KX0pLHRoaXN9LHJlc2V0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQubGVnZW5kczt1LmVhY2goZSxmdW5jdGlvbih0KXt1LmVhY2godCxmdW5jdGlvbih0KXt0LnJlbW92ZSgpfSl9KSx0aGlzLmxlZ2VuZHM9e319fSksdC5leHBvcnRzPWR9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big3OSksYT1uKDQwKSxzPW4oMiksbz1uKDUpLHU9e0xJTkVBUjpcImxpbmVhclwiLENBVDpcImNhdFwiLFRJTUU6XCJ0aW1lXCJ9LGM9ZnVuY3Rpb24odCl7ci5taXgodGhpcyx0KSx0aGlzLmRlZnM9dGhpcy5kZWZzfHx7fX07ci5hdWdtZW50KGMse2RlZnM6bnVsbCxfYWRkTmV3Q29sOmZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10aGlzLGE9ZS5kaW1zLHM9W107ci5lYWNoKGEsZnVuY3Rpb24odCl7dmFyIGU9aS5fZ2V0RGVmYXVsdFR5cGUodCxuKTtpZigwPT09cy5sZW5ndGgpcy5wdXNoKGUpO2Vsc2UgaWYoIXIuaW5BcnJheShzLGUpKXRocm93IG5ldyBFcnJvcignU29ycnksIHRoZSB2YWx1ZXMgdGhhdCBhcmUgaW52b2x2ZWQgaW4gXCIrXCIgbXVzdCBiZSBvZiB0aGUgc2FtZSB0eXBlLicpfSksZS50eXBlPXNbMF07dmFyIG89W107ci5lYWNoKGEsZnVuY3Rpb24odCl7by5wdXNoKG4uY29sQXJyYXkodCkpfSk7Zm9yKHZhciB1PVtdLGM9MDtjPG9bMF0ubGVuZ3RoO2MrKyl7dVtjXT1bXTtmb3IodmFyIGw9MDtsPGEubGVuZ3RoO2wrKyl1W2NdLnB1c2gob1tsXVtjXSl9bi5hZGRDb2wodCx1KX0sX2dldERlZnM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmRlZnM7cmV0dXJuIHIubWl4KCEwLHt9LG8uc2NhbGVzLHQpfSxfZ2V0U2NhbGVDZmc6ZnVuY3Rpb24odCxlLG4pe3ZhciByPXtkaW06ZX07aWYobi5jb250YWlucyhlKSl7dmFyIGE9cy52YWx1ZXMobixlKTtyLnZhbHVlcz1hLGkuaXNDYXRlZ29yeSh0KXx8XCJ0aW1lXCI9PT10fHwoci5taW49cy5taW4obixlKSxyLm1heD1zLm1heChuLGUpLHIubmljZT0hMCksXCJ0aW1lXCI9PT10JiYoci5uaWNlPSExKX1yZXR1cm4gcn0sX2dldERlZmF1bHRUeXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dS5MSU5FQVIsaT1zLnZhbHVlcyhlLHQpLG89aVswXTtyZXR1cm4gci5pc0FycmF5KG8pJiYobz1vWzBdKSxhLmlzRGF0ZVN0cmluZyhvKT9uPXUuVElNRTpyLmlzU3RyaW5nKG8pJiYobj11LkNBVCksbn0sX3N5bmNTY2FsZXM6ZnVuY3Rpb24odCxlKXt0LmlzQ2F0ZWdvcnk/dC5jaGFuZ2Uoe3ZhbHVlczplLnZhbHVlcyx0aWNrczplLnRpY2tzfSk6XCJpZGVudGl0eVwiIT09dC50eXBlJiZ0LmNoYW5nZSh7bWluOmUubWluLG1heDplLm1heCx0aWNrczplLnRpY2tzLHZhbHVlczplLnZhbHVlc30pfSxjcmVhdGVEZWZhdWx0U2NhbGU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLl9nZXREZWZhdWx0VHlwZSh0LGUpLHI9dGhpcy5fZ2V0U2NhbGVDZmcobix0LGUpO3JldHVybiBpW25dKHIpfSxjcmVhdGVTY2FsZTpmdW5jdGlvbih0LGUpe3ZhciBuLGE9dGhpcyxzPWEuX2dldERlZnMoKTtpZihyLmlzTnVtYmVyKHQpKW49aS5JKHt2YWx1ZTp0LGRpbTp0LnRvU3RyaW5nKCl9KTtlbHNlIGlmKHNbdF18fHIuaW5kZXhPZihlLmNvbE5hbWVzKCksdCkhPT0tMSlpZihzW3RdKXt2YXIgbz1zW3RdO28uZGltcyYmIWUuY29udGFpbnModCkmJmEuX2FkZE5ld0NvbCh0LG8sZSk7dmFyIHU9by50eXBlfHxhLl9nZXREZWZhdWx0VHlwZSh0LGUpLGM9YS5fZ2V0U2NhbGVDZmcodSx0LGUpO3IubWl4KGMsbyksbj1pW3VdKGMpfWVsc2Ugbj1hLmNyZWF0ZURlZmF1bHRTY2FsZSh0LGUpO2Vsc2Ugbj1pLkkoe3ZhbHVlOnQsZGltOnR9KTtyZXR1cm4gbn0sc29ydFNjYWxlczpmdW5jdGlvbih0LGUsbil7dmFyIGk9dGhpcztyZXR1cm4gbj8odD1zLnNvcnRCeSh0LG4pLHZvaWQgci5lYWNoKGUsZnVuY3Rpb24oZSxuKXt2YXIgcj1lLnR5cGU7aWYoXCJpZGVudGl0eVwiIT09ciYmdC5jb250YWlucyhuKSl7dmFyIGE9aS5jcmVhdGVTY2FsZShuLHQpO2UudmFsdWVzPWEudmFsdWVzfX0pKTpudWxsfSx0cmFpblNjYWxlczpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7ci5lYWNoKGUsZnVuY3Rpb24oZSl7dmFyIHI9ZS50eXBlLGk9ZS5kaW07aWYoXCJpZGVudGl0eVwiIT09ciYmdC5jb250YWlucyhpKSl7dmFyIGE9bi5jcmVhdGVTY2FsZShpLHQpO24uX3N5bmNTY2FsZXMoZSxhKX19KX0scmVzZXRTY2FsZXM6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3IuZWFjaChlLGZ1bmN0aW9uKGUscil7dmFyIGk9bi5jcmVhdGVTY2FsZShyLHQpO24uX3N5bmNTY2FsZXMoZSxpKX0pfSxfZ2V0RmlsdGVyRnVuY3Rpb246ZnVuY3Rpb24odCxlKXt2YXIgbixpPXQuZGltO3JldHVybiBuPXQuaXNDYXRlZ29yeT9mdW5jdGlvbihuKXt2YXIgYT0hMTtyZXR1cm4gci5lYWNoKGUsZnVuY3Rpb24oZSl7dmFyIHI9bltpXTtpZihhPWF8fHQuZ2V0VGV4dChlKT09PXQuZ2V0VGV4dChyKSlyZXR1cm4hMX0pLGF9OmZ1bmN0aW9uKHQpe3ZhciBuPXRbaV07cmV0dXJuIHIuaW5BcnJheShlLG4pfX0sX2dldE11bHRwbGVGaWx0ZXJGdW5jdGlvbjpmdW5jdGlvbih0LGUpe3ZhciBuPWZ1bmN0aW9uKG4pe3ZhciBpPSExO3JldHVybiByLmVhY2goZSxmdW5jdGlvbihlKXt2YXIgYT1lLnNwbGl0KFwiKlwiKSxzPSEwO2lmKHIuZWFjaChhLGZ1bmN0aW9uKGUscil7aWYoZSl7dmFyIGk9dFtyXSxhPW5baS5kaW1dO3M9cyYmaS5nZXRUZXh0KGUpPT09aS5nZXRUZXh0KGEpfX0pLGk9aXx8cylyZXR1cm4hMX0pLGl9O3JldHVybiBufSxmaWx0ZXJEYXRhOmZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10aGlzLGE9W107ci5lYWNoKGUsZnVuY3Rpb24odCxlKXt2YXIgcjtpZihlLmluZGV4T2YoXCIqXCIpIT09LTEpe3ZhciBzPWUuc3BsaXQoXCIqXCIpLG89cy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIG5bdF19KTt0JiZvLmxlbmd0aCYmKHI9aS5fZ2V0TXVsdHBsZUZpbHRlckZ1bmN0aW9uKG8sdCksYS5wdXNoKHIpKX1lbHNle3ZhciB1PW5bZV07dCYmdSYmKHI9aS5fZ2V0RmlsdGVyRnVuY3Rpb24odSx0KSxhLnB1c2gocikpfX0pO3ZhciBvPXQ7cmV0dXJuIGEubGVuZ3RoJiYobz1zLmZpbHRlcih0LGZ1bmN0aW9uKHQpe3ZhciBlPSEwO3JldHVybiByLmVhY2goYSxmdW5jdGlvbihuKXtlPWUmJm4odCl9KSxlfSkpLG99LHByb2Nlc3NDYXRTY2FsZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMsaT1uLl9nZXREZWZzKCk7cmV0dXJuIHIuZWFjaChlLGZ1bmN0aW9uKGUsbil7dmFyIGE9ZS50eXBlO2lmKGUuaXNDYXRlZ29yeSYmXCJ0aW1lQ2F0XCIhPT1hJiZ0LmNvbnRhaW5zKG4pKXt2YXIgcz1pW25dO2lmKHMmJiFzLmhhc093blByb3BlcnR5KFwidmFsdWVzXCIpfHwhcyl7dmFyIG89dC5jb2xBcnJheShuKTtyLmVhY2gobyxmdW5jdGlvbih0LGUpe29bZV09dC50b1N0cmluZygpfSksdC5jb2xSZXBsYWNlKG4sbyl9fX0pLHR9fSksdC5leHBvcnRzPWN9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQsZSl7dmFyIG49LTE7cmV0dXJuIGEuZWFjaCh0LGZ1bmN0aW9uKHQscil7aWYodC50aXRsZT09PWUudGl0bGUmJnQubmFtZT09PWUubmFtZSYmdC52YWx1ZT09PWUudmFsdWUmJnQuY29sb3I9PT1lLmNvbG9yKXJldHVybiBuPXIsITF9KSxufWZ1bmN0aW9uIGkodCl7dmFyIGU9W107cmV0dXJuIGEuZWFjaCh0LGZ1bmN0aW9uKHQpe3ZhciBuPXIoZSx0KTtuPT09LTE/ZS5wdXNoKHQpOmVbbl09dH0pLGV9dmFyIGE9bigxKSxzPW4oNSksbz1uKDExKSx1PW8uQ29tcG9uZW50cyxjPXUuVG9vbHRpcCxsPVtcImxpbmVcIixcImFyZWFcIixcInBhdGhcIixcImFyZWFTdGFja1wiXSxoPVtcImxpbmVcIixcImFyZWFcIl0sZj1mdW5jdGlvbih0KXthLm1peCh0aGlzLHQpfTthLmF1Z21lbnQoZix7ZW5hYmxlOiEwLGNmZzpudWxsLHRvb2x0aXA6bnVsbCxtYXJrZXJHcm91cDpudWxsLGNoYXJ0Om51bGwsdGltZVN0YW1wOjAsZ2V0OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzW3RdfSxzZXQ6ZnVuY3Rpb24odCxlKXt0aGlzW3RdPWV9LF9zZXRUb29sdGlwQ3Jvc3NoYWlyczpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT1hLm1peCh7fSxzLnRvb2x0aXApLG49dC5nZXQoXCJjaGFydFwiKSxyPW4uZ2V0QWxsR2VvbXMoKSxpPVtdO3JldHVybiBhLmVhY2gocixmdW5jdGlvbih0KXt2YXIgZT10LmdldChcInR5cGVcIik7YS5pbmRleE9mKGksZSk9PT0tMSYmaS5wdXNoKGUpfSksci5sZW5ndGgmJlwiY2FydGVzaWFuXCI9PT1yWzBdLmdldChcImNvb3JkXCIpLnR5cGUmJjE9PT1pLmxlbmd0aCYmYS5pbmRleE9mKGgsaVswXSk+LTEmJmEubWl4KGUse2Nyb3NzaGFpcnM6ITB9KSxlfSxfc2hvd01hcmtlcnM6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5nZXQoXCJtYXJrZXJHcm91cFwiKTtyLnNldE1hdHJpeChlLmdldChcIm1hdHJpeFwiKS5jbG9uZSgpKSxyLmNsZWFyKCksYS5lYWNoKHQsZnVuY3Rpb24odCl7dmFyIGU9dC5wb2ludCxuPWEubWl4KHt9LHIuZ2V0KFwibWFya2VyXCIpLHt4OmEuaXNBcnJheShlLngpP2UueFtlLngubGVuZ3RoLTFdOmUueCx5OmEuaXNBcnJheShlLnkpP2UueVtlLnkubGVuZ3RoLTFdOmUueSxzdHJva2U6dC5jb2xvcn0pO3IuYWRkU2hhcGUoXCJNYXJrZXJcIix7YXR0cnM6bn0pfSksci5zaG93KCl9LF9nZXRDYW52YXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jaGFydC5nZXQoXCJmcm9udENhbnZhc1wiKX0sX3NldFRvb2x0aXA6ZnVuY3Rpb24odCxlLG4pe3ZhciByPXRoaXMscz1yLmdldChcInRvb2x0aXBcIiksbz1yLmdldChcInByZVBvaW50XCIpO2lmKCFvfHxvLnghPT1lLnh8fG8ueSE9PWUueSl7bj1pKG4pLHIuc2V0KFwicHJlUG9pbnRcIixlKTt2YXIgdT1yLmNoYXJ0LGM9YS5pc0FycmF5KGUueCk/ZS54W2UueC5sZW5ndGgtMV06ZS54LGw9YS5pc0FycmF5KGUueSk/ZS55W2UueS5sZW5ndGgtMV06ZS55O3MuZ2V0KFwidmlzaWJsZVwiKXx8dS5maXJlKFwidG9vbHRpcHNob3dcIix7eDpjLHk6bCx0b29sdGlwOnN9KSx1LmZpcmUoXCJ0b29sdGlwY2hhbmdlXCIse3Rvb2x0aXA6cyx4OmMseTpsLGl0ZW1zOm59KSxzLnNldENvbnRlbnQodCxuKSxzLnNldFBvc2l0aW9uKGMsbCl9fSxfY2xlYXJBY3RpdmU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJjaGFydFwiKSxuPWUuZ2V0QWxsR2VvbXMoKTthLmVhY2gobixmdW5jdGlvbih0KXt0LmNsZWFyU2hhcGVBY3RpdmVkKCl9KX0sX2JpbmRFdmVudDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmNoYXJ0O2Uub24oXCJwbG90bW92ZVwiLGEud3JhcEJlaGF2aW9yKHQsXCJvbk1vdXNlTW92ZVwiKSksZS5vbihcInBsb3RsZWF2ZVwiLGEud3JhcEJlaGF2aW9yKHQsXCJvbk1vdXNlT3V0XCIpKX0sX29mZkV2ZW50OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuY2hhcnQ7ZS5vZmYoXCJwbG90bW92ZVwiLGEuZ2V0V3JhcEJlaGF2aW9yKHQsXCJvbk1vdXNlTW92ZVwiKSksZS5vZmYoXCJwbG90bGVhdmVcIixhLmdldFdyYXBCZWhhdmlvcih0LFwib25Nb3VzZU91dFwiKSl9LHJlbmRlclRvb2x0aXA6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKCF0LmdldChcInRvb2x0aXBcIikpe3ZhciBlPXQuZ2V0KFwiY2hhcnRcIiksbj10LmdldChcImNmZ1wiKSxyPXQuX3NldFRvb2x0aXBDcm9zc2hhaXJzKCk7bj1hLm1peCh7cGxvdFJhbmdlOmUuZ2V0KFwicGxvdFJhbmdlXCIpLHZpc2libGU6ITEsY2FwdHVyZTohMX0scixuKTt2YXIgaT10Ll9nZXRDYW52YXMoKTtpZighdC5nZXQoXCJtYXJrZXJHcm91cFwiKSl7dmFyIG89aS5hZGRHcm91cCh7ekluZGV4OjExLGNhcHR1cmU6ITEsbWFya2VyOnMudG9vbHRpcE1hcmtlcn0pO3Quc2V0KFwibWFya2VyR3JvdXBcIixvKX12YXIgdT1pLmFkZEdyb3VwKGMsbik7aS5zb3J0KCksdC5zZXQoXCJ0b29sdGlwXCIsdSksdC5fYmluZEV2ZW50KCl9fSxzaG93VG9vbHRpcDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7aWYoKCFlfHxlLmxlbmd0aCkmJnQpe3ZhciByPW4uZ2V0KFwiY2ZnXCIpLGk9ciYmci5tYXAscz1bXSxvPVtdO2lmKGEuZWFjaChlLGZ1bmN0aW9uKGUpe2lmKCFlLmdldChcInRvb2x0aXBFbmFibGVcIikpcmV0dXJuITA7dmFyIHI9ZS5nZXQoXCJnZW9tc1wiKSx1PWUuZ2V0KFwiY29vcmRcIik7YS5lYWNoKHIsZnVuY3Rpb24oZSl7dmFyIG49ZS5nZXQoXCJmcmFtZXNcIik7aWYoZS5pc1NoYXJlVG9vbHRpcCgpKXt2YXIgcj1bXTthLmVhY2gobixmdW5jdGlvbihuKXt2YXIgdT1lLmZpbmRQb2ludCh0LG4pO2lmKHUpe3IucHVzaCh1KTt2YXIgYz1lLmdldFRpcEl0ZW1zKHUsaSk7bz1vLmNvbmNhdChjKTt2YXIgaD1lLmdldChcInR5cGVcIik7YS5pbmRleE9mKGwsaCkhPT0tMSYmKHM9cy5jb25jYXQoYykpfX0pLHIubGVuZ3RoJiZlLnNldEFjdGl2ZUJ5UG9pbnQoclswXSl9ZWxzZXt2YXIgdT1lLmdldFNpbmdsZVNoYXBlKHQsbik7dSYmKG89ZS5nZXRUaXBJdGVtcyh1LmdldChcIm9yaWdpblwiKSxpKSxlLnNldFNoYXBlc0FjdGl2ZShbdV0pKX19KSxzLmxlbmd0aCYmbi5fc2hvd01hcmtlcnMocyx1KX0pLG8ubGVuZ3RoKXt2YXIgdT1vWzBdO2lmKHMubGVuZ3RoKXt0PXUucG9pbnQ7dmFyIGM9YS5pc0FycmF5KHQueCk/dC54W3QueC5sZW5ndGgtMV06dC54LGg9YS5pc0FycmF5KHQueSk/dC55W3QueS5sZW5ndGgtMV06dC55LGY9ZVswXS5nZXQoXCJjb29yZFwiKTt0PWYudHJhbnMoYyxoLDEpfXZhciBnPXUudGl0bGV8fHUubmFtZTtuLl9zZXRUb29sdGlwKGcsdCxvKX19fSxcbmhpZGVUb29sdGlwOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwidG9vbHRpcFwiKSxuPXQuY2hhcnQscj10LmdldChcIm1hcmtlckdyb3VwXCIpLGk9dC5fZ2V0Q2FudmFzKCk7dC5zZXQoXCJwcmVQb2ludFwiLG51bGwpLGUuaGlkZSgpLHIuaGlkZSgpLHQuX2NsZWFyQWN0aXZlKCksbi5maXJlKFwidG9vbHRpcGhpZGVcIix7dG9vbHRpcDplfSksaS5kcmF3KCl9LG9uTW91c2VNb3ZlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0KFwidGltZVN0YW1wXCIpLG49K25ldyBEYXRlO2lmKHRoaXMuZW5hYmxlJiZ0LnZpZXdzJiZ0LnZpZXdzLmxlbmd0aCl7dmFyIHI9dGhpcyxpPXt4OnQueCx5OnQueX07bi1lPjE2JiYoci5zaG93VG9vbHRpcChpLHQudmlld3MpLHRoaXMuc2V0KFwidGltZVN0YW1wXCIsbikpfX0sb25Nb3VzZU91dDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXQoXCJ0b29sdGlwXCIpLHI9ZS5fZ2V0Q2FudmFzKCk7bi5nZXQoXCJ2aXNpYmxlXCIpJiYodCYmdC50YXJnZXQhPT1yfHxlLmhpZGVUb29sdGlwKCkpfSxjbGVhcjpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcInRvb2x0aXBcIiksbj10LmdldChcIm1hcmtlckdyb3VwXCIpO2UmJmUucmVtb3ZlKCksbiYmbi5yZW1vdmUoKSx0LnNldChcInRvb2x0aXBcIixudWxsKSx0LnNldChcIm1hcmtlckdyb3VwXCIsbnVsbCksdC5zZXQoXCJwcmVQb2ludFwiLG51bGwpLHQuX29mZkV2ZW50KCl9fSksdC5leHBvcnRzPWZ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQsZSxuKXt2YXIgcj0odC1lKS8obi1lKTtyZXR1cm4gcj49MCYmcjw9MX1mdW5jdGlvbiBpKHQsZSl7dmFyIG49ITE7aWYodCl7dmFyIGk9dC50eXBlO2lmKFwidGhldGFcIj09PWkpe3ZhciBhPXQuZ2V0KFwic3RhcnRcIikscz10LmdldChcImVuZFwiKTtuPXIoZS54LGEueCxzLngpJiZyKGUueSxhLnkscy55KX1lbHNle3ZhciBvPXQuaW52ZXJ0KGUpO249by54Pj0wJiZvLnk+PTAmJm8ueDw9MSYmby55PD0xfX1yZXR1cm4gbn12YXIgYT1uKDEpLHM9bigzMjcpLG89bigzMjYpLHU9big5MyksYz1uKDI5NSksbD1mdW5jdGlvbiBoKHQpe3Q9by5pbml0Q29udGFpbmVyKHQpLGguc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCksdGhpcy5pbml0KCl9O2wuQVRUUlM9e2lkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwbG90Q2ZnOm51bGwsZmFjZXRDZmc6bnVsbCxmb3JjZUZpdDohMSx2aWV3czpbXX0sYS5leHRlbmQobCxzKSxhLmF1Z21lbnQobCx7aW5pdDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwicGxvdFJhbmdlXCIpO3RoaXMuc2V0KFwicmVnaW9uXCIse3N0YXJ0OnQuc3RhcnQsZW5kOnQuZW5kfSksdGhpcy5zZXQoXCJ2aWV3c1wiLFtdKSx0aGlzLnNldChcImZhY2V0Q2ZnXCIsYS5taXgoe30sdGhpcy5nZXQoXCJmYWNldENmZ1wiKSkpLHRoaXMuZ2V0KFwiZm9yY2VGaXRcIikmJndpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsYS53cmFwQmVoYXZpb3IodGhpcyxcIl9pbml0Rm9yY2VGaXRFdmVudFwiKSksdS5pbml0RXZlbnQodGhpcyksdS5pbml0TGVnZW5kKHRoaXMpLHUuaW5pdFRvb2x0aXAodGhpcyl9LF9pbml0Rm9yY2VGaXRFdmVudDpmdW5jdGlvbigpe3ZhciB0PXNldFRpbWVvdXQoYS53cmFwQmVoYXZpb3IodGhpcyxcImZvcmNlRml0XCIpLDIwMCk7Y2xlYXJUaW1lb3V0KHRoaXMuZ2V0KFwicmVzaXplVGltZXJcIikpLHRoaXMuc2V0KFwicmVzaXplVGltZXJcIix0KX0sX2dldFlTY2FsZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0QWxsR2VvbXMoKSxlPVtdO3JldHVybiBhLmVhY2godCxmdW5jdGlvbih0KXt2YXIgbj10LmdldFlTY2FsZSgpO24mJmEuaW5kZXhPZihlLG4pPT09LTEmJmUucHVzaChuKX0pLGV9LF9yZW5kZXJMZWdlbmRzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJsZWdlbmRBc3Npc3RcIiksZT10aGlzLmdldEFsbEdlb21zKCksbj10aGlzLmdldChcImZpbHRlcnNcIikscj10aGlzLl9nZXRZU2NhbGUoKSxpPVtdO2lmKGEuZWFjaChlLGZ1bmN0aW9uKGUpe3ZhciByPWUuZ2V0TGVnZW5kQXR0cigpO2EuZWFjaChyLGZ1bmN0aW9uKHIpe3ZhciBzPXIudHlwZSxvPXIuZ2V0U2NhbGUocyk7aWYoXCJpZGVudGl0eVwiIT09by50eXBlJiZhLmluZGV4T2YoaSxvKT09PS0xKXtpLnB1c2gobyk7dmFyIHUsYz1yLnNjYWxlcyxsPTE9PT1jLmxlbmd0aD9vLmRpbTpvLmRpbStcIipcIitjWzFdLmRpbTtuJiZuW2xdJiYodT1uW2xdKSx0LmFkZExlZ2VuZChvLHIsZSx1KX19KX0pLCFpLmxlbmd0aCYmci5sZW5ndGg+MSl7dmFyIHM9W107YS5lYWNoKHIsZnVuY3Rpb24odCl7YS5lYWNoKGUsZnVuY3Rpb24oZSl7aWYoZS5nZXRZU2NhbGUoKT09PXQpe3ZhciBuPXtuYW1lOnQuYWxpYXN8fHQuZGltLGNvbG9yOmUuZ2V0RGVmYXVsdFZhbHVlKFwiY29sb3JcIil9O3JldHVybiBzLnB1c2gobiksITF9fSl9KSx0LmFkZE1peGVkTGVnZW5kKHMpfXQuYWxpZ25MZWdlbmRzKCl9LF9yZW5kZXJUb29sdGlwOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJ0b29sdGlwQXNzaXN0XCIpO3QucmVuZGVyVG9vbHRpcCgpfSxfY3JlYXRGYWNldHM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcImRhdGFcIik7dD10aGlzLl9maWx0ZXJEYXRhKHQpO3ZhciBlPXRoaXMuZ2V0KFwic2NhbGVBc3Npc3RcIiksbj10aGlzLmdldChcImZhY2V0Q2ZnXCIpO2lmKG4uZGVmcz1lLmRlZnMsbi5wbG90UmFuZ2U9dGhpcy5nZXQoXCJwbG90UmFuZ2VcIiksIXRoaXMuZ2V0KFwicGxvdENvbnRhaW5lclwiKSl7dmFyIHI9dGhpcy5nZXQoXCJjYW52YXNcIiksaT1yLmFkZEdyb3VwKCk7dGhpcy5zZXQoXCJwbG90Q29udGFpbmVyXCIsaSl9dmFyIGE9bmV3IGMoe3Bsb3RDb250YWluZXI6dGhpcy5nZXQoXCJwbG90Q29udGFpbmVyXCIpLGZhY2V0Q2ZnOm59KTtyZXR1cm4gYS5jcmVhdGVGYWNldHModCl9LF9jcmVhdGVGYWNldFZpZXdzOmZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBzKHtpbmRleDp0LmluZGV4LGRhdGE6dC5mcmFtZSxyZWdpb246dC5yZWdpb259KTtyZXR1cm4gZS5zZXQoXCJiYWNrQ2FudmFzXCIsdGhpcy5nZXQoXCJiYWNrQ2FudmFzXCIpKSxlLnNldChcImZyb250Q2FudmFzXCIsdGhpcy5nZXQoXCJmcm9udENhbnZhc1wiKSksZS5zZXQoXCJjYW52YXNcIix0aGlzLmdldChcImNhbnZhc1wiKSksZS5zZXQoXCJhbmltYXRlXCIsdGhpcy5nZXQoXCJhbmltYXRlXCIpKSxlLnNldChcImF4aXNBc3Npc3RcIix0aGlzLmdldChcImF4aXNBc3Npc3RcIikpLGUuc2V0KFwiZ3VpZGVBc3Npc3RcIix0aGlzLmdldChcImd1aWRlQXNzaXN0XCIpKSxlLnNldChcImNvb3JkQXNzaXN0XCIsdGhpcy5nZXQoXCJjb29yZEFzc2lzdFwiKSksZS5zZXQoXCJmaWx0ZXJzXCIsdGhpcy5nZXQoXCJmaWx0ZXJzXCIpKSxlLnNldChcImxheWVyc1wiLHRoaXMuZ2V0KFwibGF5ZXJzXCIpKSxlLnNldChcImZhY2V0XCIsdCksZX0sbGVnZW5kOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5nZXQoXCJsZWdlbmRBc3Npc3RcIikscj1uLmxlZ2VuZENmZztyZXR1cm4gbi5lbmFibGU9ITAsYS5pc0Jvb2xlYW4odCk/bi5lbmFibGU9dDphLmlzT2JqZWN0KHQpPyhyPXQsbi5wb3NpdGlvbj1yLnBvc2l0aW9uP3IucG9zaXRpb246XCJyaWdodFwiKTpyW3RdPWUsbi5sZWdlbmRDZmc9cix0aGlzfSx0b29sdGlwOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5nZXQoXCJ0b29sdGlwQXNzaXN0XCIpO3JldHVybiBhLmlzT2JqZWN0KHQpJiYoZT10LHQ9ITApLG4uZW5hYmxlPXQsbi5jZmc9ZSx0aGlzfSxmYWNldDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZ2V0KFwiZmFjZXRDZmdcIik7cmV0dXJuIG4uZGltcz1hLmlzU3RyaW5nKHQpP1t0XTp0LGEubWl4KG4sZSksdGhpc30sYW5pbWF0ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5zZXQoXCJhbmltYXRlXCIsdCksdGhpc30scmVuZGVyOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwidmlld3NcIiksbj10LmdldChcImZhY2V0Q2ZnXCIpO2lmKHQuc2V0KFwicGFpbnRpbmdcIiwhMCksbi5kaW1zJiZuLmRpbXMubGVuZ3RoPjApe2U9W107dmFyIHI9dC5fY3JlYXRGYWNldHMoKTthLmVhY2gocixmdW5jdGlvbihuKXtlLnB1c2godC5fY3JlYXRlRmFjZXRWaWV3cyhuKSl9KSx0LnNldChcInZpZXdzXCIsZSksdC5zZXQoXCJjb29yZFwiLHQuX2NyZWF0ZUNvb3JkKCkpfWVsc2UgbC5zdXBlcmNsYXNzLnJlbmRlci5jYWxsKHQpO3JldHVybiBlLmxlbmd0aCYmYS5lYWNoKGUsZnVuY3Rpb24odCl7dC5yZW5kZXIoKX0pLHQuX3JlbmRlckxlZ2VuZHMoKSx0Ll9yZW5kZXJUb29sdGlwKCksdC5zZXQoXCJwYWludGluZ1wiLCExKSx0LmdldChcImJhY2tDYW52YXNcIikuZHJhdygpLHQuZ2V0KFwiY2FudmFzXCIpLmRyYXcoKSx0LmdldChcImZyb250Q2FudmFzXCIpLmRyYXcoKSx0fSxjaGFuZ2VTaXplOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uZ2V0KFwiYmFja0NhbnZhc1wiKSxpPW4uZ2V0KFwiY2FudmFzXCIpLHM9bi5nZXQoXCJmcm9udENhbnZhc1wiKTtyLmNoYW5nZVNpemUodCxlKSxpLmNoYW5nZVNpemUodCxlKSxzLmNoYW5nZVNpemUodCxlKSxuLnNldChcIndpZHRoXCIsdCksbi5zZXQoXCJoZWlnaHRcIixlKTt2YXIgbz1uLmdldChcImJhY2tQbG90QmdcIik7by5yZXBhaW50KCk7dmFyIHU9by5nZXQoXCJwbG90UmFuZ2VcIik7bi5zZXQoXCJyZWdpb25cIix7c3RhcnQ6dS5zdGFydCxlbmQ6dS5lbmR9KTt2YXIgYz1uLmdldChcInZpZXdzXCIpO3JldHVybiBhLmVhY2goYyxmdW5jdGlvbih0KXt2YXIgZT1uLl9nZXRSZWdpb24odCk7dC5zZXQoXCJyZWdpb25cIixlKX0pLG4ucmVwYWludCgpLG59LHJlcGFpbnQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcImFuaW1hdGVcIik7dCE9PSExJiZ0aGlzLmFuaW1hdGUoITEpLHRoaXMuZ2V0KFwibGVnZW5kQXNzaXN0XCIpLnJlc2V0KCksdGhpcy5nZXQoXCJ0b29sdGlwQXNzaXN0XCIpLmNsZWFyKCksbC5zdXBlcmNsYXNzLl9jbGVhcklubmVyLmNhbGwodGhpcyk7dmFyIGU9dGhpcy5nZXQoXCJ2aWV3c1wiKTtyZXR1cm4gYS5lYWNoKGUsZnVuY3Rpb24odCl7dC5fY2xlYXJJbm5lcigpfSksdGhpcy5yZW5kZXIoKSx0IT09ITEmJnRoaXMuYW5pbWF0ZSh0KSx0aGlzfSxjbGVhcjpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwidmlld3NcIik7cmV0dXJuIGEuZWFjaCh0LGZ1bmN0aW9uKHQpe3QuY2xlYXIoKX0pLHRoaXMuc2V0KFwidmlld3NcIixbXSksdGhpcy5nZXQoXCJsZWdlbmRBc3Npc3RcIikucmVzZXQoKSx0aGlzLmdldChcInRvb2x0aXBBc3Npc3RcIikuY2xlYXIoKSxsLnN1cGVyY2xhc3MuY2xlYXIuY2FsbCh0aGlzKSx0aGlzLmdldChcImZyb250Q2FudmFzXCIpLmNsZWFyKCksdGhpcy5nZXQoXCJmcm9udENhbnZhc1wiKS5kcmF3KCksdGhpcy5zZXQoXCJwbG90Q29udGFpbmVyXCIsbnVsbCksdGhpcy5zZXQoXCJiYWNrUGxvdFwiLG51bGwpLHRoaXMuc2V0KFwiZnJvbnRQbG90XCIsbnVsbCksdGhpc30sZGVzdHJveTpmdW5jdGlvbigpe2lmKCF0aGlzLmRlc3Ryb3llZCl7dmFyIHQ9dGhpcy5nZXQoXCJjb250YWluZXJcIik7dGhpcy5maXJlKFwiZGVzdHJveVwiKSx0aGlzLmNsZWFyKCksdGhpcy5nZXQoXCJiYWNrQ2FudmFzXCIpLmRlc3Ryb3koKSx0aGlzLmdldChcImNhbnZhc1wiKS5kZXN0cm95KCksdGhpcy5nZXQoXCJmcm9udENhbnZhc1wiKS5kZXN0cm95KCksdGhpcy5fYXR0cnM9e30sdGhpcy5ldmVudHM9e30sdGhpcy5kZXN0cm95ZWQ9ITAsdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHQpLHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwicmVzaXplXCIsYS5nZXRXcmFwQmVoYXZpb3IodGhpcyxcIl9pbml0Rm9yY2VGaXRFdmVudFwiKSl9fSxnZXRBbGxHZW9tczpmdW5jdGlvbigpe3ZhciB0PVtdO3Q9dC5jb25jYXQodGhpcy5nZXRHZW9tcygpKTt2YXIgZT10aGlzLmdldChcInZpZXdzXCIpO3JldHVybiBhLmVhY2goZSxmdW5jdGlvbihlKXt0PXQuY29uY2F0KGUuZ2V0R2VvbXMoKSl9KSx0fSxzaG93VG9vbHRpcDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXRWaWV3c0J5UG9pbnQodCk7aWYobi5sZW5ndGgpe3ZhciByPWUuZ2V0KFwidG9vbHRpcEFzc2lzdFwiKTtyLnNob3dUb29sdGlwKHQsbil9cmV0dXJuIGV9LGhpZGVUb29sdGlwOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJ0b29sdGlwQXNzaXN0XCIpO3QuaGlkZVRvb2x0aXAoKX0sZ2V0VG9vbHRpcEl0ZW1zOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldFZpZXdzQnlQb2ludCh0KSxyPVtdO3JldHVybiBhLmVhY2gobixmdW5jdGlvbihuKXt2YXIgaT1uLmdldEdlb21zKCkscz1lLmdldChcInRvb2x0aXBBc3Npc3RcIiksbz1zLmNmZyYmcy5jZmcubWFwO2EuZWFjaChpLGZ1bmN0aW9uKGUpe3ZhciBuPWUuZ2V0KFwiZnJhbWVzXCIpLGk9W107YS5lYWNoKG4sZnVuY3Rpb24obil7dmFyIHI9ZS5maW5kUG9pbnQodCxuKTtpZihyKXt2YXIgYT1lLmdldFRpcEl0ZW1zKHIsbyk7aT1pLmNvbmNhdChhKX19KSxyPXIuY29uY2F0KGkpfSl9KSxyfSxnZXRWaWV3c0J5UG9pbnQ6ZnVuY3Rpb24odCl7dmFyIGU9W10sbj10aGlzLmdldChcInZpZXdzXCIpO3JldHVybiBpKHRoaXMuZ2V0KFwiY29vcmRcIiksdCkmJmUucHVzaCh0aGlzKSxhLmVhY2gobixmdW5jdGlvbihuKXtpKG4uZ2V0KFwiY29vcmRcIiksdCkmJmUucHVzaChuKX0pLGV9LGdldFZpZXdzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0KFwidmlld3NcIil9LGNyZWF0ZVZpZXc6ZnVuY3Rpb24odCl7dmFyIGU9bmV3IHModCk7ZS5nZXQoXCJyZWdpb25cIil8fGUuc2V0KFwicmVnaW9uXCIsdGhpcy5fZ2V0UmVnaW9uKGUpKSxlLnNldChcImJhY2tDYW52YXNcIix0aGlzLmdldChcImJhY2tDYW52YXNcIikpLGUuc2V0KFwiZnJvbnRDYW52YXNcIix0aGlzLmdldChcImZyb250Q2FudmFzXCIpKSxlLnNldChcImNhbnZhc1wiLHRoaXMuZ2V0KFwiY2FudmFzXCIpKSxlLnNldChcImFuaW1hdGVcIix0aGlzLmdldChcImFuaW1hdGVcIikpLGUuc2V0KFwicGFyZW50XCIsdGhpcyk7dmFyIG49dGhpcy5nZXQoXCJ2aWV3c1wiKTtyZXR1cm4gbi5wdXNoKGUpLHRoaXMuc2V0KFwidmlld3NcIixuKSxlfSxyZW1vdmVWaWV3OmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPXRoaXMuZ2V0KFwidmlld3NcIikscj1udWxsLGk9MDtpPG4ubGVuZ3RoO2krKylyPW5baV0sciE9PXQ/ZS5wdXNoKHIpOnIuY2xlYXIoKTt0aGlzLnNldChcInZpZXdzXCIsZSksdGhpcy5yZXBhaW50KCl9LGdldFZpZXc6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZ2V0KFwidmlld3NcIilbdF19LF9nZXRSZWdpb246ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXQoXCJwbG90UmFuZ2VcIiksbj10LmdldChcInN0YXJ0XCIpLHI9dC5nZXQoXCJlbmRcIiksaT1lLnRsLGE9ZS5icixzPXt4Om4ueCooYS54LWkueCkraS54LHk6ci55KihhLnktaS55KStpLnl9LG89e3g6ci54KihhLngtaS54KStpLngseTpuLnkqKGEueS1pLnkpK2kueX07cmV0dXJue3N0YXJ0OnMsZW5kOm99fSxmb3JjZUZpdDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwiY29udGFpbmVyXCIpLGU9YS5nZXRXaWR0aCh0KSxuPXRoaXMuZ2V0KFwiaGVpZ2h0XCIpO2UhPT10aGlzLmdldChcIndpZHRoXCIpJiZ0aGlzLmNoYW5nZVNpemUoZSxuKX19KSx0LmV4cG9ydHM9bH0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDExOCksYT1uKDMwNCkscz1uKDUpLG89ZnVuY3Rpb24odCl7ci5taXgodGhpcyx0KSx0aGlzLl9pbml0KCl9O3IuYXVnbWVudChvLHt0eXBlOlwicG9pbnRcIixhZGp1c3RzOm51bGwsY2hhcnQ6bnVsbCxhdHRyczpudWxsLHN0eWxlQ2ZnOm51bGwsbGFiZWxDZmc6bnVsbCxzY2FsZXM6bnVsbCx0b29sdGlwRGltczpudWxsLF9pbml0OmZ1bmN0aW9uKCl7dGhpcy5hdHRycz1bXSx0aGlzLnNjYWxlcz17fSx0aGlzLnN0YXRzPVtdO3ZhciB0PXRoaXMuYWRqdXN0czt0JiYoci5lYWNoKHQsZnVuY3Rpb24oZSxuKXt0W25dPXIudWNmaXJzdChlKX0pLHRoaXMuYWRqdXN0cz10KX0sX2NyZWF0ZVNjYWxlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuc2NhbGVzLG49dGhpcy5jaGFydDtyZXR1cm4gZVt0XXx8KGVbdF09bi5jcmVhdGVTY2FsZSh0KSksZVt0XX0sX2FkZFN0YXQ6ZnVuY3Rpb24odCl7dGhpcy5zdGF0cy5wdXNoKHQpfSxfYWRkQXR0cjpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuYXR0cnM7dD1yLnVjZmlyc3QodCk7dmFyIGE9aVt0XSxzPW5ldyBhKGUpO24ucHVzaChzKX0sX2dldERlZmF1bHRTaGFwZXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnR5cGUsZT0vW0EtWl0uKiQvO3JldHVybiB0PXQucmVwbGFjZShlKSxzLnNoYXBlc1t0XX0sX2dldERlZmF1bHRDb2xvcnM6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMuYWRqdXN0cztyZXR1cm4gdD1lJiYxPT09ZS5sZW5ndGg/dGhpcy50eXBlK2VbMF06dGhpcy50eXBlLHMuY29sb3JzW3RdfHxzLmNvbG9yc1tcImRlZmF1bHRcIl19LF9wYXJzZURpbXM6ZnVuY3Rpb24odCxlKXt2YXIgbixpPXRoaXMsYT1pLmNoYXJ0O2lmKHQuaXNTdGF0JiYobj10LG4uaW5pdCgpLHQ9bi5nZXREaW1zKCksaS5fYWRkU3RhdChuKSksci5pc1N0cmluZyh0KSYmdC5pbmRleE9mKFwiK1wiKSE9PS0xKXt2YXIgcz1bXSxvPWEuZ2V0KFwic2NhbGVBc3Npc3RcIiksdT10LnJlcGxhY2UoL1xccysvZyxcIlwiKS5zcGxpdChcIipcIik7ci5lYWNoKHUsZnVuY3Rpb24odCl7dmFyIGU9dC5yZXBsYWNlKC9cXCh8XFwpfFxccysvZyxcIlwiKS5zcGxpdChcIitcIiksbj1lLmpvaW4oXCIrXCIpO3MucHVzaChuKSxlLmxlbmd0aD4xJiYoby5kZWZzW25dPXIubWl4KHt9LG8uZGVmc1tuXSx7ZGltczplfSkpfSksdD1zfWVsc2Ugci5pc1N0cmluZyh0KSYmdC5pbmRleE9mKFwiKlwiKSE9PS0xP3Q9dC5yZXBsYWNlKC9cXHMrL2csXCJcIikuc3BsaXQoXCIqXCIpOihyLmlzTnVtYmVyKHQpfHxyLmlzU3RyaW5nKHQpKSYmKHQ9W3RdKTt2YXIgYz1hLmdldChcImNvb3JkQXNzaXN0XCIpO1wicG9zaXRpb25cIj09PWUmJlwidGhldGFcIj09PWMudHlwZSYmXCJpbnRlcnZhbFwiPT09aS50eXBlJiZcIlN0YWNrXCI9PT1pLmFkanVzdHNbMF0mJnQudW5zaGlmdChcIi4ucGllWFwiKSxcInBvc2l0aW9uXCI9PT1lJiYxPT09dC5sZW5ndGgmJihyLmluQXJyYXkoaS5hZGp1c3RzLFwiSml0dGVyXCIpfHxyLmluQXJyYXkoaS5hZGp1c3RzLFwiU3RhY2tcIikpJiZ0LnB1c2goXCIuLnlcIik7dmFyIGw9W107cmV0dXJuIHIuZWFjaCh0LGZ1bmN0aW9uKHQpe3ZhciBlPWkuX2NyZWF0ZVNjYWxlKHQpO2wucHVzaChlKX0pLHtkaW1zOnQsc3RhdDpuLHNjYWxlczpsfX0sY3JlYXRlR2VvbTpmdW5jdGlvbigpe3ZhciB0PXRoaXMudHlwZTtyZXR1cm4gdD1yLnVjZmlyc3QodCksbmV3IGEoe3R5cGU6dGhpcy50eXBlLGNoYXJ0OnRoaXMuY2hhcnQsYXR0cnM6dGhpcy5hdHRycyxzdGF0czp0aGlzLnN0YXRzLHNjYWxlczp0aGlzLnNjYWxlcyxzdHlsZUNmZzp0aGlzLnN0eWxlQ2ZnLGxhYmVsQ2ZnOnRoaXMubGFiZWxDZmcsdG9vbHRpcERpbXM6dGhpcy50b29sdGlwRGltcyxhZGp1c3RzOnRoaXMuYWRqdXN0c30pfSxwb3NpdGlvbjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9wYXJzZURpbXModCxcInBvc2l0aW9uXCIpO3JldHVybiB0aGlzLl9hZGRBdHRyKFwicG9zaXRpb25cIix7c2NhbGVzOmUuc2NhbGVzLHN0YXQ6ZS5zdGF0fSksdGhpc30sY29sb3I6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLl9wYXJzZURpbXModCksaT17c2NhbGVzOm4uc2NhbGVzLHN0YXQ6bi5zdGF0fTtyZXR1cm5cImhlYXRtYXBcIiE9PXRoaXMudHlwZXx8ZXx8KGU9cy5oZWF0bWFwQ29sb3JzKSxyLmlzRnVuY3Rpb24oZSk/aS5jYWxsYmFjaz1lOnIuaXNBcnJheShlKT9pLmFycj1lOmU/aS5tZXRob2RUeXBlPWU6aS5hcnI9dGhpcy5fZ2V0RGVmYXVsdENvbG9ycygpLHRoaXMuX2FkZEF0dHIoXCJjb2xvclwiLGkpLHRoaXN9LHNoYXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5fcGFyc2VEaW1zKHQpLGk9e3NjYWxlczpuLnNjYWxlcyxzdGF0Om4uc3RhdH07cmV0dXJuIHIuaXNGdW5jdGlvbihlKT9pLmNhbGxiYWNrPWU6aS5hcnI9ZXx8dGhpcy5fZ2V0RGVmYXVsdFNoYXBlcygpLHRoaXMuX2FkZEF0dHIoXCJzaGFwZVwiLGkpLHRoaXN9LG9wYWNpdHk6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLl9wYXJzZURpbXModCksaT17c2NhbGVzOm4uc2NhbGVzLHN0YXQ6bi5zdGF0fTtyZXR1cm4gci5pc0Z1bmN0aW9uKGUpJiYoaS5jYWxsYmFjaz1lKSx0aGlzLl9hZGRBdHRyKFwib3BhY2l0eVwiLGkpLHRoaXN9LHNpemU6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXMuX3BhcnNlRGltcyh0KSxhPXtzY2FsZXM6aS5zY2FsZXMsc3RhdDppLnN0YXQsbWluOnIuaXNOdWxsKG4pPzE6bn07cmV0dXJuIHIuaXNGdW5jdGlvbihlKT9hLmNhbGxiYWNrPWU6YS5tYXg9ZXx8MTAsdGhpcy5fYWRkQXR0cihcInNpemVcIixhKSx0aGlzfSxsYWJlbDpmdW5jdGlvbih0LGUsbil7dmFyIGk9dGhpcy5fcGFyc2VEaW1zKHQpO3IuaXNPYmplY3QoZSkmJihuPWUsZT1udWxsKTt2YXIgYT17c2NhbGVzOmkuc2NhbGVzLGNmZzpuLHN0YXQ6aS5zdGF0LGNhbGxiYWNrOmV9O3JldHVybiB0aGlzLmxhYmVsQ2ZnPWEsdGhpc30sdG9vbHRpcDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9wYXJzZURpbXModCk7cmV0dXJuIHRoaXMudG9vbHRpcERpbXM9ZS5kaW1zLHRoaXN9LHN0eWxlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnN0eWxlQ2ZnPXQsdGhpc319KSx0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDExKSxhPW4oMTAxKSxzPWZ1bmN0aW9uIG8odCl7by5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07cy5BVFRSUz17Z2VtbzpudWxsfSxyLmV4dGVuZChzLGkuR3JvdXApLHIubWl4aW4ocyxbYS5Hcm91cF0pLHIuYXVnbWVudChzLHtpc0l0ZW1BY3RpdmVkOmZ1bmN0aW9uKHQpe3JldHVybiB0LmdldChcImFjdGl2ZWRcIil9LHNldEl0ZW1BY3RpdmVkOmZ1bmN0aW9uKHQsZSl7ZT90LnNldChcImFjdGl2ZWRcIiwhMCk6dC5zZXQoXCJhY3RpdmVkXCIsITEpfX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxMDkpLGk9bigxKSxhPXt9O2EuZ2V0RGVmYXVsdD1mdW5jdGlvbih0KXt2YXIgZT10Lmdlb20sbj10LmZuLGE9ZS5nZXQoXCJjb29yZFwiKSxzPXIsbz1lLmdldChcInR5cGVcIiksdT1lLmdldChcImFkanVzdHNcIil8fFwiXCI7c3dpdGNoKG8rPXUsYS50eXBlKXtjYXNlXCJjYXJ0ZXNpYW5cIjpzd2l0Y2gobyl7Y2FzZVwiaW50ZXJ2YWxcIjpjYXNlXCJpbnRlcnZhbFN0YWNrXCI6Y2FzZVwiaW50ZXJ2YWxEb2RnZVwiOnM9YS5pc1RyYW5zcG9zZWQ/ci5zY2FsZVg6ci5zY2FsZVk7YnJlYWs7Y2FzZVwiaW50ZXJ2YWxTeW1tZXRyaWNcIjpzPXIuc2NhbGVYO2JyZWFrO2RlZmF1bHQ6cz1yLndhdmVzfWJyZWFrO2Nhc2VcInBvbGFyXCI6c3dpdGNoKG8pe2Nhc2VcImFyZWFcIjpjYXNlXCJhcmVhU3RhY2tcIjpjYXNlXCJpbnRlcnZhbFwiOmNhc2VcImludGVydmFsU3RhY2tcIjpjYXNlXCJpbnRlcnZhbERvZGdlXCI6cz1yLnNjYWxlWFk7YnJlYWs7ZGVmYXVsdDpzPXIuYW5nbGV9YnJlYWs7Y2FzZVwidGhldGFcIjpzPXIuYW5nbGU7YnJlYWs7Y2FzZVwicGx1c1wiOnM9ci5zY2FsZVhZfXZhciBjPWEuZ2V0KFwic3RhcnRcIiksbD1hLmdldChcImVuZFwiKSxoPWwueC1jLngsZj1jLnktbC55LGc9e2dyb3VwOmUuZ2V0KFwiZ3JvdXBcIikscmVjdDp7eDpjLngseTpsLnksd2lkdGg6aCxoZWlnaHQ6Zn0sYmVmb3JlOm59O3JldHVybiBhLmlzUG9sYXImJmkubWl4KGcse2NpcmNsZTp7Y2VudGVyOmEuZ2V0Q2VudGVyKCksc3RhcnRBbmdsZTphLmdldChcInN0YXJ0QW5nbGVcIiksZW5kQW5nbGU6YS5nZXQoXCJlbmRBbmdsZVwiKSxyOk1hdGgubWF4KGgsZikvMn19KSxuZXcgcyhnKX0sdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigyNyksYT1uKDMwMykscz1uKDMwNSksbz1uKDMxMiksdT1uKDMxNCksYz1uKDMxNSksbD1uKDMxMyksaD1uKDMwMiksZj1uKDk2KSxnPW4oNSkscD1bXCJzaXplXCIsXCJzaGFwZVwiLFwiY29sb3JcIl0sdj1mdW5jdGlvbiBkKHQpe2Quc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCksdGhpcy5faW5pdCgpfTt2LkFUVFJTPXt0eXBlOlwicG9pbnRcIixjaGFydDpudWxsLGF0dHJzOm51bGwsc3RhdHM6bnVsbCxzY2FsZXM6bnVsbCxzdHlsZUNmZzpudWxsLGxhYmVsQ2ZnOm51bGwsYW5pbWF0ZTpnLmFuaW1hdGV9LHIuZXh0ZW5kKHYsaSksci5taXhpbih2LFtsLGMsbyx1XSksci5hdWdtZW50KHYse19pbml0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJ0eXBlXCIpLGU9dGhpcy5nZXQoXCJjaGFydFwiKSxuPWUuZ2V0KFwicGxvdENvbnRhaW5lclwiKTtufHwobj1lLmdldChcImNhbnZhc1wiKS5hZGRHcm91cCgpKTt2YXIgaT1uLmFkZEdyb3VwKHt6SW5kZXg6MTB9KTt0aGlzLnNldChcImNvbnRhaW5lclwiLGkpLHIuaW5BcnJheShbXCJpbnRlcnZhbFwiLFwicG9pbnRcIixcInNjaGVtYVwiXSx0KSYmdGhpcy5zZXQoXCJhbmltYXRlXCIsITApfSxfYWRkTGFiZWxzOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldChcInR5cGVcIiksaT1lLmdldChcImNvb3JkXCIpLGE9cy5nZXRMYWJlbHNDbGFzcyhpLnR5cGUsbiksbz1lLmdldChcImNvbnRhaW5lclwiKSx1PW8uYWRkR3JvdXAoYSx7bGFiZWxzQ2ZnOmUuZ2V0KFwibGFiZWxDZmdcIiksY29vcmQ6aSxnZW9tOmUsZ2VvbVR5cGU6bn0pLGM9W107ci5lYWNoKHQsZnVuY3Rpb24odCl7Yz1jLmNvbmNhdCh0LnRvSlNPTigpKX0pLHUuc2hvd0xhYmVscyhjKX0sX2RyYXc6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXQoXCJncm91cFwiKSxuPXRoaXMuZ2V0KFwidHlwZVwiKTtuPXIudWNmaXJzdChuKTt2YXIgaT1uZXcgZltuXSh7Y29udGFpbmVyOmUsYXR0cnM6dGhpcy5nZXQoXCJhdHRyc1wiKSxzdHlsZUNmZzp0aGlzLmdldChcInN0eWxlQ2ZnXCIpLGFkanVzdHM6dGhpcy5nZXQoXCJhZGp1c3RzXCIpLGZyYW1lczp0fSksYT1pLmRyYXcodCk7cmV0dXJuIHRoaXMuc2V0KFwiZ2VvbVNoYXBlXCIsaS5nZXQoXCJzaGFwZU9ialwiKSksdGhpcy5zZXQoXCJzaGFwZVR5cGVcIixpLmdldChcInNoYXBlVHlwZVwiKSksYX0scGFpbnQ6ZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIGkoKXt2YXIgcj1zLl9kcmF3KGUpO24mJm4odCxyKSxzLmdldChcImxhYmVsQ2ZnXCIpJiZzLl9hZGRMYWJlbHMocil9dmFyIHM9dGhpcztpZihcIm1hcFwiPT09dC50eXBlKXt2YXIgbz1zLmdldChcInNjYWxlc1wiKSx1PW9bXCIuLmxvbmdcIl0sYz1vW1wiLi5sYW50XCJdO3Quc2V0KFwib3JpZ2luTWluXCIsW3UubWluLGMubWluXSksdC5zZXQoXCJvcmlnaW5NYXhcIixbdS5tYXgsYy5tYXhdKSxzLnNldChcImNvb3JkXCIsdCl9dmFyIGw9cy5nZXRBdHRyKFwicG9zaXRpb25cIik7bC5jb29yZD10O3ZhciBmPXMuZ2V0KFwiY29udGFpbmVyXCIpLGc9Zi5hZGRHcm91cChoLHtnZW9tOnMsY29vcmQ6dCxtdWx0aXBsZUFjdGl2ZTpzLmlzU2hhcmVUb29sdGlwKCksY2FwdHVyZTohMX0pO2cuc2V0TWF0cml4KHQuZ2V0KFwibWF0cml4XCIpLmNsb25lKCkpLHMuc2V0KFwiZ3JvdXBcIixnKTt2YXIgcD1zLmdldChcImNoYXJ0XCIpLHY9cC5nZXQoXCJhbmltYXRlXCIpO2lmKHY9ci5pc051bGwodik/cy5nZXQoXCJhbmltYXRlXCIpOnYpe3ZhciBkPWEuZ2V0RGVmYXVsdCh7Z2VvbTpzLGZuOmZ1bmN0aW9uKCl7aSgpfX0pO2Quc3RhcnQoKX1lbHNlIGkoKTtyZXR1cm4gc30sZ2V0RGVmYXVsdFZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldCh0KSxyPWUuZ2V0QXR0cih0KTtpZihyKXt2YXIgaT1yLmdldFNjYWxlKHQpO1wiaWRlbnRpdHlcIj09PWkudHlwZSYmKG49aS52YWx1ZSl9cmV0dXJuIG59LGdldExlZ2VuZEF0dHI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJhdHRyc1wiKSxuPVtdO3JldHVybiByLmVhY2goZSxmdW5jdGlvbih0KXtyLmluZGV4T2YocCx0LnR5cGUpIT09LTEmJm4ucHVzaCh0KX0pLG59LGdldFNjYWxlczpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldChcInNjYWxlc1wiKX0sZGVzdHJveTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwiZ3JvdXBcIik7dC5nZXQoXCJkZXN0cm95ZWRcIil8fCh0LmNsZWFyKCksdC5yZW1vdmUoKSksdGhpcy5fYXR0cnM9e30sdGhpcy5ldmVudHM9e319LGdldFhEaXN0YW5jZTpmdW5jdGlvbigpe3ZhciB0LGU9dGhpcyxuPWUuZ2V0WFNjYWxlKCk7cmV0dXJuIHQ9bi5pc0NhdGVnb3J5PzE6KG4ubWF4LW4ubWluKS9uLnZhbHVlcy5sZW5ndGh9LGdldEF0dHI6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXQoXCJhdHRyc1wiKSxuPW51bGw7cmV0dXJuIHIuZWFjaChlLGZ1bmN0aW9uKGUpe2UudHlwZT09PXQmJihuPWUpfSksbn0sZ2V0WERpbTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0WFNjYWxlKCk7cmV0dXJuIHQuZGltfSxnZXRZRGltOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRZU2NhbGUoKTtyZXR1cm4gdD90LmRpbTpcInlcIn0sZ2V0WFNjYWxlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0QXR0cihcInBvc2l0aW9uXCIpLnNjYWxlc1swXX0sZ2V0WVNjYWxlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0QXR0cihcInBvc2l0aW9uXCIpLnNjYWxlc1sxXX0saXNJbkNpcmNsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldChcImNvb3JkXCIpLmlzUG9sYXJ9fSksdC5leHBvcnRzPXZ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDk1KSxpPW4oOTQpLGE9bigzMDYpLHM9e2dldExhYmVsc0NsYXNzOmZ1bmN0aW9uKHQpe3ZhciBlPXI7cmV0dXJuXCJwb2xhclwiPT09dHx8XCJwbHVzXCI9PT10P2U9aTpcInRoZXRhXCI9PT10JiYoZT1hKSxlfX07dC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3JldHVybiBsLmVxdWFsKHQsLU1hdGguUEkvMil8fGwuZXF1YWwodCxNYXRoLlBJLzIpfHxsLmVxdWFsKHQsMypNYXRoLlBJLzIpfWZ1bmN0aW9uIGkodCxlLG4pe3JldHVybnt4OnQueCtuKk1hdGguY29zKGUpLHk6dC55K24qTWF0aC5zaW4oZSl9fWZ1bmN0aW9uIGEodCxlLG4scixpLGEpe3ZhciBzPU1hdGguYWNvcygoci1lKS9yKSxvPWE/bi1NYXRoLlBJK3M6bi1zO3Qub3JpZ25BbmdsZT10LmFuZ2xlLHQuYW5nbGU9byx0Lm9yaWduWD10LngsdC5vcmlnblk9dC55LHQueD1pLngrKHIrMi41KSpNYXRoLmNvcyh0LmFuZ2xlKSx0Lnk9aS55KyhyKzIuNSkqTWF0aC5zaW4odC5hbmdsZSksbC5lcXVhbChvLC1NYXRoLlBJLzIpP3QueCs9ZzpsLmVxdWFsKG8sMypNYXRoLlBJLzIpP3QueC09ZzpsLmVxdWFsKG8sTWF0aC5QSS8yKSYmKG8+PXQub3JpZ25BbmdsZT90LngrPWc6dC54LT1nKX1mdW5jdGlvbiBzKHQsZSxuLHIsaSxzKXt2YXIgbz1wYXJzZUludCgyKmUvcywxMCksdT10LnkrZSxjPXQueS1lO288bi5sZW5ndGgmJm4uc3BsaWNlKG8sbi5sZW5ndGgtbyk7Zm9yKHZhciBsLGgsZixnPTAscD1uLmxlbmd0aCx2PTAsZD0wO2Q8cDtkKyspe3ZhciB4PW5bZF0sbT14Lnk7aD1wLWQsbD1pPjA/KHUtbSkvaDoobS1jKS9oLGQ+MCYmKHY9aT4wPyhtLWMpL2Q6KHUtbSkvZCk7dmFyIHk7aWYoeT1pPjA/aDxwP20tbltkLTFdLnk6bS1jOmg8cC0xP25bZC0xXS55LW06dS1tLGc9ZCxsPHMpezAhPT1nJiYoZz1kKzEpO2JyZWFrfSh2PjAmJnY8c3x8eT4wJiZ5PHMpJiYoZj1kKX1pZihmKWZvcih2YXIgXz0wO188PWY7XysrKXt2YXIgUz1fKnM7YShuW19dLFMscixlLHQsITApfXZhciB3PWk8MCYmZzw9cC0xfHxpPjAmJmc8cC0xO2lmKHA+MSYmdyl7dmFyIGI9MD09PWc/MDpnLTEsTT1uW2JdLEE9TS55LEM9aT4wP3U6YztpZihoPXAtYi0xLGw9TWF0aC5hYnMoQy1BKS9oLGg+MXx8bDw9cyl7bDxzJiYobD1zKTtmb3IodmFyIGs9cC0xO2s+PWI7ay0tKXt2YXIgVD0ocC0xLWspKmw7YShuW2tdLFQscixlLHQsITEpfX1mb3IodmFyIFA9aT4wP2M6dSxJPSExLEQ9Yi0xO0Q+MDtELS0pe3ZhciBMPW5bRF07aWYoIUkmJk1hdGguYWJzKFAtTC55KS8oRCsxKTxzJiYoST0hMCksSSl7dmFyIFI9TWF0aC5hYnMobltEKzFdLnktQykrczthKG5bRF0sUixyLGUsdCl9fX19dmFyIG89bigxKSx1PW4oOTQpLGM9bigyMCksbD1uKDQpLGg9big1KSxmPTUsZz0xLHA9ZnVuY3Rpb24gdih0KXt2LnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtwLkNGRz17bGFiZWxzOmgudGhldGFMYWJlbHN9LG8uZXh0ZW5kKHAsdSksby5hdWdtZW50KHAse2FkanVzdEl0ZW1zOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldERlZmF1bHRPZmZzZXQoKTtyZXR1cm4gbj4wJiYodD1lLl9hZGp1c3RJdGVtcyh0LG4pKSx0fSxfYWRqdXN0SXRlbXM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0RGVmYXVsdE9mZnNldCgpLHI9W10saT1lLmdldChcImNvb3JkXCIpLGE9aS5nZXRDZW50ZXIoKSx1PWkuZ2V0UmFkaXVzKCksYz11K24sbD1pLmdldChcInN0YXJ0QW5nbGVcIiksaD1lLmdldChcImxhYmVsc1wiKS5sYWJlbEhlaWdodCxmPVtdLGc9W107aWYoby5lYWNoKHQsZnVuY3Rpb24odCl7dC54PmEueD9mLnB1c2godCk6ci5wdXNoKHQpfSksci5sZW5ndGgpe3ZhciBwPWw+PS1NYXRoLlBJLzI/MypNYXRoLlBJLzI6LU1hdGguUEkvMjtzKGEsYyxyLHAsLTEsaCl9cmV0dXJuIGYubGVuZ3RoJiZzKGEsYyxmLE1hdGguUEkvMiwxLGgpLGc9Zy5jb25jYXQoZixyKX0sZHJhd0xpbmVzOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uZ2V0RGVmYXVsdE9mZnNldCgpO3I+MCYmby5lYWNoKHQsZnVuY3Rpb24odCl7bi5saW5lVG9MYWJlbCh0LGUpfSl9LGxpbmVUb0xhYmVsOmZ1bmN0aW9uKHQsZSl7dmFyIG4sYT10aGlzLHM9YS5nZXQoXCJjb29yZFwiKSx1PXMuZ2V0UmFkaXVzKCksYz1hLmdldERlZmF1bHRPZmZzZXQoKSxoPWEuZ2V0KFwibGFiZWxzXCIpLGc9dC5vcmlnbkFuZ2xlfHx0LmFuZ2xlLHA9cy5nZXRDZW50ZXIoKSx2PWkocCxnLHUrZi8yKSxkPWgubGFiZWxIZWlnaHQseD1hLmdldChcImxpbmVHcm91cFwiKSxtPVtdLHk9cih0LmFuZ2xlKSxfPTE7eSYmKGMtPWQvMixsLmVxdWFsKHQuYW5nbGUsTWF0aC5QSS8yKSYmKF89LTEpKSxtLnB1c2goW1wiTVwiLHYueCx2LnldKSxuPWkocCxnLHUrYy8yKTt2YXIgUz15P3QueStkLzIqXzp0Lnk7bS5wdXNoKFtcIlJcIixuLngsbi55LHQueCxTXSksbT1vLnBhdGgyQWJzb2x1dGUobSkseHx8KHg9YS5hZGRHcm91cCh7ZWxDbHM6XCJ4LWxpbmUtZ3JvdXBcIn0pLGEuc2V0KFwibGluZUdyb3VwXCIseCkpLHguYWRkU2hhcGUoXCJwYXRoXCIse2F0dHJzOm8ubWl4KHtwYXRoOm0sZmlsbDpudWxsLHN0cm9rZTp0LmNvbG9yfSxlKX0pfSxnZXRMYWJlbFJvdGF0ZTpmdW5jdGlvbih0LGUpe3ZhciBuO3JldHVybiBlPDAmJihuPTE4MCp0L01hdGguUEksbj45MCYmKG4tPTE4MCksbjwtOTAmJihuKz0xODApKSxufSxnZXRMYWJlbEFsaWduOmZ1bmN0aW9uKHQpe3ZhciBlLG49dGhpcyxyPW4uZ2V0KFwiY29vcmRcIiksaT1yLmdldENlbnRlcigpO2U9dC54PT09aS54P1wiY2VudGVyXCI6dC54PmkueD9cImxlZnRcIjpcInJpZ2h0XCI7dmFyIGE9bi5nZXREZWZhdWx0T2Zmc2V0KCk7cmV0dXJuIGE8PTAmJihlPVwicmlnaHRcIj09PWU/XCJsZWZ0XCI6XCJyaWdodFwiKSxlfSxnZXRBcmNQb2ludDpmdW5jdGlvbih0KXtyZXR1cm4gdH0sZ2V0UG9pbnRBbmdsZTpmdW5jdGlvbih0KXt2YXIgZSxuLHI9dGhpcyxpPXIuZ2V0KFwiY29vcmRcIik7ZT17eDp0LnhbMF0seTp0LnlbMF19LG49e3g6dC54WzFdLHk6dC55WzFdfTt2YXIgYT1jLmdldFBvaW50QW5nbGUoaSxlKSxzPWMuZ2V0UG9pbnRBbmdsZShpLG4pO2E+PXMmJihzKz0yKk1hdGguUEkpO3ZhciBvPWErKHMtYSkvMjtyZXR1cm4gb30sZ2V0Q2lyY2xlUG9pbnQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5nZXQoXCJjb29yZFwiKSxpPXIuZ2V0Q2VudGVyKCksYT1yLmdldFJhZGl1cygpK2U7cmV0dXJue3g6aS54K2EqTWF0aC5jb3ModCkseTppLnkrYSpNYXRoLnNpbih0KSxhbmdsZTp0LHI6YX19fSksdC5leHBvcnRzPXB9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigxNTMpLGE9bigyKSxzPW4oMjQpLG89ZnVuY3Rpb24gdSh0KXt1LnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtvLkFUVFJTPXt0eXBlOlwiY29udG91clwifSxyLmV4dGVuZChvLHMuUGF0aCksci5hdWdtZW50KG8se19iZXFsOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIE1hdGguYWJzKHQtZSk8MWUtNn0sX2dldFpTY2FsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldEF0dHIoXCJwb3NpdGlvblwiKS5nZXRTY2FsZShcInpcIil9LF9nZXREYXRhOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1bXSxpPWUuZ2V0QXR0cihcInBvc2l0aW9uXCIpLHM9aS5nZXREaW1zKCksbz1zWzBdLHU9c1sxXSxjPXNbMl0sbD1hLnZhbHVlcyh0LG8pLGg9YS52YWx1ZXModCx1KSxmPTAsZz0wLHA9bnVsbDtyZXR1cm4gci5lYWNoKGwsZnVuY3Rpb24odCl7cCYmZS5fYmVxbChwLHQpfHxmKysscD10fSkscD1udWxsLHIuZWFjaChoLGZ1bmN0aW9uKHQpe3AmJmUuX2JlcWwocCx0KXx8ZysrLHA9dH0pLHQuZWFjaChmdW5jdGlvbih0LGUpe3ZhciByPU1hdGguZmxvb3IoZS9nKSxpPU1hdGguZmxvb3IoZSVnKSxhPVt0W29dLHRbdV0sdFtjXV07QXJyYXkuaXNBcnJheShuW3JdKXx8KG5bcl09W10pLG5bcl1baV09YX0pLG59LHByb2Nlc3NGcmFtZXM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0WERpbSgpLHM9ZS5nZXRZRGltKCksbz1lLl9nZXRaU2NhbGUoKSx1PW8uZGltLGM9YS5tZXJnZS5hcHBseShudWxsLHQpLGw9Yy5yb3dPYmplY3QoMCksaD1lLl9nZXREYXRhKGMpLGY9by50aWNrcyxnPWkoaCxmKSxwPVtdO3JldHVybiByLmVhY2goZyxmdW5jdGlvbih0KXt2YXIgZT10LnBhdGgsaT10LnZhbHVlLG89W107ci5lYWNoKGUsZnVuY3Rpb24odCl7dmFyIGU9ci5taXgoe30sbCk7ZVtuXT10WzBdLGVbc109dFsxXSxlW3VdPWksby5wdXNoKGUpfSkscC5wdXNoKG5ldyBhKG8pKX0pLHB9fSksdC5leHBvcnRzPW99LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigyNCksYT1mdW5jdGlvbiBzKHQpe3Muc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2EuQVRUUlM9e3R5cGU6XCJlZGdlXCJ9LHIuZXh0ZW5kKGEsaS5CYXNlKSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDE3NiksYT1uKDI0KSxzPW4oNSksbz1mdW5jdGlvbiB1KHQpe3Uuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O28uQVRUUlM9e3R5cGU6XCJoZWF0bWFwXCJ9LHIuZXh0ZW5kKG8sYS5CYXNlKSxyLmF1Z21lbnQobyx7X2dldEhlYXRtYXBEYXRhOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1bXSxyPWUuZ2V0QXR0cihcImNvbG9yXCIpLGk9ci5nZXREaW1zKCksYT1pWzBdO3JldHVybiB0LmVhY2goZnVuY3Rpb24odCl7dmFyIGU9W3QueCx0LnksdFthXV07bi5wdXNoKGUpfSksbn0sX2dldEltYWdlUmVnaW9uOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0Q29vcmQoKSxuPWUuZ2V0KFwic3RhcnRcIikscj1lLmdldChcImVuZFwiKSxpPXt4Om4ueCx5OnIueSx3aWR0aDpyLngtbi54LGhlaWdodDpuLnktci55fTtyZXR1cm4gaX0sX2dldENvbG9yU2NhbGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRBdHRyKFwiY29sb3JcIikuZ2V0U2NhbGUoXCJjb2xvclwiKX0sX2dldFJhZGl1czpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldEF0dHIoXCJwb3NpdGlvblwiKSxuPXQuZ2V0Q29vcmQoKSxyPWUuc3RhdCxpPW51bGw7aWYocil7dmFyIGE9ci5iYW5kV2lkdGg7aT1NYXRoLm1pbihuLmdldFdpZHRoKCksbi5nZXRIZWlnaHQoKSkqYX1yZXR1cm4gMippfSxkcmF3RnJhbWU6ZnVuY3Rpb24odCl7aWYodC5yb3dDb3VudCgpKXt2YXIgZT10aGlzLG49ZS5nZXQoXCJjb250YWluZXJcIiksYT1lLl9nZXRIZWF0bWFwRGF0YSh0KSxvPWUuX2dldEltYWdlUmVnaW9uKCksdT1lLl9nZXRDb2xvclNjYWxlKCksYz10LnJvd09iamVjdCgwKS5zaXplLGw9ZS5nZXRBdHRyKFwiY29sb3JcIiksaD1yLm1peCh7bWluOnUubWluLG1heDp1Lm1heCxmb3JtYXR0ZXI6ZnVuY3Rpb24odCl7cmV0dXJuIHUuc2NhbGUodCl9fSxzLmhlYXRtYXAsbyk7aC5jb2xvcnM9W2wubWFwcGluZ1ZhbHVlcyh1LmludmVydCgwKSkuam9pbihcIlwiKSxsLm1hcHBpbmdWYWx1ZXModS5pbnZlcnQoLjI1KSkuam9pbihcIlwiKSxsLm1hcHBpbmdWYWx1ZXModS5pbnZlcnQoLjUpKS5qb2luKFwiXCIpLGwubWFwcGluZ1ZhbHVlcyh1LmludmVydCguNzUpKS5qb2luKFwiXCIpLGwubWFwcGluZ1ZhbHVlcyh1LmludmVydCgxKSkuam9pbihcIlwiKV07dmFyIGY9Yz9wYXJzZUludChjLDEwKTplLl9nZXRSYWRpdXMoKTtmJiYoaC5yYWRpdXM9Zik7dmFyIGc9bmV3IGkoaCkscD1nLmdldERhdGEoYSksdj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpLGQ9di5nZXRDb250ZXh0KFwiMmRcIik7di53aWR0aD1vLndpZHRoLHYuaGVpZ2h0PW8uaGVpZ2h0LGQucHV0SW1hZ2VEYXRhKHAsMCwwKTt2YXIgeD1uLmFkZFNoYXBlKFwiSW1hZ2VcIix7YXR0cnM6b30pO3guYXR0cihcImltZ1wiLHYpfX19KSx0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDI0KSxhPW4oOTcpLHM9XCJfb3JpZ2luXCIsbz1mdW5jdGlvbiB1KHQpe3Uuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O28uQVRUUlM9e2FkanVzdHM6bnVsbCxmcmFtZXM6bnVsbH0sci5leHRlbmQobyxpLkludGVydmFsKSxyLm1peGluKG8sW2FdKSxyLmF1Z21lbnQobyx7cHJvY2Vzc0ZyYW1lczpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldENvb3JkKCksbj1lLnR5cGU7aWYoXCJ0aGV0YVwiPT09bnx8XCJwb2xhclwiPT09biYmZS5pc1RyYW5zcG9zZWQmJlwiU3RhY2tcIj09PXRoaXMuYWRqdXN0cyl7dmFyIGk9W10sYT10aGlzLmdldFlEaW0oKTtyZXR1cm4gci5lYWNoKHQsZnVuY3Rpb24odCl7dmFyIGU9dC5jb2xBcnJheShzKTtlWzBdW2FdPjAmJmkucHVzaCh0KX0pLGl9cmV0dXJuIHR9fSksdC5leHBvcnRzPW99LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigyNCksYT1uKDk3KSxzPWZ1bmN0aW9uIG8odCl7by5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07cy5BVFRSUz17YWRqdXN0czpudWxsLGZyYW1lczpudWxsfSxyLmV4dGVuZChzLGkuU2NoZW1hKSxyLm1peGluKHMsW2FdKSx0LmV4cG9ydHM9c30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCxlKXtpZighdClyZXR1cm4hMDtpZih0Lmxlbmd0aCE9PWUubGVuZ3RoKXJldHVybiEwO3ZhciBuPSExO3JldHVybiBhLmVhY2goZSxmdW5jdGlvbihlLHIpe2lmKGUhPT10W3JdKXJldHVybiBuPSEwLCExfSksbn1mdW5jdGlvbiBpKHQsZSl7Zm9yKHZhciBuPXQueCxyPXQueSxpPW5bMF0sYT1yWzBdLHM9blswXSxvPXJbMF0sdT0wO3U8bi5sZW5ndGg7dSsrKXt2YXIgYz1uW3VdLGw9clt1XTtjPD1pJiYoaT1jKSxjPj1zJiYocz1jKSxsPD1hJiYoYT1sKSxsPj1vJiYobz1sKX12YXIgaD1lLng+PWkmJmUueDw9cyYmZS55Pj1hJiZlLnk8PW87cmV0dXJuIGh9dmFyIGE9bigxKSxzPW4oMiksbz1NYXRoLmFicyx1PWZ1bmN0aW9uKCl7fTt1LkFUVFJTPXtsb2NhbFJlZnJlc2g6ITEsYWxsb3dBY3RpdmVTaGFwZTohMCxzbmFwQWxsOiEwLHNuYXBEaXN0YW5jZToxMH0sYS5hdWdtZW50KHUse2lzQWxsb3dBY3RpdmVTaGFwZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwidHlwZVwiKTtyZXR1cm5cImNvbnRvdXJcIiE9PXQmJlwicGF0aFwiIT09dCYmdGhpcy5nZXQoXCJhbGxvd0FjdGl2ZVNoYXBlXCIpfSxpc1NuYXBBbGw6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcInR5cGVcIik7cmV0dXJuXCJpbnRlcnZhbFwiIT09dCYmXCJzY2hlbWFcIiE9PXQmJnRoaXMuZ2V0KFwic25hcEFsbFwiKX0sc2V0QWN0aXZlQnlQb2ludDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXQoXCJjb29yZFwiKSxpPW51bGw7aWYoIWUuaXNBbGxvd0FjdGl2ZVNoYXBlKCkpcmV0dXJuW107aWYoZS5pc1NoYXJlVG9vbHRpcCgpKWk9ZS5fZ2V0U2hhcmVkU2hhcGVzKHQsbik7ZWxzZXtpPVtdO3ZhciBhPWUuZ2V0U2luZ2xlU2hhcGUodCk7YSYmaS5wdXNoKGEpfXZhciBzPWUuZ2V0KFwicHJlU2hhcGVzXCIpO3JldHVybiByKHMsaSkmJmUuc2V0U2hhcGVzQWN0aXZlKGkpLGUuc2V0KFwicHJlU2hhcGVzXCIsaSksaX0sX2dldFNoYXJlZFNoYXBlczpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXQoXCJncm91cFwiKSxyPVtdO2lmKG4pe3ZhciBpPWUuZ2V0WERpbSgpLHM9bi5nZXQoXCJjaGlsZHJlblwiKTthLmVhY2gocyxmdW5jdGlvbihlKXt2YXIgbj1lLmdldChcIm9yaWdpblwiKTtuJiZuLl9vcmlnaW5baV09PT10Ll9vcmlnaW5baV0mJnIucHVzaChlKX0pfXJldHVybiByfSxnZXRTaW5nbGVTaGFwZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49bnVsbDtpZihcImNvbnRvdXJcIj09PWUuZ2V0KFwidHlwZVwiKSl7dmFyIHI9cy5mb3JjZU1lcmdlLmFwcGx5KG51bGwsZS5nZXQoXCJmcmFtZXNcIikpLGk9ZS5maW5kUG9pbnQodCxyKTtyZXR1cm4gbj17b3JpZ2luOmksZ2V0OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzW3RdfX19dmFyIG89ZS5nZXQoXCJncm91cFwiKSx1PWUuZ2V0KFwiY29vcmRcIiksYz1vLmdldChcImNhbnZhc1wiKSxsPWMuZ2V0KFwicGl4ZWxSYXRpb1wiKTtpZihvKXt2YXIgaD1vLmdldChcImNoaWxkcmVuXCIpLGY9W107aC5sZW5ndGg+MzA/YS5lYWNoKGgsZnVuY3Rpb24obil7dmFyIHI9bi5nZXQoXCJvcmlnaW5cIik7ciYmZS5pc1NuYXBQb2ludCh0LHIsdSkmJmYucHVzaChuKX0pOmY9aDtmb3IodmFyIGc9Zi5sZW5ndGgtMTtnPj0wO2ctLSl7dmFyIHA9ZltnXTtpZihwLmdldChcIm9yaWdpblwiKSYmcC5pc0hpdCh0LngqbCx0LnkqbCkpe249cDticmVha319fXJldHVybiBufSxfaXNTbmFwUG9pbnRPZlBvbHlnb246ZnVuY3Rpb24odCxlLG4pe3ZhciByLHM9dGhpcyx1PXMuZ2V0KFwic25hcERpc3RhbmNlXCIpLGM9cy5nZXRYU2NhbGUoKSxsPXMuZ2V0WVNjYWxlKCksaD1uLmludmVydCh0KTtpZihhLmlzQXJyYXkoZS54KSYmYS5pc0FycmF5KGUueSkpcj1pKGUsdCk7ZWxzZXt2YXIgZj1uLnRyYW5zKGUueCxlLnksMSksZz0hMSxwPSExO2c9Yy5pc0NhdGVnb3J5P2MudHJhbnNsYXRlKGMuaW52ZXJ0KGgueCkpPT09ZVtjLmRpbV06byhmLngtdC54KTx1LHA9bCYmbC5pc0NhdGVnb3J5P2wudHJhbnNsYXRlKGwuaW52ZXJ0KGgueSkpPT09ZVtsLmRpbV06byhmLnktdC55KTx1LHI9ZyYmcH1yZXR1cm4gcn0saXNTbmFwUG9pbnQ6ZnVuY3Rpb24odCxlLG4pe3ZhciByPXRoaXMsaT10aGlzLmdldChcInNuYXBEaXN0YW5jZVwiKSxhPSExO2lmKFwicG9seWdvblwiPT09ci5nZXQoXCJ0eXBlXCIpKWE9ci5faXNTbmFwUG9pbnRPZlBvbHlnb24odCxlLG4pO2Vsc2UgaWYodGhpcy5pc1NuYXBBbGwoKSl7dmFyIHM9bi50cmFucyhlLngsZS55LDEpO2E9byhzLngtdC54KTxpJiZvKHMueS10LnkpPGl9ZWxzZXt2YXIgdT1uLmludmVydCh0KSxjPXIuZ2V0WFNjYWxlKCksbD1jLmRpbSxoPWMudHJhbnNsYXRlKGMuaW52ZXJ0KHUueCkpO2k9ci5nZXRYRGlzdGFuY2UoKSxhPW8oaC1lW2xdKTxpfXJldHVybiBhfSxzZXRTaGFwZXNBY3RpdmU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztpZihlLmlzQWxsb3dBY3RpdmVTaGFwZSgpKXt2YXIgbj1lLmdldChcImNvb3JkXCIpLHI9ZS5nZXQoXCJhY3RpdmVHcm91cFwiKSxpPWUuZ2V0KFwiY2hhcnRcIikscz1pLmdldChcImZyb250Q2FudmFzXCIpO3I/ci5jbGVhcigpOihyPXMuYWRkR3JvdXAoKSxlLnNldChcImFjdGl2ZUdyb3VwXCIscikpLHIuc2V0TWF0cml4KG4uZ2V0KFwibWF0cml4XCIpLmNsb25lKCkpLGEuZWFjaCh0LGZ1bmN0aW9uKHQpe2UuX2FjdGl2ZVNoYXBlKHQscil9KSxlLnNldChcImFjdGl2ZVNoYXBlc1wiLHQpLHMuc29ydCgpfX0sX2FjdGl2ZVNoYXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPXQuZ2V0KFwidHlwZVwiKSxpPXQuZ2V0KFwib3JpZ2luXCIpLHM9aS5zaGFwZXx8bi5nZXREZWZhdWx0VmFsdWUoXCJzaGFwZVwiKSxvPW4uZ2V0KFwiZ2VvbVNoYXBlXCIpLHU9by5nZXRBY3RpdmVDZmcocyxpKSxjPWEubWl4KHt9LHQuX19hdHRycyx1LHtmaWxsOlwid2hpdGVcIixmaWxsT3BhY2l0eTouMTV9KSxsPWUuYWRkU2hhcGUocix7YXR0cnM6Y30pO2wuc2V0TWF0cml4KHQuZ2V0TWF0cml4KCkpLGwuc2V0KFwib3JpZ2luXCIsaSl9LGNsZWFyU2hhcGVBY3RpdmVkOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwiYWN0aXZlR3JvdXBcIik7ZSYmZS5jbGVhcigpLHQuc2V0KFwiYWN0aXZlU2hhcGVzXCIsbnVsbCl9fSksdC5leHBvcnRzPXV9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3JldHVybiB0LmJpbldpZHRofHx0LmJhbmRXaWR0aH12YXIgaT1uKDEpLGE9bigyKSxzPW4oMTA0KSxvPVtcInNpemVcIixcInNoYXBlXCIsXCJjb2xvclwiXSx1PVwiX29yaWdpblwiLGM9W1wiRG9kZ2VcIixcIkppdHRlclwiLFwiU3RhY2tcIixcIlN5bW1ldHJpY1wiXSxsPWZ1bmN0aW9uKCl7fTtsLkFUVFJTPXthZGp1c3RzOm51bGx9LGkuYXVnbWVudChsLHtfZ2V0U2NhbGU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0KFwic2NhbGVzXCIpLHI9bnVsbDtyZXR1cm4gaS5lYWNoKG4sZnVuY3Rpb24oZSl7aWYoZS5kaW09PT10KXJldHVybiByPWUsITF9KSxyfSxfZ2V0R3JvdXBTY2FsZXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9W107cmV0dXJuIGkuZWFjaChvLGZ1bmN0aW9uKG4pe3ZhciByPXQuZ2V0QXR0cihuKTtpZihyKXt2YXIgYT1yLnNjYWxlcztpLmVhY2goYSxmdW5jdGlvbih0KXt0LmlzQ2F0ZWdvcnkmJmkuaW5kZXhPZihlLHQpPT09LTEmJmUucHVzaCh0KX0pfX0pLGV9LF9zYXZlT3JpZ2luRGF0YTpmdW5jdGlvbih0KXtyZXR1cm4gaS5lYWNoKHQsZnVuY3Rpb24odCl7dmFyIGU9dC50b0pTT04oKTt0LmFkZENvbCh1LGUpfSksdH0sX3NldFN0YXRSYW5nZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49dC5nZXREaW1zKCkscj1bXTtpLmVhY2gobixmdW5jdGlvbihuKXt2YXIgaT1lLl9nZXRTY2FsZShuKTtpLmlzQ2F0ZWdvcnl8fFwiaWRlbnRpdHlcIj09PWkudHlwZXx8KGlzTmFOKGkubWluKXx8aXNOYU4oaS5tYXgpfHx0LnNldFJhbmdlKG4se21pbjppLm1pbixtYXg6aS5tYXh9KSxcImJpblwiPT09dC50eXBlJiZyLnB1c2gobikpfSksci5sZW5ndGgmJih0LmJpbkRpbXM9cil9LF9nZXRCaW5TdGF0OmZ1bmN0aW9uKHQpe3ZhciBlPW51bGw7aWYocih0KSllPXQ7ZWxzZSBpZih0LnN0YXQpe2Zvcih2YXIgbj10LnN0YXQ7biYmIXIobik7KW49bi5zdGF0O24mJnIobikmJihlPW4pfXJldHVybiBlfSxfZXhlY1N0YXQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5fZ2V0QmluU3RhdCh0KTtyZXR1cm4gciYmbi5fc2V0U3RhdFJhbmdlKHIpLCh0LmlzUmVncmVzc2lvbnx8dC5zZXRSYW5nZSkmJm4uX3NldFN0YXRSYW5nZSh0KSx0LmV4ZWMoZSl9LF9leGVjU3RhdHM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPXQ7aWYoaS5pc051bGwodCl8fHQmJjA9PT10Lmxlbmd0aClyZXR1cm4gbjt2YXIgcj1lLmdldChcImF0dHJzXCIpLHM9ZS5nZXRBdHRyKFwicG9zaXRpb25cIiksbz1zLnN0YXQsdT1bXTtpLmVhY2gocixmdW5jdGlvbih0KXtcInBvc2l0aW9uXCIhPT10LnR5cGUmJnQuc3RhdCYmdS5wdXNoKHQuc3RhdCl9KSxvJiYobj1lLl9leGVjU3RhdChvLG4pKTt2YXIgYz1lLmdldChcImxhYmVsQ2ZnXCIpO2lmKGMmJmMuc3RhdCYmKG49ZS5fZXhlY1N0YXQoYy5zdGF0LG4pKSx1Lmxlbmd0aCl7dmFyIGw9W10saD1zLmdldERpbXMoKTtpLmVhY2gobixmdW5jdGlvbih0KXtsPWwuY29uY2F0KGEuZ3JvdXAodCxoKSl9KSxuPWwsaS5lYWNoKHUsZnVuY3Rpb24odCl7bj1lLl9leGVjU3RhdCh0LG4pfSksbj1bYS5tZXJnZS5hcHBseSh0aGlzLG4pXX1yZXR1cm4gbn0sX2dldEdyb3VwRGltczpmdW5jdGlvbigpe3ZhciB0PVtdLGU9dGhpcy5fZ2V0R3JvdXBTY2FsZXMoKTtyZXR1cm4gaS5lYWNoKGUsZnVuY3Rpb24oZSl7dC5wdXNoKGUuZGltKX0pLHR9LF9ncm91cEZyYW1lczpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9nZXRHcm91cERpbXMoKTtyZXR1cm4gYS5ncm91cCh0LGUpfSxfZmlsdGVyTnVsbFZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0WERpbSgpO3JldHVybiBhLmZpbHRlcih0LGZ1bmN0aW9uKHQpe3JldHVybiBpLmlzQXJyYXkodFtlXSl8fCFpLmlzTnVsbCh0W2VdKX0pfSxfY3JlYXRlRnJhbWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0KFwic2NhbGVzXCIpLHI9W10scz1bXTtpLmVhY2gobixmdW5jdGlvbihlKXt2YXIgbj1lLmRpbTtyLnB1c2gobik7dmFyIGk7aWYodC5jb250YWlucyhuKSlpPXQuY29sQXJyYXkobik7ZWxzZXt2YXIgbz1lLnZhbHVlfHwwO2k9YS5BcnJheS5yZXBlYXQobyx0LnJvd0NvdW50KCkpfXMucHVzaChpKX0pO3ZhciBvPW5ldyBhKHMse25hbWVzOnJ9KTtyZXR1cm4gb30scHJvY2Vzc0RhdGE6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fY3JlYXRlRnJhbWUodCk7cmV0dXJuIGU9dGhpcy5fZmlsdGVyTnVsbFZhbHVlKGUpLHQ9dGhpcy5fZ3JvdXBGcmFtZXMoZSksdD10aGlzLl9leGVjU3RhdHModCksdD10aGlzLl9zYXZlT3JpZ2luRGF0YSh0KX0sbnVtYmVyaWNGcmFtZXM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0KFwic2NhbGVzXCIpO3JldHVybiBpLmVhY2godCxmdW5jdGlvbih0KXtpLmVhY2gobixmdW5jdGlvbihlKXt2YXIgbj1lLmRpbTtpZihlLmlzQ2F0ZWdvcnl8fFwidGltZVwiPT09ZS50eXBlKXt2YXIgcj10LmNvbEFycmF5KG4pO2kuZWFjaChyLGZ1bmN0aW9uKHQsbil7cltuXT1lLnRyYW5zbGF0ZSh0KX0pLHQuY29sUmVwbGFjZShuLHIpfX0pfSksdH0sX3BhZGRpbmdOdWxsVmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0WERpbSgpLHI9ZS5nZXRZRGltKCkscz1hLm1lcmdlLmFwcGx5KG51bGwsdCksbz1hLnZhbHVlcyhzLG4pO2kuZWFjaCh0LGZ1bmN0aW9uKHQpe2lmKHQucm93Q291bnQoKTxvLmxlbmd0aCl7dmFyIGU9e30sYT10LnJvd09iamVjdCgwKSxzPXQuY29sQXJyYXkobik7aS5lYWNoKHMsZnVuY3Rpb24odCl7ZVt0XT0hMH0pO3ZhciB1PSEwO2kuZWFjaChvLGZ1bmN0aW9uKHMpe2lmKGVbc10pdT0hMDtlbHNlIGlmKHU9PT0hMCl7dmFyIG89aS5taXgoe30sYSk7b1tuXT1zLG9bcl09bnVsbDt2YXIgYz17fTtjW25dPXMsb1tyXT1udWxsLG8uX29yaWdpbj1jLHQuYWRkUm93KG8pLHU9ITF9fSl9fSl9LHByb2Nlc3NBZGp1c3Q6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0KFwiYWRqdXN0c1wiKTtyZXR1cm4gaS5pc051bGwobil8fGkuZWFjaChuLGZ1bmN0aW9uKG4pe2lmKCFpLmluQXJyYXkoYyxuKSl0aHJvdyBuZXcgRXJyb3IoaS51Y2ZpcnN0KG4pK1wiIGlzIG5vdCBzdXBwb3J0ZWQsIHBsZWFzZSB1c2UgXCIrYy50b1N0cmluZygpKTt2YXIgcj17fSxhPWUuZ2V0WVNjYWxlKCksbz1lLmdldFhTY2FsZSgpO2lmKFwiRG9kZ2VcIj09PW4pe3ZhciB1PVtdO2lmKG8uaXNDYXRlZ29yeSl1LnB1c2goXCJ4XCIpO2Vsc2V7aWYoYSl0aHJvdyBuZXcgRXJyb3IoXCJkb2RnZSBpcyBub3Qgc3VwcG9ydCBsaW5lYXIgYXR0cmlidXRlLCBwbGVhc2UgdXNlIGNhdGVnb3J5IGF0dHJpYnV0ZSFcIik7dS5wdXNoKFwieVwiKX12YXIgbD1lLl9nZXRHcm91cERpbXMoKTtyPXt4RGltOmUuZ2V0WERpbSgpLHlEaW06YT9hLmRpbTpudWxsLGFkanVzdE5hbWVzOnUsZ3JvdXBEaW1zOmx9LGUuaXNJbkNpcmNsZSgpJiYoci5kb2RnZVJhdGlvPTEsci5tYXJnaW5SYXRpbz0wKX1lbHNlIGlmKFwiU3RhY2tcIj09PW4pe3ZhciBoPWUuZ2V0RGVmYXVsdFZhbHVlKFwic2l6ZVwiKXx8MztpZihyPXt4RGltOmUuZ2V0WERpbSgpLHNpemU6aH0sXCJhcmVhXCI9PT1lLmdldChcInR5cGVcIikmJmUuX3BhZGRpbmdOdWxsVmFsdWUodCksYSYmXCIuLnlcIiE9PWEuZGltKXIueURpbT1lLmdldFlEaW0oKTtlbHNle3ZhciBmPWUuZ2V0KFwiY29vcmRcIik7ci5oZWlnaHQ9Zi5nZXRIZWlnaHQoKX19ZWxzZSByPXt4RGltOmUuZ2V0WERpbSgpLHlEaW06ZS5nZXRZRGltKCl9O3ZhciBnPW5ldyBzW25dKHIpO1wiU3RhY2tcIj09PW4mJmEmJlwiLi55XCI9PT1hLmRpbT8oZy55RGltPVwiLi55XCIsdD1nLnByb2Nlc3NPbmVEaW1TdGFjayh0KSk6dD1nLnByb2Nlc3NBZGp1c3QodCl9KSx0fX0pLHQuZXhwb3J0cz1sfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPXIuTWF0cml4VXRpbCxhPWZ1bmN0aW9uKCl7fTthLkFUVFJTPXthbGxvd1NlbGVjdGVkOiExfSxyLmF1Z21lbnQoYSx7YWxsb3dTZWxlY3RlZDpmdW5jdGlvbiBzKCl7dmFyIHQ9dGhpcy5nZXQoXCJ0eXBlXCIpLGU9dGhpcy5nZXQoXCJjb29yZFwiKSxuPWUmJmUudHlwZSxzPXRoaXMuZ2V0KFwiYWxsb3dTZWxlY3RlZFwiKTtyZXR1cm5cImludGVydmFsXCI9PT10JiZcInRoZXRhXCI9PT1uJiYocz0hMCksc30sZ2V0U2VsZWN0U2hhcGVzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwiY29udGFpbmVyXCIpLG49W10saT1lLmdldChcImNoaWxkcmVuXCIpO3JldHVybiByLmVhY2goaSxmdW5jdGlvbih0KXt2YXIgZT10LmdldChcImNoaWxkcmVuXCIpO3IuZWFjaChlLGZ1bmN0aW9uKHQpe3QuZ2V0KFwib3JpZ2luXCIpJiZuLnB1c2godCl9KX0pLG59LGdldERhdGE6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXRTZWxlY3RTaGFwZXMoKSxuPVtdO3JldHVybiByLmVhY2goZSxmdW5jdGlvbih0KXt2YXIgZT10LmdldChcIm9yaWdpblwiKTtlJiZuLnB1c2goZSl9KSxufSxnZXRTaGFwZUJ5T2JqOmZ1bmN0aW9uKHQsZSl7dmFyIG49bnVsbDtyZXR1cm4gdCYmci5lYWNoKGUsZnVuY3Rpb24oZSl7aWYoZS5nZXQoXCJvcmlnaW5cIik9PT10KXJldHVybiBuPWUsITF9KSxufSxnZXRTZWxlY3RlZFNoYXBlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7dD10fHxlLmdldFNlbGVjdFNoYXBlcygpO3ZhciBuPW51bGw7cmV0dXJuIHIuZWFjaCh0LGZ1bmN0aW9uKHQpe2lmKHQuZ2V0KFwic2VsZWN0ZWRcIikpcmV0dXJuIG49dCwhMX0pLG59LHNldFNoYXBlU2VsZWN0ZWQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3Quc2V0KFwic2VsZWN0ZWRcIixlKSxuLnNldFNlbGVjdGVkU3RhdHVzKHQsZSl9LHNldFNlbGVjdGVkU3RhdHVzOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxpPW4uZ2V0KFwiYWN0aXZlR3JvdXBcIiksYT17fTtpZihlKXt2YXIgcz10LmdldChcIm9yaWdpblwiKSxvPW4uZ2V0KFwiZ2VvbVNoYXBlXCIpLHU9cy5zaGFwZXx8bi5nZXREZWZhdWx0VmFsdWUoXCJzaGFwZVwiKSxjPXtnZW9tOm4sY29vcmQ6dC5nZXQoXCJwYXJlbnRcIikuZ2V0KFwiY29vcmRcIikscG9pbnQ6c30sbD1vLmdldFNlbGVjdGVkQ2ZnKHUsYyk7dC5nZXQoXCJvcmlnaW5TZWxlY3RDZmdcIik/YT10LmdldChcIm9yaWdpblNlbGVjdENmZ1wiKTooci5lYWNoKGwsZnVuY3Rpb24oZSxuKXtpZihcInRyYW5zZm9ybVwiPT09bnx8XCJtYXRyaXhcIj09PW4pYS5tYXRyaXg9dC5nZXRNYXRyaXgoKS5jbG9uZSgpO2Vsc2V7dmFyIHI9dC5hdHRyKG4pO3IhPT1lJiYoYVtuXT1yKX19KSx0LnNldChcIm9yaWdpblNlbGVjdENmZ1wiLGEpKSxsPXRoaXMucGFyc2VDZmcoYS5tYXRyaXgsbCksdC5hbmltYXRlKGwsMzAwKX1lbHNlIGE9dC5nZXQoXCJvcmlnaW5TZWxlY3RDZmdcIiksdC5hbmltYXRlKGEsMzAwKTtuLmNsZWFyU2hhcGVBY3RpdmVkKCksaSYmaS5nZXQoXCJjYW52YXNcIikuZHJhdygpfSxwYXJzZUNmZzpmdW5jdGlvbih0LGUpe3JldHVybiBlLnRyYW5zZm9ybSYmKGUubWF0cml4PWkudHJhbnNmb3JtKHQsZS50cmFuc2Zvcm0pLGRlbGV0ZSBlLnRyYW5zZm9ybSksZX0sc2V0U2VsZWN0ZWQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0KFwiY2hhcnRcIikscj1lLmdldFNlbGVjdFNoYXBlcygpLGk9ZS5nZXRTZWxlY3RlZFNoYXBlKHIpLGE9ZS5nZXRTaGFwZUJ5T2JqKHQscik7aSE9PWEmJihpJiYoZS5zZXRTaGFwZVNlbGVjdGVkKGksITEpLG4uZmlyZShcIml0ZW11bnNlbGVjdGVkXCIse3NoYXBlOmksZGF0YTppLmdldChcIm9yaWdpblwiKSx2aWV3OmUsZ2VvbTplfSkpLGEmJihlLnNldFNoYXBlU2VsZWN0ZWQoYSwhMCksbi5maXJlKFwiaXRlbXNlbGVjdGVkXCIse3NoYXBlOmEsZGF0YTp0LHZpZXc6ZSxnZW9tOmV9KSksbi5maXJlKFwiaXRlbXNlbGVjdGVkY2hhbmdlXCIse3NoYXBlOmEsZGF0YTp0LHZpZXc6ZSxnZW9tOmUscHJlU2hhcGU6aSxwcmVEYXRhOmk/aS5nZXQoXCJvcmlnaW5cIik6bnVsbH0pKX0sZ2V0U2VsZWN0ZWQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXRTZWxlY3RlZFNoYXBlKG51bGwpLG49bnVsbDtyZXR1cm4gZSYmKG49ZS5nZXQoXCJvcmlnaW5cIikpLG59LGNsZWFyU2VsZWN0ZWQ6ZnVuY3Rpb24oKXt0aGlzLnNldFNlbGVjdGVkKG51bGwpfX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyZXR1cm4gdC5hbGlhc3x8dC5kaW19dmFyIGk9bigxKSxhPW4oNSkscz1cIl9vcmlnaW5cIixvPWZ1bmN0aW9uKCl7fTtvLkFUVFJTPXt0b29sdGlwTWFwOnt9LHRvb2x0aXBEaW1zOm51bGwsc2hhcmVUb29sdGlwOiEwfSxpLmF1Z21lbnQobyx7X3NuYXBFcXVhbDpmdW5jdGlvbih0LGUsbil7dmFyIHI7cmV0dXJuIHQ9bi50cmFuc2xhdGUodCksZT1uLnRyYW5zbGF0ZShlKSxyPW4uaXNDYXRlZ29yeT90PT09ZTpNYXRoLmFicyh0LWUpPD0uMDAxfSxfZ2V0U2NhbGVWYWx1ZUJ5UG9pbnQ6ZnVuY3Rpb24odCl7dmFyIGU9MCxuPXRoaXMuZ2V0KFwiY29vcmRcIikscj10aGlzLmdldFhTY2FsZSgpLGk9bi5pbnZlcnQodCksYT1pLng7cmV0dXJuIHRoaXMuaXNJbkNpcmNsZSgpJiZhPigxK3IucmFuZ2VNYXgoKSkvMiYmKGE9ci5yYW5nZU1pbigpKSxlPXIuaW52ZXJ0KGEpLHIuaXNDYXRlZ29yeSYmKGU9ci50cmFuc2xhdGUoZSkpLGV9LF9nZXRUaXBNYXBTY2FsZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldChcInRvb2x0aXBNYXBcIiksbj1lJiZlW3RdO3JldHVybiB0aGlzLl9nZXRTY2FsZShuKX0sX2dldFRpcFZhbHVlU2NhbGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9nZXRUaXBNYXBTY2FsZShcInZhbHVlXCIpO2lmKCF0KXt2YXIgZT10aGlzLmdldExlZ2VuZEF0dHIoKTtpLmVhY2goZSxmdW5jdGlvbihlKXt2YXIgbj1lLmdldFNjYWxlKGUudHlwZSk7aWYobi5pc0xpbmVhcilyZXR1cm4gdD1uLCExfSl9dmFyIG49dGhpcy5nZXRYU2NhbGUoKSxyPXRoaXMuZ2V0WVNjYWxlKCk7cmV0dXJuIXQmJnImJlwiLi55XCI9PT1yLmRpbT9uOnR8fHJ8fG59LF9nZXRUaXBUaXRsZVNjYWxlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuX2dldFRpcE1hcFNjYWxlKFwidGl0bGVcIik7aWYoIWUpe3ZhciBuLHI9dC5nZXRBdHRyKFwicG9zaXRpb25cIiksYT1yLmdldERpbXMoKTtpLmVhY2goYSxmdW5jdGlvbih0KXtpZih0LmluZGV4T2YoXCIuLlwiKT09PS0xKXJldHVybiBuPXQsITF9KSxlPXQuX2dldFNjYWxlKG4pfXJldHVybiBlfSxmaW5kUG9pbnQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bnVsbCxhPWUudG9KU09OKCksbz1uLmdldFhTY2FsZSgpLHU9by5kaW0sYz1uLmdldChcInR5cGVcIik7aWYoXCJoZWF0bWFwXCI9PT1jfHxcImNvbnRvdXJcIj09PWN8fFwicG9pbnRcIj09PWMpe3ZhciBsLGg9bi5nZXQoXCJjb29yZFwiKSxmPWguaW52ZXJ0KHQpLGc9bi5nZXRZU2NhbGUoKSxwPWcuZGltLHY9by5pbnZlcnQoZi54KSxkPWcuaW52ZXJ0KGYueSkseD17fTtpLmVhY2goYSxmdW5jdGlvbih0KXt2YXIgZT0odC5fb3JpZ2luW3VdLXYpKih0Ll9vcmlnaW5bdV0tdikrKHQuX29yaWdpbltwXS1kKSoodC5fb3JpZ2luW3BdLWQpOyghbHx8ZTxsKSYmKGw9ZSx4PXQpfSkscj14fWVsc2V7dmFyIG09YVswXSx5PWFbYS5sZW5ndGgtMV07aWYoIW0pcmV0dXJuIHI7dmFyIF89bi5fZ2V0U2NhbGVWYWx1ZUJ5UG9pbnQodCksUz1tW3NdW3VdLHc9eVtzXVt1XTtpZihpLmlzQXJyYXkoUykpaS5lYWNoKGEsZnVuY3Rpb24odCl7dmFyIGU9dFtzXTtpZihvLnRyYW5zbGF0ZShlW3VdWzBdKTw9XyYmby50cmFuc2xhdGUoZVt1XVsxXSk+PV8pcmV0dXJuIHI9dCwhMX0pO2Vsc2V7aWYoaS5pc051bWJlcihfKSYmKF8+by50cmFuc2xhdGUodyl8fF88by50cmFuc2xhdGUoUykpKXJldHVybiBudWxsO3ZhciBiO2kuZWFjaChhLGZ1bmN0aW9uKHQsZSl7dmFyIGM9dFtzXTtyZXR1cm4gbi5fc25hcEVxdWFsKGNbdV0sXyxvKT8ocj10LCExKTp2b2lkKGkuaXNOdW1iZXIoXykmJm8udHJhbnNsYXRlKGNbdV0pPD1fJiYoeT10LFxuYj1hW2UrMV0pKX0pLHkmJmImJk1hdGguYWJzKG8udHJhbnNsYXRlKHlbc11bdV0pLV8pPk1hdGguYWJzKG8udHJhbnNsYXRlKGJbc11bdV0pLV8pJiYoeT1iKX12YXIgTT1uLmdldFhEaXN0YW5jZSgpOyFyJiZNYXRoLmFicyhvLnRyYW5zbGF0ZSh5W3NdW3VdKS1fKTxNLzImJihyPXkpfXJldHVybiByfSxnZXRUaXBUaXRsZTpmdW5jdGlvbih0KXt2YXIgZSxuPVwiXCIscj10aGlzLmdldChcInRvb2x0aXBNYXBcIiksaT1yLnRpdGxlO2lmKGkpe2lmKGU9dGhpcy5fZ2V0U2NhbGUoaSksIWUpcmV0dXJuIGl9ZWxzZSBlPXRoaXMuX2dldFRpcFRpdGxlU2NhbGUoKTtpZihlKXt2YXIgYT10W2UuZGltXTtuPWUuZ2V0VGV4dChhKX1lbHNlIGlmKFwiaGVhdG1hcFwiPT09dGhpcy5nZXQoXCJ0eXBlXCIpKXt2YXIgcz10aGlzLmdldFhTY2FsZSgpLG89dGhpcy5nZXRZU2NhbGUoKSx1PXMuZ2V0VGV4dCh0W3MuZGltXSksYz1vLmdldFRleHQodFtvLmRpbV0pO249XCIoIFwiK3UrXCIsIFwiK2MrXCIgKVwifXJldHVybiBufSxnZXRUaXBWYWx1ZTpmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMscj1uLl9nZXRUaXBWYWx1ZVNjYWxlKCksYT1yLmRpbTtpZihlPXRbYV0saS5pc0FycmF5KGUpKXt2YXIgcz1bXTtpLmVhY2goZSxmdW5jdGlvbih0KXtzLnB1c2goci5nZXRUZXh0KHQpKX0pLGU9cy5qb2luKFwiLVwiKX1lbHNlIGU9ci5nZXRUZXh0KGUpO3JldHVybiBlfSxnZXRUaXBOYW1lOmZ1bmN0aW9uKHQpe3ZhciBlLG4sYT10aGlzLmdldChcInRvb2x0aXBNYXBcIikscz1hLm5hbWU7aWYocyYmKG49dGhpcy5fZ2V0U2NhbGUocyksIW4pKXJldHVybiBzO3ZhciBvPXRoaXMuX2dldEdyb3VwU2NhbGVzKCk7aWYoIW4mJm8ubGVuZ3RoJiZpLmVhY2gobyxmdW5jdGlvbih0KXtyZXR1cm4gbj10LCExfSksbil7dmFyIHU9bi5kaW07ZT1uLmdldFRleHQodFt1XSl9ZWxzZXt2YXIgYz10aGlzLl9nZXRUaXBWYWx1ZVNjYWxlKCk7ZT1yKGMpfXJldHVybiBlfSxnZXRUaXBJdGVtczpmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4oZSxuKXtpLmlzTnVsbChuKXx8XCJcIj09PW58fGcucHVzaCh7dGl0bGU6aCxwb2ludDp0LG5hbWU6ZXx8aCx2YWx1ZTpuLGNvbG9yOnQuY29sb3J8fGEuZGVmYXVsdENvbG9yLG1hcmtlcjohMH0pfXZhciBvPXRoaXMsdT10W3NdO2UmJm8uc2V0KFwidG9vbHRpcE1hcFwiLGUpO3ZhciBjLGwsaD1vLmdldFRpcFRpdGxlKHUpLGY9by5nZXQoXCJ0b29sdGlwRGltc1wiKSxnPVtdO3JldHVybiBmP2kuZWFjaChmLGZ1bmN0aW9uKHQpe3ZhciBlPW8uX2dldFNjYWxlKHQpO2M9cihlKSxsPWUuZ2V0VGV4dCh1W3RdKSxuKGMsbCl9KToobD1vLmdldFRpcFZhbHVlKHUpLGM9by5nZXRUaXBOYW1lKHUpLG4oYyxsKSksZ30saXNTaGFyZVRvb2x0aXA6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcInNoYXJlVG9vbHRpcFwiKSxlPXRoaXMuZ2V0KFwidHlwZVwiKTtpZihcImludGVydmFsXCI9PT1lKXt2YXIgbj10aGlzLmdldChcImNvb3JkXCIpLHI9bi50eXBlOyhcInRoZXRhXCI9PT1yfHxcInBvbGFyXCI9PT1yJiZuLmlzVHJhbnNwb3NlZCkmJih0PSExKX1lbHNlIHRoaXMuZ2V0WVNjYWxlKCkmJiFpLmluQXJyYXkoW1wiY29udG91clwiLFwicG9pbnRcIixcInBvbHlnb25cIl0sZSl8fCh0PSExKTtyZXR1cm4gdH19KSx0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7dmFyIGU9Zy5zaGFwZS5ob2xsb3dBcmVhLG49bC5taXgoITAse30sZSx7c3Ryb2tlOnQuY29sb3IsbGluZVdpZHRoOnQuc2l6ZSxzdHJva2VPcGFjaXR5OnQub3BhY2l0eX0sdC5zdHlsZSk7cmV0dXJuIG59ZnVuY3Rpb24gaSh0KXt2YXIgZT1nLnNoYXBlLmFyZWEsbj1sLm1peCghMCx7fSxlLHtmaWxsOnQuY29sb3Isc3Ryb2tlOnQuY29sb3IsbGluZVdpZHRoOnQuc2l6ZSxmaWxsT3BhY2l0eTp0Lm9wYWNpdHl9LHQuc3R5bGUpO3JldHVybiBufWZ1bmN0aW9uIGEodCxlKXt2YXIgbj1cIlwiLHI9W10saT1bXSxhPVtdLHM9dC5pc0luQ2lyY2xlO3JldHVybiBsLmVhY2godC5wb2ludHMsZnVuY3Rpb24odCl7aS5wdXNoKHRbMF0pLGEucHVzaCh0WzFdKX0pLGE9YS5yZXZlcnNlKCksci5wdXNoKGksYSksbC5lYWNoKHIsZnVuY3Rpb24odCxyKXt2YXIgaT1cIlwiO2lmKGk9ZT9mLmdldFNwbGluZVBhdGgodCwhMSk6Zi5nZXRMaW5lUGF0aCh0LCExKSxzKXt2YXIgYT10WzBdO2krPWwuc3Vic3RpdHV0ZShcIkwge3h9IHt5fVwiLGEpfWVsc2Ugcj4wJiYoaT1pLnJlcGxhY2UoXCJNXCIsXCJMXCIpKTtuKz1pfSksbis9XCJ6XCJ9ZnVuY3Rpb24gcyh0LGUsbil7cmV0dXJuW1tcIk1cIix0LW4sZStuXSxbXCJMXCIsdC1uLGUtbl0sW1wiTFwiLHQsZV0sW1wiTFwiLHQrbixlLW5dLFtcIkxcIix0K24sZStuXSxbXCJ6XCJdXX1mdW5jdGlvbiBvKHQsZSxuKXtyZXR1cm4gbC5wYXRoMkFic29sdXRlKFtbXCJNXCIsdC1uLGUrbl0sW1wiTFwiLHQtbixlXSxbXCJSXCIsdC1uLzIsZS1uLzIsdCxlLHQrbi8yLGUrbi8yLHQrbixlXSxbXCJMXCIsdCtuLGUrbl0sW1wielwiXV0pfWZ1bmN0aW9uIHUodCxlLG4pe3ZhciBhPW4/cih0KTppKHQpO3JldHVybiBsLm1peCh7c3ltYm9sOmU/bzpzfSxhKX1mdW5jdGlvbiBjKHQpe3JldHVybiB0JiZ0LmluZGV4T2YoXCJsaW5lXCIpIT09LTE/Zy5hY3RpdmVTaGFwZS5ob2xsb3dBcmVhOmcuYWN0aXZlU2hhcGUuYXJlYX12YXIgbD1uKDEpLGg9bigxNSksZj1uKDIwKSxnPW4oNSkscD1bMiwxXSx2PWgucmVnaXN0R2VvbShcImFyZWFcIix7ZGVmYXVsdFNoYXBlVHlwZTpcImFyZWFcIixnZXRBY3RpdmVDZmc6ZnVuY3Rpb24odCl7cmV0dXJuIGModCl9fSk7aC5yZWdpc3RTaGFwZShcImFyZWFcIixcImFyZWFcIix7Z2V0U2hhcGVQb2ludHM6ZnVuY3Rpb24odCl7dmFyIGU9W10sbj10Lngscj10LnksaT10LnkwO3JldHVybiByPWwuaXNBcnJheShyKT9yOltpLHJdLGwuZWFjaChyLGZ1bmN0aW9uKHQpe2UucHVzaCh7eDpuLHk6dH0pfSksZX0sZHJhd1NoYXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG49aSh0KSxyPWEodCwhMSk7cmV0dXJuIHI9dGhpcy5wYXJzZVBhdGgociwhMSksZS5hZGRTaGFwZShcInBhdGhcIix7YXR0cnM6bC5taXgobix7cGF0aDpyfSl9KX0sZ2V0TWFya2VyQ2ZnOmZ1bmN0aW9uKHQpe3JldHVybiB1KHQsITEsITEpfX0pLGgucmVnaXN0U2hhcGUoXCJhcmVhXCIsXCJzbW9vdGhcIix7ZHJhd1NoYXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG49aSh0KSxyPWEodCwhMCk7cmV0dXJuIHI9dGhpcy5wYXJzZVBhdGgociwhMSksZS5hZGRTaGFwZShcInBhdGhcIix7YXR0cnM6bC5taXgobix7cGF0aDpyfSl9KX0sZ2V0TWFya2VyQ2ZnOmZ1bmN0aW9uKHQpe3JldHVybiB1KHQsITAsITEpfX0pLGgucmVnaXN0U2hhcGUoXCJhcmVhXCIsXCJsaW5lXCIse2RyYXdTaGFwZTpmdW5jdGlvbih0LGUpe3ZhciBuPXIodCksaT1hKHQsITEpO3JldHVybiBpPXRoaXMucGFyc2VQYXRoKGksITEpLGUuYWRkU2hhcGUoXCJwYXRoXCIse2F0dHJzOmwubWl4KG4se3BhdGg6aX0pfSl9LGdldE1hcmtlckNmZzpmdW5jdGlvbih0KXtyZXR1cm4gdSh0LCExLCEwKX19KSxoLnJlZ2lzdFNoYXBlKFwiYXJlYVwiLFwiZG90TGluZVwiLHtkcmF3U2hhcGU6ZnVuY3Rpb24odCxlKXt2YXIgbj1yKHQpLGk9YSh0LCExKTtyZXR1cm4gbi5saW5lRGFzaD1wLGk9dGhpcy5wYXJzZVBhdGgoaSksZS5hZGRTaGFwZShcInBhdGhcIix7YXR0cnM6bC5taXgobix7cGF0aDppfSl9KX0sZ2V0TWFya2VyQ2ZnOmZ1bmN0aW9uKHQpe3ZhciBlPXUodCwhMSwhMCk7cmV0dXJuIGUubGluZURhc2g9cCxlfX0pLGgucmVnaXN0U2hhcGUoXCJhcmVhXCIsXCJzbW9vdGhMaW5lXCIse2RyYXdTaGFwZTpmdW5jdGlvbih0LGUpe3ZhciBuPXIodCksaT1hKHQsITApO3JldHVybiBpPXRoaXMucGFyc2VQYXRoKGksITEpLGUuYWRkU2hhcGUoXCJwYXRoXCIse2F0dHJzOmwubWl4KG4se3BhdGg6aX0pfSl9LGdldE1hcmtlckNmZzpmdW5jdGlvbih0KXtyZXR1cm4gdSh0LCEwLCEwKX19KSxoLnJlZ2lzdFNoYXBlKFwiYXJlYVwiLFwiZG90U21vb3RoTGluZVwiLHtkcmF3U2hhcGU6ZnVuY3Rpb24odCxlKXt2YXIgbj1yKHQpLGk9YSh0LCEwKTtyZXR1cm4gbi5saW5lRGFzaD1wLGk9dGhpcy5wYXJzZVBhdGgoaSwhMSksZS5hZGRTaGFwZShcInBhdGhcIix7YXR0cnM6bC5taXgobix7cGF0aDppfSl9KX0sZ2V0TWFya2VyQ2ZnOmZ1bmN0aW9uKHQpe3ZhciBlPXUodCwhMCwhMCk7cmV0dXJuIGUubGluZURhc2g9cCxlfX0pLHYuc3BsaW5lPXYuc21vb3RoLHQuZXhwb3J0cz12fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXt2YXIgZT1jLnNoYXBlLmxpbmUsbj1zLm1peCghMCx7fSxlLHtzdHJva2U6dC5jb2xvcixsaW5lV2lkdGg6dC5zaXplLHN0cm9rZU9wYWNpdHk6dC5vcGFjaXR5LG9wYWNpdHk6dC5vcGFjaXR5fSx0LnN0eWxlKTtyZXR1cm4gbn1mdW5jdGlvbiBpKHQsZSl7dmFyIG49W107bi5wdXNoKHt4OnQueCx5Oi41KnQueSsxKmUueS8yfSksbi5wdXNoKHt5Oi41KnQueSsxKmUueS8yLHg6ZS54fSksbi5wdXNoKGUpO3ZhciByPVtbXCJNXCIsdC54LHQueV1dLGk9W1wiQ1wiXTtyZXR1cm4gcy5lYWNoKG4sZnVuY3Rpb24odCl7aS5wdXNoKHQueCx0LnkpfSksci5wdXNoKGkpLHJ9ZnVuY3Rpb24gYSh0LGUpe3ZhciBuPVtdO24ucHVzaCh7eTp0LnkqKDEtaCkrZS55KmgseDp0Lnh9KSxuLnB1c2goe3k6dC55KigxLWgpK2UueSpoLHg6ZS54fSksbi5wdXNoKGUpO3ZhciByPVtbXCJNXCIsdC54LHQueV1dO3JldHVybiBzLmVhY2gobixmdW5jdGlvbih0KXtyLnB1c2goW1wiTFwiLHQueCx0LnldKX0pLHJ9dmFyIHM9bigxKSxvPW4oMTUpLHU9big1OSksYz1uKDUpLGw9bigyMCksaD0xLzMsZj1vLnJlZ2lzdEdlb20oXCJlZGdlXCIse2RlZmF1bHRTaGFwZVR5cGU6XCJsaW5lXCIsZ2V0U2hhcGVQb2ludHM6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdS5zcGxpdFBvaW50cyhlKX0sZ2V0QWN0aXZlQ2ZnOmZ1bmN0aW9uKCl7cmV0dXJue3N0cm9rZU9wYWNpdHk6Ljd9fX0pO28ucmVnaXN0U2hhcGUoXCJlZGdlXCIsXCJsaW5lXCIse2RyYXdTaGFwZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMucGFyc2VQb2ludHModC5wb2ludHMpLGk9cih0KSxhPWwuZ2V0TGluZVBhdGgobiksbz1lLmFkZFNoYXBlKFwicGF0aFwiLHthdHRyczpzLm1peChpLHtwYXRoOmF9KX0pO3JldHVybiBvfX0pLG8ucmVnaXN0U2hhcGUoXCJlZGdlXCIsXCJ2aHZcIix7ZHJhd1NoYXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5wb2ludHMsaT1yKHQpLG89YShuWzBdLG5bMV0pO289dGhpcy5wYXJzZVBhdGgobyk7dmFyIHU9ZS5hZGRTaGFwZShcInBhdGhcIix7YXR0cnM6cy5taXgoaSx7cGF0aDpvfSl9KTtyZXR1cm4gdX19KSxvLnJlZ2lzdFNoYXBlKFwiZWRnZVwiLFwic21vb3RoXCIse2RyYXdTaGFwZTpmdW5jdGlvbih0LGUpe3ZhciBuPXQucG9pbnRzLGE9cih0KSxvPWkoblswXSxuWzFdKTtvPXRoaXMucGFyc2VQYXRoKG8pO3ZhciB1PWUuYWRkU2hhcGUoXCJwYXRoXCIse2F0dHJzOnMubWl4KGEse3BhdGg6b30pfSk7cmV0dXJuIHV9fSksdC5leHBvcnRzPWZ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQsZSl7dmFyIG49dC54LHI9dC55LGk9dC55MCxhPXQuc2l6ZSxzPWksbz1yO3AuaXNBcnJheShyKSYmKG89clsxXSxzPXJbMF0pO3ZhciB1LGM7cC5pc0FycmF5KG4pPyh1PW5bMF0sYz1uWzFdKToodT1uLWEvMixjPW4rYS8yKTt2YXIgbD1bXTtyZXR1cm4gbC5wdXNoKHt4OnUseTpzfSx7eDp1LHk6b30pLGU/bC5wdXNoKHt4OmMseToobytzKS8yfSk6bC5wdXNoKHt4OmMseTpvfSx7eDpjLHk6c30pLGx9ZnVuY3Rpb24gaSh0KXtmb3IodmFyIGU9W10sbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO2lmKHIpe3ZhciBpPTA9PT1uP1wiTVwiOlwiTFwiO2UucHVzaChbaSxyLngsci55XSl9fXZhciBhPXRbMF07cmV0dXJuIGUucHVzaChbXCJMXCIsYS54LGEueV0pLGUucHVzaChbXCJ6XCJdKSxlfWZ1bmN0aW9uIGEodCl7dmFyIGU9dC54LG49dC55LHI9dC55MCxpPVtdO3JldHVybiBwLmlzQXJyYXkobik/cC5lYWNoKG4sZnVuY3Rpb24odCxuKXtpLnB1c2goe3g6cC5pc0FycmF5KGUpP2Vbbl06ZSx5OnR9KX0pOmkucHVzaCh7eDplLHk6bn0se3g6ZSx5OnJ9KSxpfWZ1bmN0aW9uIHModCl7dmFyIGU9dC54LG49cC5pc0FycmF5KHQueSk/dC55WzFdOnQueSxyPXAuaXNBcnJheSh0LnkpP3QueVswXTp0LnkwLGk9dC5zaXplLGE9W107cmV0dXJuIGEucHVzaCh7eDplLWkvMix5Om59LHt4OmUraS8yLHk6bn0se3g6ZSx5Om59LHt4OmUseTpyfSx7eDplLWkvMix5OnJ9LHt4OmUraS8yLHk6cn0pLGF9ZnVuY3Rpb24gbyh0KXt2YXIgZT1bXTtyZXR1cm4gZS5wdXNoKFtcIk1cIix0WzBdLngsdFswXS55XSxbXCJMXCIsdFsxXS54LHRbMV0ueV0sW1wiTVwiLHRbMl0ueCx0WzJdLnldLFtcIkxcIix0WzNdLngsdFszXS55XSxbXCJNXCIsdFs0XS54LHRbNF0ueV0sW1wiTFwiLHRbNV0ueCx0WzVdLnldKSxlfWZ1bmN0aW9uIHUodCl7dmFyIGU9eC5zaGFwZS5pbnRlcnZhbCxuPXAubWl4KCEwLHt9LGUse2ZpbGw6dC5jb2xvcixzdHJva2U6dC5jb2xvcixmaWxsT3BhY2l0eTp0Lm9wYWNpdHl9LHQuc3R5bGUpO3JldHVybiBufWZ1bmN0aW9uIGModCl7dmFyIGU9eC5zaGFwZS5ob2xsb3dJbnRlcnZhbCxuPXAubWl4KCEwLHt9LGUse3N0cm9rZTp0LmNvbG9yLHN0cm9rZU9wYWNpdHk6dC5vcGFjaXR5fSx0LnN0eWxlKTtyZXR1cm4gbn1mdW5jdGlvbiBsKHQsZSl7dmFyIG49W10scj10LnBvaW50cyxpPXQubmV4dFBvaW50cztyZXR1cm4gcC5pc051bGwoaSk/ZT9uLnB1c2goW1wiTVwiLHJbMF0ueCxyWzBdLnldLFtcIkxcIixyWzFdLngsclsxXS55XSxbXCJMXCIsclsyXS54LHJbMl0ueV0sW1wiTFwiLHJbM10ueCxyWzNdLnldLFtcIlpcIl0pOm4ucHVzaChbXCJNXCIsclswXS54LHJbMF0ueV0sW1wiTFwiLHJbMV0ueCxyWzFdLnldLFtcIkxcIixyWzJdLngsclsyXS55XSxbXCJaXCJdKTpuLnB1c2goW1wiTVwiLHJbMF0ueCxyWzBdLnldLFtcIkxcIixyWzFdLngsclsxXS55XSxbXCJMXCIsaVsxXS54LGlbMV0ueV0sW1wiTFwiLGlbMF0ueCxpWzBdLnldLFtcIlpcIl0pLG59ZnVuY3Rpb24gaCh0KXtyZXR1cm4gdCYmXCJyZWN0XCIhPT10P3guYWN0aXZlU2hhcGUuaG9sbG93SW50ZXJ2YWw6eC5hY3RpdmVTaGFwZS5pbnRlcnZhbH1mdW5jdGlvbiBmKHQsZSl7dmFyIG4scixpLGEscz1lLmdldFJhZGl1cygpLG89ZS5nZXQoXCJpbm5lclwiKSx1PXMqbztyZXR1cm4hcC5pc0FycmF5KHQueCkmJnAuaXNBcnJheSh0LnkpJiYodC54PVt0LngsdC54XSkscC5pc0FycmF5KHQueCk/KGk9e3g6dC54WzBdLHk6dC55WzBdfSxhPXt4OnQueFsxXSx5OnQueVsxXX0sbj1kLmdldFBvaW50QW5nbGUoZSxpKSxyPWQuZ2V0UG9pbnRBbmdsZShlLGEpLHI8PW4mJihyKz0yKk1hdGguUEkpKTooYT10LG49ZS5nZXQoXCJzdGFydEFuZ2xlXCIpLHI9ZC5nZXRQb2ludEFuZ2xlKGUsYSkpLHtyOnMsaXI6dSxzdGFydEFuZ2xlOm4sZW5kQW5nbGU6cn19ZnVuY3Rpb24gZyh0LGUpe3ZhciBuPWUuY29vcmQscj1lLnBvaW50LGk9Ny41O2lmKG4mJlwidGhldGFcIj09PW4udHlwZSl7dmFyIGE9ZihyLG4pLHM9KGEuZW5kQW5nbGUtYS5zdGFydEFuZ2xlKS8yK2Euc3RhcnRBbmdsZSxvPWkqTWF0aC5jb3MocyksdT1pKk1hdGguc2luKHMpO2U9e3RyYW5zZm9ybTpbW1widFwiLG8sdV1dfX1yZXR1cm4gZX12YXIgcD1uKDEpLHY9bigxNSksZD1uKDIwKSx4PW4oNSksbT12LnJlZ2lzdEdlb20oXCJpbnRlcnZhbFwiLHtkZWZhdWx0U2hhcGVUeXBlOlwicmVjdFwiLGdldEFjdGl2ZUNmZzpmdW5jdGlvbih0KXtyZXR1cm4gaCh0KX0sZ2V0U2VsZWN0ZWRDZmc6ZnVuY3Rpb24odCxlKXtyZXR1cm4gZyh0LGUpfX0pO3YucmVnaXN0U2hhcGUoXCJpbnRlcnZhbFwiLFwicmVjdFwiLHtnZXRTaGFwZVBvaW50czpmdW5jdGlvbih0KXtyZXR1cm4gcih0KX0sZHJhd1NoYXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dSh0KSxyPWkodC5wb2ludHMpO3JldHVybiByPXRoaXMucGFyc2VQYXRoKHIpLGUuYWRkU2hhcGUoXCJwYXRoXCIse2F0dHJzOnAubWl4KG4se3BhdGg6cn0pfSl9LGdldE1hcmtlckNmZzpmdW5jdGlvbih0KXt2YXIgZT11KHQpLG49dC5pc0luQ2lyY2xlLHI9bj9cImNpcmNsZVwiOlwic3F1YXJlXCI7cmV0dXJuIHAubWl4KHtzeW1ib2w6cn0sZSl9fSksdi5yZWdpc3RTaGFwZShcImludGVydmFsXCIsXCJob2xsb3dSZWN0XCIse2dldFNoYXBlUG9pbnRzOmZ1bmN0aW9uKHQpe3JldHVybiByKHQpfSxkcmF3U2hhcGU6ZnVuY3Rpb24odCxlKXt2YXIgbj1jKHQpLHI9aSh0LnBvaW50cyk7cmV0dXJuIHI9dGhpcy5wYXJzZVBhdGgociksZS5hZGRTaGFwZShcInBhdGhcIix7YXR0cnM6cC5taXgobix7cGF0aDpyfSl9KX0sZ2V0TWFya2VyQ2ZnOmZ1bmN0aW9uKHQpe3ZhciBlPWModCksbj10LmlzSW5DaXJjbGUscj1uP1wiY2lyY2xlXCI6XCJzcXVhcmVcIjtyZXR1cm4gcC5taXgoe3N5bWJvbDpyfSxlKX19KSx2LnJlZ2lzdFNoYXBlKFwiaW50ZXJ2YWxcIixcImxpbmVcIix7Z2V0U2hhcGVQb2ludHM6ZnVuY3Rpb24odCl7cmV0dXJuIGEodCl9LGRyYXdTaGFwZTpmdW5jdGlvbih0LGUpe3ZhciBuPWModCk7bi5saW5lV2lkdGg9dC5zaXplfHwxO3ZhciByPWkodC5wb2ludHMpO3JldHVybiByPXRoaXMucGFyc2VQYXRoKHIpLGUuYWRkU2hhcGUoXCJwYXRoXCIse2F0dHJzOnAubWl4KG4se3BhdGg6cn0pfSl9LGdldE1hcmtlckNmZzpmdW5jdGlvbih0KXt2YXIgZT1jKHQpO3JldHVybiBwLm1peCh7c3ltYm9sOlwibGluZVwifSxlKX19KSx2LnJlZ2lzdFNoYXBlKFwiaW50ZXJ2YWxcIixcInRpY2tcIix7Z2V0U2hhcGVQb2ludHM6ZnVuY3Rpb24odCl7cmV0dXJuIHModCl9LGRyYXdTaGFwZTpmdW5jdGlvbih0LGUpe3ZhciBuPWModCkscj1vKHQucG9pbnRzKTtyZXR1cm4gcj10aGlzLnBhcnNlUGF0aChyKSxlLmFkZFNoYXBlKFwicGF0aFwiLHthdHRyczpwLm1peChuLHtwYXRoOnJ9KX0pfSxnZXRNYXJrZXJDZmc6ZnVuY3Rpb24odCl7dmFyIGU9Yyh0KTtyZXR1cm4gcC5taXgoe3N5bWJvbDpcInRpY2tcIn0sZSl9fSksdi5yZWdpc3RTaGFwZShcImludGVydmFsXCIsXCJmdW5uZWxcIix7Z2V0U2hhcGVQb2ludHM6ZnVuY3Rpb24odCl7cmV0dXJuIHQuc2l6ZT0yKnQuc2l6ZSxyKHQpfSxkcmF3U2hhcGU6ZnVuY3Rpb24odCxlKXt2YXIgbj11KHQpLHI9bCh0LCEwKTtyZXR1cm4gcj10aGlzLnBhcnNlUGF0aChyKSxlLmFkZFNoYXBlKFwicGF0aFwiLHthdHRyczpwLm1peChuLHtwYXRoOnJ9KX0pfSxnZXRNYXJrZXJDZmc6ZnVuY3Rpb24odCl7dmFyIGU9dSh0KTtyZXR1cm4gcC5taXgoe3N5bWJvbDpcInNxdWFyZVwifSxlKX19KSx2LnJlZ2lzdFNoYXBlKFwiaW50ZXJ2YWxcIixcInB5cmFtaWRcIix7Z2V0U2hhcGVQb2ludHM6ZnVuY3Rpb24odCl7cmV0dXJuIHQuc2l6ZT0yKnQuc2l6ZSxyKHQsITApfSxkcmF3U2hhcGU6ZnVuY3Rpb24odCxlKXt2YXIgbj11KHQpLHI9bCh0LCExKTtyZXR1cm4gcj10aGlzLnBhcnNlUGF0aChyKSxlLmFkZFNoYXBlKFwicGF0aFwiLHthdHRyczpwLm1peChuLHtwYXRoOnJ9KX0pfSxnZXRNYXJrZXJDZmc6ZnVuY3Rpb24odCl7dmFyIGU9dSh0KTtyZXR1cm4gcC5taXgoe3N5bWJvbDpcInNxdWFyZVwifSxlKX19KSx0LmV4cG9ydHM9bX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7dmFyIGU9ZC5zaGFwZS5saW5lLG49Zi5taXgoITAse30sZSx7c3Ryb2tlOnQuY29sb3IsbGluZVdpZHRoOnQuc2l6ZSxzdHJva2VPcGFjaXR5OnQub3BhY2l0eSxvcGFjaXR5OnQub3BhY2l0eX0sdC5zdHlsZSk7cmV0dXJuIG59ZnVuY3Rpb24gaSh0LGUpe3ZhciBuPVwiXCIscj10LnBvaW50cyxpPXQuaXNJbkNpcmNsZTtyZXR1cm4gbis9ZT9nLmdldFNwbGluZVBhdGgocixpKTpnLmdldExpbmVQYXRoKHIsaSksZi5wYXRoMkFic29sdXRlKG4pfWZ1bmN0aW9uIGEodCxlKXt2YXIgbj1bXTtyZXR1cm4gZi5lYWNoKHQsZnVuY3Rpb24ocixpKXt2YXIgYT10W2krMV07bi5wdXNoKHIpLGEmJihuPW4uY29uY2F0KGUocixhKSkpfSksbn1mdW5jdGlvbiBzKHQpe3ZhciBlPVwiXCI7cmV0dXJuIGYuZWFjaCh0LGZ1bmN0aW9uKHQsbil7dmFyIHI9MD09PW4/XCJNIHt4fSB7eX1cIjpcIkwge3h9IHt5fVwiO2UrPWYuc3Vic3RpdHV0ZShyLHQpfSksZX1mdW5jdGlvbiBvKHQsZSl7dmFyIG49YSh0LnBvaW50cyxlKTtyZXR1cm4gcyhuKX1mdW5jdGlvbiB1KHQsZSxuKXtyZXR1cm5bW1wiTVwiLHQtbixlXSxbXCJMXCIsdCtuLGVdXX1mdW5jdGlvbiBjKHQsZSxuKXtyZXR1cm4gZi5wYXRoMkFic29sdXRlKFtbXCJNXCIsdC1uLGVdLFtcIlJcIix0LW4vMixlLW4vMix0LGUsdCtuLzIsZStuLzIsdCtuLGVdXSl9ZnVuY3Rpb24gbCh0LGUpe3JldHVybiBmLm1peCh7c3ltYm9sOmU/Yzp1fSxyKHQpKX1mdW5jdGlvbiBoKHQsZSl7cmV0dXJuIGYubWl4KHtzeW1ib2w6ZX0scih0KSl9dmFyIGY9bigxKSxnPW4oMjApLHA9big1OSksdj1uKDE1KSxkPW4oNSkseD1bMiwxXSxtPVsxMCw1XSx5PXYucmVnaXN0R2VvbShcImxpbmVcIix7ZGVmYXVsdFNoYXBlVHlwZTpcImxpbmVcIixnZXRNYXJrZXJDZmc6ZnVuY3Rpb24odCxlKXt2YXIgbj15W3RdfHx5LmxpbmU7cmV0dXJuIG4uZ2V0TWFya2VyQ2ZnKGUpfSxnZXRBY3RpdmVDZmc6ZnVuY3Rpb24oKXtyZXR1cm4gZC5hY3RpdmVTaGFwZS5saW5lfX0pO3YucmVnaXN0U2hhcGUoXCJsaW5lXCIsXCJsaW5lXCIse2dldFNoYXBlUG9pbnRzOmZ1bmN0aW9uKHQpe3JldHVybiBwLnNwbGl0UG9pbnRzKHQpfSxkcmF3U2hhcGU6ZnVuY3Rpb24odCxlKXt2YXIgbj1yKHQpLGE9aSh0LCExKTtyZXR1cm4gYT10aGlzLnBhcnNlUGF0aChhLCExKSxlLmFkZFNoYXBlKFwicGF0aFwiLHthdHRyczpmLm1peChuLHtwYXRoOmF9KX0pfSxnZXRNYXJrZXJDZmc6ZnVuY3Rpb24odCl7cmV0dXJuIGwodCl9fSksdi5yZWdpc3RTaGFwZShcImxpbmVcIixcImRvdFwiLHtkcmF3U2hhcGU6ZnVuY3Rpb24odCxlKXt2YXIgbj1yKHQpLGE9aSh0LCExKTtyZXR1cm4gYT10aGlzLnBhcnNlUGF0aChhLCExKSxlLmFkZFNoYXBlKFwicGF0aFwiLHthdHRyczpmLm1peChuLHtwYXRoOmEsbGluZURhc2g6eH0pfSl9LGdldE1hcmtlckNmZzpmdW5jdGlvbih0KXt2YXIgZT1sKHQsITEpO3JldHVybiBlLmxpbmVEYXNoPXgsZX19KSx2LnJlZ2lzdFNoYXBlKFwibGluZVwiLFwiZmlsbFwiLHtkcmF3U2hhcGU6ZnVuY3Rpb24odCxlKXt2YXIgbj1yKHQpLGE9aSh0LCExKTtyZXR1cm4gYT10aGlzLnBhcnNlUGF0aChhLCExKSxhLnB1c2goW1wielwiXSksZS5hZGRTaGFwZShcInBhdGhcIix7YXR0cnM6Zi5taXgobix7cGF0aDphLGZpbGw6bi5zdHJva2V9KX0pfSxnZXRNYXJrZXJDZmc6ZnVuY3Rpb24odCl7dmFyIGU9bCh0LCExKTtyZXR1cm4gZS5maWxsPWUuc3Ryb2tlLGV9fSksdi5yZWdpc3RTaGFwZShcImxpbmVcIixcImRhc2hcIix7ZHJhd1NoYXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG49cih0KSxhPWkodCwhMSk7cmV0dXJuIGE9dGhpcy5wYXJzZVBhdGgoYSwhMSksZS5hZGRTaGFwZShcInBhdGhcIix7YXR0cnM6Zi5taXgobix7cGF0aDphLGxpbmVEYXNoOm19KX0pfSxnZXRNYXJrZXJDZmc6ZnVuY3Rpb24odCl7dmFyIGU9bCh0LCExKTtyZXR1cm4gZS5saW5lRGFzaD1tLGV9fSksdi5yZWdpc3RTaGFwZShcImxpbmVcIixcInNtb290aFwiLHtkcmF3U2hhcGU6ZnVuY3Rpb24odCxlKXt2YXIgbj1yKHQpLGE9aSh0LCEwKTtyZXR1cm4gYT10aGlzLnBhcnNlUGF0aChhLCExKSxlLmFkZFNoYXBlKFwicGF0aFwiLHthdHRyczpmLm1peChuLHtwYXRoOmF9KX0pfSxnZXRNYXJrZXJDZmc6ZnVuY3Rpb24odCl7cmV0dXJuIGwodCwhMCl9fSksdi5yZWdpc3RTaGFwZShcImxpbmVcIixcImRvdFNtb290aFwiLHtkcmF3U2hhcGU6ZnVuY3Rpb24odCxlKXt2YXIgbj1yKHQpLGE9aSh0LCEwKTtyZXR1cm4gYT10aGlzLnBhcnNlUGF0aChhLCExKSxlLmFkZFNoYXBlKFwicGF0aFwiLHthdHRyczpmLm1peChuLHtwYXRoOmEsbGluZURhc2g6eH0pfSl9LGdldE1hcmtlckNmZzpmdW5jdGlvbih0KXt2YXIgZT1sKHQsITApO3JldHVybiBlLmxpbmVEYXNoPXgsZX19KSx2LnJlZ2lzdFNoYXBlKFwibGluZVwiLFwiaHZcIix7ZHJhd1NoYXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG49cih0KSxpPW8odCxmdW5jdGlvbih0LGUpe3ZhciBuPVtdO3JldHVybiBuLnB1c2goe3g6ZS54LHk6dC55fSksbn0pO3JldHVybiBpPXRoaXMucGFyc2VQYXRoKGksITEpLGUuYWRkU2hhcGUoXCJwYXRoXCIse2F0dHJzOmYubWl4KG4se3BhdGg6aX0pfSl9LGdldE1hcmtlckNmZzpmdW5jdGlvbih0KXtyZXR1cm4gaCh0LGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm5bW1wiTVwiLHQtbixlLW5dLFtcIkxcIix0LGUtbl0sW1wiTFwiLHQsZV0sW1wiTFwiLHQrbixlXV19KX19KSx2LnJlZ2lzdFNoYXBlKFwibGluZVwiLFwidmhcIix7ZHJhd1NoYXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG49cih0KSxpPW8odCxmdW5jdGlvbih0LGUpe3ZhciBuPVtdO3JldHVybiBuLnB1c2goe3g6dC54LHk6ZS55fSksbn0pO3JldHVybiBpPXRoaXMucGFyc2VQYXRoKGksITEpLGUuYWRkU2hhcGUoXCJwYXRoXCIse2F0dHJzOmYubWl4KG4se3BhdGg6aX0pfSl9LGdldE1hcmtlckNmZzpmdW5jdGlvbih0KXtyZXR1cm4gaCh0LGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm5bW1wiTVwiLHQtbixlXSxbXCJMXCIsdCxlXSxbXCJMXCIsdCxlLW5dLFtcIkxcIix0K24sZS1uXV19KX19KSx2LnJlZ2lzdFNoYXBlKFwibGluZVwiLFwiaHZoXCIse2RyYXdTaGFwZTpmdW5jdGlvbih0LGUpe3ZhciBuPXIodCksaT1vKHQsZnVuY3Rpb24odCxlKXt2YXIgbj1bXSxyPShlLngtdC54KS8yK3QueDtyZXR1cm4gbi5wdXNoKHt4OnIseTp0Lnl9KSxuLnB1c2goe3g6cix5OmUueX0pLG59KTtyZXR1cm4gaT10aGlzLnBhcnNlUGF0aChpLCExKSxlLmFkZFNoYXBlKFwicGF0aFwiLHthdHRyczpmLm1peChuLHtwYXRoOml9KX0pfSxnZXRNYXJrZXJDZmc6ZnVuY3Rpb24odCl7cmV0dXJuIGgodCxmdW5jdGlvbih0LGUsbil7cmV0dXJuW1tcIk1cIix0LTMqbi8yLGVdLFtcIkxcIix0LW4vMixlXSxbXCJMXCIsdC1uLzIsZS1uLzJdLFtcIkxcIix0K24vMixlLW4vMl0sW1wiTFwiLHQrbi8yLGVdLFtcIkxcIix0KzMqbi8yLGVdXX0pfX0pLHYucmVnaXN0U2hhcGUoXCJsaW5lXCIsXCJ2aHZcIix7ZHJhd1NoYXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG49cih0KSxpPW8odCxmdW5jdGlvbih0LGUpe3ZhciBuPVtdLHI9KGUueS10LnkpLzIrdC55O3JldHVybiBuLnB1c2goe3g6dC54LHk6cn0pLG4ucHVzaCh7eDplLngseTpyfSksbn0pO3JldHVybiBpPXRoaXMucGFyc2VQYXRoKGksITEpLGUuYWRkU2hhcGUoXCJwYXRoXCIse2F0dHJzOmYubWl4KG4se3BhdGg6aX0pfSl9LGdldE1hcmtlckNmZzpmdW5jdGlvbih0KXtyZXR1cm4gaCh0LGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm5bW1wiTVwiLHQtbixlXSxbXCJMXCIsdC1uLGUtbi8yXSxbXCJMXCIsdCxlLW4vMl0sW1wiTFwiLHQsZS1uXSxbXCJMXCIsdCxlK24vMl0sW1wiTFwiLHQrbixlK24vMl1dfSl9fSkseS5zcGxpbmU9eS5zbW9vdGgsdC5leHBvcnRzPXl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3ZhciBlPWMuc2hhcGUucG9pbnQsbj1zLm1peCghMCx7fSxlLHtmaWxsOnQuY29sb3IsZmlsbE9wYWNpdHk6dC5vcGFjaXR5LHJhZGl1czp0LnNpemV9LHQuc3R5bGUpO3JldHVybiBufWZ1bmN0aW9uIGkodCl7dmFyIGU9Yy5zaGFwZS5ob2xsb3dQb2ludCxuPXMubWl4KCEwLHt9LGUse3N0cm9rZTp0LmNvbG9yLHN0cm9rZU9wYWNpdHk6dC5vcGFjaXR5LHJhZGl1czp0LnNpemV9LHQuc3R5bGUpO3JldHVybiBufWZ1bmN0aW9uIGEodCl7cmV0dXJuIXR8fDAhPT10LmluZGV4T2YoXCJob2xsb3dcIikmJnMuaW5kZXhPZihmLHQpPT09LTE/Yy5hY3RpdmVTaGFwZS5wb2ludDpjLmFjdGl2ZVNoYXBlLmhvbGxvd1BvaW50fXZhciBzPW4oMSksbz1uKDU5KSx1PW4oMTEpLGM9big1KSxsPW4oMTUpLGg9W1wiY2lyY2xlXCIsXCJzcXVhcmVcIixcImJvd3RpZVwiLFwiZGlhbW9uZFwiLFwiaGV4YWdvblwiLFwidHJpYW5nbGVcIixcInRyaWFuZ2xlLWRvd25cIl0sZj1bXCJjcm9zc1wiLFwidGlja1wiLFwicGx1c1wiLFwiaHlwaGVuXCIsXCJsaW5lXCIsXCJwb2ludGVyTGluZVwiLFwicG9pbnRlckFycm93XCJdLGc9TWF0aC5zcXJ0KDMpO3MubWl4KHUuU2hhcGUuTWFya2VyLlN5bWJvbHMse2hleGFnb246ZnVuY3Rpb24odCxlLG4pe3ZhciByPW4vMipnO3JldHVybltbXCJNXCIsdCxlLW5dLFtcIkxcIix0K3IsZS1uLzJdLFtcIkxcIix0K3IsZStuLzJdLFtcIkxcIix0LGUrbl0sW1wiTFwiLHQtcixlK24vMl0sW1wiTFwiLHQtcixlLW4vMl0sW1wielwiXV19LGJvd3RpZTpmdW5jdGlvbih0LGUsbil7cmV0dXJuW1tcIk1cIix0LW4sZS1uXSxbXCJMXCIsdCtuLGUrbl0sW1wiTFwiLHQrbixlLW5dLFtcIkxcIix0LW4sZStuXSxbXCJ6XCJdXX0sY3Jvc3M6ZnVuY3Rpb24odCxlLG4pe3JldHVybltbXCJNXCIsdC1uLGUtbl0sW1wiTFwiLHQrbixlK25dLFtcIk1cIix0K24sZS1uXSxbXCJMXCIsdC1uLGUrbl1dfSx0aWNrOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm5bW1wiTVwiLHQtbi8yLGUtbl0sW1wiTFwiLHQrbi8yLGUtbl0sW1wiTVwiLHQsZS1uXSxbXCJMXCIsdCxlK25dLFtcIk1cIix0LW4vMixlK25dLFtcIkxcIix0K24vMixlK25dXX0scGx1czpmdW5jdGlvbih0LGUsbil7cmV0dXJuW1tcIk1cIix0LW4sZV0sW1wiTFwiLHQrbixlXSxbXCJNXCIsdCxlLW5dLFtcIkxcIix0LGUrbl1dfSxoeXBoZW46ZnVuY3Rpb24odCxlLG4pe3JldHVybltbXCJNXCIsdC1uLGVdLFtcIkxcIix0K24sZV1dfSxsaW5lOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm5bW1wiTVwiLHQsZS1uXSxbXCJMXCIsdCxlK25dXX19KTt2YXIgcD1sLnJlZ2lzdEdlb20oXCJwb2ludFwiLHtkZWZhdWx0U2hhcGVUeXBlOlwiaG9sbG93Q2lyY2xlXCIsZ2V0QWN0aXZlQ2ZnOmZ1bmN0aW9uKHQsZSl7dmFyIG49YSh0KTtyZXR1cm4gZSYmZS5zaXplJiZkZWxldGUgbi5yYWRpdXMsbn0sZ2V0U2hhcGVQb2ludHM6ZnVuY3Rpb24odCxlKXtyZXR1cm4gby5zcGxpdFBvaW50cyhlKX19KTtzLmVhY2goaCxmdW5jdGlvbih0KXtsLnJlZ2lzdFNoYXBlKFwicG9pbnRcIix0LHtkcmF3U2hhcGU6ZnVuY3Rpb24oZSxuKXtlLnBvaW50cz10aGlzLnBhcnNlUG9pbnRzKGUucG9pbnRzKTt2YXIgaT1yKGUpO3JldHVybiBuLmFkZFNoYXBlKFwiTWFya2VyXCIse2F0dHJzOnMubWl4KGkse3g6ZS5wb2ludHNbMF0ueCx5OmUucG9pbnRzWzBdLnksc3ltYm9sOnR9KX0pfSxnZXRNYXJrZXJDZmc6ZnVuY3Rpb24oZSl7dmFyIG49cihlKTtyZXR1cm4gbi5zeW1ib2w9dCxufX0pLGwucmVnaXN0U2hhcGUoXCJwb2ludFwiLFwiaG9sbG93XCIrcy51Y2ZpcnN0KHQpLHtkcmF3U2hhcGU6ZnVuY3Rpb24oZSxuKXtlLnBvaW50cz10aGlzLnBhcnNlUG9pbnRzKGUucG9pbnRzKTt2YXIgcj1pKGUpO3JldHVybiBuLmFkZFNoYXBlKFwiTWFya2VyXCIse2F0dHJzOnMubWl4KHIse3g6ZS5wb2ludHNbMF0ueCx5OmUucG9pbnRzWzBdLnksc3ltYm9sOnR9KX0pfSxnZXRNYXJrZXJDZmc6ZnVuY3Rpb24oZSl7dmFyIG49aShlKTtyZXR1cm4gbi5zeW1ib2w9dCxufX0pfSkscy5lYWNoKGYsZnVuY3Rpb24odCl7bC5yZWdpc3RTaGFwZShcInBvaW50XCIsdCx7ZHJhd1NoYXBlOmZ1bmN0aW9uKGUsbil7ZS5wb2ludHM9dGhpcy5wYXJzZVBvaW50cyhlLnBvaW50cyk7dmFyIHI9aShlKTtyZXR1cm4gbi5hZGRTaGFwZShcIk1hcmtlclwiLHthdHRyczpzLm1peChyLHt4OmUucG9pbnRzWzBdLngseTplLnBvaW50c1swXS55LHN5bWJvbDp0fSl9KX0sZ2V0TWFya2VyQ2ZnOmZ1bmN0aW9uKGUpe3ZhciBuPWkoZSk7cmV0dXJuIG4uc3ltYm9sPXQsbn19KX0pLHQuZXhwb3J0cz1wfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcigpe3JldHVybiB1LmFjdGl2ZVNoYXBlLnBvbHlnb259ZnVuY3Rpb24gaSh0KXt2YXIgZT11LnNoYXBlLnBvbHlnb24sbj1zLm1peCghMCx7fSxlLHtzdHJva2U6dC5jb2xvcixmaWxsOnQuY29sb3IsZmlsbE9wYWNpdHk6dC5vcGFjaXR5fSx0LnN0eWxlKTtyZXR1cm4gbn1mdW5jdGlvbiBhKHQpe3ZhciBlPVwiXCIsbj1bdFswXS54LHRbMF0ueV0scj0wLGk9dFswXTtyZXR1cm4gcy5lYWNoKHQsZnVuY3Rpb24oYSxvKXt2YXIgdT0wPT09bz9cIk0ge3h9IHt5fSBcIjpcIkwge3h9IHt5fSBcIjtpZihlKz1zLnN1YnN0aXR1dGUodSxhKSxyIT09byYmbzx0Lmxlbmd0aC0xJiZzLmVxdWFsc0FycmF5KG4sW2EueCxhLnldKSl7dmFyIGM9dFtvKzFdO2UrPVwielwiK3Muc3Vic3RpdHV0ZShcIk0ge3h9IHt5fVwiLGMpLGk9YyxyPW8rMSxuPVtjLngsYy55XX19KSxlKz1zLnN1YnN0aXR1dGUoXCJMIHt4fSB7eX1cIixpKSxlKz1cInpcIixzLnBhdGgyQWJzb2x1dGUoZSl9dmFyIHM9bigxKSxvPW4oMTUpLHU9big1KSxjPW8ucmVnaXN0R2VvbShcInBvbHlnb25cIix7ZGVmYXVsdFNoYXBlVHlwZTpcInBvbHlnb25cIixnZXRNYXJrZXJDZmc6ZnVuY3Rpb24oKXtyZXR1cm57c3ltYm9sOlwicmVjdFwifX0sZ2V0QWN0aXZlQ2ZnOmZ1bmN0aW9uKHQpe3JldHVybiByKHQpfX0pO28ucmVnaXN0U2hhcGUoXCJwb2x5Z29uXCIsXCJwb2x5Z29uXCIse2dldFNoYXBlUG9pbnRzOmZ1bmN0aW9uKHQpe3ZhciBlPVtdO3JldHVybiBzLmVhY2godC54LGZ1bmN0aW9uKG4scil7dmFyIGk9dC55W3JdO2UucHVzaCh7eDpuLHk6aX0pfSksZX0sZHJhd1NoYXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG49aSh0KSxyPWEodC5wb2ludHMpO3JldHVybiByPXRoaXMucGFyc2VQYXRoKHIpLGUuYWRkU2hhcGUoXCJwYXRoXCIse2F0dHJzOnMubWl4KG4se3BhdGg6cn0pfSl9fSksby5yZWdpc3RTaGFwZShcInBvbHlnb25cIixcImhvbGxvd1wiLHtkcmF3U2hhcGU6ZnVuY3Rpb24odCxlKXt2YXIgbj1pKHQpLHI9YSh0LnBvaW50cyk7cmV0dXJuIHI9dGhpcy5wYXJzZVBhdGgociksZS5hZGRTaGFwZShcInBhdGhcIix7YXR0cnM6cy5taXgobix7cGF0aDpyfSl9KX19KSx0LmV4cG9ydHM9Y30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7Zi5pc0FycmF5KHQpfHwodD1bdF0pO3ZhciBlPXRbMF0sbj10W3QubGVuZ3RoLTFdLHI9dC5sZW5ndGg+MT90WzFdOmUsaT10Lmxlbmd0aD4zP3RbM106bixhPXQubGVuZ3RoPjI/dFsyXTpyO3JldHVybnttaW46ZSxtYXg6bixtaW4xOnIsbWF4MTppLG1lZGlhbjphfX1mdW5jdGlvbiBpKHQsZSl7Zi5lYWNoKHQsZnVuY3Rpb24odCl7ZS5wdXNoKHt4OnRbMF0seTp0WzFdfSl9KX1mdW5jdGlvbiBhKHQpe3ZhciBlPXAuc2hhcGUubGluZSxuPWYubWl4KCEwLHt9LGUse3N0cm9rZTp0LmNvbG9yLGZpbGw6XCIjZmZmXCIsZmlsbE9wYWNpdHk6MCxzdHJva2VPcGFjaXR5OnQub3BhY2l0eX0pO3JldHVybiBufWZ1bmN0aW9uIHModCxlLG4pe3ZhciBhLHMsbz1bXTtyZXR1cm4gZi5pc0FycmF5KGUpPyhzPXIoZSksYT1bW3Qtbi8yLHMubWF4XSxbdCtuLzIscy5tYXhdLFt0LHMubWF4XSxbdCxzLm1heDFdLFt0LW4vMixzLm1pbjFdLFt0LW4vMixzLm1heDFdLFt0K24vMixzLm1heDFdLFt0K24vMixzLm1pbjFdLFt0LHMubWluMV0sW3Qscy5taW5dLFt0LW4vMixzLm1pbl0sW3Qrbi8yLHMubWluXSxbdC1uLzIscy5tZWRpYW5dLFt0K24vMixzLm1lZGlhbl1dKTooZT1lfHwuNSxzPXIodCksYT1bW3MubWluLGUtbi8yXSxbcy5taW4sZStuLzJdLFtzLm1pbixlXSxbcy5taW4xLGVdLFtzLm1pbjEsZS1uLzJdLFtzLm1pbjEsZStuLzJdLFtzLm1heDEsZStuLzJdLFtzLm1heDEsZS1uLzJdLFtzLm1heDEsZV0sW3MubWF4LGVdLFtzLm1heCxlLW4vMl0sW3MubWF4LGUrbi8yXSxbcy5tZWRpYW4sZS1uLzJdLFtzLm1lZGlhbixlK24vMl1dKSxpKGEsbyksb31mdW5jdGlvbiBvKHQpe2YuaXNBcnJheSh0KXx8KHQ9W3RdKTt2YXIgZT10LnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdDxlPzE6LTF9KSxuPWUubGVuZ3RoO2lmKG48NClmb3IodmFyIHI9ZVtuLTFdLGk9MDtpPDQtbjtpKyspZS5wdXNoKHIpO3JldHVybiBlfWZ1bmN0aW9uIHUodCxlLG4pe3ZhciByPW8oZSksaT1be3g6dCx5OnJbMF19LHt4OnQseTpyWzFdfSx7eDp0LW4vMix5OnJbMl19LHt4OnQtbi8yLHk6clsxXX0se3g6dCtuLzIseTpyWzFdfSx7eDp0K24vMix5OnJbMl19LHt4OnQseTpyWzJdfSx7eDp0LHk6clszXX1dO3JldHVybiBpfWZ1bmN0aW9uIGModCl7dmFyIGU9W1tcIk1cIix0WzBdLngsdFswXS55XSxbXCJMXCIsdFsxXS54LHRbMV0ueV0sW1wiTVwiLHRbMl0ueCx0WzJdLnldLFtcIkxcIix0WzNdLngsdFszXS55XSxbXCJNXCIsdFs0XS54LHRbNF0ueV0sW1wiTFwiLHRbNV0ueCx0WzVdLnldLFtcIkxcIix0WzZdLngsdFs2XS55XSxbXCJMXCIsdFs3XS54LHRbN10ueV0sW1wiTFwiLHRbNF0ueCx0WzRdLnldLFtcIlpcIl0sW1wiTVwiLHRbOF0ueCx0WzhdLnldLFtcIkxcIix0WzldLngsdFs5XS55XSxbXCJNXCIsdFsxMF0ueCx0WzEwXS55XSxbXCJMXCIsdFsxMV0ueCx0WzExXS55XSxbXCJNXCIsdFsxMl0ueCx0WzEyXS55XSxbXCJMXCIsdFsxM10ueCx0WzEzXS55XV07cmV0dXJuIGV9ZnVuY3Rpb24gbCh0KXt2YXIgZT1bW1wiTVwiLHRbMF0ueCx0WzBdLnldLFtcIkxcIix0WzFdLngsdFsxXS55XSxbXCJNXCIsdFsyXS54LHRbMl0ueV0sW1wiTFwiLHRbM10ueCx0WzNdLnldLFtcIkxcIix0WzRdLngsdFs0XS55XSxbXCJMXCIsdFs1XS54LHRbNV0ueV0sW1wiWlwiXSxbXCJNXCIsdFs2XS54LHRbNl0ueV0sW1wiTFwiLHRbN10ueCx0WzddLnldXTtyZXR1cm4gZX1mdW5jdGlvbiBoKHQsZSl7cmV0dXJuIGYubWl4KHtzeW1ib2w6ZX0sYSh0KSl9dmFyIGY9bigxKSxnPW4oMTUpLHA9big1KSx2PWcucmVnaXN0R2VvbShcInNjaGVtYVwiLHtkZWZhdWx0U2hhcGVUeXBlOlwiXCIsZ2V0QWN0aXZlQ2ZnOmZ1bmN0aW9uKCl7cmV0dXJuIHAuYWN0aXZlU2hhcGUubGluZX19KTtnLnJlZ2lzdFNoYXBlKFwic2NoZW1hXCIsXCJib3hcIix7Z2V0U2hhcGVQb2ludHM6ZnVuY3Rpb24odCl7cmV0dXJuIHModC54LHQueSx0LnNpemUpfSxkcmF3U2hhcGU6ZnVuY3Rpb24odCxlKXt2YXIgbj1hKHQpLHI9Yyh0LnBvaW50cyk7cmV0dXJuIHI9dGhpcy5wYXJzZVBhdGgociksZS5hZGRTaGFwZShcInBhdGhcIix7YXR0cnM6Zi5taXgobix7cGF0aDpyfSl9KX0sZ2V0TWFya2VyQ2ZnOmZ1bmN0aW9uKHQpe3JldHVybiBoKHQsZnVuY3Rpb24odCxlLG4pe3ZhciByPVtlLW4sZS1uLzIsZSxlK24vMixlK25dLGk9cyh0LHIsMipuKTtyZXR1cm4gYyhpKX0pfX0pLGcucmVnaXN0U2hhcGUoXCJzY2hlbWFcIixcImNhbmRsZVwiLHtnZXRTaGFwZVBvaW50czpmdW5jdGlvbih0KXtyZXR1cm4gdSh0LngsdC55LHQuc2l6ZSl9LGRyYXdTaGFwZTpmdW5jdGlvbih0LGUpe3ZhciBuPWEodCkscj1sKHQucG9pbnRzKTtyZXR1cm4gcj10aGlzLnBhcnNlUGF0aChyKSxlLmFkZFNoYXBlKFwicGF0aFwiLHthdHRyczpmLm1peChuLHtwYXRoOnIsZmlsbDp0LmNvbG9yLGZpbGxPcGFjaXR5OnQub3BhY2l0eSxsaW5lV2lkdGg6MX0pfSl9LGdldE1hcmtlckNmZzpmdW5jdGlvbih0KXt2YXIgZT1oKHQsZnVuY3Rpb24odCxlLG4pe2U9W2UrMS41Km4sZStuLzIsZS1uLzIsZS0xLjUqbl07dmFyIHI9dSh0LGUsbik7cmV0dXJuIGwocil9KTtyZXR1cm4gZS5maWxsPXQuY29sb3IsZS5maWxsT3BhY2l0eT10Lm9wYWNpdHksZX19KSx0LmV4cG9ydHM9dn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDQ2KSxhPVwiIzYyYTRlOFwiLHM9ci5taXgoITAse30saSx7ZGVmYXVsdENvbG9yOmEsY29sb3JzOntcImRlZmF1bHRcIjpbXCIjNjFBNUU4XCIsXCIjN0VDRjUxXCIsXCIjRUVDQjVGXCIsXCIjRTQ5MjVEXCIsXCIjRTE2NzU3XCIsXCIjOTU3MEU1XCIsXCIjNjA1RkYwXCJdLGludGVydmFsU3RhY2s6W1wiIzYxQTVFOFwiLFwiIzdFQ0Y1MVwiLFwiI0VFQ0I1RlwiLFwiI0U0OTI1RFwiLFwiI0UxNjc1N1wiLFwiIzk1NzBFNVwiLFwiIzYwNUZGMFwiLFwiIzYwNWZmMFwiLFwiIzg1Y2EzNlwiLFwiIzFjOTkyNVwiLFwiIzBkOGI1ZlwiLFwiIzBmOWNkM1wiLFwiIzJmN2U5YlwiLFwiIzJmNjc3ZFwiLFwiIzliN2ZlZFwiLFwiIzc0NTNkNlwiLFwiIzNiMWQ5OFwiLFwiIzI3YWJiMVwiLFwiIzAxNzM3N1wiLFwiIzAxNWY2M1wiLFwiI2I4Njg2OFwiLFwiIzU2NjliN1wiLFwiI2U1YWFiNFwiLFwiIzYwYjY1ZlwiLFwiIzk4ZDJiMlwiLFwiI2M5YzhiY1wiLFwiIzQ1YzNkY1wiLFwiI2UxNzk3OVwiLFwiIzViYWE1YVwiLFwiI2VhY2NjMlwiLFwiI2ZmYWE3NFwiXX0sc2hhcGU6e3BvaW50OntmaWxsOmF9LGhvbGxvd1BvaW50OntzdHJva2U6YX0saW50ZXJ2YWw6e2ZpbGw6YX0saG9sbG93SW50ZXJ2YWw6e3N0cm9rZTphfSxhcmVhOntmaWxsOmF9LHBvbHlnb246e2ZpbGw6YX0saG9sbG93UG9seWdvbjp7c3Ryb2tlOmF9LGhvbGxvd0FyZWE6e3N0cm9rZTphfSxsaW5lOntzdHJva2U6YX19LGd1aWRlOntsaW5lOntzdHJva2U6YX0scmVjdDp7ZmlsbDphfSx0YWc6e2xpbmU6e3N0cm9rZTphfSxyZWN0OntmaWxsOmF9fX0sdG9vbHRpcE1hcmtlcjp7c3Ryb2tlOmF9fSk7dC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big0NiksYT1yLm1peCghMCx7fSxpLHtwbG90Q2ZnOnttYXJnaW46WzIwLDgwLDYwLDgwXSxib3JkZXI6e2ZpbGw6XCIjMTgyNDJFXCJ9fSxheGlzOnt0b3A6e2xhYmVsczp7bGFiZWw6e2ZpbGw6XCIjRDVENEQ0XCJ9fSx0aWNrTGluZTp7c3Ryb2tlOlwiIzQ2NTI1RlwifX0sYm90dG9tOntsYWJlbHM6e2xhYmVsOntmaWxsOlwiIzk5OVwifX0sbGluZTp7c3Ryb2tlOlwiIzQ2NTI1RlwifSx0aWNrTGluZTp7c3Ryb2tlOlwiIzQ2NTI1RlwifX0sbGVmdDp7bGFiZWxzOntsYWJlbDp7ZmlsbDpcIiM5OTlcIn19LGxpbmU6e3N0cm9rZTpcIiM0NjUyNUZcIn0sdGlja0xpbmU6e3N0cm9rZTpcIiM0NjUyNUZcIn0sZ3JpZDp7bGluZTp7c3Ryb2tlOlwiIzQ2NTI1RlwifX19LHJpZ2h0OntsYWJlbHM6e2xhYmVsOntmaWxsOlwiIzk5OVwifX0sbGluZTp7c3Ryb2tlOlwiIzQ2NTI1RlwifSx0aWNrTGluZTp7c3Ryb2tlOlwiIzQ2NTI1RlwifX0sY2lyY2xlOntsaW5lOntzdHJva2U6XCIjNDY1MjVGXCJ9LGdyaWQ6e2xpbmU6e3N0cm9rZTpcIiM0NjUyNUZcIn19LGxhYmVsczp7bGFiZWw6e2ZpbGw6XCIjOTk5XCJ9fX0sZ2F1Z2U6e3RpY2tMaW5lOntzdHJva2U6XCIjNDY1MjVGXCJ9LGxhYmVsczp7bGFiZWw6e2ZpbGw6XCIjOTk5XCJ9fX0sY2xvY2s6e3RpY2tMaW5lOntzdHJva2U6XCIjNDY1MjVGXCJ9LHN1YlRpY2s6NSxsYWJlbHM6e2xhYmVsOntmaWxsOlwiIzk5OVwifX19LHJhZGl1czp7bGFiZWxzOntsYWJlbDp7ZmlsbDpcIiM5OTlcIn19LGxpbmU6e3N0cm9rZTpcIiM0NjUyNUZcIn0sZ3JpZDp7bGluZTp7c3Ryb2tlOlwiIzQ2NTI1RlwifX19fSxsZWdlbmQ6e3JpZ2h0Ont3b3JkOntmaWxsOlwiIzk5OVwifSx0aXRsZTp7ZmlsbDpcIiM5OTlcIn19LGxlZnQ6e3dvcmQ6e2ZpbGw6XCIjOTk5XCJ9LHRpdGxlOntmaWxsOlwiIzk5OVwifX0sdG9wOnt3b3JkOntmaWxsOlwiIzk5OVwifX0sYm90dG9tOnt3b3JkOntmaWxsOlwiIzk5OVwifX19LGd1aWRlOnt0ZXh0OntmaWxsOlwiIzk5OVwifSx0YWc6e3RleHQ6e2ZpbGw6XCIjOTk5XCJ9fX19KTt0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPXtcImRlZmF1bHRcIjpuKDQ2KSxkYXJrOm4oMzI0KSxjaGVlcnk6bigzMjMpfTt0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7dmFyIGU9dC5nZXQoXCJlbFwiKTtlLnN0eWxlLnBvc2l0aW9uPVwiYWJzb2x1dGVcIixlLnN0eWxlLnRvcD0wLGUuc3R5bGUubGVmdD0wfWZ1bmN0aW9uIGkodCxlKXt2YXIgbj1uZXcgYyh0KTtyZXR1cm4gZSYmcihuKSxuLnNldChcImZvbnRGYW1pbHlcIixmLmZvbnRGYW1pbHkpLG59ZnVuY3Rpb24gYSh0KXt2YXIgZT10LmlkLG49ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZSkscj10LmNvbnRhaW5lcjtpZighbiYmIXIpdGhyb3cgbmV3IEVycm9yKFwicGxlYXNlIHNwZWNpZnkgdGhlIGNhbnZhcyBjb250YWluZXIgSWQgIVwiKTtpZihuJiZyKXRocm93IG5ldyBFcnJvcigncGxlYXNlIHNwZWNpZnkgdGhlIFwiY29udGFpbmVyXCIgb3IgXCJpZFwiIHByb3BlcnR5ICEnKTtpZighcil7dmFyIGk9dS5ndWlkKFwiZy1jaGFydFwiKTtyPXUuY3JlYXRlRG9tKFwiPGRpdj48L2Rpdj5cIiksci5pZD1pLG4uYXBwZW5kQ2hpbGQocil9cmV0dXJuIHJ9ZnVuY3Rpb24gcyh0KXt2YXIgZT10LmNvbnRhaW5lcixuPXUuZ2V0V2lkdGgoZSk7cmV0dXJuIHQud2lkdGg9bix0fWZ1bmN0aW9uIG8odCl7dmFyIGU9dC53aWR0aCxuPXQuaGVpZ2h0LHI9dC5jb250YWluZXIsYT17d2lkdGg6ZSxoZWlnaHQ6bixjb250YWluZXJET006cixjYXB0dXJlOiExfSxzPWkoYSwhMSksbz1pKGEsITApLHU9aShhLCEwKTtyZXR1cm4gdC5iYWNrQ2FudmFzPXMsdC5jYW52YXM9byx0LmZyb250Q2FudmFzPXUsdH12YXIgdT1uKDEpLGM9bigxMSksbD1jLkNvbXBvbmVudHMsaD1sLlBsb3QsZj1uKDUpLGc9e2luaXRDb250YWluZXI6ZnVuY3Rpb24odCl7dmFyIGU9dS5taXgoe30sZi5wbG90Q2ZnLHQucGxvdENmZyksbj1hKHQpO3QucGxvdENmZz1lLHQuY29udGFpbmVyPW4sdC5mb3JjZUZpdCYmKHQ9cyh0KSksdD1vKHQpO3ZhciByPXQuYmFja0NhbnZhcyxpPXIuYWRkR3JvdXAoaC5CYWNrLGUpO3JldHVybiB0LmJhY2tQbG90Qmc9aSx0LnBsb3RSYW5nZT1pLmdldChcInBsb3RSYW5nZVwiKSx0fX07dC5leHBvcnRzPWd9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3ZhciBlPVtcInBvbGFyXCIsXCJwbHVzXCIsXCJ0aGV0YVwiXTtyZXR1cm4gby5pbkFycmF5KGUsdC50eXBlKX1mdW5jdGlvbiBpKHQpe3ZhciBlPXQuY29vcmRDZmc7cmV0dXJuIShlJiYhby5pc051bGwoZS5zdGFydEFuZ2xlKSYmIW8uaXNOdWxsKGUuZW5kQW5nbGUpJiZlLmVuZEFuZ2xlLWUuc3RhcnRBbmdsZTwyKk1hdGguUEkpfWZ1bmN0aW9uIGEodCxlKXt2YXIgbj0hIXRbZV07cmV0dXJuIG58fG8uZWFjaCh0LGZ1bmN0aW9uKHQscil7dmFyIGk9ci5zcGxpdChcIipcIik7aWYoaS5pbmRleE9mKGUpIT09LTEpcmV0dXJuIG49ITAsITF9KSxufWZ1bmN0aW9uIHModCxlKXtyZXR1cm4gZnVuY3Rpb24obil7dmFyIHI9dGhpcyxpPVtdO2UmJihpPWkuY29uY2F0KGUpKSxuJiYoaT1pLmNvbmNhdChuKSk7dmFyIGE9bmV3IGcoe2NoYXJ0OnIsdHlwZTp0LGFkanVzdHM6aX0pO3JldHVybiByLl9hZGRMYXllcihhKSxhfX12YXIgbz1uKDEpLHU9bigyNyksYz1uKDIpLGw9big1KSxoPW4oOTMpLGY9big5NiksZz1uKDMwMSkscD1mdW5jdGlvbiB4KHQpe3guc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCksdGhpcy5faW5pdCgpfTtwLkFUVFJTPXtzdGFydDpudWxsLGVuZDpudWxsLHRvb2x0aXBFbmFibGU6ITAsaW5kZXg6MCxkYXRhOm51bGwsbGF5ZXJzOltdLGdlb21zOltdLGZpbHRlcnM6e30sc2NhbGVzOnt9fSxvLmV4dGVuZChwLHUpLG8uYXVnbWVudChwLHtfaW5pdDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwiZGF0YVwiKTt0aGlzLl9pbml0RGF0YSh0KSxoLmluaXRTY2FsZSh0aGlzKSxoLmluaXRDb29yZCh0aGlzKSxoLmluaXRBeGlzKHRoaXMpLGguaW5pdEd1aWRlKHRoaXMpLHRoaXMuZ2V0KFwic3RhcnRcIil8fHRoaXMuc2V0KFwic3RhcnRcIix7eDowLHk6MH0pLHRoaXMuZ2V0KFwiZW5kXCIpfHx0aGlzLnNldChcImVuZFwiLHt4OjEseToxfSksdGhpcy5zZXQoXCJnZW9tc1wiLFtdKSx0aGlzLnNldChcImxheWVyc1wiLFtdKSx0aGlzLnNldChcInNjYWxlc1wiLHt9KSx0aGlzLnNldChcImF4aXNDZmdcIix7fSksdGhpcy5zZXQoXCJmaWx0ZXJzXCIse30pfSxfaW5pdERhdGE6ZnVuY3Rpb24odCl7dCYmKHQgaW5zdGFuY2VvZiBjfHwodD1uZXcgYyh0KSksdGhpcy5zZXQoXCJkYXRhXCIsdCkpfSxfYWRkTGF5ZXI6ZnVuY3Rpb24odCl7dGhpcy5nZXQoXCJsYXllcnNcIikucHVzaCh0KX0sX3RyYWluU2NhbGVzOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5nZXQoXCJzY2FsZXNcIikscj1bXTtvLmVhY2gobixmdW5jdGlvbih0KXtlKHQpJiZyLnB1c2godCl9KTt2YXIgaT10aGlzLmdldChcInNjYWxlQXNzaXN0XCIpO2kudHJhaW5TY2FsZXModCxyKX0sX3RyYWluTGluZWFyU2NhbGVzOmZ1bmN0aW9uKHQpe3RoaXMuX3RyYWluU2NhbGVzKHQsZnVuY3Rpb24odCl7cmV0dXJuIHQuaXNMaW5lYXJ9KX0sX3RyYWluQ2F0U2NhbGVzOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldChcImZpbHRlcnNcIik7ZS5fdHJhaW5TY2FsZXModCxmdW5jdGlvbih0KXtyZXR1cm4gdC5pc0NhdGVnb3J5JiYhYShuLHQuZGltKX0pfSxfcHJvY2Vzc1NjYWxlczpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcImNvb3JkQXNzaXN0XCIpLG49dC5nZXRYU2NhbGUoKSxhPXQuZ2V0WVNjYWxlcygpLHM9W107biYmcy5wdXNoKG4pLHM9cy5jb25jYXQoYSk7dmFyIHU9cihlKSYmaShlKTtvLmVhY2gocyxmdW5jdGlvbih0KXtpZih0LmlzQ2F0ZWdvcnkpe3ZhciBuLHI9dC52YWx1ZXMubGVuZ3RoO2lmKDE9PT1yKW49Wy41LDFdO2Vsc2V7dmFyIGk9MSxhPTA7dT9lLmhhc0FjdGlvbihcInRyYW5zcG9zZVwiKT8oaT1sLndpZHRoUmF0aW8ubXVsdGlwbGVQaWUsYT0xL3IqaSxuPVthLzIsMS1hLzJdKTpuPVswLDEtMS9yXTooaT1sLndpZHRoUmF0aW8uY29sdW1uLGE9MS9yKmksbj1bYSwxLWFdKX10LnJhbmdlPW59fSl9LF9jcmVhdGVDb29yZDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwiY29vcmRBc3Npc3RcIiksZT10aGlzLmdldChcInJlZ2lvblwiKSxuPWUuc3RhcnQscj1lLmVuZCxpPXQuY3JlYXRlQ29vcmQobixyKTtpZih0aGlzLmdldChcImZhY2V0XCIpKXt2YXIgYT10aGlzLmdldChcImZhY2V0XCIpO1wibWlycm9yXCI9PT1hLnR5cGUmJigxPT09YS5yb3dzPyhpLnRyYW5zcG9zZSgpLDA9PT1hLmNvbEluZGV4JiZpLnNjYWxlKC0xLDEpKToxPT09YS5yb3dJbmRleCYmaS5zY2FsZSgxLC0xKSl9cmV0dXJuIHRoaXMuc2V0KFwiY29vcmRcIixpKSxpfSxfY3JlYXRlR2VvbXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcImxheWVyc1wiKSxlPXRoaXMuZ2V0KFwiY29vcmRcIiksbj1bXTtyZXR1cm4gby5lYWNoKHQsZnVuY3Rpb24odCl7dmFyIHI9dC5jcmVhdGVHZW9tKCk7ci5zZXQoXCJjb29yZFwiLGUpLG4ucHVzaChyKX0pLHRoaXMuc2V0KFwiZ2VvbXNcIixuKSxufSxfcmVuZGVyQXhpczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwiYXhpc0Fzc2lzdFwiKTt0LmNvbnRhaW5lcj10aGlzLmdldChcImJhY2tQbG90XCIpO3ZhciBlPXRoaXMuZ2V0WFNjYWxlKCksbj10aGlzLmdldFlTY2FsZXMoKTt0LmNyZWF0ZUF4aXModGhpcyxlLG4pfSxfcmVuZGVyR3VpZGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcImd1aWRlQXNzaXN0XCIpO2lmKHQuZ3VpZGVzLmxlbmd0aCl7aWYoIXRoaXMuZ2V0KFwiZnJvbnRQbG90XCIpKXt2YXIgZT10aGlzLmdldChcImZyb250Q2FudmFzXCIpLG49ZS5hZGRHcm91cCgpO3RoaXMuc2V0KFwiZnJvbnRQbG90XCIsbil9dC5iYWNrUGxvdD10aGlzLmdldChcImJhY2tQbG90XCIpLHQuZnJvbnRQbG90PXRoaXMuZ2V0KFwiZnJvbnRQbG90XCIpO3ZhciByPXRoaXMuZ2V0KFwiY29vcmRcIiksaT10aGlzLmdldFhTY2FsZSgpLGE9dGhpcy5nZXRZU2NhbGVzKClbMF07dC5zZXRTY2FsZShpLGEpLHQucGFpbnQocil9fSxfaW5pdFBsb3Q6ZnVuY3Rpb24oKXtpZighdGhpcy5nZXQoXCJwbG90Q29udGFpbmVyXCIpKXt2YXIgdD10aGlzLmdldChcImNhbnZhc1wiKSxlPXQuYWRkR3JvdXAoKTt0aGlzLnNldChcInBsb3RDb250YWluZXJcIixlKX1pZighdGhpcy5nZXQoXCJiYWNrUGxvdFwiKSl7dmFyIG49dGhpcy5nZXQoXCJiYWNrQ2FudmFzXCIpLHI9bi5hZGRHcm91cCgpO3RoaXMuc2V0KFwiYmFja1Bsb3RcIixyKX19LF9jbGVhcklubmVyOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJnZW9tc1wiKTtyZXR1cm4gdC5sZW5ndGgmJm8uZWFjaCh0LGZ1bmN0aW9uKHQpe3QuZGVzdHJveSgpfSksdGhpcy5zZXQoXCJnZW9tc1wiLFtdKSx0aGlzLmdldChcInBsb3RDb250YWluZXJcIikmJnRoaXMuZ2V0KFwicGxvdENvbnRhaW5lclwiKS5jbGVhcigpLHRoaXMuZ2V0KFwiYmFja1Bsb3RcIikmJnRoaXMuZ2V0KFwiYmFja1Bsb3RcIikuY2xlYXIoKSx0aGlzLmdldChcImZyb250UGxvdFwiKSYmdGhpcy5nZXQoXCJmcm9udFBsb3RcIikuY2xlYXIoKSx0aGlzfSxfZmlsdGVyRGF0YTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldChcInNjYWxlQXNzaXN0XCIpLG49dGhpcy5nZXQoXCJzY2FsZXNcIikscj10aGlzLmdldChcImZpbHRlcnNcIik7cmV0dXJuIGUuZmlsdGVyRGF0YSh0LHIsbil9LHNvdXJjZTpmdW5jdGlvbih0LGUpe2lmKGUpe3ZhciBuPXRoaXMuZ2V0KFwic2NhbGVBc3Npc3RcIik7bi5kZWZzPWV9cmV0dXJuIHRoaXMuX2luaXREYXRhKHQpLHRoaXN9LGNvb3JkOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5nZXQoXCJjb29yZEFzc2lzdFwiKTtyZXR1cm4gbi50eXBlPXQsbi5jb29yZENmZz1lLG4ucmVzZXRBY3Rpb25zKCksbn0sYXhpczpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZ2V0KFwiYXhpc0Fzc2lzdFwiKTtpZih0PT09ITEpbi5lbmFibGU9ITE7ZWxzZXt2YXIgcj1uLmF4aXNDZmc7bi5lbmFibGU9ITAsclt0XT1lfXJldHVybiB0aGlzfSxndWlkZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldChcImd1aWRlQXNzaXN0XCIpfSxmaWx0ZXI6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmdldChcImZpbHRlcnNcIik7cmV0dXJuIG5bdF09ZSx0aGlzLnNldChcImZpbHRlcnNcIixuKSx0aGlzfSxjb2w6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmdldChcInNjYWxlQXNzaXN0XCIpLHI9bi5kZWZzO3JldHVybiByW3RdPWUsdGhpc30scmVuZGVyOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0Ll9pbml0UGxvdCgpO3ZhciBlPXQuZ2V0KFwic2NhbGVBc3Npc3RcIiksbj10LmdldChcImRhdGFcIikscj10LmdldChcInNjYWxlc1wiKTtuPWUucHJvY2Vzc0NhdFNjYWxlKG4sciksbj10Ll9maWx0ZXJEYXRhKG4pO3ZhciBpPXRoaXMuX2NyZWF0ZUNvb3JkKCksYT10aGlzLl9jcmVhdGVHZW9tcygpLHM9W107by5lYWNoKGEsZnVuY3Rpb24odCl7dmFyIGU9dC5wcm9jZXNzRGF0YShuKTt0LnNldChcImZyYW1lc1wiLGUpLHM9cy5jb25jYXQoZSl9KTt2YXIgdT1jLmZvcmNlTWVyZ2UuYXBwbHkobnVsbCxzKTt0Ll90cmFpbkNhdFNjYWxlcyh1KSx0Ll9wcm9jZXNzU2NhbGVzKCkscz1bXSxvLmVhY2goYSxmdW5jdGlvbih0KXt2YXIgZT10LmdldChcImZyYW1lc1wiKTtlPXQubnVtYmVyaWNGcmFtZXMoZSksZT10LnByb2Nlc3NBZGp1c3QoZSksdC5zZXQoXCJmcmFtZXNcIixlKSxzPXMuY29uY2F0KGUpfSk7dmFyIGw9Yy5mb3JjZU1lcmdlLmFwcGx5KG51bGwscyk7dC5fdHJhaW5MaW5lYXJTY2FsZXMobCksdC5maXJlKFwiYmVmb3JlcGFpbnRcIix7Y2hhcnQ6dH0pLG8uZWFjaChhLGZ1bmN0aW9uKHQpe3QucGFpbnQoaSx0LmdldChcImZyYW1lc1wiKSxmdW5jdGlvbihlLG4pe2lmKHQuaXNTaGFyZVRvb2x0aXAoKSl7dmFyIHI9W10saT10LmdldFhTY2FsZSgpLmRpbTtvLmVhY2gobixmdW5jdGlvbih0KXtyLnB1c2goYy5zb3J0KHQsaSkpfSksdC5zZXQoXCJmcmFtZXNcIixyKX19KX0pLHQuX3JlbmRlckd1aWRlKCk7dmFyIGg9dC5nZXRYU2NhbGUoKTtoJiZ0Ll9yZW5kZXJBeGlzKCksdC5maXJlKFwiYWZ0ZXJwYWludFwiKSx0LmdldChcInBsb3RDb250YWluZXJcIikuc29ydCgpO3ZhciBmPXQuZ2V0KFwicGFyZW50XCIpO2YmJiFmLmdldChcInBhaW50aW5nXCIpJiYodC5nZXQoXCJiYWNrQ2FudmFzXCIpLmRyYXcoKSx0LmdldChcImNhbnZhc1wiKS5kcmF3KCkpfSx0b29sdGlwOmZ1bmN0aW9uKHQpe3RoaXMuc2V0KFwidG9vbHRpcEVuYWJsZVwiLHQpfSxjaGFuZ2VEYXRhOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0KFwic2NhbGVzXCIpLG49dGhpcy5nZXQoXCJzY2FsZUFzc2lzdFwiKTtyZXR1cm4gdGhpcy5faW5pdERhdGEodCksdD10aGlzLmdldChcImRhdGFcIiksbi5yZXNldFNjYWxlcyh0LGUpLHRoaXMucmVwYWludCgpLHRoaXN9LGNsZWFyOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0KFwiZ3VpZGVBc3Npc3RcIikuY2xlYXIoKSx0aGlzLnNldChcImxheWVyc1wiLFtdKSx0aGlzLnNldChcInNjYWxlc1wiLHt9KSx0aGlzLnNldChcImZpbHRlcnNcIix7fSksdGhpcy5fY2xlYXJJbm5lcigpLHRoaXMuZ2V0KFwiYmFja0NhbnZhc1wiKS5kcmF3KCksdGhpcy5nZXQoXCJjYW52YXNcIikuZHJhdygpLHRoaXMuZ2V0KFwiZnJvbnRDYW52YXNcIikuZHJhdygpLHRoaXN9LHJlcGFpbnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2xlYXJJbm5lcigpLHRoaXMucmVuZGVyKCksdGhpc30sZ2V0QWN0aXZlU2hhcGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJnZW9tc1wiKSxuPW51bGw7cmV0dXJuIG8uZWFjaChlLGZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0KFwiYWN0aXZlU2hhcGVzXCIpO2lmKGUmJmUubGVuZ3RoKXJldHVybiBuPWVbMF0sITF9KSxufSxnZXRTbmFwUmVjb3JkczpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXQoXCJnZW9tc1wiKSxyPVtdO3JldHVybiBvLmVhY2gobixmdW5jdGlvbihlKXt2YXIgbixpPWUuZ2V0KFwiZnJhbWVzXCIpO2lmKFwicG9pbnRcIj09PWUuZ2V0KFwidHlwZVwiKSl7dmFyIGE9Yy5tZXJnZS5hcHBseShudWxsLGkpO249ZS5maW5kUG9pbnQodCxhKSxuJiZyLnB1c2gobil9ZWxzZSBvLmVhY2goaSxmdW5jdGlvbihpKXtuPWUuZmluZFBvaW50KHQsaSksbiYmci5wdXNoKG4pfSl9KSxyfSxnZXRQb3NpdGlvbjpmdW5jdGlvbih0KXt2YXIgZSxuLHIsaT10aGlzLGE9aS5nZXQoXCJjb29yZFwiKSxzPWkuZ2V0WFNjYWxlKCk7cyYmKHI9cy5kaW0sZT1zLnNjYWxlKHRbcl0pKTt2YXIgdT10aGlzLmdldChcInNjYWxlc1wiKTtyZXR1cm4gby5lYWNoKHUsZnVuY3Rpb24oZSl7aWYoZSYmZS5kaW0hPT1yJiZ0W2UuZGltXSl7dmFyIGk9ZS5kaW07cmV0dXJuIHZvaWQobj1lLnNjYWxlKHRbaV0pKX19KSxhLmNvbnZlcnQoe3g6ZSx5Om59KX0sZ2V0WFNjYWxlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJnZW9tc1wiKSxlPW51bGw7cmV0dXJuIHQubGVuZ3RoJiYoZT10WzBdLmdldFhTY2FsZSgpKSxlfSxnZXRZU2NhbGVzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJnZW9tc1wiKSxlPVtdO3JldHVybiBvLmVhY2godCxmdW5jdGlvbih0KXt2YXIgbj10LmdldFlTY2FsZSgpO24mJm8uaW5kZXhPZihlLG4pPT09LTEmJmUucHVzaChuKX0pLGV9LGdldEdlb21zOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0KFwiZ2VvbXNcIil9LGdldFNjYWxlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0KFwic2NhbGVzXCIpO3JldHVybiBlW3RdfSxjcmVhdGVTY2FsZTpmdW5jdGlvbih0LGUpe2U9ZXx8dGhpcy5nZXQoXCJkYXRhXCIpO3ZhciBuPXRoaXMuZ2V0KFwic2NhbGVBc3Npc3RcIikscj10aGlzLmdldChcInNjYWxlc1wiKTtyZXR1cm4gclt0XXx8KHJbdF09bi5jcmVhdGVTY2FsZSh0LGUpKSxyW3RdfX0pO2Zvcih2YXIgdiBpbiBmKWYuaGFzT3duUHJvcGVydHkodikmJih2PXYudG9Mb3dlckNhc2UoKSxwLnByb3RvdHlwZVt2XT1zKHYpKTt2YXIgZD1bXCJwb2ludFN0YWNrXCIsXCJwb2ludEppdHRlclwiLFwicG9pbnREb2RnZVwiLFwiaW50ZXJ2YWxTdGFja1wiLFwiaW50ZXJ2YWxEb2RnZVwiLFwiaW50ZXJ2YWxTeW1tZXRyaWNcIixcImFyZWFTdGFja1wiLFwic2NoZW1hRG9kZ2VcIl07by5lYWNoKGQsZnVuY3Rpb24odCl7dmFyIGU9dC5yZXBsYWNlKC8oW2Etel0oPz1bQS1aXSkpL2csXCIkMSBcIiksbj1lLnNwbGl0KFwiIFwiKSxyPW5bMF0saT1vLnVjZmlyc3QoblsxXSk7XCJwb2ludERvZGdlXCI9PT10JiYoaT1bXCJEb2RnZVwiLFwiU3RhY2tcIl0pLHAucHJvdG90eXBlW3RdPXMocixpKX0pLHQuZXhwb3J0cz1wfSxbMzMyLDMyOSw5OV0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCxlLG4scil7dmFyIGk9dFtyXSsoZVtyXS10W3JdKSpuO3JldHVybiBpfXZhciBpPW4oOTkpLGE9bigxKTt0LmV4cG9ydHM9e2NhbENvbG9yOmZ1bmN0aW9uKHQsZSxuKXt2YXIgYSxzPXQubGVuZ3RoLTEsbz1NYXRoLmZsb29yKHMqZSksdT1zKmUtbyxjPXRbb10sbD1vPT09cz9jOnRbbysxXTtyZXR1cm5cImhzbFwiPT09bj9hPWkuaHNsMlJnYihbcihjLGwsdSwwKSxyKGMsbCx1LDEpLHIoYyxsLHUsMildKTooYT17cjpyKGMsbCx1LDApLGc6cihjLGwsdSwxKSxiOnIoYyxsLHUsMil9LGE9XCIjXCIraS50b0hleChhLnIpK2kudG9IZXgoYS5nKStpLnRvSGV4KGEuYikpLGF9LGxpZ2h0bmVzczpmdW5jdGlvbih0LGUpe2U9ZXx8MDt2YXIgbj1bW2UsMSwuOV0sW2UsMSwuNV1dO3JldHVybiB0aGlzLmNhbENvbG9yKG4sdCxcImhzbFwiKX0scmVkOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmxpZ2h0bmVzcyh0LDApfSxibHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmxpZ2h0bmVzcyh0LC42Nil9LGdyZWVuOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmxpZ2h0bmVzcyh0LC4zMyl9LGdyYWRpZW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1bXTtyZXR1cm4gYS5pc1N0cmluZyh0KSYmKHQ9dC5zcGxpdChcIi1cIikpLGEuZWFjaCh0LGZ1bmN0aW9uKHQpe3QuaW5kZXhPZihcIiNcIik9PT0tMSYmKHQ9aS50b1JHQih0KSksbi5wdXNoKGkucmdiMmFycih0KSl9KSxmdW5jdGlvbih0KXtyZXR1cm4gZS5jYWxDb2xvcihuLHQpfX0sZ3JhZGllbnRIc2w6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPVtdO3JldHVybiBhLmlzU3RyaW5nKHQpJiYodD10LnNwbGl0KFwiLVwiKSksYS5lYWNoKHQsZnVuY3Rpb24odCl7dC5pbmRleE9mKFwiI1wiKT09PS0xJiYodD1pLnRvUkdCKHQpKSxuLnB1c2goaS5yZ2IyaHNsKHQpKX0pLGZ1bmN0aW9uKHQpe3JldHVybiBlLmNhbENvbG9yKG4sdCxcImhzbFwiKX19LHNhdHVyYXRpb246ZnVuY3Rpb24odCxlKXtlPWV8fDA7dmFyIG49W1tlLDAsLjVdLFtlLDEsLjVdXTtyZXR1cm4gdGhpcy5jYWxDb2xvcihuLHQsXCJoc2xcIil9LGh1ZTpmdW5jdGlvbih0KXt2YXIgZT1bWzAsMSwuNV0sWzEsMSwuNV1dO3JldHVybiB0aGlzLmNhbENvbG9yKGUsdCxcImhzbFwiKX0sYnJpZ2h0bmVzczpmdW5jdGlvbih0KXt2YXIgZT1bWzI1NSwyNTUsMjU1XSxbMCwwLDBdXTtyZXR1cm4gdGhpcy5jYWxDb2xvcihlLHQpfSxoZWF0OmZ1bmN0aW9uKHQpe3ZhciBlPVtbMjU1LDI1NSwyNTVdLFsyNTUsMTI3LjUsMF0sWzAsMCwwXV07cmV0dXJuIHRoaXMuY2FsQ29sb3IoZSx0KX0scmFpbmJvdzpmdW5jdGlvbih0KXt2YXIgZT1bWzAsMjU1LDI1NV0sWzAsMCwyNTVdLFswLDI1NSwwXSxbMjU1LDAsMF1dO3JldHVybiB0aGlzLmNhbENvbG9yKGUsdCl9LGNpcmN1bGFyOmZ1bmN0aW9uKHQpe3ZhciBlPVtbMCwwLDI1NV0sWzAsMjU1LDBdLFsyNTUsMjU1LDBdLFsyNTUsMCwwXSxbMCwwLDI1NV1dO3JldHVybiB0aGlzLmNhbENvbG9yKGUsdCl9LGJpcG9sYXI6ZnVuY3Rpb24odCl7dmFyIGU9W1swLDI1NSwwXSxbMCwwLDBdLFsyNTUsMCwwXV07cmV0dXJuIHRoaXMuY2FsQ29sb3IoZSx0KX19fSxmdW5jdGlvbih0LGUpey8qKlxuXHQqIEBsaWNlbnNlXG5cdCpcblx0KiBSZWdyZXNzaW9uLkpTIC0gUmVncmVzc2lvbiBmdW5jdGlvbnMgZm9yIGphdmFzY3JpcHRcblx0KiBodHRwOi8vdG9tLWFsZXhhbmRlci5naXRodWIuY29tL3JlZ3Jlc3Npb24tanMvXG5cdCpcblx0KiBjb3B5cmlnaHQoYykgMjAxMyBUb20gQWxleGFuZGVyXG5cdCogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuXHQqXG5cdCoqL1xuXCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZnVuY3Rpb24odCxlKXt2YXIgbj0wLHI9MCxpPTAsYT0wLHM9MCxvPXQubGVuZ3RoLTEsdT1uZXcgQXJyYXkoZSk7Zm9yKG49MDtuPG87bisrKXtmb3IoYT1uLHI9bisxO3I8bztyKyspTWF0aC5hYnModFtuXVtyXSk+TWF0aC5hYnModFtuXVthXSkmJihhPXIpO2ZvcihpPW47aTxvKzE7aSsrKXM9dFtpXVtuXSx0W2ldW25dPXRbaV1bYV0sdFtpXVthXT1zO2ZvcihyPW4rMTtyPG87cisrKWZvcihpPW87aT49bjtpLS0pdFtpXVtyXS09dFtpXVtuXSp0W25dW3JdL3Rbbl1bbl19Zm9yKHI9by0xO3I+PTA7ci0tKXtmb3Iocz0wLGk9cisxO2k8bztpKyspcys9dFtpXVtyXSp1W2ldO3Vbcl09KHRbb11bcl0tcykvdFtyXVtyXX1yZXR1cm4gdX0scj17bGluZWFyOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bMCwwLDAsMCwwXSxuPTAscj1bXTtuPHQubGVuZ3RoO24rKyludWxsIT10W25dWzFdJiYoZVswXSs9dFtuXVswXSxlWzFdKz10W25dWzFdLGVbMl0rPXRbbl1bMF0qdFtuXVswXSxlWzNdKz10W25dWzBdKnRbbl1bMV0sZVs0XSs9dFtuXVsxXSp0W25dWzFdKTtmb3IodmFyIGk9KG4qZVszXS1lWzBdKmVbMV0pLyhuKmVbMl0tZVswXSplWzBdKSxhPWVbMV0vbi1pKmVbMF0vbixzPTAsbz10Lmxlbmd0aDtzPG87cysrKXt2YXIgdT1bdFtzXVswXSx0W3NdWzBdKmkrYV07ci5wdXNoKHUpfXZhciBjPVwieSA9IFwiK01hdGgucm91bmQoMTAwKmkpLzEwMCtcInggKyBcIitNYXRoLnJvdW5kKDEwMCphKS8xMDA7cmV0dXJue2VxdWF0aW9uOltpLGFdLHBvaW50czpyLHN0cmluZzpjfX0sbGluZWFyVGhyb3VnaE9yaWdpbjpmdW5jdGlvbih0KXtmb3IodmFyIGU9WzAsMF0sbj0wLHI9W107bjx0Lmxlbmd0aDtuKyspbnVsbCE9dFtuXVsxXSYmKGVbMF0rPXRbbl1bMF0qdFtuXVswXSxlWzFdKz10W25dWzBdKnRbbl1bMV0pO2Zvcih2YXIgaT1lWzFdL2VbMF0sYT0wLHM9dC5sZW5ndGg7YTxzO2ErKyl7dmFyIG89W3RbYV1bMF0sdFthXVswXSppXTtyLnB1c2gobyl9dmFyIHU9XCJ5ID0gXCIrTWF0aC5yb3VuZCgxMDAqaSkvMTAwK1wieFwiO3JldHVybntlcXVhdGlvbjpbaV0scG9pbnRzOnIsc3RyaW5nOnV9fSxleHBvbmVudGlhbDpmdW5jdGlvbih0KXt2YXIgZT1bMCwwLDAsMCwwLDBdLG49MCxyPVtdO2Zvcih1PXQubGVuZ3RoO248dTtuKyspbnVsbCE9dFtuXVsxXSYmKGVbMF0rPXRbbl1bMF0sZVsxXSs9dFtuXVsxXSxlWzJdKz10W25dWzBdKnRbbl1bMF0qdFtuXVsxXSxlWzNdKz10W25dWzFdKk1hdGgubG9nKHRbbl1bMV0pLGVbNF0rPXRbbl1bMF0qdFtuXVsxXSpNYXRoLmxvZyh0W25dWzFdKSxlWzVdKz10W25dWzBdKnRbbl1bMV0pO2Zvcih2YXIgaT1lWzFdKmVbMl0tZVs1XSplWzVdLGE9TWF0aC5wb3coTWF0aC5FLChlWzJdKmVbM10tZVs1XSplWzRdKS9pKSxzPShlWzFdKmVbNF0tZVs1XSplWzNdKS9pLG89MCx1PXQubGVuZ3RoO288dTtvKyspe3ZhciBjPVt0W29dWzBdLGEqTWF0aC5wb3coTWF0aC5FLHMqdFtvXVswXSldO3IucHVzaChjKX12YXIgbD1cInkgPSBcIitNYXRoLnJvdW5kKDEwMCphKS8xMDArXCJlXihcIitNYXRoLnJvdW5kKDEwMCpzKS8xMDArXCJ4KVwiO3JldHVybntlcXVhdGlvbjpbYSxzXSxwb2ludHM6cixzdHJpbmc6bH19LGxvZ2FyaXRobWljOmZ1bmN0aW9uKHQpe3ZhciBlPVswLDAsMCwwXSxuPTAscj1bXTtmb3Iobz10Lmxlbmd0aDtuPG87bisrKW51bGwhPXRbbl1bMV0mJihlWzBdKz1NYXRoLmxvZyh0W25dWzBdKSxlWzFdKz10W25dWzFdKk1hdGgubG9nKHRbbl1bMF0pLGVbMl0rPXRbbl1bMV0sZVszXSs9TWF0aC5wb3coTWF0aC5sb2codFtuXVswXSksMikpO2Zvcih2YXIgaT0obiplWzFdLWVbMl0qZVswXSkvKG4qZVszXS1lWzBdKmVbMF0pLGE9KGVbMl0taSplWzBdKS9uLHM9MCxvPXQubGVuZ3RoO3M8bztzKyspe3ZhciB1PVt0W3NdWzBdLGEraSpNYXRoLmxvZyh0W3NdWzBdKV07ci5wdXNoKHUpfXZhciBjPVwieSA9IFwiK01hdGgucm91bmQoMTAwKmEpLzEwMCtcIiArIFwiK01hdGgucm91bmQoMTAwKmkpLzEwMCtcIiBsbih4KVwiO3JldHVybntlcXVhdGlvbjpbYSxpXSxwb2ludHM6cixzdHJpbmc6Y319LHBvd2VyOmZ1bmN0aW9uKHQpe3ZhciBlPVswLDAsMCwwXSxuPTAscj1bXTtmb3Iobz10Lmxlbmd0aDtuPG87bisrKW51bGwhPXRbbl1bMV0mJihlWzBdKz1NYXRoLmxvZyh0W25dWzBdKSxlWzFdKz1NYXRoLmxvZyh0W25dWzFdKSpNYXRoLmxvZyh0W25dWzBdKSxlWzJdKz1NYXRoLmxvZyh0W25dWzFdKSxlWzNdKz1NYXRoLnBvdyhNYXRoLmxvZyh0W25dWzBdKSwyKSk7Zm9yKHZhciBpPShuKmVbMV0tZVsyXSplWzBdKS8obiplWzNdLWVbMF0qZVswXSksYT1NYXRoLnBvdyhNYXRoLkUsKGVbMl0taSplWzBdKS9uKSxzPTAsbz10Lmxlbmd0aDtzPG87cysrKXt2YXIgdT1bdFtzXVswXSxhKk1hdGgucG93KHRbc11bMF0saSldO3IucHVzaCh1KX12YXIgYz1cInkgPSBcIitNYXRoLnJvdW5kKDEwMCphKS8xMDArXCJ4XlwiK01hdGgucm91bmQoMTAwKmkpLzEwMDtyZXR1cm57ZXF1YXRpb246W2EsaV0scG9pbnRzOnIsc3RyaW5nOmN9fSxwb2x5bm9taWFsOmZ1bmN0aW9uKHQsZSl7XCJ1bmRlZmluZWRcIj09dHlwZW9mIGUmJihlPTIpO2Zvcih2YXIgcj1bXSxpPVtdLGE9W10scz0wLG89MCx1PTAsYz1lKzE7dTxjO3UrKyl7Zm9yKHZhciBsPTAsaD10Lmxlbmd0aDtsPGg7bCsrKW51bGwhPXRbbF1bMV0mJihzKz1NYXRoLnBvdyh0W2xdWzBdLHUpKnRbbF1bMV0pO3IucHVzaChzKSxzPTA7Zm9yKHZhciBmPVtdLGc9MDtnPGM7ZysrKXtmb3IodmFyIGw9MCxoPXQubGVuZ3RoO2w8aDtsKyspbnVsbCE9dFtsXVsxXSYmKG8rPU1hdGgucG93KHRbbF1bMF0sdStnKSk7Zi5wdXNoKG8pLG89MH1pLnB1c2goZil9aS5wdXNoKHIpO2Zvcih2YXIgcD1uKGksYyksdT0wLGg9dC5sZW5ndGg7dTxoO3UrKyl7Zm9yKHZhciB2PTAsZD0wO2Q8cC5sZW5ndGg7ZCsrKXYrPXBbZF0qTWF0aC5wb3codFt1XVswXSxkKTthLnB1c2goW3RbdV1bMF0sdl0pfWZvcih2YXIgeD1cInkgPSBcIix1PXAubGVuZ3RoLTE7dT49MDt1LS0peCs9dT4xP01hdGgucm91bmQocFt1XSpNYXRoLnBvdygxMCx1KSkvTWF0aC5wb3coMTAsdSkrXCJ4XlwiK3UrXCIgKyBcIjoxPT11P01hdGgucm91bmQoMTAwKnBbdV0pLzEwMCtcInggKyBcIjpNYXRoLnJvdW5kKDEwMCpwW3VdKS8xMDA7cmV0dXJue2VxdWF0aW9uOnAscG9pbnRzOmEsc3RyaW5nOnh9fSxsYXN0dmFsdWU6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLG49bnVsbCxyPTA7cjx0Lmxlbmd0aDtyKyspdFtyXVsxXT8obj10W3JdWzFdLGUucHVzaChbdFtyXVswXSx0W3JdWzFdXSkpOmUucHVzaChbdFtyXVswXSxuXSk7cmV0dXJue2VxdWF0aW9uOltuXSxwb2ludHM6ZSxzdHJpbmc6XCJcIitufX19LGk9ZnVuY3Rpb24odCxlLG4pe2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXJldHVybiByW3RdKGUsbil9O3QuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe3ZhciB0PXt9LGU9W107cmV0dXJuIHQuZGF0YT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT1uLnNsaWNlKCksdCk6ZX0sdC5tYj1mdW5jdGlvbigpe3ZhciB0LG4scj1lLmxlbmd0aDtpZigxPT09cil0PTAsbj1lWzBdWzFdO2Vsc2V7Zm9yKHZhciBpLGEscyxvPTAsdT0wLGM9MCxsPTAsaD0wO2g8cjtoKyspaT1lW2hdLGE9aVswXSxzPWlbMV0sbys9YSx1Kz1zLGMrPWEqYSxsKz1hKnM7dD0ocipsLW8qdSkvKHIqYy1vKm8pLG49dS9yLXQqby9yfXJldHVybnttOnQsYjpufX0sdC5tPWZ1bmN0aW9uKCl7cmV0dXJuIHQubWIoKS5tfSx0LmI9ZnVuY3Rpb24oKXtyZXR1cm4gdC5tYigpLmJ9LHQubGluZT1mdW5jdGlvbigpe3ZhciBlPXQubWIoKSxuPWUubSxyPWUuYjtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIHIrbip0fX0sdH1mdW5jdGlvbiBuKHQsZSl7aWYodC5sZW5ndGg8MilyZXR1cm4gMTtmb3IodmFyIG4scj0wLGk9MDtpPHQubGVuZ3RoO2krKylyKz10W2ldWzFdO249ci90Lmxlbmd0aDtmb3IodmFyIGE9MCxzPTA7czx0Lmxlbmd0aDtzKyspYSs9TWF0aC5wb3cobi10W3NdWzFdLDIpO2Zvcih2YXIgbz0wLHU9MDt1PHQubGVuZ3RoO3UrKylvKz1NYXRoLnBvdyh0W3VdWzFdLWUodFt1XVswXSksMik7cmV0dXJuIDEtby9hfWZ1bmN0aW9uIHIoKXt2YXIgdD17fSxlPTAsbj17fTtyZXR1cm4gdC50cmFpbj1mdW5jdGlvbih0LHIpe25bcl18fChuW3JdPXt9KTtmb3IodmFyIGkgaW4gdCl7dmFyIGE9dFtpXTt2b2lkIDA9PT1uW3JdW2ldJiYobltyXVtpXT17fSksdm9pZCAwPT09bltyXVtpXVthXSYmKG5bcl1baV1bYV09MCksbltyXVtpXVt0W2ldXSsrfWUrK30sdC5zY29yZT1mdW5jdGlvbih0KXt2YXIgcixpPXt9O2Zvcih2YXIgYSBpbiB0KXt2YXIgcz10W2FdO2ZvcihyIGluIG4pdm9pZCAwPT09aVtyXSYmKGlbcl09e30pLG5bcl1bYV0/aVtyXVthK1wiX1wiK3NdPShuW3JdW2FdW3NdfHwwKS9lOmlbcl1bYStcIl9cIitzXT0wfXZhciBvPXt9O2ZvcihyIGluIGkpZm9yKHZhciB1IGluIGlbcl0pdm9pZCAwPT09b1tyXSYmKG9bcl09MCksb1tyXSs9aVtyXVt1XTtyZXR1cm4gb30sdH1mdW5jdGlvbiBpKHQpe2Zvcih2YXIgZT0wLG49MDtuPHQubGVuZ3RoO24rKyllKz10W25dO3JldHVybiBlfWZ1bmN0aW9uIGEodCl7cmV0dXJuIDA9PT10Lmxlbmd0aD9udWxsOmkodCkvdC5sZW5ndGh9ZnVuY3Rpb24gcyh0KXtpZigwPT09dC5sZW5ndGgpcmV0dXJuIG51bGw7Zm9yKHZhciBlPTEsbj0wO248dC5sZW5ndGg7bisrKXtpZih0W25dPD0wKXJldHVybiBudWxsO2UqPXRbbl19cmV0dXJuIE1hdGgucG93KGUsMS90Lmxlbmd0aCl9ZnVuY3Rpb24gbyh0KXtpZigwPT09dC5sZW5ndGgpcmV0dXJuIG51bGw7Zm9yKHZhciBlPTAsbj0wO248dC5sZW5ndGg7bisrKXtpZih0W25dPD0wKXJldHVybiBudWxsO2UrPTEvdFtuXX1yZXR1cm4gdC5sZW5ndGgvZX1mdW5jdGlvbiB1KHQpe2lmKDA9PT10Lmxlbmd0aClyZXR1cm4gbnVsbDtmb3IodmFyIGU9MCxuPTA7bjx0Lmxlbmd0aDtuKyspZSs9TWF0aC5wb3codFtuXSwyKTtyZXR1cm4gTWF0aC5zcXJ0KGUvdC5sZW5ndGgpfWZ1bmN0aW9uIGModCl7Zm9yKHZhciBlLG49MDtuPHQubGVuZ3RoO24rKykodFtuXTxlfHx2b2lkIDA9PT1lKSYmKGU9dFtuXSk7cmV0dXJuIGV9ZnVuY3Rpb24gbCh0KXtmb3IodmFyIGUsbj0wO248dC5sZW5ndGg7bisrKSh0W25dPmV8fHZvaWQgMD09PWUpJiYoZT10W25dKTtyZXR1cm4gZX1mdW5jdGlvbiBoKHQpe2lmKDA9PT10Lmxlbmd0aClyZXR1cm4gbnVsbDtmb3IodmFyIGU9YSh0KSxuPVtdLHI9MDtyPHQubGVuZ3RoO3IrKyluLnB1c2goTWF0aC5wb3codFtyXS1lLDIpKTtyZXR1cm4gYShuKX1mdW5jdGlvbiBmKHQpe3JldHVybiAwPT09dC5sZW5ndGg/bnVsbDpNYXRoLnNxcnQoaCh0KSl9ZnVuY3Rpb24gZyh0LGUpe2Zvcih2YXIgbj1hKHQpLHI9MCxpPTA7aTx0Lmxlbmd0aDtpKyspcis9TWF0aC5wb3codFtpXS1uLGUpO3JldHVybiByfWZ1bmN0aW9uIHAodCl7aWYodC5sZW5ndGg8PTEpcmV0dXJuIG51bGw7dmFyIGU9Zyh0LDIpO3JldHVybiBlLyh0Lmxlbmd0aC0xKX1mdW5jdGlvbiB2KHQpe3JldHVybiB0Lmxlbmd0aDw9MT9udWxsOk1hdGguc3FydChwKHQpKX1mdW5jdGlvbiBkKHQsZSl7aWYodC5sZW5ndGg8PTF8fHQubGVuZ3RoIT1lLmxlbmd0aClyZXR1cm4gbnVsbDtmb3IodmFyIG49YSh0KSxyPWEoZSksaT0wLHM9MDtzPHQubGVuZ3RoO3MrKylpKz0odFtzXS1uKSooZVtzXS1yKTtyZXR1cm4gaS8odC5sZW5ndGgtMSl9ZnVuY3Rpb24geCh0LGUpe3ZhciBuPWQodCxlKSxyPXYodCksaT12KGUpO3JldHVybiBudWxsPT09bnx8bnVsbD09PXJ8fG51bGw9PT1pP251bGw6bi9yL2l9ZnVuY3Rpb24gbSh0KXtpZigwPT09dC5sZW5ndGgpcmV0dXJuIG51bGw7dmFyIGU9dC5zbGljZSgpLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC1lfSk7aWYoZS5sZW5ndGglMj09PTEpcmV0dXJuIGVbKGUubGVuZ3RoLTEpLzJdO3ZhciBuPWVbZS5sZW5ndGgvMi0xXSxyPWVbZS5sZW5ndGgvMl07cmV0dXJuKG4rcikvMn1mdW5jdGlvbiB5KHQpe2lmKDA9PT10Lmxlbmd0aClyZXR1cm4gbnVsbDtpZigxPT09dC5sZW5ndGgpcmV0dXJuIHRbMF07Zm9yKHZhciBlLG49dC5zbGljZSgpLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC1lfSkscj1uWzBdLGk9MCxhPTEscz0xO3M8bi5sZW5ndGgrMTtzKyspbltzXSE9PXI/KGE+aSYmKGk9YSxlPXIpLGE9MSxyPW5bc10pOmErKztyZXR1cm4gZX1mdW5jdGlvbiBfKHQsZSl7dmFyIG49YSh0KSxyPWYodCksaT1NYXRoLnNxcnQodC5sZW5ndGgpO3JldHVybihuLWUpLyhyL2kpfWZ1bmN0aW9uIFModCxlLG4pe3ZhciByPXQubGVuZ3RoLGk9ZS5sZW5ndGg7aWYoIXJ8fCFpKXJldHVybiBudWxsO258fChuPTApO3ZhciBzPWEodCksbz1hKGUpLHU9KChyLTEpKnAodCkrKGktMSkqcChlKSkvKHIraS0yKTtyZXR1cm4ocy1vLW4pL01hdGguc3FydCh1KigxL3IrMS9pKSl9ZnVuY3Rpb24gdyh0LGUpe3ZhciBuPVtdO2lmKGU8PTApcmV0dXJuIG51bGw7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKz1lKW4ucHVzaCh0LnNsaWNlKHIscitlKSk7cmV0dXJuIG59ZnVuY3Rpb24gYih0LGUpe2U9ZXx8TWF0aC5yYW5kb207Zm9yKHZhciBuLHIsaT10Lmxlbmd0aDtpPjA7KXI9TWF0aC5mbG9vcihlKCkqaS0tKSxuPXRbaV0sdFtpXT10W3JdLHRbcl09bjtyZXR1cm4gdH1mdW5jdGlvbiBNKHQsZSl7cmV0dXJuIHQ9dC5zbGljZSgpLGIodC5zbGljZSgpLGUpfWZ1bmN0aW9uIEEodCxlLG4pe3ZhciByPU0odCxuKTtyZXR1cm4gci5zbGljZSgwLGUpfWZ1bmN0aW9uIEModCxlKXtpZigwPT09dC5sZW5ndGgpcmV0dXJuIG51bGw7dmFyIG49dC5zbGljZSgpLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC1lfSk7aWYoZS5sZW5ndGgpe2Zvcih2YXIgcj1bXSxpPTA7aTxlLmxlbmd0aDtpKyspcltpXT1rKG4sZVtpXSk7cmV0dXJuIHJ9cmV0dXJuIGsobixlKX1mdW5jdGlvbiBrKHQsZSl7dmFyIG49dC5sZW5ndGgqZTtyZXR1cm4gZTwwfHxlPjE/bnVsbDoxPT09ZT90W3QubGVuZ3RoLTFdOjA9PT1lP3RbMF06biUxIT09MD90W01hdGguY2VpbChuKS0xXTp0Lmxlbmd0aCUyPT09MD8odFtuLTFdK3Rbbl0pLzI6dFtuXX1mdW5jdGlvbiBUKHQpe3JldHVybiAwPT09dC5sZW5ndGg/bnVsbDpDKHQsLjc1KS1DKHQsLjI1KX1mdW5jdGlvbiBQKHQpe2lmKCF0fHwwPT09dC5sZW5ndGgpcmV0dXJuIG51bGw7Zm9yKHZhciBlPW0odCksbj1bXSxyPTA7cjx0Lmxlbmd0aDtyKyspbi5wdXNoKE1hdGguYWJzKHRbcl0tZSkpO3JldHVybiBtKG4pfWZ1bmN0aW9uIEkodCxlKXt2YXIgbixyLGk9W10sYT1bXSxzPTA7Zm9yKG49MDtuPHQubGVuZ3RoKzE7bisrKXt2YXIgbz1bXSx1PVtdO2ZvcihyPTA7cjxlKzE7cisrKW8ucHVzaCgwKSx1LnB1c2goMCk7aS5wdXNoKG8pLGEucHVzaCh1KX1mb3Iobj0xO248ZSsxO24rKylmb3IoaVsxXVtuXT0xLGFbMV1bbl09MCxyPTI7cjx0Lmxlbmd0aCsxO3IrKylhW3JdW25dPTEvMDtmb3IodmFyIGM9MjtjPHQubGVuZ3RoKzE7YysrKXtmb3IodmFyIGw9MCxoPTAsZj0wLGc9MCxwPTE7cDxjKzE7cCsrKXt2YXIgdj1jLXArMSxkPXRbdi0xXTtpZihmKyssbCs9ZCxoKz1kKmQscz1oLWwqbC9mLGc9di0xLDAhPT1nKWZvcihyPTI7cjxlKzE7cisrKWFbY11bcl0+PXMrYVtnXVtyLTFdJiYoaVtjXVtyXT12LGFbY11bcl09cythW2ddW3ItMV0pfWlbY11bMV09MSxhW2NdWzFdPXN9cmV0dXJue2xvd2VyX2NsYXNzX2xpbWl0czppLHZhcmlhbmNlX2NvbWJpbmF0aW9uczphfX1mdW5jdGlvbiBEKHQsZSxuKXt2YXIgcj10Lmxlbmd0aC0xLGk9W10sYT1uO2ZvcihpW25dPXRbdC5sZW5ndGgtMV0saVswXT10WzBdO2E+MTspaVthLTFdPXRbZVtyXVthXS0yXSxyPWVbcl1bYV0tMSxhLS07cmV0dXJuIGl9ZnVuY3Rpb24gTCh0LGUpe2lmKGU+dC5sZW5ndGgpcmV0dXJuIG51bGw7dD10LnNsaWNlKCkuc29ydChmdW5jdGlvbih0LGUpe3JldHVybiB0LWV9KTt2YXIgbj1JKHQsZSkscj1uLmxvd2VyX2NsYXNzX2xpbWl0cztyZXR1cm4gRCh0LHIsZSl9ZnVuY3Rpb24gUih0KXtpZih0Lmxlbmd0aDwzKXJldHVybiBudWxsO3ZhciBlPXQubGVuZ3RoLG49TWF0aC5wb3codih0KSwzKSxyPWcodCwzKTtyZXR1cm4gZSpyLygoZS0xKSooZS0yKSpuKX1mdW5jdGlvbiBCKHQpe3ZhciBlPU1hdGguYWJzKHQpLG49TWF0aC5mbG9vcigxMCplKSxyPTEwKihNYXRoLmZsb29yKDEwMCplKS8xMC1NYXRoLmZsb29yKDEwMCplLzEwKSksaT1NYXRoLm1pbigxMCpuK3IsVy5sZW5ndGgtMSk7cmV0dXJuIHQ+PTA/V1tpXTorKDEtV1tpXSkudG9GaXhlZCg0KX1mdW5jdGlvbiBGKHQsZSxuKXtyZXR1cm4odC1lKS9ufWZ1bmN0aW9uIE8odCl7aWYodDwwKXJldHVybiBudWxsO2Zvcih2YXIgZT0xLG49MjtuPD10O24rKyllKj1uO3JldHVybiBlfWZ1bmN0aW9uIEcodCl7cmV0dXJuIHQ8MHx8dD4xP251bGw6TigxLHQpfWZ1bmN0aW9uIE4odCxlKXtmdW5jdGlvbiBuKHQsZSxuKXtyZXR1cm4gTyhlKS8oTyh0KSpPKGUtdCkpKihNYXRoLnBvdyhuLHQpKk1hdGgucG93KDEtbixlLXQpKX1pZihlPDB8fGU+MXx8dDw9MHx8dCUxIT09MClyZXR1cm4gbnVsbDt2YXIgcj0wLGk9MCxhPXt9O2RvIGFbcl09bihyLHQsZSksaSs9YVtyXSxyKys7d2hpbGUoaTwxLVYpO3JldHVybiBhfWZ1bmN0aW9uIHoodCl7ZnVuY3Rpb24gZSh0LGUpe3JldHVybiBNYXRoLnBvdyhNYXRoLkUsLWUpKk1hdGgucG93KGUsdCkvTyh0KX1pZih0PD0wKXJldHVybiBudWxsO3ZhciBuPTAscj0wLGk9e307ZG8gaVtuXT1lKG4sdCkscis9aVtuXSxuKys7d2hpbGUocjwxLVYpO3JldHVybiBpfWZ1bmN0aW9uIGoodCxlLG4pe2Zvcih2YXIgcixpLHM9YSh0KSxvPTAsdT0xLGM9ZShzKSxsPVtdLGg9W10sZj0wO2Y8dC5sZW5ndGg7ZisrKXZvaWQgMD09PWxbdFtmXV0mJihsW3RbZl1dPTApLGxbdFtmXV0rKztmb3IoZj0wO2Y8bC5sZW5ndGg7ZisrKXZvaWQgMD09PWxbZl0mJihsW2ZdPTApO2ZvcihpIGluIGMpaSBpbiBsJiYoaFtpXT1jW2ldKnQubGVuZ3RoKTtmb3IoaT1oLmxlbmd0aC0xO2k+PTA7aS0tKWhbaV08MyYmKGhbaS0xXSs9aFtpXSxoLnBvcCgpLGxbaS0xXSs9bFtpXSxsLnBvcCgpKTtmb3IoaT0wO2k8bC5sZW5ndGg7aSsrKW8rPU1hdGgucG93KGxbaV0taFtpXSwyKS9oW2ldO3JldHVybiByPWwubGVuZ3RoLXUtMSxFW3JdW25dPG99ZnVuY3Rpb24gWCh0KXtmdW5jdGlvbiBlKHQpe3JldHVybiBmdW5jdGlvbigpe3ZhciBlPUFycmF5LnByb3RvdHlwZS5zbGljZS5hcHBseShhcmd1bWVudHMpO3JldHVybiBlLnVuc2hpZnQodGhpcyksWVt0XS5hcHBseShZLGUpfX12YXIgbj0hKCFPYmplY3QuZGVmaW5lUHJvcGVydHl8fCFPYmplY3QuZGVmaW5lUHJvcGVydGllcyk7aWYoIW4pdGhyb3cgbmV3IEVycm9yKFwid2l0aG91dCBkZWZpbmVQcm9wZXJ0eSwgc2ltcGxlLXN0YXRpc3RpY3MgY2Fubm90IGJlIG1peGVkIGluXCIpO3ZhciByLGk9W1wibWVkaWFuXCIsXCJzdGFuZGFyZF9kZXZpYXRpb25cIixcInN1bVwiLFwic2FtcGxlX3NrZXduZXNzXCIsXCJtZWFuXCIsXCJtaW5cIixcIm1heFwiLFwicXVhbnRpbGVcIixcImdlb21ldHJpY19tZWFuXCIsXCJoYXJtb25pY19tZWFuXCIsXCJyb290X21lYW5fc3F1YXJlXCJdO3I9dD90LnNsaWNlKCk6QXJyYXkucHJvdG90eXBlO2Zvcih2YXIgYT0wO2E8aS5sZW5ndGg7YSsrKU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLGlbYV0se3ZhbHVlOmUoaVthXSksY29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITB9KTtyZXR1cm4gcn12YXIgWT17fTt0LmV4cG9ydHM9WTt2YXIgVz1bLjUsLjUwNCwuNTA4LC41MTIsLjUxNiwuNTE5OSwuNTIzOSwuNTI3OSwuNTMxOSwuNTM1OSwuNTM5OCwuNTQzOCwuNTQ3OCwuNTUxNywuNTU1NywuNTU5NiwuNTYzNiwuNTY3NSwuNTcxNCwuNTc1MywuNTc5MywuNTgzMiwuNTg3MSwuNTkxLC41OTQ4LC41OTg3LC42MDI2LC42MDY0LC42MTAzLC42MTQxLC42MTc5LC42MjE3LC42MjU1LC42MjkzLC42MzMxLC42MzY4LC42NDA2LC42NDQzLC42NDgsLjY1MTcsLjY1NTQsLjY1OTEsLjY2MjgsLjY2NjQsLjY3LC42NzM2LC42NzcyLC42ODA4LC42ODQ0LC42ODc5LC42OTE1LC42OTUsLjY5ODUsLjcwMTksLjcwNTQsLjcwODgsLjcxMjMsLjcxNTcsLjcxOSwuNzIyNCwuNzI1NywuNzI5MSwuNzMyNCwuNzM1NywuNzM4OSwuNzQyMiwuNzQ1NCwuNzQ4NiwuNzUxNywuNzU0OSwuNzU4LC43NjExLC43NjQyLC43NjczLC43NzA0LC43NzM0LC43NzY0LC43Nzk0LC43ODIzLC43ODUyLC43ODgxLC43OTEsLjc5MzksLjc5NjcsLjc5OTUsLjgwMjMsLjgwNTEsLjgwNzgsLjgxMDYsLjgxMzMsLjgxNTksLjgxODYsLjgyMTIsLjgyMzgsLjgyNjQsLjgyODksLjgzMTUsLjgzNCwuODM2NSwuODM4OSwuODQxMywuODQzOCwuODQ2MSwuODQ4NSwuODUwOCwuODUzMSwuODU1NCwuODU3NywuODU5OSwuODYyMSwuODY0MywuODY2NSwuODY4NiwuODcwOCwuODcyOSwuODc0OSwuODc3LC44NzksLjg4MSwuODgzLC44ODQ5LC44ODY5LC44ODg4LC44OTA3LC44OTI1LC44OTQ0LC44OTYyLC44OTgsLjg5OTcsLjkwMTUsLjkwMzIsLjkwNDksLjkwNjYsLjkwODIsLjkwOTksLjkxMTUsLjkxMzEsLjkxNDcsLjkxNjIsLjkxNzcsLjkxOTIsLjkyMDcsLjkyMjIsLjkyMzYsLjkyNTEsLjkyNjUsLjkyNzksLjkyOTIsLjkzMDYsLjkzMTksLjkzMzIsLjkzNDUsLjkzNTcsLjkzNywuOTM4MiwuOTM5NCwuOTQwNiwuOTQxOCwuOTQyOSwuOTQ0MSwuOTQ1MiwuOTQ2MywuOTQ3NCwuOTQ4NCwuOTQ5NSwuOTUwNSwuOTUxNSwuOTUyNSwuOTUzNSwuOTU0NSwuOTU1NCwuOTU2NCwuOTU3MywuOTU4MiwuOTU5MSwuOTU5OSwuOTYwOCwuOTYxNiwuOTYyNSwuOTYzMywuOTY0MSwuOTY0OSwuOTY1NiwuOTY2NCwuOTY3MSwuOTY3OCwuOTY4NiwuOTY5MywuOTY5OSwuOTcwNiwuOTcxMywuOTcxOSwuOTcyNiwuOTczMiwuOTczOCwuOTc0NCwuOTc1LC45NzU2LC45NzYxLC45NzY3LC45NzcyLC45Nzc4LC45NzgzLC45Nzg4LC45NzkzLC45Nzk4LC45ODAzLC45ODA4LC45ODEyLC45ODE3LC45ODIxLC45ODI2LC45ODMsLjk4MzQsLjk4MzgsLjk4NDIsLjk4NDYsLjk4NSwuOTg1NCwuOTg1NywuOTg2MSwuOTg2NCwuOTg2OCwuOTg3MSwuOTg3NSwuOTg3OCwuOTg4MSwuOTg4NCwuOTg4NywuOTg5LC45ODkzLC45ODk2LC45ODk4LC45OTAxLC45OTA0LC45OTA2LC45OTA5LC45OTExLC45OTEzLC45OTE2LC45OTE4LC45OTIsLjk5MjIsLjk5MjUsLjk5MjcsLjk5MjksLjk5MzEsLjk5MzIsLjk5MzQsLjk5MzYsLjk5MzgsLjk5NCwuOTk0MSwuOTk0MywuOTk0NSwuOTk0NiwuOTk0OCwuOTk0OSwuOTk1MSwuOTk1MiwuOTk1MywuOTk1NSwuOTk1NiwuOTk1NywuOTk1OSwuOTk2LC45OTYxLC45OTYyLC45OTYzLC45OTY0LC45OTY1LC45OTY2LC45OTY3LC45OTY4LC45OTY5LC45OTcsLjk5NzEsLjk5NzIsLjk5NzMsLjk5NzQsLjk5NzQsLjk5NzUsLjk5NzYsLjk5NzcsLjk5NzcsLjk5NzgsLjk5NzksLjk5NzksLjk5OCwuOTk4MSwuOTk4MSwuOTk4MiwuOTk4MiwuOTk4MywuOTk4NCwuOTk4NCwuOTk4NSwuOTk4NSwuOTk4NiwuOTk4NiwuOTk4NywuOTk4NywuOTk4NywuOTk4OCwuOTk4OCwuOTk4OSwuOTk4OSwuOTk4OSwuOTk5LC45OTldLFY9MWUtNCxFPXsxOnsuOTk1OjAsLjk5OjAsLjk3NTowLC45NTowLC45Oi4wMiwuNTouNDUsLjE6Mi43MSwuMDU6My44NCwuMDI1OjUuMDIsLjAxOjYuNjMsLjAwNTo3Ljg4fSwyOnsuOTk1Oi4wMSwuOTk6LjAyLC45NzU6LjA1LC45NTouMSwuOTouMjEsLjU6MS4zOSwuMTo0LjYxLC4wNTo1Ljk5LC4wMjU6Ny4zOCwuMDE6OS4yMSwuMDA1OjEwLjZ9LDM6ey45OTU6LjA3LC45OTouMTEsLjk3NTouMjIsLjk1Oi4zNSwuOTouNTgsLjU6Mi4zNywuMTo2LjI1LC4wNTo3LjgxLC4wMjU6OS4zNSwuMDE6MTEuMzQsLjAwNToxMi44NH0sNDp7Ljk5NTouMjEsLjk5Oi4zLC45NzU6LjQ4LC45NTouNzEsLjk6MS4wNiwuNTozLjM2LC4xOjcuNzgsLjA1OjkuNDksLjAyNToxMS4xNCwuMDE6MTMuMjgsLjAwNToxNC44Nn0sNTp7Ljk5NTouNDEsLjk5Oi41NSwuOTc1Oi44MywuOTU6MS4xNSwuOToxLjYxLC41OjQuMzUsLjE6OS4yNCwuMDU6MTEuMDcsLjAyNToxMi44MywuMDE6MTUuMDksLjAwNToxNi43NX0sNjp7Ljk5NTouNjgsLjk5Oi44NywuOTc1OjEuMjQsLjk1OjEuNjQsLjk6Mi4yLC41OjUuMzUsLjE6MTAuNjUsLjA1OjEyLjU5LC4wMjU6MTQuNDUsLjAxOjE2LjgxLC4wMDU6MTguNTV9LDc6ey45OTU6Ljk5LC45OToxLjI1LC45NzU6MS42OSwuOTU6Mi4xNywuOToyLjgzLC41OjYuMzUsLjE6MTIuMDIsLjA1OjE0LjA3LC4wMjU6MTYuMDEsLjAxOjE4LjQ4LC4wMDU6MjAuMjh9LDg6ey45OTU6MS4zNCwuOTk6MS42NSwuOTc1OjIuMTgsLjk1OjIuNzMsLjk6My40OSwuNTo3LjM0LC4xOjEzLjM2LC4wNToxNS41MSwuMDI1OjE3LjUzLC4wMToyMC4wOSwuMDA1OjIxLjk2fSw5OnsuOTk1OjEuNzMsLjk5OjIuMDksLjk3NToyLjcsLjk1OjMuMzMsLjk6NC4xNywuNTo4LjM0LC4xOjE0LjY4LC4wNToxNi45MiwuMDI1OjE5LjAyLC4wMToyMS42NywuMDA1OjIzLjU5fSwxMDp7Ljk5NToyLjE2LC45OToyLjU2LC45NzU6My4yNSwuOTU6My45NCwuOTo0Ljg3LC41OjkuMzQsLjE6MTUuOTksLjA1OjE4LjMxLC4wMjU6MjAuNDgsLjAxOjIzLjIxLC4wMDU6MjUuMTl9LDExOnsuOTk1OjIuNiwuOTk6My4wNSwuOTc1OjMuODIsLjk1OjQuNTcsLjk6NS41OCwuNToxMC4zNCwuMToxNy4yOCwuMDU6MTkuNjgsLjAyNToyMS45MiwuMDE6MjQuNzIsLjAwNToyNi43Nn0sMTI6ey45OTU6My4wNywuOTk6My41NywuOTc1OjQuNCwuOTU6NS4yMywuOTo2LjMsLjU6MTEuMzQsLjE6MTguNTUsLjA1OjIxLjAzLC4wMjU6MjMuMzQsLjAxOjI2LjIyLC4wMDU6MjguM30sMTM6ey45OTU6My41NywuOTk6NC4xMSwuOTc1OjUuMDEsLjk1OjUuODksLjk6Ny4wNCwuNToxMi4zNCwuMToxOS44MSwuMDU6MjIuMzYsLjAyNToyNC43NCwuMDE6MjcuNjksLjAwNToyOS44Mn0sMTQ6ey45OTU6NC4wNywuOTk6NC42NiwuOTc1OjUuNjMsLjk1OjYuNTcsLjk6Ny43OSwuNToxMy4zNCwuMToyMS4wNiwuMDU6MjMuNjgsLjAyNToyNi4xMiwuMDE6MjkuMTQsLjAwNTozMS4zMn0sMTU6ey45OTU6NC42LC45OTo1LjIzLC45NzU6Ni4yNywuOTU6Ny4yNiwuOTo4LjU1LC41OjE0LjM0LC4xOjIyLjMxLC4wNToyNSwuMDI1OjI3LjQ5LC4wMTozMC41OCwuMDA1OjMyLjh9LDE2OnsuOTk1OjUuMTQsLjk5OjUuODEsLjk3NTo2LjkxLC45NTo3Ljk2LC45OjkuMzEsLjU6MTUuMzQsLjE6MjMuNTQsLjA1OjI2LjMsLjAyNToyOC44NSwuMDE6MzIsLjAwNTozNC4yN30sMTc6ey45OTU6NS43LC45OTo2LjQxLC45NzU6Ny41NiwuOTU6OC42NywuOToxMC4wOSwuNToxNi4zNCwuMToyNC43NywuMDU6MjcuNTksLjAyNTozMC4xOSwuMDE6MzMuNDEsLjAwNTozNS43Mn0sMTg6ey45OTU6Ni4yNiwuOTk6Ny4wMSwuOTc1OjguMjMsLjk1OjkuMzksLjk6MTAuODcsLjU6MTcuMzQsLjE6MjUuOTksLjA1OjI4Ljg3LC4wMjU6MzEuNTMsLjAxOjM0LjgxLC4wMDU6MzcuMTZ9LDE5OnsuOTk1OjYuODQsLjk5OjcuNjMsLjk3NTo4LjkxLC45NToxMC4xMiwuOToxMS42NSwuNToxOC4zNCwuMToyNy4yLC4wNTozMC4xNCwuMDI1OjMyLjg1LC4wMTozNi4xOSwuMDA1OjM4LjU4fSwyMDp7Ljk5NTo3LjQzLC45OTo4LjI2LC45NzU6OS41OSwuOTU6MTAuODUsLjk6MTIuNDQsLjU6MTkuMzQsLjE6MjguNDEsLjA1OjMxLjQxLC4wMjU6MzQuMTcsLjAxOjM3LjU3LC4wMDU6NDB9LDIxOnsuOTk1OjguMDMsLjk5OjguOSwuOTc1OjEwLjI4LC45NToxMS41OSwuOToxMy4yNCwuNToyMC4zNCwuMToyOS42MiwuMDU6MzIuNjcsLjAyNTozNS40OCwuMDE6MzguOTMsLjAwNTo0MS40fSwyMjp7Ljk5NTo4LjY0LC45OTo5LjU0LC45NzU6MTAuOTgsLjk1OjEyLjM0LC45OjE0LjA0LC41OjIxLjM0LC4xOjMwLjgxLC4wNTozMy45MiwuMDI1OjM2Ljc4LC4wMTo0MC4yOSwuMDA1OjQyLjh9LDIzOnsuOTk1OjkuMjYsLjk5OjEwLjIsLjk3NToxMS42OSwuOTU6MTMuMDksLjk6MTQuODUsLjU6MjIuMzQsLjE6MzIuMDEsLjA1OjM1LjE3LC4wMjU6MzguMDgsLjAxOjQxLjY0LC4wMDU6NDQuMTh9LDI0OnsuOTk1OjkuODksLjk5OjEwLjg2LC45NzU6MTIuNCwuOTU6MTMuODUsLjk6MTUuNjYsLjU6MjMuMzQsLjE6MzMuMiwuMDU6MzYuNDIsLjAyNTozOS4zNiwuMDE6NDIuOTgsLjAwNTo0NS41Nn0sMjU6ey45OTU6MTAuNTIsLjk5OjExLjUyLC45NzU6MTMuMTIsLjk1OjE0LjYxLC45OjE2LjQ3LC41OjI0LjM0LC4xOjM0LjI4LC4wNTozNy42NSwuMDI1OjQwLjY1LC4wMTo0NC4zMSwuMDA1OjQ2LjkzfSwyNjp7Ljk5NToxMS4xNiwuOTk6MTIuMiwuOTc1OjEzLjg0LC45NToxNS4zOCwuOToxNy4yOSwuNToyNS4zNCwuMTozNS41NiwuMDU6MzguODksLjAyNTo0MS45MiwuMDE6NDUuNjQsLjAwNTo0OC4yOX0sMjc6ey45OTU6MTEuODEsLjk5OjEyLjg4LC45NzU6MTQuNTcsLjk1OjE2LjE1LC45OjE4LjExLC41OjI2LjM0LC4xOjM2Ljc0LC4wNTo0MC4xMSwuMDI1OjQzLjE5LC4wMTo0Ni45NiwuMDA1OjQ5LjY1fSwyODp7Ljk5NToxMi40NiwuOTk6MTMuNTcsLjk3NToxNS4zMSwuOTU6MTYuOTMsLjk6MTguOTQsLjU6MjcuMzQsLjE6MzcuOTIsLjA1OjQxLjM0LC4wMjU6NDQuNDYsLjAxOjQ4LjI4LC4wMDU6NTAuOTl9LDI5OnsuOTk1OjEzLjEyLC45OToxNC4yNiwuOTc1OjE2LjA1LC45NToxNy43MSwuOToxOS43NywuNToyOC4zNCwuMTozOS4wOSwuMDU6NDIuNTYsLjAyNTo0NS43MiwuMDE6NDkuNTksLjAwNTo1Mi4zNH0sMzA6ey45OTU6MTMuNzksLjk5OjE0Ljk1LC45NzU6MTYuNzksLjk1OjE4LjQ5LC45OjIwLjYsLjU6MjkuMzQsLjE6NDAuMjYsLjA1OjQzLjc3LC4wMjU6NDYuOTgsLjAxOjUwLjg5LC4wMDU6NTMuNjd9LDQwOnsuOTk1OjIwLjcxLC45OToyMi4xNiwuOTc1OjI0LjQzLC45NToyNi41MSwuOToyOS4wNSwuNTozOS4zNCwuMTo1MS44MSwuMDU6NTUuNzYsLjAyNTo1OS4zNCwuMDE6NjMuNjksLjAwNTo2Ni43N30sNTA6ey45OTU6MjcuOTksLjk5OjI5LjcxLC45NzU6MzIuMzYsLjk1OjM0Ljc2LC45OjM3LjY5LC41OjQ5LjMzLC4xOjYzLjE3LC4wNTo2Ny41LC4wMjU6NzEuNDIsLjAxOjc2LjE1LC4wMDU6NzkuNDl9LDYwOnsuOTk1OjM1LjUzLC45OTozNy40OCwuOTc1OjQwLjQ4LC45NTo0My4xOSwuOTo0Ni40NiwuNTo1OS4zMywuMTo3NC40LC4wNTo3OS4wOCwuMDI1OjgzLjMsLjAxOjg4LjM4LC4wMDU6OTEuOTV9LDcwOnsuOTk1OjQzLjI4LC45OTo0NS40NCwuOTc1OjQ4Ljc2LC45NTo1MS43NCwuOTo1NS4zMywuNTo2OS4zMywuMTo4NS41MywuMDU6OTAuNTMsLjAyNTo5NS4wMiwuMDE6MTAwLjQyLC4wMDU6MTA0LjIyfSw4MDp7Ljk5NTo1MS4xNywuOTk6NTMuNTQsLjk3NTo1Ny4xNSwuOTU6NjAuMzksLjk6NjQuMjgsLjU6NzkuMzMsLjE6OTYuNTgsLjA1OjEwMS44OCwuMDI1OjEwNi42MywuMDE6MTEyLjMzLC4wMDU6MTE2LjMyfSw5MDp7Ljk5NTo1OS4yLC45OTo2MS43NSwuOTc1OjY1LjY1LC45NTo2OS4xMywuOTo3My4yOSwuNTo4OS4zMywuMToxMDcuNTcsLjA1OjExMy4xNCwuMDI1OjExOC4xNCwuMDE6MTI0LjEyLC4wMDU6MTI4LjN9LDEwMDp7Ljk5NTo2Ny4zMywuOTk6NzAuMDYsLjk3NTo3NC4yMiwuOTU6NzcuOTMsLjk6ODIuMzYsLjU6OTkuMzMsLjE6MTE4LjUsLjA1OjEyNC4zNCwuMDI1OjEyOS41NiwuMDE6MTM1LjgxLC4wMDU6MTQwLjE3fX07WS5saW5lYXJfcmVncmVzc2lvbj1lLFkuc3RhbmRhcmRfZGV2aWF0aW9uPWYsWS5yX3NxdWFyZWQ9bixZLm1lZGlhbj1tLFkubWVhbj1hLFkubW9kZT15LFkubWluPWMsWS5tYXg9bCxZLnN1bT1pLFkucXVhbnRpbGU9QyxZLnF1YW50aWxlX3NvcnRlZD1rLFkuaXFyPVQsWS5tYWQ9UCxZLmNodW5rPXcsWS5zaHVmZmxlPU0sWS5zaHVmZmxlX2luX3BsYWNlPWIsWS5zYW1wbGU9QSxZLnNhbXBsZV9jb3ZhcmlhbmNlPWQsWS5zYW1wbGVfY29ycmVsYXRpb249eCxZLnNhbXBsZV92YXJpYW5jZT1wLFkuc2FtcGxlX3N0YW5kYXJkX2RldmlhdGlvbj12LFkuc2FtcGxlX3NrZXduZXNzPVIsWS5nZW9tZXRyaWNfbWVhbj1zLFkuaGFybW9uaWNfbWVhbj1vLFkucm9vdF9tZWFuX3NxdWFyZT11LFkudmFyaWFuY2U9aCxZLnRfdGVzdD1fLFkudF90ZXN0X3R3b19zYW1wbGU9UyxZLmplbmtzTWF0cmljZXM9SSxZLmplbmtzQnJlYWtzPUQsWS5qZW5rcz1MLFkuYmF5ZXNpYW49cixZLmVwc2lsb249VixZLmZhY3RvcmlhbD1PLFkuYmVybm91bGxpX2Rpc3RyaWJ1dGlvbj1HLFkuYmlub21pYWxfZGlzdHJpYnV0aW9uPU4sWS5wb2lzc29uX2Rpc3RyaWJ1dGlvbj16LFkuY2hpX3NxdWFyZWRfZ29vZG5lc3Nfb2ZfZml0PWosWS56X3Njb3JlPUYsWS5jdW11bGF0aXZlX3N0ZF9ub3JtYWxfcHJvYmFiaWxpdHk9QixZLnN0YW5kYXJkX25vcm1hbF90YWJsZT1XLFkuYXZlcmFnZT1hLFkuaW50ZXJxdWFydGlsZV9yYW5nZT1ULFkubWl4aW49WCxZLm1lZGlhbl9hYnNvbHV0ZV9kZXZpYXRpb249UCxZLnJtcz11fSh0aGlzKX0sZnVuY3Rpb24odCxlLG4scixpKXt2YXIgYT1uKHIpO2EuVXRpbD1uKGkpLHQuZXhwb3J0cz1hfV0pKX0pO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+Ly5ucG1pbnN0YWxsL2cyLzIuMC4wL2cyL2luZGV4LmpzXG4gKiogbW9kdWxlIGlkID0gMVxuICoqIG1vZHVsZSBjaHVua3MgPSAxIDIgMyA0IDUgNiA3IDggOSAxMCAxMSAxMiAxMyAxNCAxNSAxNiAxNyAxOCAxOSAyMCAyMSAyMiAyMyAyNCAyNSAyNiAyNyAyOCAyOSAzMCAzMSAzMiAzMyAzNCAzNSAzNiAzNyAzOCAzOSA0MCA0MSA0MiA0MyA0NCA0NSA0NiA0NyA0OCA0OSA1MCA1MSA1MiA1NCA1NSA1NiA1NyA1OCA1OSA2MCA2MSA2MiA2MyA2NCA2NSA2NiA2NyA2OCA2OSA3MCA3MSA3MiA3MyA3NCA3NSA3NiA3NyA3OCA3OSA4MCA4MSA4MiA4MyA4NCA4NSA4NiA4NyA4OCA4OSA5MCA5MSA5MiA5MyA5NCA5NSA5NiA5NyA5OCA5OSAxMDAgMTAxIDEwMiAxMDMgMTA0IDEwNSAxMDYgMTA3IDEwOCAxMDkgMTEwIDExMSAxMTIgMTEzIDExNCAxMTUgMTE2IDExNyAxMTggMTE5IDEyMCAxMjEgMTIyIDEyMyAxMjQgMTI1IDEyNiAxMjcgMTI4IDEyOSAxMzAgMTMxIDEzMiAxMzMgMTM0IDEzNSAxMzYgMTM3IDEzOCAxMzkgMTQwIDE0MSAxNDIgMTQzIDE0NCAxNDUgMTQ2IDE0NyAxNDggMTQ5IDE1MCAxNTEgMTUyIDE1MyAxNTQgMTU1IDE1NiAxNTcgMTU4IDE1OSAxNjAgMTYxIDE2MiAxNjMgMTY0IDE2NSAxNjZcbiAqKi8iLCIvKiFcbiAqIGpRdWVyeSBKYXZhU2NyaXB0IExpYnJhcnkgdjIuMS40XG4gKiBodHRwOi8vanF1ZXJ5LmNvbS9cbiAqXG4gKiBJbmNsdWRlcyBTaXp6bGUuanNcbiAqIGh0dHA6Ly9zaXp6bGVqcy5jb20vXG4gKlxuICogQ29weXJpZ2h0IDIwMDUsIDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24sIEluYy4gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlXG4gKlxuICogRGF0ZTogMjAxNS0wNC0yOFQxNjowMVpcbiAqL1xuXG4oZnVuY3Rpb24oIGdsb2JhbCwgZmFjdG9yeSApIHtcblxuXHRpZiAoIHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcIm9iamVjdFwiICkge1xuXHRcdC8vIEZvciBDb21tb25KUyBhbmQgQ29tbW9uSlMtbGlrZSBlbnZpcm9ubWVudHMgd2hlcmUgYSBwcm9wZXIgYHdpbmRvd2Bcblx0XHQvLyBpcyBwcmVzZW50LCBleGVjdXRlIHRoZSBmYWN0b3J5IGFuZCBnZXQgalF1ZXJ5LlxuXHRcdC8vIEZvciBlbnZpcm9ubWVudHMgdGhhdCBkbyBub3QgaGF2ZSBhIGB3aW5kb3dgIHdpdGggYSBgZG9jdW1lbnRgXG5cdFx0Ly8gKHN1Y2ggYXMgTm9kZS5qcyksIGV4cG9zZSBhIGZhY3RvcnkgYXMgbW9kdWxlLmV4cG9ydHMuXG5cdFx0Ly8gVGhpcyBhY2NlbnR1YXRlcyB0aGUgbmVlZCBmb3IgdGhlIGNyZWF0aW9uIG9mIGEgcmVhbCBgd2luZG93YC5cblx0XHQvLyBlLmcuIHZhciBqUXVlcnkgPSByZXF1aXJlKFwianF1ZXJ5XCIpKHdpbmRvdyk7XG5cdFx0Ly8gU2VlIHRpY2tldCAjMTQ1NDkgZm9yIG1vcmUgaW5mby5cblx0XHRtb2R1bGUuZXhwb3J0cyA9IGdsb2JhbC5kb2N1bWVudCA/XG5cdFx0XHRmYWN0b3J5KCBnbG9iYWwsIHRydWUgKSA6XG5cdFx0XHRmdW5jdGlvbiggdyApIHtcblx0XHRcdFx0aWYgKCAhdy5kb2N1bWVudCApIHtcblx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoIFwialF1ZXJ5IHJlcXVpcmVzIGEgd2luZG93IHdpdGggYSBkb2N1bWVudFwiICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIGZhY3RvcnkoIHcgKTtcblx0XHRcdH07XG5cdH0gZWxzZSB7XG5cdFx0ZmFjdG9yeSggZ2xvYmFsICk7XG5cdH1cblxuLy8gUGFzcyB0aGlzIGlmIHdpbmRvdyBpcyBub3QgZGVmaW5lZCB5ZXRcbn0odHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHRoaXMsIGZ1bmN0aW9uKCB3aW5kb3csIG5vR2xvYmFsICkge1xuXG4vLyBTdXBwb3J0OiBGaXJlZm94IDE4K1xuLy8gQ2FuJ3QgYmUgaW4gc3RyaWN0IG1vZGUsIHNldmVyYWwgbGlicyBpbmNsdWRpbmcgQVNQLk5FVCB0cmFjZVxuLy8gdGhlIHN0YWNrIHZpYSBhcmd1bWVudHMuY2FsbGVyLmNhbGxlZSBhbmQgRmlyZWZveCBkaWVzIGlmXG4vLyB5b3UgdHJ5IHRvIHRyYWNlIHRocm91Z2ggXCJ1c2Ugc3RyaWN0XCIgY2FsbCBjaGFpbnMuICgjMTMzMzUpXG4vL1xuXG52YXIgYXJyID0gW107XG5cbnZhciBzbGljZSA9IGFyci5zbGljZTtcblxudmFyIGNvbmNhdCA9IGFyci5jb25jYXQ7XG5cbnZhciBwdXNoID0gYXJyLnB1c2g7XG5cbnZhciBpbmRleE9mID0gYXJyLmluZGV4T2Y7XG5cbnZhciBjbGFzczJ0eXBlID0ge307XG5cbnZhciB0b1N0cmluZyA9IGNsYXNzMnR5cGUudG9TdHJpbmc7XG5cbnZhciBoYXNPd24gPSBjbGFzczJ0eXBlLmhhc093blByb3BlcnR5O1xuXG52YXIgc3VwcG9ydCA9IHt9O1xuXG5cblxudmFyXG5cdC8vIFVzZSB0aGUgY29ycmVjdCBkb2N1bWVudCBhY2NvcmRpbmdseSB3aXRoIHdpbmRvdyBhcmd1bWVudCAoc2FuZGJveClcblx0ZG9jdW1lbnQgPSB3aW5kb3cuZG9jdW1lbnQsXG5cblx0dmVyc2lvbiA9IFwiMi4xLjRcIixcblxuXHQvLyBEZWZpbmUgYSBsb2NhbCBjb3B5IG9mIGpRdWVyeVxuXHRqUXVlcnkgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQgKSB7XG5cdFx0Ly8gVGhlIGpRdWVyeSBvYmplY3QgaXMgYWN0dWFsbHkganVzdCB0aGUgaW5pdCBjb25zdHJ1Y3RvciAnZW5oYW5jZWQnXG5cdFx0Ly8gTmVlZCBpbml0IGlmIGpRdWVyeSBpcyBjYWxsZWQgKGp1c3QgYWxsb3cgZXJyb3IgdG8gYmUgdGhyb3duIGlmIG5vdCBpbmNsdWRlZClcblx0XHRyZXR1cm4gbmV3IGpRdWVyeS5mbi5pbml0KCBzZWxlY3RvciwgY29udGV4dCApO1xuXHR9LFxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQ8NC4xXG5cdC8vIE1ha2Ugc3VyZSB3ZSB0cmltIEJPTSBhbmQgTkJTUFxuXHRydHJpbSA9IC9eW1xcc1xcdUZFRkZcXHhBMF0rfFtcXHNcXHVGRUZGXFx4QTBdKyQvZyxcblxuXHQvLyBNYXRjaGVzIGRhc2hlZCBzdHJpbmcgZm9yIGNhbWVsaXppbmdcblx0cm1zUHJlZml4ID0gL14tbXMtLyxcblx0cmRhc2hBbHBoYSA9IC8tKFtcXGRhLXpdKS9naSxcblxuXHQvLyBVc2VkIGJ5IGpRdWVyeS5jYW1lbENhc2UgYXMgY2FsbGJhY2sgdG8gcmVwbGFjZSgpXG5cdGZjYW1lbENhc2UgPSBmdW5jdGlvbiggYWxsLCBsZXR0ZXIgKSB7XG5cdFx0cmV0dXJuIGxldHRlci50b1VwcGVyQ2FzZSgpO1xuXHR9O1xuXG5qUXVlcnkuZm4gPSBqUXVlcnkucHJvdG90eXBlID0ge1xuXHQvLyBUaGUgY3VycmVudCB2ZXJzaW9uIG9mIGpRdWVyeSBiZWluZyB1c2VkXG5cdGpxdWVyeTogdmVyc2lvbixcblxuXHRjb25zdHJ1Y3RvcjogalF1ZXJ5LFxuXG5cdC8vIFN0YXJ0IHdpdGggYW4gZW1wdHkgc2VsZWN0b3Jcblx0c2VsZWN0b3I6IFwiXCIsXG5cblx0Ly8gVGhlIGRlZmF1bHQgbGVuZ3RoIG9mIGEgalF1ZXJ5IG9iamVjdCBpcyAwXG5cdGxlbmd0aDogMCxcblxuXHR0b0FycmF5OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gc2xpY2UuY2FsbCggdGhpcyApO1xuXHR9LFxuXG5cdC8vIEdldCB0aGUgTnRoIGVsZW1lbnQgaW4gdGhlIG1hdGNoZWQgZWxlbWVudCBzZXQgT1Jcblx0Ly8gR2V0IHRoZSB3aG9sZSBtYXRjaGVkIGVsZW1lbnQgc2V0IGFzIGEgY2xlYW4gYXJyYXlcblx0Z2V0OiBmdW5jdGlvbiggbnVtICkge1xuXHRcdHJldHVybiBudW0gIT0gbnVsbCA/XG5cblx0XHRcdC8vIFJldHVybiBqdXN0IHRoZSBvbmUgZWxlbWVudCBmcm9tIHRoZSBzZXRcblx0XHRcdCggbnVtIDwgMCA/IHRoaXNbIG51bSArIHRoaXMubGVuZ3RoIF0gOiB0aGlzWyBudW0gXSApIDpcblxuXHRcdFx0Ly8gUmV0dXJuIGFsbCB0aGUgZWxlbWVudHMgaW4gYSBjbGVhbiBhcnJheVxuXHRcdFx0c2xpY2UuY2FsbCggdGhpcyApO1xuXHR9LFxuXG5cdC8vIFRha2UgYW4gYXJyYXkgb2YgZWxlbWVudHMgYW5kIHB1c2ggaXQgb250byB0aGUgc3RhY2tcblx0Ly8gKHJldHVybmluZyB0aGUgbmV3IG1hdGNoZWQgZWxlbWVudCBzZXQpXG5cdHB1c2hTdGFjazogZnVuY3Rpb24oIGVsZW1zICkge1xuXG5cdFx0Ly8gQnVpbGQgYSBuZXcgalF1ZXJ5IG1hdGNoZWQgZWxlbWVudCBzZXRcblx0XHR2YXIgcmV0ID0galF1ZXJ5Lm1lcmdlKCB0aGlzLmNvbnN0cnVjdG9yKCksIGVsZW1zICk7XG5cblx0XHQvLyBBZGQgdGhlIG9sZCBvYmplY3Qgb250byB0aGUgc3RhY2sgKGFzIGEgcmVmZXJlbmNlKVxuXHRcdHJldC5wcmV2T2JqZWN0ID0gdGhpcztcblx0XHRyZXQuY29udGV4dCA9IHRoaXMuY29udGV4dDtcblxuXHRcdC8vIFJldHVybiB0aGUgbmV3bHktZm9ybWVkIGVsZW1lbnQgc2V0XG5cdFx0cmV0dXJuIHJldDtcblx0fSxcblxuXHQvLyBFeGVjdXRlIGEgY2FsbGJhY2sgZm9yIGV2ZXJ5IGVsZW1lbnQgaW4gdGhlIG1hdGNoZWQgc2V0LlxuXHQvLyAoWW91IGNhbiBzZWVkIHRoZSBhcmd1bWVudHMgd2l0aCBhbiBhcnJheSBvZiBhcmdzLCBidXQgdGhpcyBpc1xuXHQvLyBvbmx5IHVzZWQgaW50ZXJuYWxseS4pXG5cdGVhY2g6IGZ1bmN0aW9uKCBjYWxsYmFjaywgYXJncyApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmVhY2goIHRoaXMsIGNhbGxiYWNrLCBhcmdzICk7XG5cdH0sXG5cblx0bWFwOiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkubWFwKHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBpICkge1xuXHRcdFx0cmV0dXJuIGNhbGxiYWNrLmNhbGwoIGVsZW0sIGksIGVsZW0gKTtcblx0XHR9KSk7XG5cdH0sXG5cblx0c2xpY2U6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggc2xpY2UuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApICk7XG5cdH0sXG5cblx0Zmlyc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLmVxKCAwICk7XG5cdH0sXG5cblx0bGFzdDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuZXEoIC0xICk7XG5cdH0sXG5cblx0ZXE6IGZ1bmN0aW9uKCBpICkge1xuXHRcdHZhciBsZW4gPSB0aGlzLmxlbmd0aCxcblx0XHRcdGogPSAraSArICggaSA8IDAgPyBsZW4gOiAwICk7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqID49IDAgJiYgaiA8IGxlbiA/IFsgdGhpc1tqXSBdIDogW10gKTtcblx0fSxcblxuXHRlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnByZXZPYmplY3QgfHwgdGhpcy5jb25zdHJ1Y3RvcihudWxsKTtcblx0fSxcblxuXHQvLyBGb3IgaW50ZXJuYWwgdXNlIG9ubHkuXG5cdC8vIEJlaGF2ZXMgbGlrZSBhbiBBcnJheSdzIG1ldGhvZCwgbm90IGxpa2UgYSBqUXVlcnkgbWV0aG9kLlxuXHRwdXNoOiBwdXNoLFxuXHRzb3J0OiBhcnIuc29ydCxcblx0c3BsaWNlOiBhcnIuc3BsaWNlXG59O1xuXG5qUXVlcnkuZXh0ZW5kID0galF1ZXJ5LmZuLmV4dGVuZCA9IGZ1bmN0aW9uKCkge1xuXHR2YXIgb3B0aW9ucywgbmFtZSwgc3JjLCBjb3B5LCBjb3B5SXNBcnJheSwgY2xvbmUsXG5cdFx0dGFyZ2V0ID0gYXJndW1lbnRzWzBdIHx8IHt9LFxuXHRcdGkgPSAxLFxuXHRcdGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGgsXG5cdFx0ZGVlcCA9IGZhbHNlO1xuXG5cdC8vIEhhbmRsZSBhIGRlZXAgY29weSBzaXR1YXRpb25cblx0aWYgKCB0eXBlb2YgdGFyZ2V0ID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRkZWVwID0gdGFyZ2V0O1xuXG5cdFx0Ly8gU2tpcCB0aGUgYm9vbGVhbiBhbmQgdGhlIHRhcmdldFxuXHRcdHRhcmdldCA9IGFyZ3VtZW50c1sgaSBdIHx8IHt9O1xuXHRcdGkrKztcblx0fVxuXG5cdC8vIEhhbmRsZSBjYXNlIHdoZW4gdGFyZ2V0IGlzIGEgc3RyaW5nIG9yIHNvbWV0aGluZyAocG9zc2libGUgaW4gZGVlcCBjb3B5KVxuXHRpZiAoIHR5cGVvZiB0YXJnZXQgIT09IFwib2JqZWN0XCIgJiYgIWpRdWVyeS5pc0Z1bmN0aW9uKHRhcmdldCkgKSB7XG5cdFx0dGFyZ2V0ID0ge307XG5cdH1cblxuXHQvLyBFeHRlbmQgalF1ZXJ5IGl0c2VsZiBpZiBvbmx5IG9uZSBhcmd1bWVudCBpcyBwYXNzZWRcblx0aWYgKCBpID09PSBsZW5ndGggKSB7XG5cdFx0dGFyZ2V0ID0gdGhpcztcblx0XHRpLS07XG5cdH1cblxuXHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblx0XHQvLyBPbmx5IGRlYWwgd2l0aCBub24tbnVsbC91bmRlZmluZWQgdmFsdWVzXG5cdFx0aWYgKCAob3B0aW9ucyA9IGFyZ3VtZW50c1sgaSBdKSAhPSBudWxsICkge1xuXHRcdFx0Ly8gRXh0ZW5kIHRoZSBiYXNlIG9iamVjdFxuXHRcdFx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xuXHRcdFx0XHRzcmMgPSB0YXJnZXRbIG5hbWUgXTtcblx0XHRcdFx0Y29weSA9IG9wdGlvbnNbIG5hbWUgXTtcblxuXHRcdFx0XHQvLyBQcmV2ZW50IG5ldmVyLWVuZGluZyBsb29wXG5cdFx0XHRcdGlmICggdGFyZ2V0ID09PSBjb3B5ICkge1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVjdXJzZSBpZiB3ZSdyZSBtZXJnaW5nIHBsYWluIG9iamVjdHMgb3IgYXJyYXlzXG5cdFx0XHRcdGlmICggZGVlcCAmJiBjb3B5ICYmICggalF1ZXJ5LmlzUGxhaW5PYmplY3QoY29weSkgfHwgKGNvcHlJc0FycmF5ID0galF1ZXJ5LmlzQXJyYXkoY29weSkpICkgKSB7XG5cdFx0XHRcdFx0aWYgKCBjb3B5SXNBcnJheSApIHtcblx0XHRcdFx0XHRcdGNvcHlJc0FycmF5ID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRjbG9uZSA9IHNyYyAmJiBqUXVlcnkuaXNBcnJheShzcmMpID8gc3JjIDogW107XG5cblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Y2xvbmUgPSBzcmMgJiYgalF1ZXJ5LmlzUGxhaW5PYmplY3Qoc3JjKSA/IHNyYyA6IHt9O1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIE5ldmVyIG1vdmUgb3JpZ2luYWwgb2JqZWN0cywgY2xvbmUgdGhlbVxuXHRcdFx0XHRcdHRhcmdldFsgbmFtZSBdID0galF1ZXJ5LmV4dGVuZCggZGVlcCwgY2xvbmUsIGNvcHkgKTtcblxuXHRcdFx0XHQvLyBEb24ndCBicmluZyBpbiB1bmRlZmluZWQgdmFsdWVzXG5cdFx0XHRcdH0gZWxzZSBpZiAoIGNvcHkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHR0YXJnZXRbIG5hbWUgXSA9IGNvcHk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIG1vZGlmaWVkIG9iamVjdFxuXHRyZXR1cm4gdGFyZ2V0O1xufTtcblxualF1ZXJ5LmV4dGVuZCh7XG5cdC8vIFVuaXF1ZSBmb3IgZWFjaCBjb3B5IG9mIGpRdWVyeSBvbiB0aGUgcGFnZVxuXHRleHBhbmRvOiBcImpRdWVyeVwiICsgKCB2ZXJzaW9uICsgTWF0aC5yYW5kb20oKSApLnJlcGxhY2UoIC9cXEQvZywgXCJcIiApLFxuXG5cdC8vIEFzc3VtZSBqUXVlcnkgaXMgcmVhZHkgd2l0aG91dCB0aGUgcmVhZHkgbW9kdWxlXG5cdGlzUmVhZHk6IHRydWUsXG5cblx0ZXJyb3I6IGZ1bmN0aW9uKCBtc2cgKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKCBtc2cgKTtcblx0fSxcblxuXHRub29wOiBmdW5jdGlvbigpIHt9LFxuXG5cdGlzRnVuY3Rpb246IGZ1bmN0aW9uKCBvYmogKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS50eXBlKG9iaikgPT09IFwiZnVuY3Rpb25cIjtcblx0fSxcblxuXHRpc0FycmF5OiBBcnJheS5pc0FycmF5LFxuXG5cdGlzV2luZG93OiBmdW5jdGlvbiggb2JqICkge1xuXHRcdHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmogPT09IG9iai53aW5kb3c7XG5cdH0sXG5cblx0aXNOdW1lcmljOiBmdW5jdGlvbiggb2JqICkge1xuXHRcdC8vIHBhcnNlRmxvYXQgTmFOcyBudW1lcmljLWNhc3QgZmFsc2UgcG9zaXRpdmVzIChudWxsfHRydWV8ZmFsc2V8XCJcIilcblx0XHQvLyAuLi5idXQgbWlzaW50ZXJwcmV0cyBsZWFkaW5nLW51bWJlciBzdHJpbmdzLCBwYXJ0aWN1bGFybHkgaGV4IGxpdGVyYWxzIChcIjB4Li4uXCIpXG5cdFx0Ly8gc3VidHJhY3Rpb24gZm9yY2VzIGluZmluaXRpZXMgdG8gTmFOXG5cdFx0Ly8gYWRkaW5nIDEgY29ycmVjdHMgbG9zcyBvZiBwcmVjaXNpb24gZnJvbSBwYXJzZUZsb2F0ICgjMTUxMDApXG5cdFx0cmV0dXJuICFqUXVlcnkuaXNBcnJheSggb2JqICkgJiYgKG9iaiAtIHBhcnNlRmxvYXQoIG9iaiApICsgMSkgPj0gMDtcblx0fSxcblxuXHRpc1BsYWluT2JqZWN0OiBmdW5jdGlvbiggb2JqICkge1xuXHRcdC8vIE5vdCBwbGFpbiBvYmplY3RzOlxuXHRcdC8vIC0gQW55IG9iamVjdCBvciB2YWx1ZSB3aG9zZSBpbnRlcm5hbCBbW0NsYXNzXV0gcHJvcGVydHkgaXMgbm90IFwiW29iamVjdCBPYmplY3RdXCJcblx0XHQvLyAtIERPTSBub2Rlc1xuXHRcdC8vIC0gd2luZG93XG5cdFx0aWYgKCBqUXVlcnkudHlwZSggb2JqICkgIT09IFwib2JqZWN0XCIgfHwgb2JqLm5vZGVUeXBlIHx8IGpRdWVyeS5pc1dpbmRvdyggb2JqICkgKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0aWYgKCBvYmouY29uc3RydWN0b3IgJiZcblx0XHRcdFx0IWhhc093bi5jYWxsKCBvYmouY29uc3RydWN0b3IucHJvdG90eXBlLCBcImlzUHJvdG90eXBlT2ZcIiApICkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIElmIHRoZSBmdW5jdGlvbiBoYXNuJ3QgcmV0dXJuZWQgYWxyZWFkeSwgd2UncmUgY29uZmlkZW50IHRoYXRcblx0XHQvLyB8b2JqfCBpcyBhIHBsYWluIG9iamVjdCwgY3JlYXRlZCBieSB7fSBvciBjb25zdHJ1Y3RlZCB3aXRoIG5ldyBPYmplY3Rcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSxcblxuXHRpc0VtcHR5T2JqZWN0OiBmdW5jdGlvbiggb2JqICkge1xuXHRcdHZhciBuYW1lO1xuXHRcdGZvciAoIG5hbWUgaW4gb2JqICkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSxcblxuXHR0eXBlOiBmdW5jdGlvbiggb2JqICkge1xuXHRcdGlmICggb2JqID09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gb2JqICsgXCJcIjtcblx0XHR9XG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZDw0LjAsIGlPUzw2IChmdW5jdGlvbmlzaCBSZWdFeHApXG5cdFx0cmV0dXJuIHR5cGVvZiBvYmogPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIG9iaiA9PT0gXCJmdW5jdGlvblwiID9cblx0XHRcdGNsYXNzMnR5cGVbIHRvU3RyaW5nLmNhbGwob2JqKSBdIHx8IFwib2JqZWN0XCIgOlxuXHRcdFx0dHlwZW9mIG9iajtcblx0fSxcblxuXHQvLyBFdmFsdWF0ZXMgYSBzY3JpcHQgaW4gYSBnbG9iYWwgY29udGV4dFxuXHRnbG9iYWxFdmFsOiBmdW5jdGlvbiggY29kZSApIHtcblx0XHR2YXIgc2NyaXB0LFxuXHRcdFx0aW5kaXJlY3QgPSBldmFsO1xuXG5cdFx0Y29kZSA9IGpRdWVyeS50cmltKCBjb2RlICk7XG5cblx0XHRpZiAoIGNvZGUgKSB7XG5cdFx0XHQvLyBJZiB0aGUgY29kZSBpbmNsdWRlcyBhIHZhbGlkLCBwcm9sb2d1ZSBwb3NpdGlvblxuXHRcdFx0Ly8gc3RyaWN0IG1vZGUgcHJhZ21hLCBleGVjdXRlIGNvZGUgYnkgaW5qZWN0aW5nIGFcblx0XHRcdC8vIHNjcmlwdCB0YWcgaW50byB0aGUgZG9jdW1lbnQuXG5cdFx0XHRpZiAoIGNvZGUuaW5kZXhPZihcInVzZSBzdHJpY3RcIikgPT09IDEgKSB7XG5cdFx0XHRcdHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG5cdFx0XHRcdHNjcmlwdC50ZXh0ID0gY29kZTtcblx0XHRcdFx0ZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZCggc2NyaXB0ICkucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggc2NyaXB0ICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gT3RoZXJ3aXNlLCBhdm9pZCB0aGUgRE9NIG5vZGUgY3JlYXRpb24sIGluc2VydGlvblxuXHRcdFx0Ly8gYW5kIHJlbW92YWwgYnkgdXNpbmcgYW4gaW5kaXJlY3QgZ2xvYmFsIGV2YWxcblx0XHRcdFx0aW5kaXJlY3QoIGNvZGUgKTtcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0Ly8gQ29udmVydCBkYXNoZWQgdG8gY2FtZWxDYXNlOyB1c2VkIGJ5IHRoZSBjc3MgYW5kIGRhdGEgbW9kdWxlc1xuXHQvLyBTdXBwb3J0OiBJRTktMTErXG5cdC8vIE1pY3Jvc29mdCBmb3Jnb3QgdG8gaHVtcCB0aGVpciB2ZW5kb3IgcHJlZml4ICgjOTU3Milcblx0Y2FtZWxDYXNlOiBmdW5jdGlvbiggc3RyaW5nICkge1xuXHRcdHJldHVybiBzdHJpbmcucmVwbGFjZSggcm1zUHJlZml4LCBcIm1zLVwiICkucmVwbGFjZSggcmRhc2hBbHBoYSwgZmNhbWVsQ2FzZSApO1xuXHR9LFxuXG5cdG5vZGVOYW1lOiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblx0XHRyZXR1cm4gZWxlbS5ub2RlTmFtZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUudG9Mb3dlckNhc2UoKTtcblx0fSxcblxuXHQvLyBhcmdzIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5XG5cdGVhY2g6IGZ1bmN0aW9uKCBvYmosIGNhbGxiYWNrLCBhcmdzICkge1xuXHRcdHZhciB2YWx1ZSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0bGVuZ3RoID0gb2JqLmxlbmd0aCxcblx0XHRcdGlzQXJyYXkgPSBpc0FycmF5bGlrZSggb2JqICk7XG5cblx0XHRpZiAoIGFyZ3MgKSB7XG5cdFx0XHRpZiAoIGlzQXJyYXkgKSB7XG5cdFx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHRcdHZhbHVlID0gY2FsbGJhY2suYXBwbHkoIG9ialsgaSBdLCBhcmdzICk7XG5cblx0XHRcdFx0XHRpZiAoIHZhbHVlID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Zm9yICggaSBpbiBvYmogKSB7XG5cdFx0XHRcdFx0dmFsdWUgPSBjYWxsYmFjay5hcHBseSggb2JqWyBpIF0sIGFyZ3MgKTtcblxuXHRcdFx0XHRcdGlmICggdmFsdWUgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBBIHNwZWNpYWwsIGZhc3QsIGNhc2UgZm9yIHRoZSBtb3N0IGNvbW1vbiB1c2Ugb2YgZWFjaFxuXHRcdH0gZWxzZSB7XG5cdFx0XHRpZiAoIGlzQXJyYXkgKSB7XG5cdFx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHRcdHZhbHVlID0gY2FsbGJhY2suY2FsbCggb2JqWyBpIF0sIGksIG9ialsgaSBdICk7XG5cblx0XHRcdFx0XHRpZiAoIHZhbHVlID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Zm9yICggaSBpbiBvYmogKSB7XG5cdFx0XHRcdFx0dmFsdWUgPSBjYWxsYmFjay5jYWxsKCBvYmpbIGkgXSwgaSwgb2JqWyBpIF0gKTtcblxuXHRcdFx0XHRcdGlmICggdmFsdWUgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG9iajtcblx0fSxcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkPDQuMVxuXHR0cmltOiBmdW5jdGlvbiggdGV4dCApIHtcblx0XHRyZXR1cm4gdGV4dCA9PSBudWxsID9cblx0XHRcdFwiXCIgOlxuXHRcdFx0KCB0ZXh0ICsgXCJcIiApLnJlcGxhY2UoIHJ0cmltLCBcIlwiICk7XG5cdH0sXG5cblx0Ly8gcmVzdWx0cyBpcyBmb3IgaW50ZXJuYWwgdXNhZ2Ugb25seVxuXHRtYWtlQXJyYXk6IGZ1bmN0aW9uKCBhcnIsIHJlc3VsdHMgKSB7XG5cdFx0dmFyIHJldCA9IHJlc3VsdHMgfHwgW107XG5cblx0XHRpZiAoIGFyciAhPSBudWxsICkge1xuXHRcdFx0aWYgKCBpc0FycmF5bGlrZSggT2JqZWN0KGFycikgKSApIHtcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCByZXQsXG5cdFx0XHRcdFx0dHlwZW9mIGFyciA9PT0gXCJzdHJpbmdcIiA/XG5cdFx0XHRcdFx0WyBhcnIgXSA6IGFyclxuXHRcdFx0XHQpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHVzaC5jYWxsKCByZXQsIGFyciApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiByZXQ7XG5cdH0sXG5cblx0aW5BcnJheTogZnVuY3Rpb24oIGVsZW0sIGFyciwgaSApIHtcblx0XHRyZXR1cm4gYXJyID09IG51bGwgPyAtMSA6IGluZGV4T2YuY2FsbCggYXJyLCBlbGVtLCBpICk7XG5cdH0sXG5cblx0bWVyZ2U6IGZ1bmN0aW9uKCBmaXJzdCwgc2Vjb25kICkge1xuXHRcdHZhciBsZW4gPSArc2Vjb25kLmxlbmd0aCxcblx0XHRcdGogPSAwLFxuXHRcdFx0aSA9IGZpcnN0Lmxlbmd0aDtcblxuXHRcdGZvciAoIDsgaiA8IGxlbjsgaisrICkge1xuXHRcdFx0Zmlyc3RbIGkrKyBdID0gc2Vjb25kWyBqIF07XG5cdFx0fVxuXG5cdFx0Zmlyc3QubGVuZ3RoID0gaTtcblxuXHRcdHJldHVybiBmaXJzdDtcblx0fSxcblxuXHRncmVwOiBmdW5jdGlvbiggZWxlbXMsIGNhbGxiYWNrLCBpbnZlcnQgKSB7XG5cdFx0dmFyIGNhbGxiYWNrSW52ZXJzZSxcblx0XHRcdG1hdGNoZXMgPSBbXSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0bGVuZ3RoID0gZWxlbXMubGVuZ3RoLFxuXHRcdFx0Y2FsbGJhY2tFeHBlY3QgPSAhaW52ZXJ0O1xuXG5cdFx0Ly8gR28gdGhyb3VnaCB0aGUgYXJyYXksIG9ubHkgc2F2aW5nIHRoZSBpdGVtc1xuXHRcdC8vIHRoYXQgcGFzcyB0aGUgdmFsaWRhdG9yIGZ1bmN0aW9uXG5cdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRjYWxsYmFja0ludmVyc2UgPSAhY2FsbGJhY2soIGVsZW1zWyBpIF0sIGkgKTtcblx0XHRcdGlmICggY2FsbGJhY2tJbnZlcnNlICE9PSBjYWxsYmFja0V4cGVjdCApIHtcblx0XHRcdFx0bWF0Y2hlcy5wdXNoKCBlbGVtc1sgaSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG1hdGNoZXM7XG5cdH0sXG5cblx0Ly8gYXJnIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5XG5cdG1hcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgYXJnICkge1xuXHRcdHZhciB2YWx1ZSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0bGVuZ3RoID0gZWxlbXMubGVuZ3RoLFxuXHRcdFx0aXNBcnJheSA9IGlzQXJyYXlsaWtlKCBlbGVtcyApLFxuXHRcdFx0cmV0ID0gW107XG5cblx0XHQvLyBHbyB0aHJvdWdoIHRoZSBhcnJheSwgdHJhbnNsYXRpbmcgZWFjaCBvZiB0aGUgaXRlbXMgdG8gdGhlaXIgbmV3IHZhbHVlc1xuXHRcdGlmICggaXNBcnJheSApIHtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHR2YWx1ZSA9IGNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpLCBhcmcgKTtcblxuXHRcdFx0XHRpZiAoIHZhbHVlICE9IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0LnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdC8vIEdvIHRocm91Z2ggZXZlcnkga2V5IG9uIHRoZSBvYmplY3QsXG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvciAoIGkgaW4gZWxlbXMgKSB7XG5cdFx0XHRcdHZhbHVlID0gY2FsbGJhY2soIGVsZW1zWyBpIF0sIGksIGFyZyApO1xuXG5cdFx0XHRcdGlmICggdmFsdWUgIT0gbnVsbCApIHtcblx0XHRcdFx0XHRyZXQucHVzaCggdmFsdWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEZsYXR0ZW4gYW55IG5lc3RlZCBhcnJheXNcblx0XHRyZXR1cm4gY29uY2F0LmFwcGx5KCBbXSwgcmV0ICk7XG5cdH0sXG5cblx0Ly8gQSBnbG9iYWwgR1VJRCBjb3VudGVyIGZvciBvYmplY3RzXG5cdGd1aWQ6IDEsXG5cblx0Ly8gQmluZCBhIGZ1bmN0aW9uIHRvIGEgY29udGV4dCwgb3B0aW9uYWxseSBwYXJ0aWFsbHkgYXBwbHlpbmcgYW55XG5cdC8vIGFyZ3VtZW50cy5cblx0cHJveHk6IGZ1bmN0aW9uKCBmbiwgY29udGV4dCApIHtcblx0XHR2YXIgdG1wLCBhcmdzLCBwcm94eTtcblxuXHRcdGlmICggdHlwZW9mIGNvbnRleHQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHR0bXAgPSBmblsgY29udGV4dCBdO1xuXHRcdFx0Y29udGV4dCA9IGZuO1xuXHRcdFx0Zm4gPSB0bXA7XG5cdFx0fVxuXG5cdFx0Ly8gUXVpY2sgY2hlY2sgdG8gZGV0ZXJtaW5lIGlmIHRhcmdldCBpcyBjYWxsYWJsZSwgaW4gdGhlIHNwZWNcblx0XHQvLyB0aGlzIHRocm93cyBhIFR5cGVFcnJvciwgYnV0IHdlIHdpbGwganVzdCByZXR1cm4gdW5kZWZpbmVkLlxuXHRcdGlmICggIWpRdWVyeS5pc0Z1bmN0aW9uKCBmbiApICkge1xuXHRcdFx0cmV0dXJuIHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHQvLyBTaW11bGF0ZWQgYmluZFxuXHRcdGFyZ3MgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMsIDIgKTtcblx0XHRwcm94eSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIGZuLmFwcGx5KCBjb250ZXh0IHx8IHRoaXMsIGFyZ3MuY29uY2F0KCBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSApICk7XG5cdFx0fTtcblxuXHRcdC8vIFNldCB0aGUgZ3VpZCBvZiB1bmlxdWUgaGFuZGxlciB0byB0aGUgc2FtZSBvZiBvcmlnaW5hbCBoYW5kbGVyLCBzbyBpdCBjYW4gYmUgcmVtb3ZlZFxuXHRcdHByb3h5Lmd1aWQgPSBmbi5ndWlkID0gZm4uZ3VpZCB8fCBqUXVlcnkuZ3VpZCsrO1xuXG5cdFx0cmV0dXJuIHByb3h5O1xuXHR9LFxuXG5cdG5vdzogRGF0ZS5ub3csXG5cblx0Ly8galF1ZXJ5LnN1cHBvcnQgaXMgbm90IHVzZWQgaW4gQ29yZSBidXQgb3RoZXIgcHJvamVjdHMgYXR0YWNoIHRoZWlyXG5cdC8vIHByb3BlcnRpZXMgdG8gaXQgc28gaXQgbmVlZHMgdG8gZXhpc3QuXG5cdHN1cHBvcnQ6IHN1cHBvcnRcbn0pO1xuXG4vLyBQb3B1bGF0ZSB0aGUgY2xhc3MydHlwZSBtYXBcbmpRdWVyeS5lYWNoKFwiQm9vbGVhbiBOdW1iZXIgU3RyaW5nIEZ1bmN0aW9uIEFycmF5IERhdGUgUmVnRXhwIE9iamVjdCBFcnJvclwiLnNwbGl0KFwiIFwiKSwgZnVuY3Rpb24oaSwgbmFtZSkge1xuXHRjbGFzczJ0eXBlWyBcIltvYmplY3QgXCIgKyBuYW1lICsgXCJdXCIgXSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcbn0pO1xuXG5mdW5jdGlvbiBpc0FycmF5bGlrZSggb2JqICkge1xuXG5cdC8vIFN1cHBvcnQ6IGlPUyA4LjIgKG5vdCByZXByb2R1Y2libGUgaW4gc2ltdWxhdG9yKVxuXHQvLyBgaW5gIGNoZWNrIHVzZWQgdG8gcHJldmVudCBKSVQgZXJyb3IgKGdoLTIxNDUpXG5cdC8vIGhhc093biBpc24ndCB1c2VkIGhlcmUgZHVlIHRvIGZhbHNlIG5lZ2F0aXZlc1xuXHQvLyByZWdhcmRpbmcgTm9kZWxpc3QgbGVuZ3RoIGluIElFXG5cdHZhciBsZW5ndGggPSBcImxlbmd0aFwiIGluIG9iaiAmJiBvYmoubGVuZ3RoLFxuXHRcdHR5cGUgPSBqUXVlcnkudHlwZSggb2JqICk7XG5cblx0aWYgKCB0eXBlID09PSBcImZ1bmN0aW9uXCIgfHwgalF1ZXJ5LmlzV2luZG93KCBvYmogKSApIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRpZiAoIG9iai5ub2RlVHlwZSA9PT0gMSAmJiBsZW5ndGggKSB7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cblxuXHRyZXR1cm4gdHlwZSA9PT0gXCJhcnJheVwiIHx8IGxlbmd0aCA9PT0gMCB8fFxuXHRcdHR5cGVvZiBsZW5ndGggPT09IFwibnVtYmVyXCIgJiYgbGVuZ3RoID4gMCAmJiAoIGxlbmd0aCAtIDEgKSBpbiBvYmo7XG59XG52YXIgU2l6emxlID1cbi8qIVxuICogU2l6emxlIENTUyBTZWxlY3RvciBFbmdpbmUgdjIuMi4wLXByZVxuICogaHR0cDovL3NpenpsZWpzLmNvbS9cbiAqXG4gKiBDb3B5cmlnaHQgMjAwOCwgMjAxNCBqUXVlcnkgRm91bmRhdGlvbiwgSW5jLiBhbmQgb3RoZXIgY29udHJpYnV0b3JzXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2VcbiAqXG4gKiBEYXRlOiAyMDE0LTEyLTE2XG4gKi9cbihmdW5jdGlvbiggd2luZG93ICkge1xuXG52YXIgaSxcblx0c3VwcG9ydCxcblx0RXhwcixcblx0Z2V0VGV4dCxcblx0aXNYTUwsXG5cdHRva2VuaXplLFxuXHRjb21waWxlLFxuXHRzZWxlY3QsXG5cdG91dGVybW9zdENvbnRleHQsXG5cdHNvcnRJbnB1dCxcblx0aGFzRHVwbGljYXRlLFxuXG5cdC8vIExvY2FsIGRvY3VtZW50IHZhcnNcblx0c2V0RG9jdW1lbnQsXG5cdGRvY3VtZW50LFxuXHRkb2NFbGVtLFxuXHRkb2N1bWVudElzSFRNTCxcblx0cmJ1Z2d5UVNBLFxuXHRyYnVnZ3lNYXRjaGVzLFxuXHRtYXRjaGVzLFxuXHRjb250YWlucyxcblxuXHQvLyBJbnN0YW5jZS1zcGVjaWZpYyBkYXRhXG5cdGV4cGFuZG8gPSBcInNpenpsZVwiICsgMSAqIG5ldyBEYXRlKCksXG5cdHByZWZlcnJlZERvYyA9IHdpbmRvdy5kb2N1bWVudCxcblx0ZGlycnVucyA9IDAsXG5cdGRvbmUgPSAwLFxuXHRjbGFzc0NhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0dG9rZW5DYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdGNvbXBpbGVyQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHRzb3J0T3JkZXIgPSBmdW5jdGlvbiggYSwgYiApIHtcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdH1cblx0XHRyZXR1cm4gMDtcblx0fSxcblxuXHQvLyBHZW5lcmFsLXB1cnBvc2UgY29uc3RhbnRzXG5cdE1BWF9ORUdBVElWRSA9IDEgPDwgMzEsXG5cblx0Ly8gSW5zdGFuY2UgbWV0aG9kc1xuXHRoYXNPd24gPSAoe30pLmhhc093blByb3BlcnR5LFxuXHRhcnIgPSBbXSxcblx0cG9wID0gYXJyLnBvcCxcblx0cHVzaF9uYXRpdmUgPSBhcnIucHVzaCxcblx0cHVzaCA9IGFyci5wdXNoLFxuXHRzbGljZSA9IGFyci5zbGljZSxcblx0Ly8gVXNlIGEgc3RyaXBwZWQtZG93biBpbmRleE9mIGFzIGl0J3MgZmFzdGVyIHRoYW4gbmF0aXZlXG5cdC8vIGh0dHA6Ly9qc3BlcmYuY29tL3Rob3ItaW5kZXhvZi12cy1mb3IvNVxuXHRpbmRleE9mID0gZnVuY3Rpb24oIGxpc3QsIGVsZW0gKSB7XG5cdFx0dmFyIGkgPSAwLFxuXHRcdFx0bGVuID0gbGlzdC5sZW5ndGg7XG5cdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRpZiAoIGxpc3RbaV0gPT09IGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gLTE7XG5cdH0sXG5cblx0Ym9vbGVhbnMgPSBcImNoZWNrZWR8c2VsZWN0ZWR8YXN5bmN8YXV0b2ZvY3VzfGF1dG9wbGF5fGNvbnRyb2xzfGRlZmVyfGRpc2FibGVkfGhpZGRlbnxpc21hcHxsb29wfG11bHRpcGxlfG9wZW58cmVhZG9ubHl8cmVxdWlyZWR8c2NvcGVkXCIsXG5cblx0Ly8gUmVndWxhciBleHByZXNzaW9uc1xuXG5cdC8vIFdoaXRlc3BhY2UgY2hhcmFjdGVycyBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLXNlbGVjdG9ycy8jd2hpdGVzcGFjZVxuXHR3aGl0ZXNwYWNlID0gXCJbXFxcXHgyMFxcXFx0XFxcXHJcXFxcblxcXFxmXVwiLFxuXHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLXN5bnRheC8jY2hhcmFjdGVyc1xuXHRjaGFyYWN0ZXJFbmNvZGluZyA9IFwiKD86XFxcXFxcXFwufFtcXFxcdy1dfFteXFxcXHgwMC1cXFxceGEwXSkrXCIsXG5cblx0Ly8gTG9vc2VseSBtb2RlbGVkIG9uIENTUyBpZGVudGlmaWVyIGNoYXJhY3RlcnNcblx0Ly8gQW4gdW5xdW90ZWQgdmFsdWUgc2hvdWxkIGJlIGEgQ1NTIGlkZW50aWZpZXIgaHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1zZWxlY3RvcnMvI2F0dHJpYnV0ZS1zZWxlY3RvcnNcblx0Ly8gUHJvcGVyIHN5bnRheDogaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvc3luZGF0YS5odG1sI3ZhbHVlLWRlZi1pZGVudGlmaWVyXG5cdGlkZW50aWZpZXIgPSBjaGFyYWN0ZXJFbmNvZGluZy5yZXBsYWNlKCBcIndcIiwgXCJ3I1wiICksXG5cblx0Ly8gQXR0cmlidXRlIHNlbGVjdG9yczogaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNhdHRyaWJ1dGUtc2VsZWN0b3JzXG5cdGF0dHJpYnV0ZXMgPSBcIlxcXFxbXCIgKyB3aGl0ZXNwYWNlICsgXCIqKFwiICsgY2hhcmFjdGVyRW5jb2RpbmcgKyBcIikoPzpcIiArIHdoaXRlc3BhY2UgK1xuXHRcdC8vIE9wZXJhdG9yIChjYXB0dXJlIDIpXG5cdFx0XCIqKFsqXiR8IX5dPz0pXCIgKyB3aGl0ZXNwYWNlICtcblx0XHQvLyBcIkF0dHJpYnV0ZSB2YWx1ZXMgbXVzdCBiZSBDU1MgaWRlbnRpZmllcnMgW2NhcHR1cmUgNV0gb3Igc3RyaW5ncyBbY2FwdHVyZSAzIG9yIGNhcHR1cmUgNF1cIlxuXHRcdFwiKig/OicoKD86XFxcXFxcXFwufFteXFxcXFxcXFwnXSkqKSd8XFxcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXFxcXCJdKSopXFxcInwoXCIgKyBpZGVudGlmaWVyICsgXCIpKXwpXCIgKyB3aGl0ZXNwYWNlICtcblx0XHRcIipcXFxcXVwiLFxuXG5cdHBzZXVkb3MgPSBcIjooXCIgKyBjaGFyYWN0ZXJFbmNvZGluZyArIFwiKSg/OlxcXFwoKFwiICtcblx0XHQvLyBUbyByZWR1Y2UgdGhlIG51bWJlciBvZiBzZWxlY3RvcnMgbmVlZGluZyB0b2tlbml6ZSBpbiB0aGUgcHJlRmlsdGVyLCBwcmVmZXIgYXJndW1lbnRzOlxuXHRcdC8vIDEuIHF1b3RlZCAoY2FwdHVyZSAzOyBjYXB0dXJlIDQgb3IgY2FwdHVyZSA1KVxuXHRcdFwiKCcoKD86XFxcXFxcXFwufFteXFxcXFxcXFwnXSkqKSd8XFxcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXFxcXCJdKSopXFxcIil8XCIgK1xuXHRcdC8vIDIuIHNpbXBsZSAoY2FwdHVyZSA2KVxuXHRcdFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKClbXFxcXF1dfFwiICsgYXR0cmlidXRlcyArIFwiKSopfFwiICtcblx0XHQvLyAzLiBhbnl0aGluZyBlbHNlIChjYXB0dXJlIDIpXG5cdFx0XCIuKlwiICtcblx0XHRcIilcXFxcKXwpXCIsXG5cblx0Ly8gTGVhZGluZyBhbmQgbm9uLWVzY2FwZWQgdHJhaWxpbmcgd2hpdGVzcGFjZSwgY2FwdHVyaW5nIHNvbWUgbm9uLXdoaXRlc3BhY2UgY2hhcmFjdGVycyBwcmVjZWRpbmcgdGhlIGxhdHRlclxuXHRyd2hpdGVzcGFjZSA9IG5ldyBSZWdFeHAoIHdoaXRlc3BhY2UgKyBcIitcIiwgXCJnXCIgKSxcblx0cnRyaW0gPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIit8KCg/Ol58W15cXFxcXFxcXF0pKD86XFxcXFxcXFwuKSopXCIgKyB3aGl0ZXNwYWNlICsgXCIrJFwiLCBcImdcIiApLFxuXG5cdHJjb21tYSA9IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArIFwiKixcIiArIHdoaXRlc3BhY2UgKyBcIipcIiApLFxuXHRyY29tYmluYXRvcnMgPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIiooWz4rfl18XCIgKyB3aGl0ZXNwYWNlICsgXCIpXCIgKyB3aGl0ZXNwYWNlICsgXCIqXCIgKSxcblxuXHRyYXR0cmlidXRlUXVvdGVzID0gbmV3IFJlZ0V4cCggXCI9XCIgKyB3aGl0ZXNwYWNlICsgXCIqKFteXFxcXF0nXFxcIl0qPylcIiArIHdoaXRlc3BhY2UgKyBcIipcXFxcXVwiLCBcImdcIiApLFxuXG5cdHJwc2V1ZG8gPSBuZXcgUmVnRXhwKCBwc2V1ZG9zICksXG5cdHJpZGVudGlmaWVyID0gbmV3IFJlZ0V4cCggXCJeXCIgKyBpZGVudGlmaWVyICsgXCIkXCIgKSxcblxuXHRtYXRjaEV4cHIgPSB7XG5cdFx0XCJJRFwiOiBuZXcgUmVnRXhwKCBcIl4jKFwiICsgY2hhcmFjdGVyRW5jb2RpbmcgKyBcIilcIiApLFxuXHRcdFwiQ0xBU1NcIjogbmV3IFJlZ0V4cCggXCJeXFxcXC4oXCIgKyBjaGFyYWN0ZXJFbmNvZGluZyArIFwiKVwiICksXG5cdFx0XCJUQUdcIjogbmV3IFJlZ0V4cCggXCJeKFwiICsgY2hhcmFjdGVyRW5jb2RpbmcucmVwbGFjZSggXCJ3XCIsIFwidypcIiApICsgXCIpXCIgKSxcblx0XHRcIkFUVFJcIjogbmV3IFJlZ0V4cCggXCJeXCIgKyBhdHRyaWJ1dGVzICksXG5cdFx0XCJQU0VVRE9cIjogbmV3IFJlZ0V4cCggXCJeXCIgKyBwc2V1ZG9zICksXG5cdFx0XCJDSElMRFwiOiBuZXcgUmVnRXhwKCBcIl46KG9ubHl8Zmlyc3R8bGFzdHxudGh8bnRoLWxhc3QpLShjaGlsZHxvZi10eXBlKSg/OlxcXFwoXCIgKyB3aGl0ZXNwYWNlICtcblx0XHRcdFwiKihldmVufG9kZHwoKFsrLV18KShcXFxcZCopbnwpXCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86KFsrLV18KVwiICsgd2hpdGVzcGFjZSArXG5cdFx0XHRcIiooXFxcXGQrKXwpKVwiICsgd2hpdGVzcGFjZSArIFwiKlxcXFwpfClcIiwgXCJpXCIgKSxcblx0XHRcImJvb2xcIjogbmV3IFJlZ0V4cCggXCJeKD86XCIgKyBib29sZWFucyArIFwiKSRcIiwgXCJpXCIgKSxcblx0XHQvLyBGb3IgdXNlIGluIGxpYnJhcmllcyBpbXBsZW1lbnRpbmcgLmlzKClcblx0XHQvLyBXZSB1c2UgdGhpcyBmb3IgUE9TIG1hdGNoaW5nIGluIGBzZWxlY3RgXG5cdFx0XCJuZWVkc0NvbnRleHRcIjogbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqWz4rfl18OihldmVufG9kZHxlcXxndHxsdHxudGh8Zmlyc3R8bGFzdCkoPzpcXFxcKFwiICtcblx0XHRcdHdoaXRlc3BhY2UgKyBcIiooKD86LVxcXFxkKT9cXFxcZCopXCIgKyB3aGl0ZXNwYWNlICsgXCIqXFxcXCl8KSg/PVteLV18JClcIiwgXCJpXCIgKVxuXHR9LFxuXG5cdHJpbnB1dHMgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLFxuXHRyaGVhZGVyID0gL15oXFxkJC9pLFxuXG5cdHJuYXRpdmUgPSAvXltee10rXFx7XFxzKlxcW25hdGl2ZSBcXHcvLFxuXG5cdC8vIEVhc2lseS1wYXJzZWFibGUvcmV0cmlldmFibGUgSUQgb3IgVEFHIG9yIENMQVNTIHNlbGVjdG9yc1xuXHRycXVpY2tFeHByID0gL14oPzojKFtcXHctXSspfChcXHcrKXxcXC4oW1xcdy1dKykpJC8sXG5cblx0cnNpYmxpbmcgPSAvWyt+XS8sXG5cdHJlc2NhcGUgPSAvJ3xcXFxcL2csXG5cblx0Ly8gQ1NTIGVzY2FwZXMgaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvc3luZGF0YS5odG1sI2VzY2FwZWQtY2hhcmFjdGVyc1xuXHRydW5lc2NhcGUgPSBuZXcgUmVnRXhwKCBcIlxcXFxcXFxcKFtcXFxcZGEtZl17MSw2fVwiICsgd2hpdGVzcGFjZSArIFwiP3woXCIgKyB3aGl0ZXNwYWNlICsgXCIpfC4pXCIsIFwiaWdcIiApLFxuXHRmdW5lc2NhcGUgPSBmdW5jdGlvbiggXywgZXNjYXBlZCwgZXNjYXBlZFdoaXRlc3BhY2UgKSB7XG5cdFx0dmFyIGhpZ2ggPSBcIjB4XCIgKyBlc2NhcGVkIC0gMHgxMDAwMDtcblx0XHQvLyBOYU4gbWVhbnMgbm9uLWNvZGVwb2ludFxuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3g8MjRcblx0XHQvLyBXb3JrYXJvdW5kIGVycm9uZW91cyBudW1lcmljIGludGVycHJldGF0aW9uIG9mICtcIjB4XCJcblx0XHRyZXR1cm4gaGlnaCAhPT0gaGlnaCB8fCBlc2NhcGVkV2hpdGVzcGFjZSA/XG5cdFx0XHRlc2NhcGVkIDpcblx0XHRcdGhpZ2ggPCAwID9cblx0XHRcdFx0Ly8gQk1QIGNvZGVwb2ludFxuXHRcdFx0XHRTdHJpbmcuZnJvbUNoYXJDb2RlKCBoaWdoICsgMHgxMDAwMCApIDpcblx0XHRcdFx0Ly8gU3VwcGxlbWVudGFsIFBsYW5lIGNvZGVwb2ludCAoc3Vycm9nYXRlIHBhaXIpXG5cdFx0XHRcdFN0cmluZy5mcm9tQ2hhckNvZGUoIGhpZ2ggPj4gMTAgfCAweEQ4MDAsIGhpZ2ggJiAweDNGRiB8IDB4REMwMCApO1xuXHR9LFxuXG5cdC8vIFVzZWQgZm9yIGlmcmFtZXNcblx0Ly8gU2VlIHNldERvY3VtZW50KClcblx0Ly8gUmVtb3ZpbmcgdGhlIGZ1bmN0aW9uIHdyYXBwZXIgY2F1c2VzIGEgXCJQZXJtaXNzaW9uIERlbmllZFwiXG5cdC8vIGVycm9yIGluIElFXG5cdHVubG9hZEhhbmRsZXIgPSBmdW5jdGlvbigpIHtcblx0XHRzZXREb2N1bWVudCgpO1xuXHR9O1xuXG4vLyBPcHRpbWl6ZSBmb3IgcHVzaC5hcHBseSggXywgTm9kZUxpc3QgKVxudHJ5IHtcblx0cHVzaC5hcHBseShcblx0XHQoYXJyID0gc2xpY2UuY2FsbCggcHJlZmVycmVkRG9jLmNoaWxkTm9kZXMgKSksXG5cdFx0cHJlZmVycmVkRG9jLmNoaWxkTm9kZXNcblx0KTtcblx0Ly8gU3VwcG9ydDogQW5kcm9pZDw0LjBcblx0Ly8gRGV0ZWN0IHNpbGVudGx5IGZhaWxpbmcgcHVzaC5hcHBseVxuXHRhcnJbIHByZWZlcnJlZERvYy5jaGlsZE5vZGVzLmxlbmd0aCBdLm5vZGVUeXBlO1xufSBjYXRjaCAoIGUgKSB7XG5cdHB1c2ggPSB7IGFwcGx5OiBhcnIubGVuZ3RoID9cblxuXHRcdC8vIExldmVyYWdlIHNsaWNlIGlmIHBvc3NpYmxlXG5cdFx0ZnVuY3Rpb24oIHRhcmdldCwgZWxzICkge1xuXHRcdFx0cHVzaF9uYXRpdmUuYXBwbHkoIHRhcmdldCwgc2xpY2UuY2FsbChlbHMpICk7XG5cdFx0fSA6XG5cblx0XHQvLyBTdXBwb3J0OiBJRTw5XG5cdFx0Ly8gT3RoZXJ3aXNlIGFwcGVuZCBkaXJlY3RseVxuXHRcdGZ1bmN0aW9uKCB0YXJnZXQsIGVscyApIHtcblx0XHRcdHZhciBqID0gdGFyZ2V0Lmxlbmd0aCxcblx0XHRcdFx0aSA9IDA7XG5cdFx0XHQvLyBDYW4ndCB0cnVzdCBOb2RlTGlzdC5sZW5ndGhcblx0XHRcdHdoaWxlICggKHRhcmdldFtqKytdID0gZWxzW2krK10pICkge31cblx0XHRcdHRhcmdldC5sZW5ndGggPSBqIC0gMTtcblx0XHR9XG5cdH07XG59XG5cbmZ1bmN0aW9uIFNpenpsZSggc2VsZWN0b3IsIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKSB7XG5cdHZhciBtYXRjaCwgZWxlbSwgbSwgbm9kZVR5cGUsXG5cdFx0Ly8gUVNBIHZhcnNcblx0XHRpLCBncm91cHMsIG9sZCwgbmlkLCBuZXdDb250ZXh0LCBuZXdTZWxlY3RvcjtcblxuXHRpZiAoICggY29udGV4dCA/IGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0IDogcHJlZmVycmVkRG9jICkgIT09IGRvY3VtZW50ICkge1xuXHRcdHNldERvY3VtZW50KCBjb250ZXh0ICk7XG5cdH1cblxuXHRjb250ZXh0ID0gY29udGV4dCB8fCBkb2N1bWVudDtcblx0cmVzdWx0cyA9IHJlc3VsdHMgfHwgW107XG5cdG5vZGVUeXBlID0gY29udGV4dC5ub2RlVHlwZTtcblxuXHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiB8fCAhc2VsZWN0b3IgfHxcblx0XHRub2RlVHlwZSAhPT0gMSAmJiBub2RlVHlwZSAhPT0gOSAmJiBub2RlVHlwZSAhPT0gMTEgKSB7XG5cblx0XHRyZXR1cm4gcmVzdWx0cztcblx0fVxuXG5cdGlmICggIXNlZWQgJiYgZG9jdW1lbnRJc0hUTUwgKSB7XG5cblx0XHQvLyBUcnkgdG8gc2hvcnRjdXQgZmluZCBvcGVyYXRpb25zIHdoZW4gcG9zc2libGUgKGUuZy4sIG5vdCB1bmRlciBEb2N1bWVudEZyYWdtZW50KVxuXHRcdGlmICggbm9kZVR5cGUgIT09IDExICYmIChtYXRjaCA9IHJxdWlja0V4cHIuZXhlYyggc2VsZWN0b3IgKSkgKSB7XG5cdFx0XHQvLyBTcGVlZC11cDogU2l6emxlKFwiI0lEXCIpXG5cdFx0XHRpZiAoIChtID0gbWF0Y2hbMV0pICkge1xuXHRcdFx0XHRpZiAoIG5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHRcdGVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBtICk7XG5cdFx0XHRcdFx0Ly8gQ2hlY2sgcGFyZW50Tm9kZSB0byBjYXRjaCB3aGVuIEJsYWNrYmVycnkgNC42IHJldHVybnNcblx0XHRcdFx0XHQvLyBub2RlcyB0aGF0IGFyZSBubyBsb25nZXIgaW4gdGhlIGRvY3VtZW50IChqUXVlcnkgIzY5NjMpXG5cdFx0XHRcdFx0aWYgKCBlbGVtICYmIGVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0XHRcdC8vIEhhbmRsZSB0aGUgY2FzZSB3aGVyZSBJRSwgT3BlcmEsIGFuZCBXZWJraXQgcmV0dXJuIGl0ZW1zXG5cdFx0XHRcdFx0XHQvLyBieSBuYW1lIGluc3RlYWQgb2YgSURcblx0XHRcdFx0XHRcdGlmICggZWxlbS5pZCA9PT0gbSApIHtcblx0XHRcdFx0XHRcdFx0cmVzdWx0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Ly8gQ29udGV4dCBpcyBub3QgYSBkb2N1bWVudFxuXHRcdFx0XHRcdGlmICggY29udGV4dC5vd25lckRvY3VtZW50ICYmIChlbGVtID0gY29udGV4dC5vd25lckRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBtICkpICYmXG5cdFx0XHRcdFx0XHRjb250YWlucyggY29udGV4dCwgZWxlbSApICYmIGVsZW0uaWQgPT09IG0gKSB7XG5cdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHQvLyBTcGVlZC11cDogU2l6emxlKFwiVEFHXCIpXG5cdFx0XHR9IGVsc2UgaWYgKCBtYXRjaFsyXSApIHtcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggc2VsZWN0b3IgKSApO1xuXHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblxuXHRcdFx0Ly8gU3BlZWQtdXA6IFNpenpsZShcIi5DTEFTU1wiKVxuXHRcdFx0fSBlbHNlIGlmICggKG0gPSBtYXRjaFszXSkgJiYgc3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICkge1xuXHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIG0gKSApO1xuXHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBRU0EgcGF0aFxuXHRcdGlmICggc3VwcG9ydC5xc2EgJiYgKCFyYnVnZ3lRU0EgfHwgIXJidWdneVFTQS50ZXN0KCBzZWxlY3RvciApKSApIHtcblx0XHRcdG5pZCA9IG9sZCA9IGV4cGFuZG87XG5cdFx0XHRuZXdDb250ZXh0ID0gY29udGV4dDtcblx0XHRcdG5ld1NlbGVjdG9yID0gbm9kZVR5cGUgIT09IDEgJiYgc2VsZWN0b3I7XG5cblx0XHRcdC8vIHFTQSB3b3JrcyBzdHJhbmdlbHkgb24gRWxlbWVudC1yb290ZWQgcXVlcmllc1xuXHRcdFx0Ly8gV2UgY2FuIHdvcmsgYXJvdW5kIHRoaXMgYnkgc3BlY2lmeWluZyBhbiBleHRyYSBJRCBvbiB0aGUgcm9vdFxuXHRcdFx0Ly8gYW5kIHdvcmtpbmcgdXAgZnJvbSB0aGVyZSAoVGhhbmtzIHRvIEFuZHJldyBEdXBvbnQgZm9yIHRoZSB0ZWNobmlxdWUpXG5cdFx0XHQvLyBJRSA4IGRvZXNuJ3Qgd29yayBvbiBvYmplY3QgZWxlbWVudHNcblx0XHRcdGlmICggbm9kZVR5cGUgPT09IDEgJiYgY29udGV4dC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICE9PSBcIm9iamVjdFwiICkge1xuXHRcdFx0XHRncm91cHMgPSB0b2tlbml6ZSggc2VsZWN0b3IgKTtcblxuXHRcdFx0XHRpZiAoIChvbGQgPSBjb250ZXh0LmdldEF0dHJpYnV0ZShcImlkXCIpKSApIHtcblx0XHRcdFx0XHRuaWQgPSBvbGQucmVwbGFjZSggcmVzY2FwZSwgXCJcXFxcJCZcIiApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGNvbnRleHQuc2V0QXR0cmlidXRlKCBcImlkXCIsIG5pZCApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdG5pZCA9IFwiW2lkPSdcIiArIG5pZCArIFwiJ10gXCI7XG5cblx0XHRcdFx0aSA9IGdyb3Vwcy5sZW5ndGg7XG5cdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdGdyb3Vwc1tpXSA9IG5pZCArIHRvU2VsZWN0b3IoIGdyb3Vwc1tpXSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdG5ld0NvbnRleHQgPSByc2libGluZy50ZXN0KCBzZWxlY3RvciApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fCBjb250ZXh0O1xuXHRcdFx0XHRuZXdTZWxlY3RvciA9IGdyb3Vwcy5qb2luKFwiLFwiKTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBuZXdTZWxlY3RvciApIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLFxuXHRcdFx0XHRcdFx0bmV3Q29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCBuZXdTZWxlY3RvciApXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0fSBjYXRjaChxc2FFcnJvcikge1xuXHRcdFx0XHR9IGZpbmFsbHkge1xuXHRcdFx0XHRcdGlmICggIW9sZCApIHtcblx0XHRcdFx0XHRcdGNvbnRleHQucmVtb3ZlQXR0cmlidXRlKFwiaWRcIik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQWxsIG90aGVyc1xuXHRyZXR1cm4gc2VsZWN0KCBzZWxlY3Rvci5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICksIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKTtcbn1cblxuLyoqXG4gKiBDcmVhdGUga2V5LXZhbHVlIGNhY2hlcyBvZiBsaW1pdGVkIHNpemVcbiAqIEByZXR1cm5zIHtGdW5jdGlvbihzdHJpbmcsIE9iamVjdCl9IFJldHVybnMgdGhlIE9iamVjdCBkYXRhIGFmdGVyIHN0b3JpbmcgaXQgb24gaXRzZWxmIHdpdGhcbiAqXHRwcm9wZXJ0eSBuYW1lIHRoZSAoc3BhY2Utc3VmZml4ZWQpIHN0cmluZyBhbmQgKGlmIHRoZSBjYWNoZSBpcyBsYXJnZXIgdGhhbiBFeHByLmNhY2hlTGVuZ3RoKVxuICpcdGRlbGV0aW5nIHRoZSBvbGRlc3QgZW50cnlcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ2FjaGUoKSB7XG5cdHZhciBrZXlzID0gW107XG5cblx0ZnVuY3Rpb24gY2FjaGUoIGtleSwgdmFsdWUgKSB7XG5cdFx0Ly8gVXNlIChrZXkgKyBcIiBcIikgdG8gYXZvaWQgY29sbGlzaW9uIHdpdGggbmF0aXZlIHByb3RvdHlwZSBwcm9wZXJ0aWVzIChzZWUgSXNzdWUgIzE1Nylcblx0XHRpZiAoIGtleXMucHVzaCgga2V5ICsgXCIgXCIgKSA+IEV4cHIuY2FjaGVMZW5ndGggKSB7XG5cdFx0XHQvLyBPbmx5IGtlZXAgdGhlIG1vc3QgcmVjZW50IGVudHJpZXNcblx0XHRcdGRlbGV0ZSBjYWNoZVsga2V5cy5zaGlmdCgpIF07XG5cdFx0fVxuXHRcdHJldHVybiAoY2FjaGVbIGtleSArIFwiIFwiIF0gPSB2YWx1ZSk7XG5cdH1cblx0cmV0dXJuIGNhY2hlO1xufVxuXG4vKipcbiAqIE1hcmsgYSBmdW5jdGlvbiBmb3Igc3BlY2lhbCB1c2UgYnkgU2l6emxlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gbWFya1xuICovXG5mdW5jdGlvbiBtYXJrRnVuY3Rpb24oIGZuICkge1xuXHRmblsgZXhwYW5kbyBdID0gdHJ1ZTtcblx0cmV0dXJuIGZuO1xufVxuXG4vKipcbiAqIFN1cHBvcnQgdGVzdGluZyB1c2luZyBhbiBlbGVtZW50XG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBQYXNzZWQgdGhlIGNyZWF0ZWQgZGl2IGFuZCBleHBlY3RzIGEgYm9vbGVhbiByZXN1bHRcbiAqL1xuZnVuY3Rpb24gYXNzZXJ0KCBmbiApIHtcblx0dmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cblx0dHJ5IHtcblx0XHRyZXR1cm4gISFmbiggZGl2ICk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH0gZmluYWxseSB7XG5cdFx0Ly8gUmVtb3ZlIGZyb20gaXRzIHBhcmVudCBieSBkZWZhdWx0XG5cdFx0aWYgKCBkaXYucGFyZW50Tm9kZSApIHtcblx0XHRcdGRpdi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBkaXYgKTtcblx0XHR9XG5cdFx0Ly8gcmVsZWFzZSBtZW1vcnkgaW4gSUVcblx0XHRkaXYgPSBudWxsO1xuXHR9XG59XG5cbi8qKlxuICogQWRkcyB0aGUgc2FtZSBoYW5kbGVyIGZvciBhbGwgb2YgdGhlIHNwZWNpZmllZCBhdHRyc1xuICogQHBhcmFtIHtTdHJpbmd9IGF0dHJzIFBpcGUtc2VwYXJhdGVkIGxpc3Qgb2YgYXR0cmlidXRlc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlciBUaGUgbWV0aG9kIHRoYXQgd2lsbCBiZSBhcHBsaWVkXG4gKi9cbmZ1bmN0aW9uIGFkZEhhbmRsZSggYXR0cnMsIGhhbmRsZXIgKSB7XG5cdHZhciBhcnIgPSBhdHRycy5zcGxpdChcInxcIiksXG5cdFx0aSA9IGF0dHJzLmxlbmd0aDtcblxuXHR3aGlsZSAoIGktLSApIHtcblx0XHRFeHByLmF0dHJIYW5kbGVbIGFycltpXSBdID0gaGFuZGxlcjtcblx0fVxufVxuXG4vKipcbiAqIENoZWNrcyBkb2N1bWVudCBvcmRlciBvZiB0d28gc2libGluZ3NcbiAqIEBwYXJhbSB7RWxlbWVudH0gYVxuICogQHBhcmFtIHtFbGVtZW50fSBiXG4gKiBAcmV0dXJucyB7TnVtYmVyfSBSZXR1cm5zIGxlc3MgdGhhbiAwIGlmIGEgcHJlY2VkZXMgYiwgZ3JlYXRlciB0aGFuIDAgaWYgYSBmb2xsb3dzIGJcbiAqL1xuZnVuY3Rpb24gc2libGluZ0NoZWNrKCBhLCBiICkge1xuXHR2YXIgY3VyID0gYiAmJiBhLFxuXHRcdGRpZmYgPSBjdXIgJiYgYS5ub2RlVHlwZSA9PT0gMSAmJiBiLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHQoIH5iLnNvdXJjZUluZGV4IHx8IE1BWF9ORUdBVElWRSApIC1cblx0XHRcdCggfmEuc291cmNlSW5kZXggfHwgTUFYX05FR0FUSVZFICk7XG5cblx0Ly8gVXNlIElFIHNvdXJjZUluZGV4IGlmIGF2YWlsYWJsZSBvbiBib3RoIG5vZGVzXG5cdGlmICggZGlmZiApIHtcblx0XHRyZXR1cm4gZGlmZjtcblx0fVxuXG5cdC8vIENoZWNrIGlmIGIgZm9sbG93cyBhXG5cdGlmICggY3VyICkge1xuXHRcdHdoaWxlICggKGN1ciA9IGN1ci5uZXh0U2libGluZykgKSB7XG5cdFx0XHRpZiAoIGN1ciA9PT0gYiApIHtcblx0XHRcdFx0cmV0dXJuIC0xO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBhID8gMSA6IC0xO1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgaW5wdXQgdHlwZXNcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUlucHV0UHNldWRvKCB0eXBlICkge1xuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0cmV0dXJuIG5hbWUgPT09IFwiaW5wdXRcIiAmJiBlbGVtLnR5cGUgPT09IHR5cGU7XG5cdH07XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciBidXR0b25zXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxuICovXG5mdW5jdGlvbiBjcmVhdGVCdXR0b25Qc2V1ZG8oIHR5cGUgKSB7XG5cdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRyZXR1cm4gKG5hbWUgPT09IFwiaW5wdXRcIiB8fCBuYW1lID09PSBcImJ1dHRvblwiKSAmJiBlbGVtLnR5cGUgPT09IHR5cGU7XG5cdH07XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciBwb3NpdGlvbmFsc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gZm5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZm4gKSB7XG5cdHJldHVybiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIGFyZ3VtZW50ICkge1xuXHRcdGFyZ3VtZW50ID0gK2FyZ3VtZW50O1xuXHRcdHJldHVybiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHNlZWQsIG1hdGNoZXMgKSB7XG5cdFx0XHR2YXIgaixcblx0XHRcdFx0bWF0Y2hJbmRleGVzID0gZm4oIFtdLCBzZWVkLmxlbmd0aCwgYXJndW1lbnQgKSxcblx0XHRcdFx0aSA9IG1hdGNoSW5kZXhlcy5sZW5ndGg7XG5cblx0XHRcdC8vIE1hdGNoIGVsZW1lbnRzIGZvdW5kIGF0IHRoZSBzcGVjaWZpZWQgaW5kZXhlc1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGlmICggc2VlZFsgKGogPSBtYXRjaEluZGV4ZXNbaV0pIF0gKSB7XG5cdFx0XHRcdFx0c2VlZFtqXSA9ICEobWF0Y2hlc1tqXSA9IHNlZWRbal0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0pO1xufVxuXG4vKipcbiAqIENoZWNrcyBhIG5vZGUgZm9yIHZhbGlkaXR5IGFzIGEgU2l6emxlIGNvbnRleHRcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3Q9fSBjb250ZXh0XG4gKiBAcmV0dXJucyB7RWxlbWVudHxPYmplY3R8Qm9vbGVhbn0gVGhlIGlucHV0IG5vZGUgaWYgYWNjZXB0YWJsZSwgb3RoZXJ3aXNlIGEgZmFsc3kgdmFsdWVcbiAqL1xuZnVuY3Rpb24gdGVzdENvbnRleHQoIGNvbnRleHQgKSB7XG5cdHJldHVybiBjb250ZXh0ICYmIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiICYmIGNvbnRleHQ7XG59XG5cbi8vIEV4cG9zZSBzdXBwb3J0IHZhcnMgZm9yIGNvbnZlbmllbmNlXG5zdXBwb3J0ID0gU2l6emxlLnN1cHBvcnQgPSB7fTtcblxuLyoqXG4gKiBEZXRlY3RzIFhNTCBub2Rlc1xuICogQHBhcmFtIHtFbGVtZW50fE9iamVjdH0gZWxlbSBBbiBlbGVtZW50IG9yIGEgZG9jdW1lbnRcbiAqIEByZXR1cm5zIHtCb29sZWFufSBUcnVlIGlmZiBlbGVtIGlzIGEgbm9uLUhUTUwgWE1MIG5vZGVcbiAqL1xuaXNYTUwgPSBTaXp6bGUuaXNYTUwgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0Ly8gZG9jdW1lbnRFbGVtZW50IGlzIHZlcmlmaWVkIGZvciBjYXNlcyB3aGVyZSBpdCBkb2Vzbid0IHlldCBleGlzdFxuXHQvLyAoc3VjaCBhcyBsb2FkaW5nIGlmcmFtZXMgaW4gSUUgLSAjNDgzMylcblx0dmFyIGRvY3VtZW50RWxlbWVudCA9IGVsZW0gJiYgKGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtKS5kb2N1bWVudEVsZW1lbnQ7XG5cdHJldHVybiBkb2N1bWVudEVsZW1lbnQgPyBkb2N1bWVudEVsZW1lbnQubm9kZU5hbWUgIT09IFwiSFRNTFwiIDogZmFsc2U7XG59O1xuXG4vKipcbiAqIFNldHMgZG9jdW1lbnQtcmVsYXRlZCB2YXJpYWJsZXMgb25jZSBiYXNlZCBvbiB0aGUgY3VycmVudCBkb2N1bWVudFxuICogQHBhcmFtIHtFbGVtZW50fE9iamVjdH0gW2RvY10gQW4gZWxlbWVudCBvciBkb2N1bWVudCBvYmplY3QgdG8gdXNlIHRvIHNldCB0aGUgZG9jdW1lbnRcbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGN1cnJlbnQgZG9jdW1lbnRcbiAqL1xuc2V0RG9jdW1lbnQgPSBTaXp6bGUuc2V0RG9jdW1lbnQgPSBmdW5jdGlvbiggbm9kZSApIHtcblx0dmFyIGhhc0NvbXBhcmUsIHBhcmVudCxcblx0XHRkb2MgPSBub2RlID8gbm9kZS5vd25lckRvY3VtZW50IHx8IG5vZGUgOiBwcmVmZXJyZWREb2M7XG5cblx0Ly8gSWYgbm8gZG9jdW1lbnQgYW5kIGRvY3VtZW50RWxlbWVudCBpcyBhdmFpbGFibGUsIHJldHVyblxuXHRpZiAoIGRvYyA9PT0gZG9jdW1lbnQgfHwgZG9jLm5vZGVUeXBlICE9PSA5IHx8ICFkb2MuZG9jdW1lbnRFbGVtZW50ICkge1xuXHRcdHJldHVybiBkb2N1bWVudDtcblx0fVxuXG5cdC8vIFNldCBvdXIgZG9jdW1lbnRcblx0ZG9jdW1lbnQgPSBkb2M7XG5cdGRvY0VsZW0gPSBkb2MuZG9jdW1lbnRFbGVtZW50O1xuXHRwYXJlbnQgPSBkb2MuZGVmYXVsdFZpZXc7XG5cblx0Ly8gU3VwcG9ydDogSUU+OFxuXHQvLyBJZiBpZnJhbWUgZG9jdW1lbnQgaXMgYXNzaWduZWQgdG8gXCJkb2N1bWVudFwiIHZhcmlhYmxlIGFuZCBpZiBpZnJhbWUgaGFzIGJlZW4gcmVsb2FkZWQsXG5cdC8vIElFIHdpbGwgdGhyb3cgXCJwZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gYWNjZXNzaW5nIFwiZG9jdW1lbnRcIiB2YXJpYWJsZSwgc2VlIGpRdWVyeSAjMTM5MzZcblx0Ly8gSUU2LTggZG8gbm90IHN1cHBvcnQgdGhlIGRlZmF1bHRWaWV3IHByb3BlcnR5IHNvIHBhcmVudCB3aWxsIGJlIHVuZGVmaW5lZFxuXHRpZiAoIHBhcmVudCAmJiBwYXJlbnQgIT09IHBhcmVudC50b3AgKSB7XG5cdFx0Ly8gSUUxMSBkb2VzIG5vdCBoYXZlIGF0dGFjaEV2ZW50LCBzbyBhbGwgbXVzdCBzdWZmZXJcblx0XHRpZiAoIHBhcmVudC5hZGRFdmVudExpc3RlbmVyICkge1xuXHRcdFx0cGFyZW50LmFkZEV2ZW50TGlzdGVuZXIoIFwidW5sb2FkXCIsIHVubG9hZEhhbmRsZXIsIGZhbHNlICk7XG5cdFx0fSBlbHNlIGlmICggcGFyZW50LmF0dGFjaEV2ZW50ICkge1xuXHRcdFx0cGFyZW50LmF0dGFjaEV2ZW50KCBcIm9udW5sb2FkXCIsIHVubG9hZEhhbmRsZXIgKTtcblx0XHR9XG5cdH1cblxuXHQvKiBTdXBwb3J0IHRlc3RzXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblx0ZG9jdW1lbnRJc0hUTUwgPSAhaXNYTUwoIGRvYyApO1xuXG5cdC8qIEF0dHJpYnV0ZXNcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIFN1cHBvcnQ6IElFPDhcblx0Ly8gVmVyaWZ5IHRoYXQgZ2V0QXR0cmlidXRlIHJlYWxseSByZXR1cm5zIGF0dHJpYnV0ZXMgYW5kIG5vdCBwcm9wZXJ0aWVzXG5cdC8vIChleGNlcHRpbmcgSUU4IGJvb2xlYW5zKVxuXHRzdXBwb3J0LmF0dHJpYnV0ZXMgPSBhc3NlcnQoZnVuY3Rpb24oIGRpdiApIHtcblx0XHRkaXYuY2xhc3NOYW1lID0gXCJpXCI7XG5cdFx0cmV0dXJuICFkaXYuZ2V0QXR0cmlidXRlKFwiY2xhc3NOYW1lXCIpO1xuXHR9KTtcblxuXHQvKiBnZXRFbGVtZW50KHMpQnkqXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBDaGVjayBpZiBnZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikgcmV0dXJucyBvbmx5IGVsZW1lbnRzXG5cdHN1cHBvcnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgPSBhc3NlcnQoZnVuY3Rpb24oIGRpdiApIHtcblx0XHRkaXYuYXBwZW5kQ2hpbGQoIGRvYy5jcmVhdGVDb21tZW50KFwiXCIpICk7XG5cdFx0cmV0dXJuICFkaXYuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCIqXCIpLmxlbmd0aDtcblx0fSk7XG5cblx0Ly8gU3VwcG9ydDogSUU8OVxuXHRzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgPSBybmF0aXZlLnRlc3QoIGRvYy5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICk7XG5cblx0Ly8gU3VwcG9ydDogSUU8MTBcblx0Ly8gQ2hlY2sgaWYgZ2V0RWxlbWVudEJ5SWQgcmV0dXJucyBlbGVtZW50cyBieSBuYW1lXG5cdC8vIFRoZSBicm9rZW4gZ2V0RWxlbWVudEJ5SWQgbWV0aG9kcyBkb24ndCBwaWNrIHVwIHByb2dyYW1hdGljYWxseS1zZXQgbmFtZXMsXG5cdC8vIHNvIHVzZSBhIHJvdW5kYWJvdXQgZ2V0RWxlbWVudHNCeU5hbWUgdGVzdFxuXHRzdXBwb3J0LmdldEJ5SWQgPSBhc3NlcnQoZnVuY3Rpb24oIGRpdiApIHtcblx0XHRkb2NFbGVtLmFwcGVuZENoaWxkKCBkaXYgKS5pZCA9IGV4cGFuZG87XG5cdFx0cmV0dXJuICFkb2MuZ2V0RWxlbWVudHNCeU5hbWUgfHwgIWRvYy5nZXRFbGVtZW50c0J5TmFtZSggZXhwYW5kbyApLmxlbmd0aDtcblx0fSk7XG5cblx0Ly8gSUQgZmluZCBhbmQgZmlsdGVyXG5cdGlmICggc3VwcG9ydC5nZXRCeUlkICkge1xuXHRcdEV4cHIuZmluZFtcIklEXCJdID0gZnVuY3Rpb24oIGlkLCBjb250ZXh0ICkge1xuXHRcdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50QnlJZCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcblx0XHRcdFx0dmFyIG0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBpZCApO1xuXHRcdFx0XHQvLyBDaGVjayBwYXJlbnROb2RlIHRvIGNhdGNoIHdoZW4gQmxhY2tiZXJyeSA0LjYgcmV0dXJuc1xuXHRcdFx0XHQvLyBub2RlcyB0aGF0IGFyZSBubyBsb25nZXIgaW4gdGhlIGRvY3VtZW50ICM2OTYzXG5cdFx0XHRcdHJldHVybiBtICYmIG0ucGFyZW50Tm9kZSA/IFsgbSBdIDogW107XG5cdFx0XHR9XG5cdFx0fTtcblx0XHRFeHByLmZpbHRlcltcIklEXCJdID0gZnVuY3Rpb24oIGlkICkge1xuXHRcdFx0dmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZShcImlkXCIpID09PSBhdHRySWQ7XG5cdFx0XHR9O1xuXHRcdH07XG5cdH0gZWxzZSB7XG5cdFx0Ly8gU3VwcG9ydDogSUU2Lzdcblx0XHQvLyBnZXRFbGVtZW50QnlJZCBpcyBub3QgcmVsaWFibGUgYXMgYSBmaW5kIHNob3J0Y3V0XG5cdFx0ZGVsZXRlIEV4cHIuZmluZFtcIklEXCJdO1xuXG5cdFx0RXhwci5maWx0ZXJbXCJJRFwiXSA9ICBmdW5jdGlvbiggaWQgKSB7XG5cdFx0XHR2YXIgYXR0cklkID0gaWQucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0dmFyIG5vZGUgPSB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGVOb2RlICE9PSBcInVuZGVmaW5lZFwiICYmIGVsZW0uZ2V0QXR0cmlidXRlTm9kZShcImlkXCIpO1xuXHRcdFx0XHRyZXR1cm4gbm9kZSAmJiBub2RlLnZhbHVlID09PSBhdHRySWQ7XG5cdFx0XHR9O1xuXHRcdH07XG5cdH1cblxuXHQvLyBUYWdcblx0RXhwci5maW5kW1wiVEFHXCJdID0gc3VwcG9ydC5nZXRFbGVtZW50c0J5VGFnTmFtZSA/XG5cdFx0ZnVuY3Rpb24oIHRhZywgY29udGV4dCApIHtcblx0XHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRcdHJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCB0YWcgKTtcblxuXHRcdFx0Ly8gRG9jdW1lbnRGcmFnbWVudCBub2RlcyBkb24ndCBoYXZlIGdFQlROXG5cdFx0XHR9IGVsc2UgaWYgKCBzdXBwb3J0LnFzYSApIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCggdGFnICk7XG5cdFx0XHR9XG5cdFx0fSA6XG5cblx0XHRmdW5jdGlvbiggdGFnLCBjb250ZXh0ICkge1xuXHRcdFx0dmFyIGVsZW0sXG5cdFx0XHRcdHRtcCA9IFtdLFxuXHRcdFx0XHRpID0gMCxcblx0XHRcdFx0Ly8gQnkgaGFwcHkgY29pbmNpZGVuY2UsIGEgKGJyb2tlbikgZ0VCVE4gYXBwZWFycyBvbiBEb2N1bWVudEZyYWdtZW50IG5vZGVzIHRvb1xuXHRcdFx0XHRyZXN1bHRzID0gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnICk7XG5cblx0XHRcdC8vIEZpbHRlciBvdXQgcG9zc2libGUgY29tbWVudHNcblx0XHRcdGlmICggdGFnID09PSBcIipcIiApIHtcblx0XHRcdFx0d2hpbGUgKCAoZWxlbSA9IHJlc3VsdHNbaSsrXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRcdFx0dG1wLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdG1wO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0fTtcblxuXHQvLyBDbGFzc1xuXHRFeHByLmZpbmRbXCJDTEFTU1wiXSA9IHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAmJiBmdW5jdGlvbiggY2xhc3NOYW1lLCBjb250ZXh0ICkge1xuXHRcdGlmICggZG9jdW1lbnRJc0hUTUwgKSB7XG5cdFx0XHRyZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCBjbGFzc05hbWUgKTtcblx0XHR9XG5cdH07XG5cblx0LyogUVNBL21hdGNoZXNTZWxlY3RvclxuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Ly8gUVNBIGFuZCBtYXRjaGVzU2VsZWN0b3Igc3VwcG9ydFxuXG5cdC8vIG1hdGNoZXNTZWxlY3Rvcig6YWN0aXZlKSByZXBvcnRzIGZhbHNlIHdoZW4gdHJ1ZSAoSUU5L09wZXJhIDExLjUpXG5cdHJidWdneU1hdGNoZXMgPSBbXTtcblxuXHQvLyBxU2EoOmZvY3VzKSByZXBvcnRzIGZhbHNlIHdoZW4gdHJ1ZSAoQ2hyb21lIDIxKVxuXHQvLyBXZSBhbGxvdyB0aGlzIGJlY2F1c2Ugb2YgYSBidWcgaW4gSUU4LzkgdGhhdCB0aHJvd3MgYW4gZXJyb3Jcblx0Ly8gd2hlbmV2ZXIgYGRvY3VtZW50LmFjdGl2ZUVsZW1lbnRgIGlzIGFjY2Vzc2VkIG9uIGFuIGlmcmFtZVxuXHQvLyBTbywgd2UgYWxsb3cgOmZvY3VzIHRvIHBhc3MgdGhyb3VnaCBRU0EgYWxsIHRoZSB0aW1lIHRvIGF2b2lkIHRoZSBJRSBlcnJvclxuXHQvLyBTZWUgaHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTMzNzhcblx0cmJ1Z2d5UVNBID0gW107XG5cblx0aWYgKCAoc3VwcG9ydC5xc2EgPSBybmF0aXZlLnRlc3QoIGRvYy5xdWVyeVNlbGVjdG9yQWxsICkpICkge1xuXHRcdC8vIEJ1aWxkIFFTQSByZWdleFxuXHRcdC8vIFJlZ2V4IHN0cmF0ZWd5IGFkb3B0ZWQgZnJvbSBEaWVnbyBQZXJpbmlcblx0XHRhc3NlcnQoZnVuY3Rpb24oIGRpdiApIHtcblx0XHRcdC8vIFNlbGVjdCBpcyBzZXQgdG8gZW1wdHkgc3RyaW5nIG9uIHB1cnBvc2Vcblx0XHRcdC8vIFRoaXMgaXMgdG8gdGVzdCBJRSdzIHRyZWF0bWVudCBvZiBub3QgZXhwbGljaXRseVxuXHRcdFx0Ly8gc2V0dGluZyBhIGJvb2xlYW4gY29udGVudCBhdHRyaWJ1dGUsXG5cdFx0XHQvLyBzaW5jZSBpdHMgcHJlc2VuY2Ugc2hvdWxkIGJlIGVub3VnaFxuXHRcdFx0Ly8gaHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTIzNTlcblx0XHRcdGRvY0VsZW0uYXBwZW5kQ2hpbGQoIGRpdiApLmlubmVySFRNTCA9IFwiPGEgaWQ9J1wiICsgZXhwYW5kbyArIFwiJz48L2E+XCIgK1xuXHRcdFx0XHRcIjxzZWxlY3QgaWQ9J1wiICsgZXhwYW5kbyArIFwiLVxcZl0nIG1zYWxsb3djYXB0dXJlPScnPlwiICtcblx0XHRcdFx0XCI8b3B0aW9uIHNlbGVjdGVkPScnPjwvb3B0aW9uPjwvc2VsZWN0PlwiO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRTgsIE9wZXJhIDExLTEyLjE2XG5cdFx0XHQvLyBOb3RoaW5nIHNob3VsZCBiZSBzZWxlY3RlZCB3aGVuIGVtcHR5IHN0cmluZ3MgZm9sbG93IF49IG9yICQ9IG9yICo9XG5cdFx0XHQvLyBUaGUgdGVzdCBhdHRyaWJ1dGUgbXVzdCBiZSB1bmtub3duIGluIE9wZXJhIGJ1dCBcInNhZmVcIiBmb3IgV2luUlRcblx0XHRcdC8vIGh0dHA6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9pZS9oaDQ2NTM4OC5hc3B4I2F0dHJpYnV0ZV9zZWN0aW9uXG5cdFx0XHRpZiAoIGRpdi5xdWVyeVNlbGVjdG9yQWxsKFwiW21zYWxsb3djYXB0dXJlXj0nJ11cIikubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJbKl4kXT1cIiArIHdoaXRlc3BhY2UgKyBcIiooPzonJ3xcXFwiXFxcIilcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRThcblx0XHRcdC8vIEJvb2xlYW4gYXR0cmlidXRlcyBhbmQgXCJ2YWx1ZVwiIGFyZSBub3QgdHJlYXRlZCBjb3JyZWN0bHlcblx0XHRcdGlmICggIWRpdi5xdWVyeVNlbGVjdG9yQWxsKFwiW3NlbGVjdGVkXVwiKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIlxcXFxbXCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86dmFsdWV8XCIgKyBib29sZWFucyArIFwiKVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZTwyOSwgQW5kcm9pZDw0LjIrLCBTYWZhcmk8Ny4wKywgaU9TPDcuMCssIFBoYW50b21KUzwxLjkuNytcblx0XHRcdGlmICggIWRpdi5xdWVyeVNlbGVjdG9yQWxsKCBcIltpZH49XCIgKyBleHBhbmRvICsgXCItXVwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaChcIn49XCIpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBXZWJraXQvT3BlcmEgLSA6Y2hlY2tlZCBzaG91bGQgcmV0dXJuIHNlbGVjdGVkIG9wdGlvbiBlbGVtZW50c1xuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAxMS9SRUMtY3NzMy1zZWxlY3RvcnMtMjAxMTA5MjkvI2NoZWNrZWRcblx0XHRcdC8vIElFOCB0aHJvd3MgZXJyb3IgaGVyZSBhbmQgd2lsbCBub3Qgc2VlIGxhdGVyIHRlc3RzXG5cdFx0XHRpZiAoICFkaXYucXVlcnlTZWxlY3RvckFsbChcIjpjaGVja2VkXCIpLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goXCI6Y2hlY2tlZFwiKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogU2FmYXJpIDgrLCBpT1MgOCtcblx0XHRcdC8vIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMzY4NTFcblx0XHRcdC8vIEluLXBhZ2UgYHNlbGVjdG9yI2lkIHNpYmluZy1jb21iaW5hdG9yIHNlbGVjdG9yYCBmYWlsc1xuXHRcdFx0aWYgKCAhZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoIFwiYSNcIiArIGV4cGFuZG8gKyBcIisqXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKFwiLiMuK1srfl1cIik7XG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHRhc3NlcnQoZnVuY3Rpb24oIGRpdiApIHtcblx0XHRcdC8vIFN1cHBvcnQ6IFdpbmRvd3MgOCBOYXRpdmUgQXBwc1xuXHRcdFx0Ly8gVGhlIHR5cGUgYW5kIG5hbWUgYXR0cmlidXRlcyBhcmUgcmVzdHJpY3RlZCBkdXJpbmcgLmlubmVySFRNTCBhc3NpZ25tZW50XG5cdFx0XHR2YXIgaW5wdXQgPSBkb2MuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuXHRcdFx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgXCJoaWRkZW5cIiApO1xuXHRcdFx0ZGl2LmFwcGVuZENoaWxkKCBpbnB1dCApLnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwiRFwiICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOFxuXHRcdFx0Ly8gRW5mb3JjZSBjYXNlLXNlbnNpdGl2aXR5IG9mIG5hbWUgYXR0cmlidXRlXG5cdFx0XHRpZiAoIGRpdi5xdWVyeVNlbGVjdG9yQWxsKFwiW25hbWU9ZF1cIikubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJuYW1lXCIgKyB3aGl0ZXNwYWNlICsgXCIqWypeJHwhfl0/PVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZGIDMuNSAtIDplbmFibGVkLzpkaXNhYmxlZCBhbmQgaGlkZGVuIGVsZW1lbnRzIChoaWRkZW4gZWxlbWVudHMgYXJlIHN0aWxsIGVuYWJsZWQpXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCAhZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoXCI6ZW5hYmxlZFwiKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIjplbmFibGVkXCIsIFwiOmRpc2FibGVkXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gT3BlcmEgMTAtMTEgZG9lcyBub3QgdGhyb3cgb24gcG9zdC1jb21tYSBpbnZhbGlkIHBzZXVkb3Ncblx0XHRcdGRpdi5xdWVyeVNlbGVjdG9yQWxsKFwiKiw6eFwiKTtcblx0XHRcdHJidWdneVFTQS5wdXNoKFwiLC4qOlwiKTtcblx0XHR9KTtcblx0fVxuXG5cdGlmICggKHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yID0gcm5hdGl2ZS50ZXN0KCAobWF0Y2hlcyA9IGRvY0VsZW0ubWF0Y2hlcyB8fFxuXHRcdGRvY0VsZW0ud2Via2l0TWF0Y2hlc1NlbGVjdG9yIHx8XG5cdFx0ZG9jRWxlbS5tb3pNYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm9NYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm1zTWF0Y2hlc1NlbGVjdG9yKSApKSApIHtcblxuXHRcdGFzc2VydChmdW5jdGlvbiggZGl2ICkge1xuXHRcdFx0Ly8gQ2hlY2sgdG8gc2VlIGlmIGl0J3MgcG9zc2libGUgdG8gZG8gbWF0Y2hlc1NlbGVjdG9yXG5cdFx0XHQvLyBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlIChJRSA5KVxuXHRcdFx0c3VwcG9ydC5kaXNjb25uZWN0ZWRNYXRjaCA9IG1hdGNoZXMuY2FsbCggZGl2LCBcImRpdlwiICk7XG5cblx0XHRcdC8vIFRoaXMgc2hvdWxkIGZhaWwgd2l0aCBhbiBleGNlcHRpb25cblx0XHRcdC8vIEdlY2tvIGRvZXMgbm90IGVycm9yLCByZXR1cm5zIGZhbHNlIGluc3RlYWRcblx0XHRcdG1hdGNoZXMuY2FsbCggZGl2LCBcIltzIT0nJ106eFwiICk7XG5cdFx0XHRyYnVnZ3lNYXRjaGVzLnB1c2goIFwiIT1cIiwgcHNldWRvcyApO1xuXHRcdH0pO1xuXHR9XG5cblx0cmJ1Z2d5UVNBID0gcmJ1Z2d5UVNBLmxlbmd0aCAmJiBuZXcgUmVnRXhwKCByYnVnZ3lRU0Euam9pbihcInxcIikgKTtcblx0cmJ1Z2d5TWF0Y2hlcyA9IHJidWdneU1hdGNoZXMubGVuZ3RoICYmIG5ldyBSZWdFeHAoIHJidWdneU1hdGNoZXMuam9pbihcInxcIikgKTtcblxuXHQvKiBDb250YWluc1xuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cdGhhc0NvbXBhcmUgPSBybmF0aXZlLnRlc3QoIGRvY0VsZW0uY29tcGFyZURvY3VtZW50UG9zaXRpb24gKTtcblxuXHQvLyBFbGVtZW50IGNvbnRhaW5zIGFub3RoZXJcblx0Ly8gUHVycG9zZWZ1bGx5IGRvZXMgbm90IGltcGxlbWVudCBpbmNsdXNpdmUgZGVzY2VuZGVudFxuXHQvLyBBcyBpbiwgYW4gZWxlbWVudCBkb2VzIG5vdCBjb250YWluIGl0c2VsZlxuXHRjb250YWlucyA9IGhhc0NvbXBhcmUgfHwgcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbnRhaW5zICkgP1xuXHRcdGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdFx0dmFyIGFkb3duID0gYS5ub2RlVHlwZSA9PT0gOSA/IGEuZG9jdW1lbnRFbGVtZW50IDogYSxcblx0XHRcdFx0YnVwID0gYiAmJiBiLnBhcmVudE5vZGU7XG5cdFx0XHRyZXR1cm4gYSA9PT0gYnVwIHx8ICEhKCBidXAgJiYgYnVwLm5vZGVUeXBlID09PSAxICYmIChcblx0XHRcdFx0YWRvd24uY29udGFpbnMgP1xuXHRcdFx0XHRcdGFkb3duLmNvbnRhaW5zKCBidXAgKSA6XG5cdFx0XHRcdFx0YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiAmJiBhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBidXAgKSAmIDE2XG5cdFx0XHQpKTtcblx0XHR9IDpcblx0XHRmdW5jdGlvbiggYSwgYiApIHtcblx0XHRcdGlmICggYiApIHtcblx0XHRcdFx0d2hpbGUgKCAoYiA9IGIucGFyZW50Tm9kZSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBiID09PSBhICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fTtcblxuXHQvKiBTb3J0aW5nXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBEb2N1bWVudCBvcmRlciBzb3J0aW5nXG5cdHNvcnRPcmRlciA9IGhhc0NvbXBhcmUgP1xuXHRmdW5jdGlvbiggYSwgYiApIHtcblxuXHRcdC8vIEZsYWcgZm9yIGR1cGxpY2F0ZSByZW1vdmFsXG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdC8vIFNvcnQgb24gbWV0aG9kIGV4aXN0ZW5jZSBpZiBvbmx5IG9uZSBpbnB1dCBoYXMgY29tcGFyZURvY3VtZW50UG9zaXRpb25cblx0XHR2YXIgY29tcGFyZSA9ICFhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIC0gIWIuY29tcGFyZURvY3VtZW50UG9zaXRpb247XG5cdFx0aWYgKCBjb21wYXJlICkge1xuXHRcdFx0cmV0dXJuIGNvbXBhcmU7XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsY3VsYXRlIHBvc2l0aW9uIGlmIGJvdGggaW5wdXRzIGJlbG9uZyB0byB0aGUgc2FtZSBkb2N1bWVudFxuXHRcdGNvbXBhcmUgPSAoIGEub3duZXJEb2N1bWVudCB8fCBhICkgPT09ICggYi5vd25lckRvY3VtZW50IHx8IGIgKSA/XG5cdFx0XHRhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBiICkgOlxuXG5cdFx0XHQvLyBPdGhlcndpc2Ugd2Uga25vdyB0aGV5IGFyZSBkaXNjb25uZWN0ZWRcblx0XHRcdDE7XG5cblx0XHQvLyBEaXNjb25uZWN0ZWQgbm9kZXNcblx0XHRpZiAoIGNvbXBhcmUgJiAxIHx8XG5cdFx0XHQoIXN1cHBvcnQuc29ydERldGFjaGVkICYmIGIuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGEgKSA9PT0gY29tcGFyZSkgKSB7XG5cblx0XHRcdC8vIENob29zZSB0aGUgZmlyc3QgZWxlbWVudCB0aGF0IGlzIHJlbGF0ZWQgdG8gb3VyIHByZWZlcnJlZCBkb2N1bWVudFxuXHRcdFx0aWYgKCBhID09PSBkb2MgfHwgYS5vd25lckRvY3VtZW50ID09PSBwcmVmZXJyZWREb2MgJiYgY29udGFpbnMocHJlZmVycmVkRG9jLCBhKSApIHtcblx0XHRcdFx0cmV0dXJuIC0xO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCBiID09PSBkb2MgfHwgYi5vd25lckRvY3VtZW50ID09PSBwcmVmZXJyZWREb2MgJiYgY29udGFpbnMocHJlZmVycmVkRG9jLCBiKSApIHtcblx0XHRcdFx0cmV0dXJuIDE7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE1haW50YWluIG9yaWdpbmFsIG9yZGVyXG5cdFx0XHRyZXR1cm4gc29ydElucHV0ID9cblx0XHRcdFx0KCBpbmRleE9mKCBzb3J0SW5wdXQsIGEgKSAtIGluZGV4T2YoIHNvcnRJbnB1dCwgYiApICkgOlxuXHRcdFx0XHQwO1xuXHRcdH1cblxuXHRcdHJldHVybiBjb21wYXJlICYgNCA/IC0xIDogMTtcblx0fSA6XG5cdGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdC8vIEV4aXQgZWFybHkgaWYgdGhlIG5vZGVzIGFyZSBpZGVudGljYWxcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdFx0cmV0dXJuIDA7XG5cdFx0fVxuXG5cdFx0dmFyIGN1cixcblx0XHRcdGkgPSAwLFxuXHRcdFx0YXVwID0gYS5wYXJlbnROb2RlLFxuXHRcdFx0YnVwID0gYi5wYXJlbnROb2RlLFxuXHRcdFx0YXAgPSBbIGEgXSxcblx0XHRcdGJwID0gWyBiIF07XG5cblx0XHQvLyBQYXJlbnRsZXNzIG5vZGVzIGFyZSBlaXRoZXIgZG9jdW1lbnRzIG9yIGRpc2Nvbm5lY3RlZFxuXHRcdGlmICggIWF1cCB8fCAhYnVwICkge1xuXHRcdFx0cmV0dXJuIGEgPT09IGRvYyA/IC0xIDpcblx0XHRcdFx0YiA9PT0gZG9jID8gMSA6XG5cdFx0XHRcdGF1cCA/IC0xIDpcblx0XHRcdFx0YnVwID8gMSA6XG5cdFx0XHRcdHNvcnRJbnB1dCA/XG5cdFx0XHRcdCggaW5kZXhPZiggc29ydElucHV0LCBhICkgLSBpbmRleE9mKCBzb3J0SW5wdXQsIGIgKSApIDpcblx0XHRcdFx0MDtcblxuXHRcdC8vIElmIHRoZSBub2RlcyBhcmUgc2libGluZ3MsIHdlIGNhbiBkbyBhIHF1aWNrIGNoZWNrXG5cdFx0fSBlbHNlIGlmICggYXVwID09PSBidXAgKSB7XG5cdFx0XHRyZXR1cm4gc2libGluZ0NoZWNrKCBhLCBiICk7XG5cdFx0fVxuXG5cdFx0Ly8gT3RoZXJ3aXNlIHdlIG5lZWQgZnVsbCBsaXN0cyBvZiB0aGVpciBhbmNlc3RvcnMgZm9yIGNvbXBhcmlzb25cblx0XHRjdXIgPSBhO1xuXHRcdHdoaWxlICggKGN1ciA9IGN1ci5wYXJlbnROb2RlKSApIHtcblx0XHRcdGFwLnVuc2hpZnQoIGN1ciApO1xuXHRcdH1cblx0XHRjdXIgPSBiO1xuXHRcdHdoaWxlICggKGN1ciA9IGN1ci5wYXJlbnROb2RlKSApIHtcblx0XHRcdGJwLnVuc2hpZnQoIGN1ciApO1xuXHRcdH1cblxuXHRcdC8vIFdhbGsgZG93biB0aGUgdHJlZSBsb29raW5nIGZvciBhIGRpc2NyZXBhbmN5XG5cdFx0d2hpbGUgKCBhcFtpXSA9PT0gYnBbaV0gKSB7XG5cdFx0XHRpKys7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGkgP1xuXHRcdFx0Ly8gRG8gYSBzaWJsaW5nIGNoZWNrIGlmIHRoZSBub2RlcyBoYXZlIGEgY29tbW9uIGFuY2VzdG9yXG5cdFx0XHRzaWJsaW5nQ2hlY2soIGFwW2ldLCBicFtpXSApIDpcblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIG5vZGVzIGluIG91ciBkb2N1bWVudCBzb3J0IGZpcnN0XG5cdFx0XHRhcFtpXSA9PT0gcHJlZmVycmVkRG9jID8gLTEgOlxuXHRcdFx0YnBbaV0gPT09IHByZWZlcnJlZERvYyA/IDEgOlxuXHRcdFx0MDtcblx0fTtcblxuXHRyZXR1cm4gZG9jO1xufTtcblxuU2l6emxlLm1hdGNoZXMgPSBmdW5jdGlvbiggZXhwciwgZWxlbWVudHMgKSB7XG5cdHJldHVybiBTaXp6bGUoIGV4cHIsIG51bGwsIG51bGwsIGVsZW1lbnRzICk7XG59O1xuXG5TaXp6bGUubWF0Y2hlc1NlbGVjdG9yID0gZnVuY3Rpb24oIGVsZW0sIGV4cHIgKSB7XG5cdC8vIFNldCBkb2N1bWVudCB2YXJzIGlmIG5lZWRlZFxuXHRpZiAoICggZWxlbS5vd25lckRvY3VtZW50IHx8IGVsZW0gKSAhPT0gZG9jdW1lbnQgKSB7XG5cdFx0c2V0RG9jdW1lbnQoIGVsZW0gKTtcblx0fVxuXG5cdC8vIE1ha2Ugc3VyZSB0aGF0IGF0dHJpYnV0ZSBzZWxlY3RvcnMgYXJlIHF1b3RlZFxuXHRleHByID0gZXhwci5yZXBsYWNlKCByYXR0cmlidXRlUXVvdGVzLCBcIj0nJDEnXVwiICk7XG5cblx0aWYgKCBzdXBwb3J0Lm1hdGNoZXNTZWxlY3RvciAmJiBkb2N1bWVudElzSFRNTCAmJlxuXHRcdCggIXJidWdneU1hdGNoZXMgfHwgIXJidWdneU1hdGNoZXMudGVzdCggZXhwciApICkgJiZcblx0XHQoICFyYnVnZ3lRU0EgICAgIHx8ICFyYnVnZ3lRU0EudGVzdCggZXhwciApICkgKSB7XG5cblx0XHR0cnkge1xuXHRcdFx0dmFyIHJldCA9IG1hdGNoZXMuY2FsbCggZWxlbSwgZXhwciApO1xuXG5cdFx0XHQvLyBJRSA5J3MgbWF0Y2hlc1NlbGVjdG9yIHJldHVybnMgZmFsc2Ugb24gZGlzY29ubmVjdGVkIG5vZGVzXG5cdFx0XHRpZiAoIHJldCB8fCBzdXBwb3J0LmRpc2Nvbm5lY3RlZE1hdGNoIHx8XG5cdFx0XHRcdFx0Ly8gQXMgd2VsbCwgZGlzY29ubmVjdGVkIG5vZGVzIGFyZSBzYWlkIHRvIGJlIGluIGEgZG9jdW1lbnRcblx0XHRcdFx0XHQvLyBmcmFnbWVudCBpbiBJRSA5XG5cdFx0XHRcdFx0ZWxlbS5kb2N1bWVudCAmJiBlbGVtLmRvY3VtZW50Lm5vZGVUeXBlICE9PSAxMSApIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblx0XHR9IGNhdGNoIChlKSB7fVxuXHR9XG5cblx0cmV0dXJuIFNpenpsZSggZXhwciwgZG9jdW1lbnQsIG51bGwsIFsgZWxlbSBdICkubGVuZ3RoID4gMDtcbn07XG5cblNpenpsZS5jb250YWlucyA9IGZ1bmN0aW9uKCBjb250ZXh0LCBlbGVtICkge1xuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0aWYgKCAoIGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0ICkgIT09IGRvY3VtZW50ICkge1xuXHRcdHNldERvY3VtZW50KCBjb250ZXh0ICk7XG5cdH1cblx0cmV0dXJuIGNvbnRhaW5zKCBjb250ZXh0LCBlbGVtICk7XG59O1xuXG5TaXp6bGUuYXR0ciA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0aWYgKCAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtICkgIT09IGRvY3VtZW50ICkge1xuXHRcdHNldERvY3VtZW50KCBlbGVtICk7XG5cdH1cblxuXHR2YXIgZm4gPSBFeHByLmF0dHJIYW5kbGVbIG5hbWUudG9Mb3dlckNhc2UoKSBdLFxuXHRcdC8vIERvbid0IGdldCBmb29sZWQgYnkgT2JqZWN0LnByb3RvdHlwZSBwcm9wZXJ0aWVzIChqUXVlcnkgIzEzODA3KVxuXHRcdHZhbCA9IGZuICYmIGhhc093bi5jYWxsKCBFeHByLmF0dHJIYW5kbGUsIG5hbWUudG9Mb3dlckNhc2UoKSApID9cblx0XHRcdGZuKCBlbGVtLCBuYW1lLCAhZG9jdW1lbnRJc0hUTUwgKSA6XG5cdFx0XHR1bmRlZmluZWQ7XG5cblx0cmV0dXJuIHZhbCAhPT0gdW5kZWZpbmVkID9cblx0XHR2YWwgOlxuXHRcdHN1cHBvcnQuYXR0cmlidXRlcyB8fCAhZG9jdW1lbnRJc0hUTUwgP1xuXHRcdFx0ZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUgKSA6XG5cdFx0XHQodmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKG5hbWUpKSAmJiB2YWwuc3BlY2lmaWVkID9cblx0XHRcdFx0dmFsLnZhbHVlIDpcblx0XHRcdFx0bnVsbDtcbn07XG5cblNpenpsZS5lcnJvciA9IGZ1bmN0aW9uKCBtc2cgKSB7XG5cdHRocm93IG5ldyBFcnJvciggXCJTeW50YXggZXJyb3IsIHVucmVjb2duaXplZCBleHByZXNzaW9uOiBcIiArIG1zZyApO1xufTtcblxuLyoqXG4gKiBEb2N1bWVudCBzb3J0aW5nIGFuZCByZW1vdmluZyBkdXBsaWNhdGVzXG4gKiBAcGFyYW0ge0FycmF5TGlrZX0gcmVzdWx0c1xuICovXG5TaXp6bGUudW5pcXVlU29ydCA9IGZ1bmN0aW9uKCByZXN1bHRzICkge1xuXHR2YXIgZWxlbSxcblx0XHRkdXBsaWNhdGVzID0gW10sXG5cdFx0aiA9IDAsXG5cdFx0aSA9IDA7XG5cblx0Ly8gVW5sZXNzIHdlICprbm93KiB3ZSBjYW4gZGV0ZWN0IGR1cGxpY2F0ZXMsIGFzc3VtZSB0aGVpciBwcmVzZW5jZVxuXHRoYXNEdXBsaWNhdGUgPSAhc3VwcG9ydC5kZXRlY3REdXBsaWNhdGVzO1xuXHRzb3J0SW5wdXQgPSAhc3VwcG9ydC5zb3J0U3RhYmxlICYmIHJlc3VsdHMuc2xpY2UoIDAgKTtcblx0cmVzdWx0cy5zb3J0KCBzb3J0T3JkZXIgKTtcblxuXHRpZiAoIGhhc0R1cGxpY2F0ZSApIHtcblx0XHR3aGlsZSAoIChlbGVtID0gcmVzdWx0c1tpKytdKSApIHtcblx0XHRcdGlmICggZWxlbSA9PT0gcmVzdWx0c1sgaSBdICkge1xuXHRcdFx0XHRqID0gZHVwbGljYXRlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0cmVzdWx0cy5zcGxpY2UoIGR1cGxpY2F0ZXNbIGogXSwgMSApO1xuXHRcdH1cblx0fVxuXG5cdC8vIENsZWFyIGlucHV0IGFmdGVyIHNvcnRpbmcgdG8gcmVsZWFzZSBvYmplY3RzXG5cdC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L3NpenpsZS9wdWxsLzIyNVxuXHRzb3J0SW5wdXQgPSBudWxsO1xuXG5cdHJldHVybiByZXN1bHRzO1xufTtcblxuLyoqXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZXRyaWV2aW5nIHRoZSB0ZXh0IHZhbHVlIG9mIGFuIGFycmF5IG9mIERPTSBub2Rlc1xuICogQHBhcmFtIHtBcnJheXxFbGVtZW50fSBlbGVtXG4gKi9cbmdldFRleHQgPSBTaXp6bGUuZ2V0VGV4dCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHR2YXIgbm9kZSxcblx0XHRyZXQgPSBcIlwiLFxuXHRcdGkgPSAwLFxuXHRcdG5vZGVUeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRpZiAoICFub2RlVHlwZSApIHtcblx0XHQvLyBJZiBubyBub2RlVHlwZSwgdGhpcyBpcyBleHBlY3RlZCB0byBiZSBhbiBhcnJheVxuXHRcdHdoaWxlICggKG5vZGUgPSBlbGVtW2krK10pICkge1xuXHRcdFx0Ly8gRG8gbm90IHRyYXZlcnNlIGNvbW1lbnQgbm9kZXNcblx0XHRcdHJldCArPSBnZXRUZXh0KCBub2RlICk7XG5cdFx0fVxuXHR9IGVsc2UgaWYgKCBub2RlVHlwZSA9PT0gMSB8fCBub2RlVHlwZSA9PT0gOSB8fCBub2RlVHlwZSA9PT0gMTEgKSB7XG5cdFx0Ly8gVXNlIHRleHRDb250ZW50IGZvciBlbGVtZW50c1xuXHRcdC8vIGlubmVyVGV4dCB1c2FnZSByZW1vdmVkIGZvciBjb25zaXN0ZW5jeSBvZiBuZXcgbGluZXMgKGpRdWVyeSAjMTExNTMpXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS50ZXh0Q29udGVudCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHJldHVybiBlbGVtLnRleHRDb250ZW50O1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBUcmF2ZXJzZSBpdHMgY2hpbGRyZW5cblx0XHRcdGZvciAoIGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7IGVsZW07IGVsZW0gPSBlbGVtLm5leHRTaWJsaW5nICkge1xuXHRcdFx0XHRyZXQgKz0gZ2V0VGV4dCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDMgfHwgbm9kZVR5cGUgPT09IDQgKSB7XG5cdFx0cmV0dXJuIGVsZW0ubm9kZVZhbHVlO1xuXHR9XG5cdC8vIERvIG5vdCBpbmNsdWRlIGNvbW1lbnQgb3IgcHJvY2Vzc2luZyBpbnN0cnVjdGlvbiBub2Rlc1xuXG5cdHJldHVybiByZXQ7XG59O1xuXG5FeHByID0gU2l6emxlLnNlbGVjdG9ycyA9IHtcblxuXHQvLyBDYW4gYmUgYWRqdXN0ZWQgYnkgdGhlIHVzZXJcblx0Y2FjaGVMZW5ndGg6IDUwLFxuXG5cdGNyZWF0ZVBzZXVkbzogbWFya0Z1bmN0aW9uLFxuXG5cdG1hdGNoOiBtYXRjaEV4cHIsXG5cblx0YXR0ckhhbmRsZToge30sXG5cblx0ZmluZDoge30sXG5cblx0cmVsYXRpdmU6IHtcblx0XHRcIj5cIjogeyBkaXI6IFwicGFyZW50Tm9kZVwiLCBmaXJzdDogdHJ1ZSB9LFxuXHRcdFwiIFwiOiB7IGRpcjogXCJwYXJlbnROb2RlXCIgfSxcblx0XHRcIitcIjogeyBkaXI6IFwicHJldmlvdXNTaWJsaW5nXCIsIGZpcnN0OiB0cnVlIH0sXG5cdFx0XCJ+XCI6IHsgZGlyOiBcInByZXZpb3VzU2libGluZ1wiIH1cblx0fSxcblxuXHRwcmVGaWx0ZXI6IHtcblx0XHRcIkFUVFJcIjogZnVuY3Rpb24oIG1hdGNoICkge1xuXHRcdFx0bWF0Y2hbMV0gPSBtYXRjaFsxXS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXG5cdFx0XHQvLyBNb3ZlIHRoZSBnaXZlbiB2YWx1ZSB0byBtYXRjaFszXSB3aGV0aGVyIHF1b3RlZCBvciB1bnF1b3RlZFxuXHRcdFx0bWF0Y2hbM10gPSAoIG1hdGNoWzNdIHx8IG1hdGNoWzRdIHx8IG1hdGNoWzVdIHx8IFwiXCIgKS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXG5cdFx0XHRpZiAoIG1hdGNoWzJdID09PSBcIn49XCIgKSB7XG5cdFx0XHRcdG1hdGNoWzNdID0gXCIgXCIgKyBtYXRjaFszXSArIFwiIFwiO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gbWF0Y2guc2xpY2UoIDAsIDQgKTtcblx0XHR9LFxuXG5cdFx0XCJDSElMRFwiOiBmdW5jdGlvbiggbWF0Y2ggKSB7XG5cdFx0XHQvKiBtYXRjaGVzIGZyb20gbWF0Y2hFeHByW1wiQ0hJTERcIl1cblx0XHRcdFx0MSB0eXBlIChvbmx5fG50aHwuLi4pXG5cdFx0XHRcdDIgd2hhdCAoY2hpbGR8b2YtdHlwZSlcblx0XHRcdFx0MyBhcmd1bWVudCAoZXZlbnxvZGR8XFxkKnxcXGQqbihbKy1dXFxkKyk/fC4uLilcblx0XHRcdFx0NCB4bi1jb21wb25lbnQgb2YgeG4reSBhcmd1bWVudCAoWystXT9cXGQqbnwpXG5cdFx0XHRcdDUgc2lnbiBvZiB4bi1jb21wb25lbnRcblx0XHRcdFx0NiB4IG9mIHhuLWNvbXBvbmVudFxuXHRcdFx0XHQ3IHNpZ24gb2YgeS1jb21wb25lbnRcblx0XHRcdFx0OCB5IG9mIHktY29tcG9uZW50XG5cdFx0XHQqL1xuXHRcdFx0bWF0Y2hbMV0gPSBtYXRjaFsxXS50b0xvd2VyQ2FzZSgpO1xuXG5cdFx0XHRpZiAoIG1hdGNoWzFdLnNsaWNlKCAwLCAzICkgPT09IFwibnRoXCIgKSB7XG5cdFx0XHRcdC8vIG50aC0qIHJlcXVpcmVzIGFyZ3VtZW50XG5cdFx0XHRcdGlmICggIW1hdGNoWzNdICkge1xuXHRcdFx0XHRcdFNpenpsZS5lcnJvciggbWF0Y2hbMF0gKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIG51bWVyaWMgeCBhbmQgeSBwYXJhbWV0ZXJzIGZvciBFeHByLmZpbHRlci5DSElMRFxuXHRcdFx0XHQvLyByZW1lbWJlciB0aGF0IGZhbHNlL3RydWUgY2FzdCByZXNwZWN0aXZlbHkgdG8gMC8xXG5cdFx0XHRcdG1hdGNoWzRdID0gKyggbWF0Y2hbNF0gPyBtYXRjaFs1XSArIChtYXRjaFs2XSB8fCAxKSA6IDIgKiAoIG1hdGNoWzNdID09PSBcImV2ZW5cIiB8fCBtYXRjaFszXSA9PT0gXCJvZGRcIiApICk7XG5cdFx0XHRcdG1hdGNoWzVdID0gKyggKCBtYXRjaFs3XSArIG1hdGNoWzhdICkgfHwgbWF0Y2hbM10gPT09IFwib2RkXCIgKTtcblxuXHRcdFx0Ly8gb3RoZXIgdHlwZXMgcHJvaGliaXQgYXJndW1lbnRzXG5cdFx0XHR9IGVsc2UgaWYgKCBtYXRjaFszXSApIHtcblx0XHRcdFx0U2l6emxlLmVycm9yKCBtYXRjaFswXSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gbWF0Y2g7XG5cdFx0fSxcblxuXHRcdFwiUFNFVURPXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcblx0XHRcdHZhciBleGNlc3MsXG5cdFx0XHRcdHVucXVvdGVkID0gIW1hdGNoWzZdICYmIG1hdGNoWzJdO1xuXG5cdFx0XHRpZiAoIG1hdGNoRXhwcltcIkNISUxEXCJdLnRlc3QoIG1hdGNoWzBdICkgKSB7XG5cdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBY2NlcHQgcXVvdGVkIGFyZ3VtZW50cyBhcy1pc1xuXHRcdFx0aWYgKCBtYXRjaFszXSApIHtcblx0XHRcdFx0bWF0Y2hbMl0gPSBtYXRjaFs0XSB8fCBtYXRjaFs1XSB8fCBcIlwiO1xuXG5cdFx0XHQvLyBTdHJpcCBleGNlc3MgY2hhcmFjdGVycyBmcm9tIHVucXVvdGVkIGFyZ3VtZW50c1xuXHRcdFx0fSBlbHNlIGlmICggdW5xdW90ZWQgJiYgcnBzZXVkby50ZXN0KCB1bnF1b3RlZCApICYmXG5cdFx0XHRcdC8vIEdldCBleGNlc3MgZnJvbSB0b2tlbml6ZSAocmVjdXJzaXZlbHkpXG5cdFx0XHRcdChleGNlc3MgPSB0b2tlbml6ZSggdW5xdW90ZWQsIHRydWUgKSkgJiZcblx0XHRcdFx0Ly8gYWR2YW5jZSB0byB0aGUgbmV4dCBjbG9zaW5nIHBhcmVudGhlc2lzXG5cdFx0XHRcdChleGNlc3MgPSB1bnF1b3RlZC5pbmRleE9mKCBcIilcIiwgdW5xdW90ZWQubGVuZ3RoIC0gZXhjZXNzICkgLSB1bnF1b3RlZC5sZW5ndGgpICkge1xuXG5cdFx0XHRcdC8vIGV4Y2VzcyBpcyBhIG5lZ2F0aXZlIGluZGV4XG5cdFx0XHRcdG1hdGNoWzBdID0gbWF0Y2hbMF0uc2xpY2UoIDAsIGV4Y2VzcyApO1xuXHRcdFx0XHRtYXRjaFsyXSA9IHVucXVvdGVkLnNsaWNlKCAwLCBleGNlc3MgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmV0dXJuIG9ubHkgY2FwdHVyZXMgbmVlZGVkIGJ5IHRoZSBwc2V1ZG8gZmlsdGVyIG1ldGhvZCAodHlwZSBhbmQgYXJndW1lbnQpXG5cdFx0XHRyZXR1cm4gbWF0Y2guc2xpY2UoIDAsIDMgKTtcblx0XHR9XG5cdH0sXG5cblx0ZmlsdGVyOiB7XG5cblx0XHRcIlRBR1wiOiBmdW5jdGlvbiggbm9kZU5hbWVTZWxlY3RvciApIHtcblx0XHRcdHZhciBub2RlTmFtZSA9IG5vZGVOYW1lU2VsZWN0b3IucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIG5vZGVOYW1lU2VsZWN0b3IgPT09IFwiKlwiID9cblx0XHRcdFx0ZnVuY3Rpb24oKSB7IHJldHVybiB0cnVlOyB9IDpcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGVsZW0ubm9kZU5hbWUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBub2RlTmFtZTtcblx0XHRcdFx0fTtcblx0XHR9LFxuXG5cdFx0XCJDTEFTU1wiOiBmdW5jdGlvbiggY2xhc3NOYW1lICkge1xuXHRcdFx0dmFyIHBhdHRlcm4gPSBjbGFzc0NhY2hlWyBjbGFzc05hbWUgKyBcIiBcIiBdO1xuXG5cdFx0XHRyZXR1cm4gcGF0dGVybiB8fFxuXHRcdFx0XHQocGF0dGVybiA9IG5ldyBSZWdFeHAoIFwiKF58XCIgKyB3aGl0ZXNwYWNlICsgXCIpXCIgKyBjbGFzc05hbWUgKyBcIihcIiArIHdoaXRlc3BhY2UgKyBcInwkKVwiICkpICYmXG5cdFx0XHRcdGNsYXNzQ2FjaGUoIGNsYXNzTmFtZSwgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHBhdHRlcm4udGVzdCggdHlwZW9mIGVsZW0uY2xhc3NOYW1lID09PSBcInN0cmluZ1wiICYmIGVsZW0uY2xhc3NOYW1lIHx8IHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBlbGVtLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpIHx8IFwiXCIgKTtcblx0XHRcdFx0fSk7XG5cdFx0fSxcblxuXHRcdFwiQVRUUlwiOiBmdW5jdGlvbiggbmFtZSwgb3BlcmF0b3IsIGNoZWNrICkge1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgcmVzdWx0ID0gU2l6emxlLmF0dHIoIGVsZW0sIG5hbWUgKTtcblxuXHRcdFx0XHRpZiAoIHJlc3VsdCA9PSBudWxsICkge1xuXHRcdFx0XHRcdHJldHVybiBvcGVyYXRvciA9PT0gXCIhPVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICggIW9wZXJhdG9yICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmVzdWx0ICs9IFwiXCI7XG5cblx0XHRcdFx0cmV0dXJuIG9wZXJhdG9yID09PSBcIj1cIiA/IHJlc3VsdCA9PT0gY2hlY2sgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIiE9XCIgPyByZXN1bHQgIT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJePVwiID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPT09IDAgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIio9XCIgPyBjaGVjayAmJiByZXN1bHQuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIkPVwiID8gY2hlY2sgJiYgcmVzdWx0LnNsaWNlKCAtY2hlY2subGVuZ3RoICkgPT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJ+PVwiID8gKCBcIiBcIiArIHJlc3VsdC5yZXBsYWNlKCByd2hpdGVzcGFjZSwgXCIgXCIgKSArIFwiIFwiICkuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJ8PVwiID8gcmVzdWx0ID09PSBjaGVjayB8fCByZXN1bHQuc2xpY2UoIDAsIGNoZWNrLmxlbmd0aCArIDEgKSA9PT0gY2hlY2sgKyBcIi1cIiA6XG5cdFx0XHRcdFx0ZmFsc2U7XG5cdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIkNISUxEXCI6IGZ1bmN0aW9uKCB0eXBlLCB3aGF0LCBhcmd1bWVudCwgZmlyc3QsIGxhc3QgKSB7XG5cdFx0XHR2YXIgc2ltcGxlID0gdHlwZS5zbGljZSggMCwgMyApICE9PSBcIm50aFwiLFxuXHRcdFx0XHRmb3J3YXJkID0gdHlwZS5zbGljZSggLTQgKSAhPT0gXCJsYXN0XCIsXG5cdFx0XHRcdG9mVHlwZSA9IHdoYXQgPT09IFwib2YtdHlwZVwiO1xuXG5cdFx0XHRyZXR1cm4gZmlyc3QgPT09IDEgJiYgbGFzdCA9PT0gMCA/XG5cblx0XHRcdFx0Ly8gU2hvcnRjdXQgZm9yIDpudGgtKihuKVxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0XHRyZXR1cm4gISFlbGVtLnBhcmVudE5vZGU7XG5cdFx0XHRcdH0gOlxuXG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHRcdFx0dmFyIGNhY2hlLCBvdXRlckNhY2hlLCBub2RlLCBkaWZmLCBub2RlSW5kZXgsIHN0YXJ0LFxuXHRcdFx0XHRcdFx0ZGlyID0gc2ltcGxlICE9PSBmb3J3YXJkID8gXCJuZXh0U2libGluZ1wiIDogXCJwcmV2aW91c1NpYmxpbmdcIixcblx0XHRcdFx0XHRcdHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZSxcblx0XHRcdFx0XHRcdG5hbWUgPSBvZlR5cGUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLFxuXHRcdFx0XHRcdFx0dXNlQ2FjaGUgPSAheG1sICYmICFvZlR5cGU7XG5cblx0XHRcdFx0XHRpZiAoIHBhcmVudCApIHtcblxuXHRcdFx0XHRcdFx0Ly8gOihmaXJzdHxsYXN0fG9ubHkpLShjaGlsZHxvZi10eXBlKVxuXHRcdFx0XHRcdFx0aWYgKCBzaW1wbGUgKSB7XG5cdFx0XHRcdFx0XHRcdHdoaWxlICggZGlyICkge1xuXHRcdFx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtO1xuXHRcdFx0XHRcdFx0XHRcdHdoaWxlICggKG5vZGUgPSBub2RlWyBkaXIgXSkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIG9mVHlwZSA/IG5vZGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZSA6IG5vZGUubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0Ly8gUmV2ZXJzZSBkaXJlY3Rpb24gZm9yIDpvbmx5LSogKGlmIHdlIGhhdmVuJ3QgeWV0IGRvbmUgc28pXG5cdFx0XHRcdFx0XHRcdFx0c3RhcnQgPSBkaXIgPSB0eXBlID09PSBcIm9ubHlcIiAmJiAhc3RhcnQgJiYgXCJuZXh0U2libGluZ1wiO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRzdGFydCA9IFsgZm9yd2FyZCA/IHBhcmVudC5maXJzdENoaWxkIDogcGFyZW50Lmxhc3RDaGlsZCBdO1xuXG5cdFx0XHRcdFx0XHQvLyBub24teG1sIDpudGgtY2hpbGQoLi4uKSBzdG9yZXMgY2FjaGUgZGF0YSBvbiBgcGFyZW50YFxuXHRcdFx0XHRcdFx0aWYgKCBmb3J3YXJkICYmIHVzZUNhY2hlICkge1xuXHRcdFx0XHRcdFx0XHQvLyBTZWVrIGBlbGVtYCBmcm9tIGEgcHJldmlvdXNseS1jYWNoZWQgaW5kZXhcblx0XHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IHBhcmVudFsgZXhwYW5kbyBdIHx8IChwYXJlbnRbIGV4cGFuZG8gXSA9IHt9KTtcblx0XHRcdFx0XHRcdFx0Y2FjaGUgPSBvdXRlckNhY2hlWyB0eXBlIF0gfHwgW107XG5cdFx0XHRcdFx0XHRcdG5vZGVJbmRleCA9IGNhY2hlWzBdID09PSBkaXJydW5zICYmIGNhY2hlWzFdO1xuXHRcdFx0XHRcdFx0XHRkaWZmID0gY2FjaGVbMF0gPT09IGRpcnJ1bnMgJiYgY2FjaGVbMl07XG5cdFx0XHRcdFx0XHRcdG5vZGUgPSBub2RlSW5kZXggJiYgcGFyZW50LmNoaWxkTm9kZXNbIG5vZGVJbmRleCBdO1xuXG5cdFx0XHRcdFx0XHRcdHdoaWxlICggKG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBGYWxsYmFjayB0byBzZWVraW5nIGBlbGVtYCBmcm9tIHRoZSBzdGFydFxuXHRcdFx0XHRcdFx0XHRcdChkaWZmID0gbm9kZUluZGV4ID0gMCkgfHwgc3RhcnQucG9wKCkpICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gV2hlbiBmb3VuZCwgY2FjaGUgaW5kZXhlcyBvbiBgcGFyZW50YCBhbmQgYnJlYWtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIG5vZGUubm9kZVR5cGUgPT09IDEgJiYgKytkaWZmICYmIG5vZGUgPT09IGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRvdXRlckNhY2hlWyB0eXBlIF0gPSBbIGRpcnJ1bnMsIG5vZGVJbmRleCwgZGlmZiBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIFVzZSBwcmV2aW91c2x5LWNhY2hlZCBlbGVtZW50IGluZGV4IGlmIGF2YWlsYWJsZVxuXHRcdFx0XHRcdFx0fSBlbHNlIGlmICggdXNlQ2FjaGUgJiYgKGNhY2hlID0gKGVsZW1bIGV4cGFuZG8gXSB8fCAoZWxlbVsgZXhwYW5kbyBdID0ge30pKVsgdHlwZSBdKSAmJiBjYWNoZVswXSA9PT0gZGlycnVucyApIHtcblx0XHRcdFx0XHRcdFx0ZGlmZiA9IGNhY2hlWzFdO1xuXG5cdFx0XHRcdFx0XHQvLyB4bWwgOm50aC1jaGlsZCguLi4pIG9yIDpudGgtbGFzdC1jaGlsZCguLi4pIG9yIDpudGgoLWxhc3QpPy1vZi10eXBlKC4uLilcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdC8vIFVzZSB0aGUgc2FtZSBsb29wIGFzIGFib3ZlIHRvIHNlZWsgYGVsZW1gIGZyb20gdGhlIHN0YXJ0XG5cdFx0XHRcdFx0XHRcdHdoaWxlICggKG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0KGRpZmYgPSBub2RlSW5kZXggPSAwKSB8fCBzdGFydC5wb3AoKSkgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRpZiAoICggb2ZUeXBlID8gbm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lIDogbm9kZS5ub2RlVHlwZSA9PT0gMSApICYmICsrZGlmZiApIHtcblx0XHRcdFx0XHRcdFx0XHRcdC8vIENhY2hlIHRoZSBpbmRleCBvZiBlYWNoIGVuY291bnRlcmVkIGVsZW1lbnRcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggdXNlQ2FjaGUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdChub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9KSlbIHR5cGUgXSA9IFsgZGlycnVucywgZGlmZiBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIG5vZGUgPT09IGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBJbmNvcnBvcmF0ZSB0aGUgb2Zmc2V0LCB0aGVuIGNoZWNrIGFnYWluc3QgY3ljbGUgc2l6ZVxuXHRcdFx0XHRcdFx0ZGlmZiAtPSBsYXN0O1xuXHRcdFx0XHRcdFx0cmV0dXJuIGRpZmYgPT09IGZpcnN0IHx8ICggZGlmZiAlIGZpcnN0ID09PSAwICYmIGRpZmYgLyBmaXJzdCA+PSAwICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIlBTRVVET1wiOiBmdW5jdGlvbiggcHNldWRvLCBhcmd1bWVudCApIHtcblx0XHRcdC8vIHBzZXVkby1jbGFzcyBuYW1lcyBhcmUgY2FzZS1pbnNlbnNpdGl2ZVxuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNwc2V1ZG8tY2xhc3Nlc1xuXHRcdFx0Ly8gUHJpb3JpdGl6ZSBieSBjYXNlIHNlbnNpdGl2aXR5IGluIGNhc2UgY3VzdG9tIHBzZXVkb3MgYXJlIGFkZGVkIHdpdGggdXBwZXJjYXNlIGxldHRlcnNcblx0XHRcdC8vIFJlbWVtYmVyIHRoYXQgc2V0RmlsdGVycyBpbmhlcml0cyBmcm9tIHBzZXVkb3Ncblx0XHRcdHZhciBhcmdzLFxuXHRcdFx0XHRmbiA9IEV4cHIucHNldWRvc1sgcHNldWRvIF0gfHwgRXhwci5zZXRGaWx0ZXJzWyBwc2V1ZG8udG9Mb3dlckNhc2UoKSBdIHx8XG5cdFx0XHRcdFx0U2l6emxlLmVycm9yKCBcInVuc3VwcG9ydGVkIHBzZXVkbzogXCIgKyBwc2V1ZG8gKTtcblxuXHRcdFx0Ly8gVGhlIHVzZXIgbWF5IHVzZSBjcmVhdGVQc2V1ZG8gdG8gaW5kaWNhdGUgdGhhdFxuXHRcdFx0Ly8gYXJndW1lbnRzIGFyZSBuZWVkZWQgdG8gY3JlYXRlIHRoZSBmaWx0ZXIgZnVuY3Rpb25cblx0XHRcdC8vIGp1c3QgYXMgU2l6emxlIGRvZXNcblx0XHRcdGlmICggZm5bIGV4cGFuZG8gXSApIHtcblx0XHRcdFx0cmV0dXJuIGZuKCBhcmd1bWVudCApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBCdXQgbWFpbnRhaW4gc3VwcG9ydCBmb3Igb2xkIHNpZ25hdHVyZXNcblx0XHRcdGlmICggZm4ubGVuZ3RoID4gMSApIHtcblx0XHRcdFx0YXJncyA9IFsgcHNldWRvLCBwc2V1ZG8sIFwiXCIsIGFyZ3VtZW50IF07XG5cdFx0XHRcdHJldHVybiBFeHByLnNldEZpbHRlcnMuaGFzT3duUHJvcGVydHkoIHBzZXVkby50b0xvd2VyQ2FzZSgpICkgP1xuXHRcdFx0XHRcdG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcyApIHtcblx0XHRcdFx0XHRcdHZhciBpZHgsXG5cdFx0XHRcdFx0XHRcdG1hdGNoZWQgPSBmbiggc2VlZCwgYXJndW1lbnQgKSxcblx0XHRcdFx0XHRcdFx0aSA9IG1hdGNoZWQubGVuZ3RoO1xuXHRcdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRcdGlkeCA9IGluZGV4T2YoIHNlZWQsIG1hdGNoZWRbaV0gKTtcblx0XHRcdFx0XHRcdFx0c2VlZFsgaWR4IF0gPSAhKCBtYXRjaGVzWyBpZHggXSA9IG1hdGNoZWRbaV0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KSA6XG5cdFx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZm4oIGVsZW0sIDAsIGFyZ3MgKTtcblx0XHRcdFx0XHR9O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZm47XG5cdFx0fVxuXHR9LFxuXG5cdHBzZXVkb3M6IHtcblx0XHQvLyBQb3RlbnRpYWxseSBjb21wbGV4IHBzZXVkb3Ncblx0XHRcIm5vdFwiOiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdFx0Ly8gVHJpbSB0aGUgc2VsZWN0b3IgcGFzc2VkIHRvIGNvbXBpbGVcblx0XHRcdC8vIHRvIGF2b2lkIHRyZWF0aW5nIGxlYWRpbmcgYW5kIHRyYWlsaW5nXG5cdFx0XHQvLyBzcGFjZXMgYXMgY29tYmluYXRvcnNcblx0XHRcdHZhciBpbnB1dCA9IFtdLFxuXHRcdFx0XHRyZXN1bHRzID0gW10sXG5cdFx0XHRcdG1hdGNoZXIgPSBjb21waWxlKCBzZWxlY3Rvci5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICkgKTtcblxuXHRcdFx0cmV0dXJuIG1hdGNoZXJbIGV4cGFuZG8gXSA/XG5cdFx0XHRcdG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcywgY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdHZhciBlbGVtLFxuXHRcdFx0XHRcdFx0dW5tYXRjaGVkID0gbWF0Y2hlciggc2VlZCwgbnVsbCwgeG1sLCBbXSApLFxuXHRcdFx0XHRcdFx0aSA9IHNlZWQubGVuZ3RoO1xuXG5cdFx0XHRcdFx0Ly8gTWF0Y2ggZWxlbWVudHMgdW5tYXRjaGVkIGJ5IGBtYXRjaGVyYFxuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoZWxlbSA9IHVubWF0Y2hlZFtpXSkgKSB7XG5cdFx0XHRcdFx0XHRcdHNlZWRbaV0gPSAhKG1hdGNoZXNbaV0gPSBlbGVtKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pIDpcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdFx0XHRpbnB1dFswXSA9IGVsZW07XG5cdFx0XHRcdFx0bWF0Y2hlciggaW5wdXQsIG51bGwsIHhtbCwgcmVzdWx0cyApO1xuXHRcdFx0XHRcdC8vIERvbid0IGtlZXAgdGhlIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRcdFx0aW5wdXRbMF0gPSBudWxsO1xuXHRcdFx0XHRcdHJldHVybiAhcmVzdWx0cy5wb3AoKTtcblx0XHRcdFx0fTtcblx0XHR9KSxcblxuXHRcdFwiaGFzXCI6IG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBTaXp6bGUoIHNlbGVjdG9yLCBlbGVtICkubGVuZ3RoID4gMDtcblx0XHRcdH07XG5cdFx0fSksXG5cblx0XHRcImNvbnRhaW5zXCI6IG1hcmtGdW5jdGlvbihmdW5jdGlvbiggdGV4dCApIHtcblx0XHRcdHRleHQgPSB0ZXh0LnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiAoIGVsZW0udGV4dENvbnRlbnQgfHwgZWxlbS5pbm5lclRleHQgfHwgZ2V0VGV4dCggZWxlbSApICkuaW5kZXhPZiggdGV4dCApID4gLTE7XG5cdFx0XHR9O1xuXHRcdH0pLFxuXG5cdFx0Ly8gXCJXaGV0aGVyIGFuIGVsZW1lbnQgaXMgcmVwcmVzZW50ZWQgYnkgYSA6bGFuZygpIHNlbGVjdG9yXG5cdFx0Ly8gaXMgYmFzZWQgc29sZWx5IG9uIHRoZSBlbGVtZW50J3MgbGFuZ3VhZ2UgdmFsdWVcblx0XHQvLyBiZWluZyBlcXVhbCB0byB0aGUgaWRlbnRpZmllciBDLFxuXHRcdC8vIG9yIGJlZ2lubmluZyB3aXRoIHRoZSBpZGVudGlmaWVyIEMgaW1tZWRpYXRlbHkgZm9sbG93ZWQgYnkgXCItXCIuXG5cdFx0Ly8gVGhlIG1hdGNoaW5nIG9mIEMgYWdhaW5zdCB0aGUgZWxlbWVudCdzIGxhbmd1YWdlIHZhbHVlIGlzIHBlcmZvcm1lZCBjYXNlLWluc2Vuc2l0aXZlbHkuXG5cdFx0Ly8gVGhlIGlkZW50aWZpZXIgQyBkb2VzIG5vdCBoYXZlIHRvIGJlIGEgdmFsaWQgbGFuZ3VhZ2UgbmFtZS5cIlxuXHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jbGFuZy1wc2V1ZG9cblx0XHRcImxhbmdcIjogbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggbGFuZyApIHtcblx0XHRcdC8vIGxhbmcgdmFsdWUgbXVzdCBiZSBhIHZhbGlkIGlkZW50aWZpZXJcblx0XHRcdGlmICggIXJpZGVudGlmaWVyLnRlc3QobGFuZyB8fCBcIlwiKSApIHtcblx0XHRcdFx0U2l6emxlLmVycm9yKCBcInVuc3VwcG9ydGVkIGxhbmc6IFwiICsgbGFuZyApO1xuXHRcdFx0fVxuXHRcdFx0bGFuZyA9IGxhbmcucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgZWxlbUxhbmc7XG5cdFx0XHRcdGRvIHtcblx0XHRcdFx0XHRpZiAoIChlbGVtTGFuZyA9IGRvY3VtZW50SXNIVE1MID9cblx0XHRcdFx0XHRcdGVsZW0ubGFuZyA6XG5cdFx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZShcInhtbDpsYW5nXCIpIHx8IGVsZW0uZ2V0QXR0cmlidXRlKFwibGFuZ1wiKSkgKSB7XG5cblx0XHRcdFx0XHRcdGVsZW1MYW5nID0gZWxlbUxhbmcudG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtTGFuZyA9PT0gbGFuZyB8fCBlbGVtTGFuZy5pbmRleE9mKCBsYW5nICsgXCItXCIgKSA9PT0gMDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gd2hpbGUgKCAoZWxlbSA9IGVsZW0ucGFyZW50Tm9kZSkgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApO1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9O1xuXHRcdH0pLFxuXG5cdFx0Ly8gTWlzY2VsbGFuZW91c1xuXHRcdFwidGFyZ2V0XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIGhhc2ggPSB3aW5kb3cubG9jYXRpb24gJiYgd2luZG93LmxvY2F0aW9uLmhhc2g7XG5cdFx0XHRyZXR1cm4gaGFzaCAmJiBoYXNoLnNsaWNlKCAxICkgPT09IGVsZW0uaWQ7XG5cdFx0fSxcblxuXHRcdFwicm9vdFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtID09PSBkb2NFbGVtO1xuXHRcdH0sXG5cblx0XHRcImZvY3VzXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgJiYgKCFkb2N1bWVudC5oYXNGb2N1cyB8fCBkb2N1bWVudC5oYXNGb2N1cygpKSAmJiAhIShlbGVtLnR5cGUgfHwgZWxlbS5ocmVmIHx8IH5lbGVtLnRhYkluZGV4KTtcblx0XHR9LFxuXG5cdFx0Ly8gQm9vbGVhbiBwcm9wZXJ0aWVzXG5cdFx0XCJlbmFibGVkXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGZhbHNlO1xuXHRcdH0sXG5cblx0XHRcImRpc2FibGVkXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IHRydWU7XG5cdFx0fSxcblxuXHRcdFwiY2hlY2tlZFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdC8vIEluIENTUzMsIDpjaGVja2VkIHNob3VsZCByZXR1cm4gYm90aCBjaGVja2VkIGFuZCBzZWxlY3RlZCBlbGVtZW50c1xuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAxMS9SRUMtY3NzMy1zZWxlY3RvcnMtMjAxMTA5MjkvI2NoZWNrZWRcblx0XHRcdHZhciBub2RlTmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiAobm9kZU5hbWUgPT09IFwiaW5wdXRcIiAmJiAhIWVsZW0uY2hlY2tlZCkgfHwgKG5vZGVOYW1lID09PSBcIm9wdGlvblwiICYmICEhZWxlbS5zZWxlY3RlZCk7XG5cdFx0fSxcblxuXHRcdFwic2VsZWN0ZWRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHQvLyBBY2Nlc3NpbmcgdGhpcyBwcm9wZXJ0eSBtYWtlcyBzZWxlY3RlZC1ieS1kZWZhdWx0XG5cdFx0XHQvLyBvcHRpb25zIGluIFNhZmFyaSB3b3JrIHByb3Blcmx5XG5cdFx0XHRpZiAoIGVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0ZWxlbS5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBlbGVtLnNlbGVjdGVkID09PSB0cnVlO1xuXHRcdH0sXG5cblx0XHQvLyBDb250ZW50c1xuXHRcdFwiZW1wdHlcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2VtcHR5LXBzZXVkb1xuXHRcdFx0Ly8gOmVtcHR5IGlzIG5lZ2F0ZWQgYnkgZWxlbWVudCAoMSkgb3IgY29udGVudCBub2RlcyAodGV4dDogMzsgY2RhdGE6IDQ7IGVudGl0eSByZWY6IDUpLFxuXHRcdFx0Ly8gICBidXQgbm90IGJ5IG90aGVycyAoY29tbWVudDogODsgcHJvY2Vzc2luZyBpbnN0cnVjdGlvbjogNzsgZXRjLilcblx0XHRcdC8vIG5vZGVUeXBlIDwgNiB3b3JrcyBiZWNhdXNlIGF0dHJpYnV0ZXMgKDIpIGRvIG5vdCBhcHBlYXIgYXMgY2hpbGRyZW5cblx0XHRcdGZvciAoIGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7IGVsZW07IGVsZW0gPSBlbGVtLm5leHRTaWJsaW5nICkge1xuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPCA2ICkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fSxcblxuXHRcdFwicGFyZW50XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICFFeHByLnBzZXVkb3NbXCJlbXB0eVwiXSggZWxlbSApO1xuXHRcdH0sXG5cblx0XHQvLyBFbGVtZW50L2lucHV0IHR5cGVzXG5cdFx0XCJoZWFkZXJcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gcmhlYWRlci50ZXN0KCBlbGVtLm5vZGVOYW1lICk7XG5cdFx0fSxcblxuXHRcdFwiaW5wdXRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gcmlucHV0cy50ZXN0KCBlbGVtLm5vZGVOYW1lICk7XG5cdFx0fSxcblxuXHRcdFwiYnV0dG9uXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gbmFtZSA9PT0gXCJpbnB1dFwiICYmIGVsZW0udHlwZSA9PT0gXCJidXR0b25cIiB8fCBuYW1lID09PSBcImJ1dHRvblwiO1xuXHRcdH0sXG5cblx0XHRcInRleHRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgYXR0cjtcblx0XHRcdHJldHVybiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwiaW5wdXRcIiAmJlxuXHRcdFx0XHRlbGVtLnR5cGUgPT09IFwidGV4dFwiICYmXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUU8OFxuXHRcdFx0XHQvLyBOZXcgSFRNTDUgYXR0cmlidXRlIHZhbHVlcyAoZS5nLiwgXCJzZWFyY2hcIikgYXBwZWFyIHdpdGggZWxlbS50eXBlID09PSBcInRleHRcIlxuXHRcdFx0XHQoIChhdHRyID0gZWxlbS5nZXRBdHRyaWJ1dGUoXCJ0eXBlXCIpKSA9PSBudWxsIHx8IGF0dHIudG9Mb3dlckNhc2UoKSA9PT0gXCJ0ZXh0XCIgKTtcblx0XHR9LFxuXG5cdFx0Ly8gUG9zaXRpb24taW4tY29sbGVjdGlvblxuXHRcdFwiZmlyc3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiBbIDAgXTtcblx0XHR9KSxcblxuXHRcdFwibGFzdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCApIHtcblx0XHRcdHJldHVybiBbIGxlbmd0aCAtIDEgXTtcblx0XHR9KSxcblxuXHRcdFwiZXFcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0cmV0dXJuIFsgYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudCBdO1xuXHRcdH0pLFxuXG5cdFx0XCJldmVuXCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoICkge1xuXHRcdFx0dmFyIGkgPSAwO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0pLFxuXG5cdFx0XCJvZGRcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XG5cdFx0XHR2YXIgaSA9IDE7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkgKz0gMiApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSksXG5cblx0XHRcImx0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoLCBhcmd1bWVudCApIHtcblx0XHRcdHZhciBpID0gYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudDtcblx0XHRcdGZvciAoIDsgLS1pID49IDA7ICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9KSxcblxuXHRcdFwiZ3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0dmFyIGkgPSBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50O1xuXHRcdFx0Zm9yICggOyArK2kgPCBsZW5ndGg7ICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9KVxuXHR9XG59O1xuXG5FeHByLnBzZXVkb3NbXCJudGhcIl0gPSBFeHByLnBzZXVkb3NbXCJlcVwiXTtcblxuLy8gQWRkIGJ1dHRvbi9pbnB1dCB0eXBlIHBzZXVkb3NcbmZvciAoIGkgaW4geyByYWRpbzogdHJ1ZSwgY2hlY2tib3g6IHRydWUsIGZpbGU6IHRydWUsIHBhc3N3b3JkOiB0cnVlLCBpbWFnZTogdHJ1ZSB9ICkge1xuXHRFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUlucHV0UHNldWRvKCBpICk7XG59XG5mb3IgKCBpIGluIHsgc3VibWl0OiB0cnVlLCByZXNldDogdHJ1ZSB9ICkge1xuXHRFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUJ1dHRvblBzZXVkbyggaSApO1xufVxuXG4vLyBFYXN5IEFQSSBmb3IgY3JlYXRpbmcgbmV3IHNldEZpbHRlcnNcbmZ1bmN0aW9uIHNldEZpbHRlcnMoKSB7fVxuc2V0RmlsdGVycy5wcm90b3R5cGUgPSBFeHByLmZpbHRlcnMgPSBFeHByLnBzZXVkb3M7XG5FeHByLnNldEZpbHRlcnMgPSBuZXcgc2V0RmlsdGVycygpO1xuXG50b2tlbml6ZSA9IFNpenpsZS50b2tlbml6ZSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgcGFyc2VPbmx5ICkge1xuXHR2YXIgbWF0Y2hlZCwgbWF0Y2gsIHRva2VucywgdHlwZSxcblx0XHRzb0ZhciwgZ3JvdXBzLCBwcmVGaWx0ZXJzLFxuXHRcdGNhY2hlZCA9IHRva2VuQ2FjaGVbIHNlbGVjdG9yICsgXCIgXCIgXTtcblxuXHRpZiAoIGNhY2hlZCApIHtcblx0XHRyZXR1cm4gcGFyc2VPbmx5ID8gMCA6IGNhY2hlZC5zbGljZSggMCApO1xuXHR9XG5cblx0c29GYXIgPSBzZWxlY3Rvcjtcblx0Z3JvdXBzID0gW107XG5cdHByZUZpbHRlcnMgPSBFeHByLnByZUZpbHRlcjtcblxuXHR3aGlsZSAoIHNvRmFyICkge1xuXG5cdFx0Ly8gQ29tbWEgYW5kIGZpcnN0IHJ1blxuXHRcdGlmICggIW1hdGNoZWQgfHwgKG1hdGNoID0gcmNvbW1hLmV4ZWMoIHNvRmFyICkpICkge1xuXHRcdFx0aWYgKCBtYXRjaCApIHtcblx0XHRcdFx0Ly8gRG9uJ3QgY29uc3VtZSB0cmFpbGluZyBjb21tYXMgYXMgdmFsaWRcblx0XHRcdFx0c29GYXIgPSBzb0Zhci5zbGljZSggbWF0Y2hbMF0ubGVuZ3RoICkgfHwgc29GYXI7XG5cdFx0XHR9XG5cdFx0XHRncm91cHMucHVzaCggKHRva2VucyA9IFtdKSApO1xuXHRcdH1cblxuXHRcdG1hdGNoZWQgPSBmYWxzZTtcblxuXHRcdC8vIENvbWJpbmF0b3JzXG5cdFx0aWYgKCAobWF0Y2ggPSByY29tYmluYXRvcnMuZXhlYyggc29GYXIgKSkgKSB7XG5cdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcblx0XHRcdHRva2Vucy5wdXNoKHtcblx0XHRcdFx0dmFsdWU6IG1hdGNoZWQsXG5cdFx0XHRcdC8vIENhc3QgZGVzY2VuZGFudCBjb21iaW5hdG9ycyB0byBzcGFjZVxuXHRcdFx0XHR0eXBlOiBtYXRjaFswXS5yZXBsYWNlKCBydHJpbSwgXCIgXCIgKVxuXHRcdFx0fSk7XG5cdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApO1xuXHRcdH1cblxuXHRcdC8vIEZpbHRlcnNcblx0XHRmb3IgKCB0eXBlIGluIEV4cHIuZmlsdGVyICkge1xuXHRcdFx0aWYgKCAobWF0Y2ggPSBtYXRjaEV4cHJbIHR5cGUgXS5leGVjKCBzb0ZhciApKSAmJiAoIXByZUZpbHRlcnNbIHR5cGUgXSB8fFxuXHRcdFx0XHQobWF0Y2ggPSBwcmVGaWx0ZXJzWyB0eXBlIF0oIG1hdGNoICkpKSApIHtcblx0XHRcdFx0bWF0Y2hlZCA9IG1hdGNoLnNoaWZ0KCk7XG5cdFx0XHRcdHRva2Vucy5wdXNoKHtcblx0XHRcdFx0XHR2YWx1ZTogbWF0Y2hlZCxcblx0XHRcdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0XHRcdG1hdGNoZXM6IG1hdGNoXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggIW1hdGNoZWQgKSB7XG5cdFx0XHRicmVhaztcblx0XHR9XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIGxlbmd0aCBvZiB0aGUgaW52YWxpZCBleGNlc3Ncblx0Ly8gaWYgd2UncmUganVzdCBwYXJzaW5nXG5cdC8vIE90aGVyd2lzZSwgdGhyb3cgYW4gZXJyb3Igb3IgcmV0dXJuIHRva2Vuc1xuXHRyZXR1cm4gcGFyc2VPbmx5ID9cblx0XHRzb0Zhci5sZW5ndGggOlxuXHRcdHNvRmFyID9cblx0XHRcdFNpenpsZS5lcnJvciggc2VsZWN0b3IgKSA6XG5cdFx0XHQvLyBDYWNoZSB0aGUgdG9rZW5zXG5cdFx0XHR0b2tlbkNhY2hlKCBzZWxlY3RvciwgZ3JvdXBzICkuc2xpY2UoIDAgKTtcbn07XG5cbmZ1bmN0aW9uIHRvU2VsZWN0b3IoIHRva2VucyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IHRva2Vucy5sZW5ndGgsXG5cdFx0c2VsZWN0b3IgPSBcIlwiO1xuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRzZWxlY3RvciArPSB0b2tlbnNbaV0udmFsdWU7XG5cdH1cblx0cmV0dXJuIHNlbGVjdG9yO1xufVxuXG5mdW5jdGlvbiBhZGRDb21iaW5hdG9yKCBtYXRjaGVyLCBjb21iaW5hdG9yLCBiYXNlICkge1xuXHR2YXIgZGlyID0gY29tYmluYXRvci5kaXIsXG5cdFx0Y2hlY2tOb25FbGVtZW50cyA9IGJhc2UgJiYgZGlyID09PSBcInBhcmVudE5vZGVcIixcblx0XHRkb25lTmFtZSA9IGRvbmUrKztcblxuXHRyZXR1cm4gY29tYmluYXRvci5maXJzdCA/XG5cdFx0Ly8gQ2hlY2sgYWdhaW5zdCBjbG9zZXN0IGFuY2VzdG9yL3ByZWNlZGluZyBlbGVtZW50XG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBjaGVja05vbkVsZW1lbnRzICkge1xuXHRcdFx0XHRcdHJldHVybiBtYXRjaGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gOlxuXG5cdFx0Ly8gQ2hlY2sgYWdhaW5zdCBhbGwgYW5jZXN0b3IvcHJlY2VkaW5nIGVsZW1lbnRzXG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHZhciBvbGRDYWNoZSwgb3V0ZXJDYWNoZSxcblx0XHRcdFx0bmV3Q2FjaGUgPSBbIGRpcnJ1bnMsIGRvbmVOYW1lIF07XG5cblx0XHRcdC8vIFdlIGNhbid0IHNldCBhcmJpdHJhcnkgZGF0YSBvbiBYTUwgbm9kZXMsIHNvIHRoZXkgZG9uJ3QgYmVuZWZpdCBmcm9tIGRpciBjYWNoaW5nXG5cdFx0XHRpZiAoIHhtbCApIHtcblx0XHRcdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1bIGRpciBdKSApIHtcblx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgY2hlY2tOb25FbGVtZW50cyApIHtcblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICkgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1bIGRpciBdKSApIHtcblx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgY2hlY2tOb25FbGVtZW50cyApIHtcblx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBlbGVtWyBleHBhbmRvIF0gfHwgKGVsZW1bIGV4cGFuZG8gXSA9IHt9KTtcblx0XHRcdFx0XHRcdGlmICggKG9sZENhY2hlID0gb3V0ZXJDYWNoZVsgZGlyIF0pICYmXG5cdFx0XHRcdFx0XHRcdG9sZENhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgb2xkQ2FjaGVbIDEgXSA9PT0gZG9uZU5hbWUgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQXNzaWduIHRvIG5ld0NhY2hlIHNvIHJlc3VsdHMgYmFjay1wcm9wYWdhdGUgdG8gcHJldmlvdXMgZWxlbWVudHNcblx0XHRcdFx0XHRcdFx0cmV0dXJuIChuZXdDYWNoZVsgMiBdID0gb2xkQ2FjaGVbIDIgXSk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHQvLyBSZXVzZSBuZXdjYWNoZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzXG5cdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGVbIGRpciBdID0gbmV3Q2FjaGU7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQSBtYXRjaCBtZWFucyB3ZSdyZSBkb25lOyBhIGZhaWwgbWVhbnMgd2UgaGF2ZSB0byBrZWVwIGNoZWNraW5nXG5cdFx0XHRcdFx0XHRcdGlmICggKG5ld0NhY2hlWyAyIF0gPSBtYXRjaGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xufVxuXG5mdW5jdGlvbiBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKSB7XG5cdHJldHVybiBtYXRjaGVycy5sZW5ndGggPiAxID9cblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIGkgPSBtYXRjaGVycy5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0aWYgKCAhbWF0Y2hlcnNbaV0oIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fSA6XG5cdFx0bWF0Y2hlcnNbMF07XG59XG5cbmZ1bmN0aW9uIG11bHRpcGxlQ29udGV4dHMoIHNlbGVjdG9yLCBjb250ZXh0cywgcmVzdWx0cyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IGNvbnRleHRzLmxlbmd0aDtcblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0U2l6emxlKCBzZWxlY3RvciwgY29udGV4dHNbaV0sIHJlc3VsdHMgKTtcblx0fVxuXHRyZXR1cm4gcmVzdWx0cztcbn1cblxuZnVuY3Rpb24gY29uZGVuc2UoIHVubWF0Y2hlZCwgbWFwLCBmaWx0ZXIsIGNvbnRleHQsIHhtbCApIHtcblx0dmFyIGVsZW0sXG5cdFx0bmV3VW5tYXRjaGVkID0gW10sXG5cdFx0aSA9IDAsXG5cdFx0bGVuID0gdW5tYXRjaGVkLmxlbmd0aCxcblx0XHRtYXBwZWQgPSBtYXAgIT0gbnVsbDtcblxuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRpZiAoIChlbGVtID0gdW5tYXRjaGVkW2ldKSApIHtcblx0XHRcdGlmICggIWZpbHRlciB8fCBmaWx0ZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xuXHRcdFx0XHRuZXdVbm1hdGNoZWQucHVzaCggZWxlbSApO1xuXHRcdFx0XHRpZiAoIG1hcHBlZCApIHtcblx0XHRcdFx0XHRtYXAucHVzaCggaSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIG5ld1VubWF0Y2hlZDtcbn1cblxuZnVuY3Rpb24gc2V0TWF0Y2hlciggcHJlRmlsdGVyLCBzZWxlY3RvciwgbWF0Y2hlciwgcG9zdEZpbHRlciwgcG9zdEZpbmRlciwgcG9zdFNlbGVjdG9yICkge1xuXHRpZiAoIHBvc3RGaWx0ZXIgJiYgIXBvc3RGaWx0ZXJbIGV4cGFuZG8gXSApIHtcblx0XHRwb3N0RmlsdGVyID0gc2V0TWF0Y2hlciggcG9zdEZpbHRlciApO1xuXHR9XG5cdGlmICggcG9zdEZpbmRlciAmJiAhcG9zdEZpbmRlclsgZXhwYW5kbyBdICkge1xuXHRcdHBvc3RGaW5kZXIgPSBzZXRNYXRjaGVyKCBwb3N0RmluZGVyLCBwb3N0U2VsZWN0b3IgKTtcblx0fVxuXHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCByZXN1bHRzLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0dmFyIHRlbXAsIGksIGVsZW0sXG5cdFx0XHRwcmVNYXAgPSBbXSxcblx0XHRcdHBvc3RNYXAgPSBbXSxcblx0XHRcdHByZWV4aXN0aW5nID0gcmVzdWx0cy5sZW5ndGgsXG5cblx0XHRcdC8vIEdldCBpbml0aWFsIGVsZW1lbnRzIGZyb20gc2VlZCBvciBjb250ZXh0XG5cdFx0XHRlbGVtcyA9IHNlZWQgfHwgbXVsdGlwbGVDb250ZXh0cyggc2VsZWN0b3IgfHwgXCIqXCIsIGNvbnRleHQubm9kZVR5cGUgPyBbIGNvbnRleHQgXSA6IGNvbnRleHQsIFtdICksXG5cblx0XHRcdC8vIFByZWZpbHRlciB0byBnZXQgbWF0Y2hlciBpbnB1dCwgcHJlc2VydmluZyBhIG1hcCBmb3Igc2VlZC1yZXN1bHRzIHN5bmNocm9uaXphdGlvblxuXHRcdFx0bWF0Y2hlckluID0gcHJlRmlsdGVyICYmICggc2VlZCB8fCAhc2VsZWN0b3IgKSA/XG5cdFx0XHRcdGNvbmRlbnNlKCBlbGVtcywgcHJlTWFwLCBwcmVGaWx0ZXIsIGNvbnRleHQsIHhtbCApIDpcblx0XHRcdFx0ZWxlbXMsXG5cblx0XHRcdG1hdGNoZXJPdXQgPSBtYXRjaGVyID9cblx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBhIHBvc3RGaW5kZXIsIG9yIGZpbHRlcmVkIHNlZWQsIG9yIG5vbi1zZWVkIHBvc3RGaWx0ZXIgb3IgcHJlZXhpc3RpbmcgcmVzdWx0cyxcblx0XHRcdFx0cG9zdEZpbmRlciB8fCAoIHNlZWQgPyBwcmVGaWx0ZXIgOiBwcmVleGlzdGluZyB8fCBwb3N0RmlsdGVyICkgP1xuXG5cdFx0XHRcdFx0Ly8gLi4uaW50ZXJtZWRpYXRlIHByb2Nlc3NpbmcgaXMgbmVjZXNzYXJ5XG5cdFx0XHRcdFx0W10gOlxuXG5cdFx0XHRcdFx0Ly8gLi4ub3RoZXJ3aXNlIHVzZSByZXN1bHRzIGRpcmVjdGx5XG5cdFx0XHRcdFx0cmVzdWx0cyA6XG5cdFx0XHRcdG1hdGNoZXJJbjtcblxuXHRcdC8vIEZpbmQgcHJpbWFyeSBtYXRjaGVzXG5cdFx0aWYgKCBtYXRjaGVyICkge1xuXHRcdFx0bWF0Y2hlciggbWF0Y2hlckluLCBtYXRjaGVyT3V0LCBjb250ZXh0LCB4bWwgKTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSBwb3N0RmlsdGVyXG5cdFx0aWYgKCBwb3N0RmlsdGVyICkge1xuXHRcdFx0dGVtcCA9IGNvbmRlbnNlKCBtYXRjaGVyT3V0LCBwb3N0TWFwICk7XG5cdFx0XHRwb3N0RmlsdGVyKCB0ZW1wLCBbXSwgY29udGV4dCwgeG1sICk7XG5cblx0XHRcdC8vIFVuLW1hdGNoIGZhaWxpbmcgZWxlbWVudHMgYnkgbW92aW5nIHRoZW0gYmFjayB0byBtYXRjaGVySW5cblx0XHRcdGkgPSB0ZW1wLmxlbmd0aDtcblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRpZiAoIChlbGVtID0gdGVtcFtpXSkgKSB7XG5cdFx0XHRcdFx0bWF0Y2hlck91dFsgcG9zdE1hcFtpXSBdID0gIShtYXRjaGVySW5bIHBvc3RNYXBbaV0gXSA9IGVsZW0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCBzZWVkICkge1xuXHRcdFx0aWYgKCBwb3N0RmluZGVyIHx8IHByZUZpbHRlciApIHtcblx0XHRcdFx0aWYgKCBwb3N0RmluZGVyICkge1xuXHRcdFx0XHRcdC8vIEdldCB0aGUgZmluYWwgbWF0Y2hlck91dCBieSBjb25kZW5zaW5nIHRoaXMgaW50ZXJtZWRpYXRlIGludG8gcG9zdEZpbmRlciBjb250ZXh0c1xuXHRcdFx0XHRcdHRlbXAgPSBbXTtcblx0XHRcdFx0XHRpID0gbWF0Y2hlck91dC5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRpZiAoIChlbGVtID0gbWF0Y2hlck91dFtpXSkgKSB7XG5cdFx0XHRcdFx0XHRcdC8vIFJlc3RvcmUgbWF0Y2hlckluIHNpbmNlIGVsZW0gaXMgbm90IHlldCBhIGZpbmFsIG1hdGNoXG5cdFx0XHRcdFx0XHRcdHRlbXAucHVzaCggKG1hdGNoZXJJbltpXSA9IGVsZW0pICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHBvc3RGaW5kZXIoIG51bGwsIChtYXRjaGVyT3V0ID0gW10pLCB0ZW1wLCB4bWwgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIE1vdmUgbWF0Y2hlZCBlbGVtZW50cyBmcm9tIHNlZWQgdG8gcmVzdWx0cyB0byBrZWVwIHRoZW0gc3luY2hyb25pemVkXG5cdFx0XHRcdGkgPSBtYXRjaGVyT3V0Lmxlbmd0aDtcblx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0aWYgKCAoZWxlbSA9IG1hdGNoZXJPdXRbaV0pICYmXG5cdFx0XHRcdFx0XHQodGVtcCA9IHBvc3RGaW5kZXIgPyBpbmRleE9mKCBzZWVkLCBlbGVtICkgOiBwcmVNYXBbaV0pID4gLTEgKSB7XG5cblx0XHRcdFx0XHRcdHNlZWRbdGVtcF0gPSAhKHJlc3VsdHNbdGVtcF0gPSBlbGVtKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdC8vIEFkZCBlbGVtZW50cyB0byByZXN1bHRzLCB0aHJvdWdoIHBvc3RGaW5kZXIgaWYgZGVmaW5lZFxuXHRcdH0gZWxzZSB7XG5cdFx0XHRtYXRjaGVyT3V0ID0gY29uZGVuc2UoXG5cdFx0XHRcdG1hdGNoZXJPdXQgPT09IHJlc3VsdHMgP1xuXHRcdFx0XHRcdG1hdGNoZXJPdXQuc3BsaWNlKCBwcmVleGlzdGluZywgbWF0Y2hlck91dC5sZW5ndGggKSA6XG5cdFx0XHRcdFx0bWF0Y2hlck91dFxuXHRcdFx0KTtcblx0XHRcdGlmICggcG9zdEZpbmRlciApIHtcblx0XHRcdFx0cG9zdEZpbmRlciggbnVsbCwgcmVzdWx0cywgbWF0Y2hlck91dCwgeG1sICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBtYXRjaGVyT3V0ICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9KTtcbn1cblxuZnVuY3Rpb24gbWF0Y2hlckZyb21Ub2tlbnMoIHRva2VucyApIHtcblx0dmFyIGNoZWNrQ29udGV4dCwgbWF0Y2hlciwgaixcblx0XHRsZW4gPSB0b2tlbnMubGVuZ3RoLFxuXHRcdGxlYWRpbmdSZWxhdGl2ZSA9IEV4cHIucmVsYXRpdmVbIHRva2Vuc1swXS50eXBlIF0sXG5cdFx0aW1wbGljaXRSZWxhdGl2ZSA9IGxlYWRpbmdSZWxhdGl2ZSB8fCBFeHByLnJlbGF0aXZlW1wiIFwiXSxcblx0XHRpID0gbGVhZGluZ1JlbGF0aXZlID8gMSA6IDAsXG5cblx0XHQvLyBUaGUgZm91bmRhdGlvbmFsIG1hdGNoZXIgZW5zdXJlcyB0aGF0IGVsZW1lbnRzIGFyZSByZWFjaGFibGUgZnJvbSB0b3AtbGV2ZWwgY29udGV4dChzKVxuXHRcdG1hdGNoQ29udGV4dCA9IGFkZENvbWJpbmF0b3IoIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGNoZWNrQ29udGV4dDtcblx0XHR9LCBpbXBsaWNpdFJlbGF0aXZlLCB0cnVlICksXG5cdFx0bWF0Y2hBbnlDb250ZXh0ID0gYWRkQ29tYmluYXRvciggZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gaW5kZXhPZiggY2hlY2tDb250ZXh0LCBlbGVtICkgPiAtMTtcblx0XHR9LCBpbXBsaWNpdFJlbGF0aXZlLCB0cnVlICksXG5cdFx0bWF0Y2hlcnMgPSBbIGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHR2YXIgcmV0ID0gKCAhbGVhZGluZ1JlbGF0aXZlICYmICggeG1sIHx8IGNvbnRleHQgIT09IG91dGVybW9zdENvbnRleHQgKSApIHx8IChcblx0XHRcdFx0KGNoZWNrQ29udGV4dCA9IGNvbnRleHQpLm5vZGVUeXBlID9cblx0XHRcdFx0XHRtYXRjaENvbnRleHQoIGVsZW0sIGNvbnRleHQsIHhtbCApIDpcblx0XHRcdFx0XHRtYXRjaEFueUNvbnRleHQoIGVsZW0sIGNvbnRleHQsIHhtbCApICk7XG5cdFx0XHQvLyBBdm9pZCBoYW5naW5nIG9udG8gZWxlbWVudCAoaXNzdWUgIzI5OSlcblx0XHRcdGNoZWNrQ29udGV4dCA9IG51bGw7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH0gXTtcblxuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRpZiAoIChtYXRjaGVyID0gRXhwci5yZWxhdGl2ZVsgdG9rZW5zW2ldLnR5cGUgXSkgKSB7XG5cdFx0XHRtYXRjaGVycyA9IFsgYWRkQ29tYmluYXRvcihlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKSwgbWF0Y2hlcikgXTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWF0Y2hlciA9IEV4cHIuZmlsdGVyWyB0b2tlbnNbaV0udHlwZSBdLmFwcGx5KCBudWxsLCB0b2tlbnNbaV0ubWF0Y2hlcyApO1xuXG5cdFx0XHQvLyBSZXR1cm4gc3BlY2lhbCB1cG9uIHNlZWluZyBhIHBvc2l0aW9uYWwgbWF0Y2hlclxuXHRcdFx0aWYgKCBtYXRjaGVyWyBleHBhbmRvIF0gKSB7XG5cdFx0XHRcdC8vIEZpbmQgdGhlIG5leHQgcmVsYXRpdmUgb3BlcmF0b3IgKGlmIGFueSkgZm9yIHByb3BlciBoYW5kbGluZ1xuXHRcdFx0XHRqID0gKytpO1xuXHRcdFx0XHRmb3IgKCA7IGogPCBsZW47IGorKyApIHtcblx0XHRcdFx0XHRpZiAoIEV4cHIucmVsYXRpdmVbIHRva2Vuc1tqXS50eXBlIF0gKSB7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHNldE1hdGNoZXIoXG5cdFx0XHRcdFx0aSA+IDEgJiYgZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICksXG5cdFx0XHRcdFx0aSA+IDEgJiYgdG9TZWxlY3Rvcihcblx0XHRcdFx0XHRcdC8vIElmIHRoZSBwcmVjZWRpbmcgdG9rZW4gd2FzIGEgZGVzY2VuZGFudCBjb21iaW5hdG9yLCBpbnNlcnQgYW4gaW1wbGljaXQgYW55LWVsZW1lbnQgYCpgXG5cdFx0XHRcdFx0XHR0b2tlbnMuc2xpY2UoIDAsIGkgLSAxICkuY29uY2F0KHsgdmFsdWU6IHRva2Vuc1sgaSAtIDIgXS50eXBlID09PSBcIiBcIiA/IFwiKlwiIDogXCJcIiB9KVxuXHRcdFx0XHRcdCkucmVwbGFjZSggcnRyaW0sIFwiJDFcIiApLFxuXHRcdFx0XHRcdG1hdGNoZXIsXG5cdFx0XHRcdFx0aSA8IGogJiYgbWF0Y2hlckZyb21Ub2tlbnMoIHRva2Vucy5zbGljZSggaSwgaiApICksXG5cdFx0XHRcdFx0aiA8IGxlbiAmJiBtYXRjaGVyRnJvbVRva2VucyggKHRva2VucyA9IHRva2Vucy5zbGljZSggaiApKSApLFxuXHRcdFx0XHRcdGogPCBsZW4gJiYgdG9TZWxlY3RvciggdG9rZW5zIClcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHRcdG1hdGNoZXJzLnB1c2goIG1hdGNoZXIgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICk7XG59XG5cbmZ1bmN0aW9uIG1hdGNoZXJGcm9tR3JvdXBNYXRjaGVycyggZWxlbWVudE1hdGNoZXJzLCBzZXRNYXRjaGVycyApIHtcblx0dmFyIGJ5U2V0ID0gc2V0TWF0Y2hlcnMubGVuZ3RoID4gMCxcblx0XHRieUVsZW1lbnQgPSBlbGVtZW50TWF0Y2hlcnMubGVuZ3RoID4gMCxcblx0XHRzdXBlck1hdGNoZXIgPSBmdW5jdGlvbiggc2VlZCwgY29udGV4dCwgeG1sLCByZXN1bHRzLCBvdXRlcm1vc3QgKSB7XG5cdFx0XHR2YXIgZWxlbSwgaiwgbWF0Y2hlcixcblx0XHRcdFx0bWF0Y2hlZENvdW50ID0gMCxcblx0XHRcdFx0aSA9IFwiMFwiLFxuXHRcdFx0XHR1bm1hdGNoZWQgPSBzZWVkICYmIFtdLFxuXHRcdFx0XHRzZXRNYXRjaGVkID0gW10sXG5cdFx0XHRcdGNvbnRleHRCYWNrdXAgPSBvdXRlcm1vc3RDb250ZXh0LFxuXHRcdFx0XHQvLyBXZSBtdXN0IGFsd2F5cyBoYXZlIGVpdGhlciBzZWVkIGVsZW1lbnRzIG9yIG91dGVybW9zdCBjb250ZXh0XG5cdFx0XHRcdGVsZW1zID0gc2VlZCB8fCBieUVsZW1lbnQgJiYgRXhwci5maW5kW1wiVEFHXCJdKCBcIipcIiwgb3V0ZXJtb3N0ICksXG5cdFx0XHRcdC8vIFVzZSBpbnRlZ2VyIGRpcnJ1bnMgaWZmIHRoaXMgaXMgdGhlIG91dGVybW9zdCBtYXRjaGVyXG5cdFx0XHRcdGRpcnJ1bnNVbmlxdWUgPSAoZGlycnVucyArPSBjb250ZXh0QmFja3VwID09IG51bGwgPyAxIDogTWF0aC5yYW5kb20oKSB8fCAwLjEpLFxuXHRcdFx0XHRsZW4gPSBlbGVtcy5sZW5ndGg7XG5cblx0XHRcdGlmICggb3V0ZXJtb3N0ICkge1xuXHRcdFx0XHRvdXRlcm1vc3RDb250ZXh0ID0gY29udGV4dCAhPT0gZG9jdW1lbnQgJiYgY29udGV4dDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIGVsZW1lbnRzIHBhc3NpbmcgZWxlbWVudE1hdGNoZXJzIGRpcmVjdGx5IHRvIHJlc3VsdHNcblx0XHRcdC8vIEtlZXAgYGlgIGEgc3RyaW5nIGlmIHRoZXJlIGFyZSBubyBlbGVtZW50cyBzbyBgbWF0Y2hlZENvdW50YCB3aWxsIGJlIFwiMDBcIiBiZWxvd1xuXHRcdFx0Ly8gU3VwcG9ydDogSUU8OSwgU2FmYXJpXG5cdFx0XHQvLyBUb2xlcmF0ZSBOb2RlTGlzdCBwcm9wZXJ0aWVzIChJRTogXCJsZW5ndGhcIjsgU2FmYXJpOiA8bnVtYmVyPikgbWF0Y2hpbmcgZWxlbWVudHMgYnkgaWRcblx0XHRcdGZvciAoIDsgaSAhPT0gbGVuICYmIChlbGVtID0gZWxlbXNbaV0pICE9IG51bGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBieUVsZW1lbnQgJiYgZWxlbSApIHtcblx0XHRcdFx0XHRqID0gMDtcblx0XHRcdFx0XHR3aGlsZSAoIChtYXRjaGVyID0gZWxlbWVudE1hdGNoZXJzW2orK10pICkge1xuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0XHRcdFx0cmVzdWx0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0XHRcdGRpcnJ1bnMgPSBkaXJydW5zVW5pcXVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFRyYWNrIHVubWF0Y2hlZCBlbGVtZW50cyBmb3Igc2V0IGZpbHRlcnNcblx0XHRcdFx0aWYgKCBieVNldCApIHtcblx0XHRcdFx0XHQvLyBUaGV5IHdpbGwgaGF2ZSBnb25lIHRocm91Z2ggYWxsIHBvc3NpYmxlIG1hdGNoZXJzXG5cdFx0XHRcdFx0aWYgKCAoZWxlbSA9ICFtYXRjaGVyICYmIGVsZW0pICkge1xuXHRcdFx0XHRcdFx0bWF0Y2hlZENvdW50LS07XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gTGVuZ3RoZW4gdGhlIGFycmF5IGZvciBldmVyeSBlbGVtZW50LCBtYXRjaGVkIG9yIG5vdFxuXHRcdFx0XHRcdGlmICggc2VlZCApIHtcblx0XHRcdFx0XHRcdHVubWF0Y2hlZC5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFwcGx5IHNldCBmaWx0ZXJzIHRvIHVubWF0Y2hlZCBlbGVtZW50c1xuXHRcdFx0bWF0Y2hlZENvdW50ICs9IGk7XG5cdFx0XHRpZiAoIGJ5U2V0ICYmIGkgIT09IG1hdGNoZWRDb3VudCApIHtcblx0XHRcdFx0aiA9IDA7XG5cdFx0XHRcdHdoaWxlICggKG1hdGNoZXIgPSBzZXRNYXRjaGVyc1tqKytdKSApIHtcblx0XHRcdFx0XHRtYXRjaGVyKCB1bm1hdGNoZWQsIHNldE1hdGNoZWQsIGNvbnRleHQsIHhtbCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKCBzZWVkICkge1xuXHRcdFx0XHRcdC8vIFJlaW50ZWdyYXRlIGVsZW1lbnQgbWF0Y2hlcyB0byBlbGltaW5hdGUgdGhlIG5lZWQgZm9yIHNvcnRpbmdcblx0XHRcdFx0XHRpZiAoIG1hdGNoZWRDb3VudCA+IDAgKSB7XG5cdFx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdFx0aWYgKCAhKHVubWF0Y2hlZFtpXSB8fCBzZXRNYXRjaGVkW2ldKSApIHtcblx0XHRcdFx0XHRcdFx0XHRzZXRNYXRjaGVkW2ldID0gcG9wLmNhbGwoIHJlc3VsdHMgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIERpc2NhcmQgaW5kZXggcGxhY2Vob2xkZXIgdmFsdWVzIHRvIGdldCBvbmx5IGFjdHVhbCBtYXRjaGVzXG5cdFx0XHRcdFx0c2V0TWF0Y2hlZCA9IGNvbmRlbnNlKCBzZXRNYXRjaGVkICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBBZGQgbWF0Y2hlcyB0byByZXN1bHRzXG5cdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIHNldE1hdGNoZWQgKTtcblxuXHRcdFx0XHQvLyBTZWVkbGVzcyBzZXQgbWF0Y2hlcyBzdWNjZWVkaW5nIG11bHRpcGxlIHN1Y2Nlc3NmdWwgbWF0Y2hlcnMgc3RpcHVsYXRlIHNvcnRpbmdcblx0XHRcdFx0aWYgKCBvdXRlcm1vc3QgJiYgIXNlZWQgJiYgc2V0TWF0Y2hlZC5sZW5ndGggPiAwICYmXG5cdFx0XHRcdFx0KCBtYXRjaGVkQ291bnQgKyBzZXRNYXRjaGVycy5sZW5ndGggKSA+IDEgKSB7XG5cblx0XHRcdFx0XHRTaXp6bGUudW5pcXVlU29ydCggcmVzdWx0cyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIE92ZXJyaWRlIG1hbmlwdWxhdGlvbiBvZiBnbG9iYWxzIGJ5IG5lc3RlZCBtYXRjaGVyc1xuXHRcdFx0aWYgKCBvdXRlcm1vc3QgKSB7XG5cdFx0XHRcdGRpcnJ1bnMgPSBkaXJydW5zVW5pcXVlO1xuXHRcdFx0XHRvdXRlcm1vc3RDb250ZXh0ID0gY29udGV4dEJhY2t1cDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHVubWF0Y2hlZDtcblx0XHR9O1xuXG5cdHJldHVybiBieVNldCA/XG5cdFx0bWFya0Z1bmN0aW9uKCBzdXBlck1hdGNoZXIgKSA6XG5cdFx0c3VwZXJNYXRjaGVyO1xufVxuXG5jb21waWxlID0gU2l6emxlLmNvbXBpbGUgPSBmdW5jdGlvbiggc2VsZWN0b3IsIG1hdGNoIC8qIEludGVybmFsIFVzZSBPbmx5ICovICkge1xuXHR2YXIgaSxcblx0XHRzZXRNYXRjaGVycyA9IFtdLFxuXHRcdGVsZW1lbnRNYXRjaGVycyA9IFtdLFxuXHRcdGNhY2hlZCA9IGNvbXBpbGVyQ2FjaGVbIHNlbGVjdG9yICsgXCIgXCIgXTtcblxuXHRpZiAoICFjYWNoZWQgKSB7XG5cdFx0Ly8gR2VuZXJhdGUgYSBmdW5jdGlvbiBvZiByZWN1cnNpdmUgZnVuY3Rpb25zIHRoYXQgY2FuIGJlIHVzZWQgdG8gY2hlY2sgZWFjaCBlbGVtZW50XG5cdFx0aWYgKCAhbWF0Y2ggKSB7XG5cdFx0XHRtYXRjaCA9IHRva2VuaXplKCBzZWxlY3RvciApO1xuXHRcdH1cblx0XHRpID0gbWF0Y2gubGVuZ3RoO1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0Y2FjaGVkID0gbWF0Y2hlckZyb21Ub2tlbnMoIG1hdGNoW2ldICk7XG5cdFx0XHRpZiAoIGNhY2hlZFsgZXhwYW5kbyBdICkge1xuXHRcdFx0XHRzZXRNYXRjaGVycy5wdXNoKCBjYWNoZWQgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGVsZW1lbnRNYXRjaGVycy5wdXNoKCBjYWNoZWQgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBDYWNoZSB0aGUgY29tcGlsZWQgZnVuY3Rpb25cblx0XHRjYWNoZWQgPSBjb21waWxlckNhY2hlKCBzZWxlY3RvciwgbWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzKCBlbGVtZW50TWF0Y2hlcnMsIHNldE1hdGNoZXJzICkgKTtcblxuXHRcdC8vIFNhdmUgc2VsZWN0b3IgYW5kIHRva2VuaXphdGlvblxuXHRcdGNhY2hlZC5zZWxlY3RvciA9IHNlbGVjdG9yO1xuXHR9XG5cdHJldHVybiBjYWNoZWQ7XG59O1xuXG4vKipcbiAqIEEgbG93LWxldmVsIHNlbGVjdGlvbiBmdW5jdGlvbiB0aGF0IHdvcmtzIHdpdGggU2l6emxlJ3MgY29tcGlsZWRcbiAqICBzZWxlY3RvciBmdW5jdGlvbnNcbiAqIEBwYXJhbSB7U3RyaW5nfEZ1bmN0aW9ufSBzZWxlY3RvciBBIHNlbGVjdG9yIG9yIGEgcHJlLWNvbXBpbGVkXG4gKiAgc2VsZWN0b3IgZnVuY3Rpb24gYnVpbHQgd2l0aCBTaXp6bGUuY29tcGlsZVxuICogQHBhcmFtIHtFbGVtZW50fSBjb250ZXh0XG4gKiBAcGFyYW0ge0FycmF5fSBbcmVzdWx0c11cbiAqIEBwYXJhbSB7QXJyYXl9IFtzZWVkXSBBIHNldCBvZiBlbGVtZW50cyB0byBtYXRjaCBhZ2FpbnN0XG4gKi9cbnNlbGVjdCA9IFNpenpsZS5zZWxlY3QgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKSB7XG5cdHZhciBpLCB0b2tlbnMsIHRva2VuLCB0eXBlLCBmaW5kLFxuXHRcdGNvbXBpbGVkID0gdHlwZW9mIHNlbGVjdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgc2VsZWN0b3IsXG5cdFx0bWF0Y2ggPSAhc2VlZCAmJiB0b2tlbml6ZSggKHNlbGVjdG9yID0gY29tcGlsZWQuc2VsZWN0b3IgfHwgc2VsZWN0b3IpICk7XG5cblx0cmVzdWx0cyA9IHJlc3VsdHMgfHwgW107XG5cblx0Ly8gVHJ5IHRvIG1pbmltaXplIG9wZXJhdGlvbnMgaWYgdGhlcmUgaXMgbm8gc2VlZCBhbmQgb25seSBvbmUgZ3JvdXBcblx0aWYgKCBtYXRjaC5sZW5ndGggPT09IDEgKSB7XG5cblx0XHQvLyBUYWtlIGEgc2hvcnRjdXQgYW5kIHNldCB0aGUgY29udGV4dCBpZiB0aGUgcm9vdCBzZWxlY3RvciBpcyBhbiBJRFxuXHRcdHRva2VucyA9IG1hdGNoWzBdID0gbWF0Y2hbMF0uc2xpY2UoIDAgKTtcblx0XHRpZiAoIHRva2Vucy5sZW5ndGggPiAyICYmICh0b2tlbiA9IHRva2Vuc1swXSkudHlwZSA9PT0gXCJJRFwiICYmXG5cdFx0XHRcdHN1cHBvcnQuZ2V0QnlJZCAmJiBjb250ZXh0Lm5vZGVUeXBlID09PSA5ICYmIGRvY3VtZW50SXNIVE1MICYmXG5cdFx0XHRcdEV4cHIucmVsYXRpdmVbIHRva2Vuc1sxXS50eXBlIF0gKSB7XG5cblx0XHRcdGNvbnRleHQgPSAoIEV4cHIuZmluZFtcIklEXCJdKCB0b2tlbi5tYXRjaGVzWzBdLnJlcGxhY2UocnVuZXNjYXBlLCBmdW5lc2NhcGUpLCBjb250ZXh0ICkgfHwgW10gKVswXTtcblx0XHRcdGlmICggIWNvbnRleHQgKSB7XG5cdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXG5cdFx0XHQvLyBQcmVjb21waWxlZCBtYXRjaGVycyB3aWxsIHN0aWxsIHZlcmlmeSBhbmNlc3RyeSwgc28gc3RlcCB1cCBhIGxldmVsXG5cdFx0XHR9IGVsc2UgaWYgKCBjb21waWxlZCApIHtcblx0XHRcdFx0Y29udGV4dCA9IGNvbnRleHQucGFyZW50Tm9kZTtcblx0XHRcdH1cblxuXHRcdFx0c2VsZWN0b3IgPSBzZWxlY3Rvci5zbGljZSggdG9rZW5zLnNoaWZ0KCkudmFsdWUubGVuZ3RoICk7XG5cdFx0fVxuXG5cdFx0Ly8gRmV0Y2ggYSBzZWVkIHNldCBmb3IgcmlnaHQtdG8tbGVmdCBtYXRjaGluZ1xuXHRcdGkgPSBtYXRjaEV4cHJbXCJuZWVkc0NvbnRleHRcIl0udGVzdCggc2VsZWN0b3IgKSA/IDAgOiB0b2tlbnMubGVuZ3RoO1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0dG9rZW4gPSB0b2tlbnNbaV07XG5cblx0XHRcdC8vIEFib3J0IGlmIHdlIGhpdCBhIGNvbWJpbmF0b3Jcblx0XHRcdGlmICggRXhwci5yZWxhdGl2ZVsgKHR5cGUgPSB0b2tlbi50eXBlKSBdICkge1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdGlmICggKGZpbmQgPSBFeHByLmZpbmRbIHR5cGUgXSkgKSB7XG5cdFx0XHRcdC8vIFNlYXJjaCwgZXhwYW5kaW5nIGNvbnRleHQgZm9yIGxlYWRpbmcgc2libGluZyBjb21iaW5hdG9yc1xuXHRcdFx0XHRpZiAoIChzZWVkID0gZmluZChcblx0XHRcdFx0XHR0b2tlbi5tYXRjaGVzWzBdLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICksXG5cdFx0XHRcdFx0cnNpYmxpbmcudGVzdCggdG9rZW5zWzBdLnR5cGUgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHwgY29udGV4dFxuXHRcdFx0XHQpKSApIHtcblxuXHRcdFx0XHRcdC8vIElmIHNlZWQgaXMgZW1wdHkgb3Igbm8gdG9rZW5zIHJlbWFpbiwgd2UgY2FuIHJldHVybiBlYXJseVxuXHRcdFx0XHRcdHRva2Vucy5zcGxpY2UoIGksIDEgKTtcblx0XHRcdFx0XHRzZWxlY3RvciA9IHNlZWQubGVuZ3RoICYmIHRvU2VsZWN0b3IoIHRva2VucyApO1xuXHRcdFx0XHRcdGlmICggIXNlbGVjdG9yICkge1xuXHRcdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgc2VlZCApO1xuXHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBDb21waWxlIGFuZCBleGVjdXRlIGEgZmlsdGVyaW5nIGZ1bmN0aW9uIGlmIG9uZSBpcyBub3QgcHJvdmlkZWRcblx0Ly8gUHJvdmlkZSBgbWF0Y2hgIHRvIGF2b2lkIHJldG9rZW5pemF0aW9uIGlmIHdlIG1vZGlmaWVkIHRoZSBzZWxlY3RvciBhYm92ZVxuXHQoIGNvbXBpbGVkIHx8IGNvbXBpbGUoIHNlbGVjdG9yLCBtYXRjaCApICkoXG5cdFx0c2VlZCxcblx0XHRjb250ZXh0LFxuXHRcdCFkb2N1bWVudElzSFRNTCxcblx0XHRyZXN1bHRzLFxuXHRcdHJzaWJsaW5nLnRlc3QoIHNlbGVjdG9yICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8IGNvbnRleHRcblx0KTtcblx0cmV0dXJuIHJlc3VsdHM7XG59O1xuXG4vLyBPbmUtdGltZSBhc3NpZ25tZW50c1xuXG4vLyBTb3J0IHN0YWJpbGl0eVxuc3VwcG9ydC5zb3J0U3RhYmxlID0gZXhwYW5kby5zcGxpdChcIlwiKS5zb3J0KCBzb3J0T3JkZXIgKS5qb2luKFwiXCIpID09PSBleHBhbmRvO1xuXG4vLyBTdXBwb3J0OiBDaHJvbWUgMTQtMzUrXG4vLyBBbHdheXMgYXNzdW1lIGR1cGxpY2F0ZXMgaWYgdGhleSBhcmVuJ3QgcGFzc2VkIHRvIHRoZSBjb21wYXJpc29uIGZ1bmN0aW9uXG5zdXBwb3J0LmRldGVjdER1cGxpY2F0ZXMgPSAhIWhhc0R1cGxpY2F0ZTtcblxuLy8gSW5pdGlhbGl6ZSBhZ2FpbnN0IHRoZSBkZWZhdWx0IGRvY3VtZW50XG5zZXREb2N1bWVudCgpO1xuXG4vLyBTdXBwb3J0OiBXZWJraXQ8NTM3LjMyIC0gU2FmYXJpIDYuMC4zL0Nocm9tZSAyNSAoZml4ZWQgaW4gQ2hyb21lIDI3KVxuLy8gRGV0YWNoZWQgbm9kZXMgY29uZm91bmRpbmdseSBmb2xsb3cgKmVhY2ggb3RoZXIqXG5zdXBwb3J0LnNvcnREZXRhY2hlZCA9IGFzc2VydChmdW5jdGlvbiggZGl2MSApIHtcblx0Ly8gU2hvdWxkIHJldHVybiAxLCBidXQgcmV0dXJucyA0IChmb2xsb3dpbmcpXG5cdHJldHVybiBkaXYxLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpICkgJiAxO1xufSk7XG5cbi8vIFN1cHBvcnQ6IElFPDhcbi8vIFByZXZlbnQgYXR0cmlidXRlL3Byb3BlcnR5IFwiaW50ZXJwb2xhdGlvblwiXG4vLyBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvbXM1MzY0MjklMjhWUy44NSUyOS5hc3B4XG5pZiAoICFhc3NlcnQoZnVuY3Rpb24oIGRpdiApIHtcblx0ZGl2LmlubmVySFRNTCA9IFwiPGEgaHJlZj0nIyc+PC9hPlwiO1xuXHRyZXR1cm4gZGl2LmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKSA9PT0gXCIjXCIgO1xufSkgKSB7XG5cdGFkZEhhbmRsZSggXCJ0eXBlfGhyZWZ8aGVpZ2h0fHdpZHRoXCIsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHRpZiAoICFpc1hNTCApIHtcblx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSwgbmFtZS50b0xvd2VyQ2FzZSgpID09PSBcInR5cGVcIiA/IDEgOiAyICk7XG5cdFx0fVxuXHR9KTtcbn1cblxuLy8gU3VwcG9ydDogSUU8OVxuLy8gVXNlIGRlZmF1bHRWYWx1ZSBpbiBwbGFjZSBvZiBnZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiKVxuaWYgKCAhc3VwcG9ydC5hdHRyaWJ1dGVzIHx8ICFhc3NlcnQoZnVuY3Rpb24oIGRpdiApIHtcblx0ZGl2LmlubmVySFRNTCA9IFwiPGlucHV0Lz5cIjtcblx0ZGl2LmZpcnN0Q2hpbGQuc2V0QXR0cmlidXRlKCBcInZhbHVlXCIsIFwiXCIgKTtcblx0cmV0dXJuIGRpdi5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSggXCJ2YWx1ZVwiICkgPT09IFwiXCI7XG59KSApIHtcblx0YWRkSGFuZGxlKCBcInZhbHVlXCIsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHRpZiAoICFpc1hNTCAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwiaW5wdXRcIiApIHtcblx0XHRcdHJldHVybiBlbGVtLmRlZmF1bHRWYWx1ZTtcblx0XHR9XG5cdH0pO1xufVxuXG4vLyBTdXBwb3J0OiBJRTw5XG4vLyBVc2UgZ2V0QXR0cmlidXRlTm9kZSB0byBmZXRjaCBib29sZWFucyB3aGVuIGdldEF0dHJpYnV0ZSBsaWVzXG5pZiAoICFhc3NlcnQoZnVuY3Rpb24oIGRpdiApIHtcblx0cmV0dXJuIGRpdi5nZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKSA9PSBudWxsO1xufSkgKSB7XG5cdGFkZEhhbmRsZSggYm9vbGVhbnMsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHR2YXIgdmFsO1xuXHRcdGlmICggIWlzWE1MICkge1xuXHRcdFx0cmV0dXJuIGVsZW1bIG5hbWUgXSA9PT0gdHJ1ZSA/IG5hbWUudG9Mb3dlckNhc2UoKSA6XG5cdFx0XHRcdFx0KHZhbCA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggbmFtZSApKSAmJiB2YWwuc3BlY2lmaWVkID9cblx0XHRcdFx0XHR2YWwudmFsdWUgOlxuXHRcdFx0XHRudWxsO1xuXHRcdH1cblx0fSk7XG59XG5cbnJldHVybiBTaXp6bGU7XG5cbn0pKCB3aW5kb3cgKTtcblxuXG5cbmpRdWVyeS5maW5kID0gU2l6emxlO1xualF1ZXJ5LmV4cHIgPSBTaXp6bGUuc2VsZWN0b3JzO1xualF1ZXJ5LmV4cHJbXCI6XCJdID0galF1ZXJ5LmV4cHIucHNldWRvcztcbmpRdWVyeS51bmlxdWUgPSBTaXp6bGUudW5pcXVlU29ydDtcbmpRdWVyeS50ZXh0ID0gU2l6emxlLmdldFRleHQ7XG5qUXVlcnkuaXNYTUxEb2MgPSBTaXp6bGUuaXNYTUw7XG5qUXVlcnkuY29udGFpbnMgPSBTaXp6bGUuY29udGFpbnM7XG5cblxuXG52YXIgcm5lZWRzQ29udGV4dCA9IGpRdWVyeS5leHByLm1hdGNoLm5lZWRzQ29udGV4dDtcblxudmFyIHJzaW5nbGVUYWcgPSAoL148KFxcdyspXFxzKlxcLz8+KD86PFxcL1xcMT58KSQvKTtcblxuXG5cbnZhciByaXNTaW1wbGUgPSAvXi5bXjojXFxbXFwuLF0qJC87XG5cbi8vIEltcGxlbWVudCB0aGUgaWRlbnRpY2FsIGZ1bmN0aW9uYWxpdHkgZm9yIGZpbHRlciBhbmQgbm90XG5mdW5jdGlvbiB3aW5ub3coIGVsZW1lbnRzLCBxdWFsaWZpZXIsIG5vdCApIHtcblx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggcXVhbGlmaWVyICkgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7XG5cdFx0XHQvKiBqc2hpbnQgLVcwMTggKi9cblx0XHRcdHJldHVybiAhIXF1YWxpZmllci5jYWxsKCBlbGVtLCBpLCBlbGVtICkgIT09IG5vdDtcblx0XHR9KTtcblxuXHR9XG5cblx0aWYgKCBxdWFsaWZpZXIubm9kZVR5cGUgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gKCBlbGVtID09PSBxdWFsaWZpZXIgKSAhPT0gbm90O1xuXHRcdH0pO1xuXG5cdH1cblxuXHRpZiAoIHR5cGVvZiBxdWFsaWZpZXIgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0aWYgKCByaXNTaW1wbGUudGVzdCggcXVhbGlmaWVyICkgKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmZpbHRlciggcXVhbGlmaWVyLCBlbGVtZW50cywgbm90ICk7XG5cdFx0fVxuXG5cdFx0cXVhbGlmaWVyID0galF1ZXJ5LmZpbHRlciggcXVhbGlmaWVyLCBlbGVtZW50cyApO1xuXHR9XG5cblx0cmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuICggaW5kZXhPZi5jYWxsKCBxdWFsaWZpZXIsIGVsZW0gKSA+PSAwICkgIT09IG5vdDtcblx0fSk7XG59XG5cbmpRdWVyeS5maWx0ZXIgPSBmdW5jdGlvbiggZXhwciwgZWxlbXMsIG5vdCApIHtcblx0dmFyIGVsZW0gPSBlbGVtc1sgMCBdO1xuXG5cdGlmICggbm90ICkge1xuXHRcdGV4cHIgPSBcIjpub3QoXCIgKyBleHByICsgXCIpXCI7XG5cdH1cblxuXHRyZXR1cm4gZWxlbXMubGVuZ3RoID09PSAxICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgP1xuXHRcdGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggZWxlbSwgZXhwciApID8gWyBlbGVtIF0gOiBbXSA6XG5cdFx0alF1ZXJ5LmZpbmQubWF0Y2hlcyggZXhwciwgalF1ZXJ5LmdyZXAoIGVsZW1zLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtLm5vZGVUeXBlID09PSAxO1xuXHRcdH0pKTtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoe1xuXHRmaW5kOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dmFyIGksXG5cdFx0XHRsZW4gPSB0aGlzLmxlbmd0aCxcblx0XHRcdHJldCA9IFtdLFxuXHRcdFx0c2VsZiA9IHRoaXM7XG5cblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5KCBzZWxlY3RvciApLmZpbHRlcihmdW5jdGlvbigpIHtcblx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0XHRpZiAoIGpRdWVyeS5jb250YWlucyggc2VsZlsgaSBdLCB0aGlzICkgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0pICk7XG5cdFx0fVxuXG5cdFx0Zm9yICggaSA9IDA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdGpRdWVyeS5maW5kKCBzZWxlY3Rvciwgc2VsZlsgaSBdLCByZXQgKTtcblx0XHR9XG5cblx0XHQvLyBOZWVkZWQgYmVjYXVzZSAkKCBzZWxlY3RvciwgY29udGV4dCApIGJlY29tZXMgJCggY29udGV4dCApLmZpbmQoIHNlbGVjdG9yIClcblx0XHRyZXQgPSB0aGlzLnB1c2hTdGFjayggbGVuID4gMSA/IGpRdWVyeS51bmlxdWUoIHJldCApIDogcmV0ICk7XG5cdFx0cmV0LnNlbGVjdG9yID0gdGhpcy5zZWxlY3RvciA/IHRoaXMuc2VsZWN0b3IgKyBcIiBcIiArIHNlbGVjdG9yIDogc2VsZWN0b3I7XG5cdFx0cmV0dXJuIHJldDtcblx0fSxcblx0ZmlsdGVyOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCB3aW5ub3codGhpcywgc2VsZWN0b3IgfHwgW10sIGZhbHNlKSApO1xuXHR9LFxuXHRub3Q6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHdpbm5vdyh0aGlzLCBzZWxlY3RvciB8fCBbXSwgdHJ1ZSkgKTtcblx0fSxcblx0aXM6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gISF3aW5ub3coXG5cdFx0XHR0aGlzLFxuXG5cdFx0XHQvLyBJZiB0aGlzIGlzIGEgcG9zaXRpb25hbC9yZWxhdGl2ZSBzZWxlY3RvciwgY2hlY2sgbWVtYmVyc2hpcCBpbiB0aGUgcmV0dXJuZWQgc2V0XG5cdFx0XHQvLyBzbyAkKFwicDpmaXJzdFwiKS5pcyhcInA6bGFzdFwiKSB3b24ndCByZXR1cm4gdHJ1ZSBmb3IgYSBkb2Mgd2l0aCB0d28gXCJwXCIuXG5cdFx0XHR0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgJiYgcm5lZWRzQ29udGV4dC50ZXN0KCBzZWxlY3RvciApID9cblx0XHRcdFx0alF1ZXJ5KCBzZWxlY3RvciApIDpcblx0XHRcdFx0c2VsZWN0b3IgfHwgW10sXG5cdFx0XHRmYWxzZVxuXHRcdCkubGVuZ3RoO1xuXHR9XG59KTtcblxuXG4vLyBJbml0aWFsaXplIGEgalF1ZXJ5IG9iamVjdFxuXG5cbi8vIEEgY2VudHJhbCByZWZlcmVuY2UgdG8gdGhlIHJvb3QgalF1ZXJ5KGRvY3VtZW50KVxudmFyIHJvb3RqUXVlcnksXG5cblx0Ly8gQSBzaW1wbGUgd2F5IHRvIGNoZWNrIGZvciBIVE1MIHN0cmluZ3Ncblx0Ly8gUHJpb3JpdGl6ZSAjaWQgb3ZlciA8dGFnPiB0byBhdm9pZCBYU1MgdmlhIGxvY2F0aW9uLmhhc2ggKCM5NTIxKVxuXHQvLyBTdHJpY3QgSFRNTCByZWNvZ25pdGlvbiAoIzExMjkwOiBtdXN0IHN0YXJ0IHdpdGggPClcblx0cnF1aWNrRXhwciA9IC9eKD86XFxzKig8W1xcd1xcV10rPilbXj5dKnwjKFtcXHctXSopKSQvLFxuXG5cdGluaXQgPSBqUXVlcnkuZm4uaW5pdCA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCApIHtcblx0XHR2YXIgbWF0Y2gsIGVsZW07XG5cblx0XHQvLyBIQU5ETEU6ICQoXCJcIiksICQobnVsbCksICQodW5kZWZpbmVkKSwgJChmYWxzZSlcblx0XHRpZiAoICFzZWxlY3RvciApIHtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblxuXHRcdC8vIEhhbmRsZSBIVE1MIHN0cmluZ3Ncblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGlmICggc2VsZWN0b3JbMF0gPT09IFwiPFwiICYmIHNlbGVjdG9yWyBzZWxlY3Rvci5sZW5ndGggLSAxIF0gPT09IFwiPlwiICYmIHNlbGVjdG9yLmxlbmd0aCA+PSAzICkge1xuXHRcdFx0XHQvLyBBc3N1bWUgdGhhdCBzdHJpbmdzIHRoYXQgc3RhcnQgYW5kIGVuZCB3aXRoIDw+IGFyZSBIVE1MIGFuZCBza2lwIHRoZSByZWdleCBjaGVja1xuXHRcdFx0XHRtYXRjaCA9IFsgbnVsbCwgc2VsZWN0b3IsIG51bGwgXTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0bWF0Y2ggPSBycXVpY2tFeHByLmV4ZWMoIHNlbGVjdG9yICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE1hdGNoIGh0bWwgb3IgbWFrZSBzdXJlIG5vIGNvbnRleHQgaXMgc3BlY2lmaWVkIGZvciAjaWRcblx0XHRcdGlmICggbWF0Y2ggJiYgKG1hdGNoWzFdIHx8ICFjb250ZXh0KSApIHtcblxuXHRcdFx0XHQvLyBIQU5ETEU6ICQoaHRtbCkgLT4gJChhcnJheSlcblx0XHRcdFx0aWYgKCBtYXRjaFsxXSApIHtcblx0XHRcdFx0XHRjb250ZXh0ID0gY29udGV4dCBpbnN0YW5jZW9mIGpRdWVyeSA/IGNvbnRleHRbMF0gOiBjb250ZXh0O1xuXG5cdFx0XHRcdFx0Ly8gT3B0aW9uIHRvIHJ1biBzY3JpcHRzIGlzIHRydWUgZm9yIGJhY2stY29tcGF0XG5cdFx0XHRcdFx0Ly8gSW50ZW50aW9uYWxseSBsZXQgdGhlIGVycm9yIGJlIHRocm93biBpZiBwYXJzZUhUTUwgaXMgbm90IHByZXNlbnRcblx0XHRcdFx0XHRqUXVlcnkubWVyZ2UoIHRoaXMsIGpRdWVyeS5wYXJzZUhUTUwoXG5cdFx0XHRcdFx0XHRtYXRjaFsxXSxcblx0XHRcdFx0XHRcdGNvbnRleHQgJiYgY29udGV4dC5ub2RlVHlwZSA/IGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0IDogZG9jdW1lbnQsXG5cdFx0XHRcdFx0XHR0cnVlXG5cdFx0XHRcdFx0KSApO1xuXG5cdFx0XHRcdFx0Ly8gSEFORExFOiAkKGh0bWwsIHByb3BzKVxuXHRcdFx0XHRcdGlmICggcnNpbmdsZVRhZy50ZXN0KCBtYXRjaFsxXSApICYmIGpRdWVyeS5pc1BsYWluT2JqZWN0KCBjb250ZXh0ICkgKSB7XG5cdFx0XHRcdFx0XHRmb3IgKCBtYXRjaCBpbiBjb250ZXh0ICkge1xuXHRcdFx0XHRcdFx0XHQvLyBQcm9wZXJ0aWVzIG9mIGNvbnRleHQgYXJlIGNhbGxlZCBhcyBtZXRob2RzIGlmIHBvc3NpYmxlXG5cdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHRoaXNbIG1hdGNoIF0gKSApIHtcblx0XHRcdFx0XHRcdFx0XHR0aGlzWyBtYXRjaCBdKCBjb250ZXh0WyBtYXRjaCBdICk7XG5cblx0XHRcdFx0XHRcdFx0Ly8gLi4uYW5kIG90aGVyd2lzZSBzZXQgYXMgYXR0cmlidXRlc1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdHRoaXMuYXR0ciggbWF0Y2gsIGNvbnRleHRbIG1hdGNoIF0gKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXG5cdFx0XHRcdC8vIEhBTkRMRTogJCgjaWQpXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0ZWxlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBtYXRjaFsyXSApO1xuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogQmxhY2tiZXJyeSA0LjZcblx0XHRcdFx0XHQvLyBnRUJJRCByZXR1cm5zIG5vZGVzIG5vIGxvbmdlciBpbiB0aGUgZG9jdW1lbnQgKCM2OTYzKVxuXHRcdFx0XHRcdGlmICggZWxlbSAmJiBlbGVtLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdFx0XHQvLyBJbmplY3QgdGhlIGVsZW1lbnQgZGlyZWN0bHkgaW50byB0aGUgalF1ZXJ5IG9iamVjdFxuXHRcdFx0XHRcdFx0dGhpcy5sZW5ndGggPSAxO1xuXHRcdFx0XHRcdFx0dGhpc1swXSA9IGVsZW07XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0dGhpcy5jb250ZXh0ID0gZG9jdW1lbnQ7XG5cdFx0XHRcdFx0dGhpcy5zZWxlY3RvciA9IHNlbGVjdG9yO1xuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9XG5cblx0XHRcdC8vIEhBTkRMRTogJChleHByLCAkKC4uLikpXG5cdFx0XHR9IGVsc2UgaWYgKCAhY29udGV4dCB8fCBjb250ZXh0LmpxdWVyeSApIHtcblx0XHRcdFx0cmV0dXJuICggY29udGV4dCB8fCByb290alF1ZXJ5ICkuZmluZCggc2VsZWN0b3IgKTtcblxuXHRcdFx0Ly8gSEFORExFOiAkKGV4cHIsIGNvbnRleHQpXG5cdFx0XHQvLyAod2hpY2ggaXMganVzdCBlcXVpdmFsZW50IHRvOiAkKGNvbnRleHQpLmZpbmQoZXhwcilcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLmNvbnN0cnVjdG9yKCBjb250ZXh0ICkuZmluZCggc2VsZWN0b3IgKTtcblx0XHRcdH1cblxuXHRcdC8vIEhBTkRMRTogJChET01FbGVtZW50KVxuXHRcdH0gZWxzZSBpZiAoIHNlbGVjdG9yLm5vZGVUeXBlICkge1xuXHRcdFx0dGhpcy5jb250ZXh0ID0gdGhpc1swXSA9IHNlbGVjdG9yO1xuXHRcdFx0dGhpcy5sZW5ndGggPSAxO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cblx0XHQvLyBIQU5ETEU6ICQoZnVuY3Rpb24pXG5cdFx0Ly8gU2hvcnRjdXQgZm9yIGRvY3VtZW50IHJlYWR5XG5cdFx0fSBlbHNlIGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHNlbGVjdG9yICkgKSB7XG5cdFx0XHRyZXR1cm4gdHlwZW9mIHJvb3RqUXVlcnkucmVhZHkgIT09IFwidW5kZWZpbmVkXCIgP1xuXHRcdFx0XHRyb290alF1ZXJ5LnJlYWR5KCBzZWxlY3RvciApIDpcblx0XHRcdFx0Ly8gRXhlY3V0ZSBpbW1lZGlhdGVseSBpZiByZWFkeSBpcyBub3QgcHJlc2VudFxuXHRcdFx0XHRzZWxlY3RvciggalF1ZXJ5ICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBzZWxlY3Rvci5zZWxlY3RvciAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dGhpcy5zZWxlY3RvciA9IHNlbGVjdG9yLnNlbGVjdG9yO1xuXHRcdFx0dGhpcy5jb250ZXh0ID0gc2VsZWN0b3IuY29udGV4dDtcblx0XHR9XG5cblx0XHRyZXR1cm4galF1ZXJ5Lm1ha2VBcnJheSggc2VsZWN0b3IsIHRoaXMgKTtcblx0fTtcblxuLy8gR2l2ZSB0aGUgaW5pdCBmdW5jdGlvbiB0aGUgalF1ZXJ5IHByb3RvdHlwZSBmb3IgbGF0ZXIgaW5zdGFudGlhdGlvblxuaW5pdC5wcm90b3R5cGUgPSBqUXVlcnkuZm47XG5cbi8vIEluaXRpYWxpemUgY2VudHJhbCByZWZlcmVuY2VcbnJvb3RqUXVlcnkgPSBqUXVlcnkoIGRvY3VtZW50ICk7XG5cblxudmFyIHJwYXJlbnRzcHJldiA9IC9eKD86cGFyZW50c3xwcmV2KD86VW50aWx8QWxsKSkvLFxuXHQvLyBNZXRob2RzIGd1YXJhbnRlZWQgdG8gcHJvZHVjZSBhIHVuaXF1ZSBzZXQgd2hlbiBzdGFydGluZyBmcm9tIGEgdW5pcXVlIHNldFxuXHRndWFyYW50ZWVkVW5pcXVlID0ge1xuXHRcdGNoaWxkcmVuOiB0cnVlLFxuXHRcdGNvbnRlbnRzOiB0cnVlLFxuXHRcdG5leHQ6IHRydWUsXG5cdFx0cHJldjogdHJ1ZVxuXHR9O1xuXG5qUXVlcnkuZXh0ZW5kKHtcblx0ZGlyOiBmdW5jdGlvbiggZWxlbSwgZGlyLCB1bnRpbCApIHtcblx0XHR2YXIgbWF0Y2hlZCA9IFtdLFxuXHRcdFx0dHJ1bmNhdGUgPSB1bnRpbCAhPT0gdW5kZWZpbmVkO1xuXG5cdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1bIGRpciBdKSAmJiBlbGVtLm5vZGVUeXBlICE9PSA5ICkge1xuXHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRpZiAoIHRydW5jYXRlICYmIGpRdWVyeSggZWxlbSApLmlzKCB1bnRpbCApICkge1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHRcdG1hdGNoZWQucHVzaCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gbWF0Y2hlZDtcblx0fSxcblxuXHRzaWJsaW5nOiBmdW5jdGlvbiggbiwgZWxlbSApIHtcblx0XHR2YXIgbWF0Y2hlZCA9IFtdO1xuXG5cdFx0Zm9yICggOyBuOyBuID0gbi5uZXh0U2libGluZyApIHtcblx0XHRcdGlmICggbi5ub2RlVHlwZSA9PT0gMSAmJiBuICE9PSBlbGVtICkge1xuXHRcdFx0XHRtYXRjaGVkLnB1c2goIG4gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gbWF0Y2hlZDtcblx0fVxufSk7XG5cbmpRdWVyeS5mbi5leHRlbmQoe1xuXHRoYXM6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7XG5cdFx0dmFyIHRhcmdldHMgPSBqUXVlcnkoIHRhcmdldCwgdGhpcyApLFxuXHRcdFx0bCA9IHRhcmdldHMubGVuZ3RoO1xuXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyKGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGkgPSAwO1xuXHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRpZiAoIGpRdWVyeS5jb250YWlucyggdGhpcywgdGFyZ2V0c1tpXSApICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0sXG5cblx0Y2xvc2VzdDogZnVuY3Rpb24oIHNlbGVjdG9ycywgY29udGV4dCApIHtcblx0XHR2YXIgY3VyLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRsID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRtYXRjaGVkID0gW10sXG5cdFx0XHRwb3MgPSBybmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9ycyApIHx8IHR5cGVvZiBzZWxlY3RvcnMgIT09IFwic3RyaW5nXCIgP1xuXHRcdFx0XHRqUXVlcnkoIHNlbGVjdG9ycywgY29udGV4dCB8fCB0aGlzLmNvbnRleHQgKSA6XG5cdFx0XHRcdDA7XG5cblx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRmb3IgKCBjdXIgPSB0aGlzW2ldOyBjdXIgJiYgY3VyICE9PSBjb250ZXh0OyBjdXIgPSBjdXIucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0Ly8gQWx3YXlzIHNraXAgZG9jdW1lbnQgZnJhZ21lbnRzXG5cdFx0XHRcdGlmICggY3VyLm5vZGVUeXBlIDwgMTEgJiYgKHBvcyA/XG5cdFx0XHRcdFx0cG9zLmluZGV4KGN1cikgPiAtMSA6XG5cblx0XHRcdFx0XHQvLyBEb24ndCBwYXNzIG5vbi1lbGVtZW50cyB0byBTaXp6bGVcblx0XHRcdFx0XHRjdXIubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0XHRcdGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvcihjdXIsIHNlbGVjdG9ycykpICkge1xuXG5cdFx0XHRcdFx0bWF0Y2hlZC5wdXNoKCBjdXIgKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggbWF0Y2hlZC5sZW5ndGggPiAxID8galF1ZXJ5LnVuaXF1ZSggbWF0Y2hlZCApIDogbWF0Y2hlZCApO1xuXHR9LFxuXG5cdC8vIERldGVybWluZSB0aGUgcG9zaXRpb24gb2YgYW4gZWxlbWVudCB3aXRoaW4gdGhlIHNldFxuXHRpbmRleDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBObyBhcmd1bWVudCwgcmV0dXJuIGluZGV4IGluIHBhcmVudFxuXHRcdGlmICggIWVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gKCB0aGlzWyAwIF0gJiYgdGhpc1sgMCBdLnBhcmVudE5vZGUgKSA/IHRoaXMuZmlyc3QoKS5wcmV2QWxsKCkubGVuZ3RoIDogLTE7XG5cdFx0fVxuXG5cdFx0Ly8gSW5kZXggaW4gc2VsZWN0b3Jcblx0XHRpZiAoIHR5cGVvZiBlbGVtID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIGluZGV4T2YuY2FsbCggalF1ZXJ5KCBlbGVtICksIHRoaXNbIDAgXSApO1xuXHRcdH1cblxuXHRcdC8vIExvY2F0ZSB0aGUgcG9zaXRpb24gb2YgdGhlIGRlc2lyZWQgZWxlbWVudFxuXHRcdHJldHVybiBpbmRleE9mLmNhbGwoIHRoaXMsXG5cblx0XHRcdC8vIElmIGl0IHJlY2VpdmVzIGEgalF1ZXJ5IG9iamVjdCwgdGhlIGZpcnN0IGVsZW1lbnQgaXMgdXNlZFxuXHRcdFx0ZWxlbS5qcXVlcnkgPyBlbGVtWyAwIF0gOiBlbGVtXG5cdFx0KTtcblx0fSxcblxuXHRhZGQ6IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soXG5cdFx0XHRqUXVlcnkudW5pcXVlKFxuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIHRoaXMuZ2V0KCksIGpRdWVyeSggc2VsZWN0b3IsIGNvbnRleHQgKSApXG5cdFx0XHQpXG5cdFx0KTtcblx0fSxcblxuXHRhZGRCYWNrOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMuYWRkKCBzZWxlY3RvciA9PSBudWxsID9cblx0XHRcdHRoaXMucHJldk9iamVjdCA6IHRoaXMucHJldk9iamVjdC5maWx0ZXIoc2VsZWN0b3IpXG5cdFx0KTtcblx0fVxufSk7XG5cbmZ1bmN0aW9uIHNpYmxpbmcoIGN1ciwgZGlyICkge1xuXHR3aGlsZSAoIChjdXIgPSBjdXJbZGlyXSkgJiYgY3VyLm5vZGVUeXBlICE9PSAxICkge31cblx0cmV0dXJuIGN1cjtcbn1cblxualF1ZXJ5LmVhY2goe1xuXHRwYXJlbnQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XG5cdFx0cmV0dXJuIHBhcmVudCAmJiBwYXJlbnQubm9kZVR5cGUgIT09IDExID8gcGFyZW50IDogbnVsbDtcblx0fSxcblx0cGFyZW50czogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5kaXIoIGVsZW0sIFwicGFyZW50Tm9kZVwiICk7XG5cdH0sXG5cdHBhcmVudHNVbnRpbDogZnVuY3Rpb24oIGVsZW0sIGksIHVudGlsICkge1xuXHRcdHJldHVybiBqUXVlcnkuZGlyKCBlbGVtLCBcInBhcmVudE5vZGVcIiwgdW50aWwgKTtcblx0fSxcblx0bmV4dDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmcoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiApO1xuXHR9LFxuXHRwcmV2OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZyggZWxlbSwgXCJwcmV2aW91c1NpYmxpbmdcIiApO1xuXHR9LFxuXHRuZXh0QWxsOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmRpciggZWxlbSwgXCJuZXh0U2libGluZ1wiICk7XG5cdH0sXG5cdHByZXZBbGw6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBqUXVlcnkuZGlyKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiICk7XG5cdH0sXG5cdG5leHRVbnRpbDogZnVuY3Rpb24oIGVsZW0sIGksIHVudGlsICkge1xuXHRcdHJldHVybiBqUXVlcnkuZGlyKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIsIHVudGlsICk7XG5cdH0sXG5cdHByZXZVbnRpbDogZnVuY3Rpb24oIGVsZW0sIGksIHVudGlsICkge1xuXHRcdHJldHVybiBqUXVlcnkuZGlyKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiLCB1bnRpbCApO1xuXHR9LFxuXHRzaWJsaW5nczogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5zaWJsaW5nKCAoIGVsZW0ucGFyZW50Tm9kZSB8fCB7fSApLmZpcnN0Q2hpbGQsIGVsZW0gKTtcblx0fSxcblx0Y2hpbGRyZW46IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBqUXVlcnkuc2libGluZyggZWxlbS5maXJzdENoaWxkICk7XG5cdH0sXG5cdGNvbnRlbnRzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZWxlbS5jb250ZW50RG9jdW1lbnQgfHwgalF1ZXJ5Lm1lcmdlKCBbXSwgZWxlbS5jaGlsZE5vZGVzICk7XG5cdH1cbn0sIGZ1bmN0aW9uKCBuYW1lLCBmbiApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggdW50aWwsIHNlbGVjdG9yICkge1xuXHRcdHZhciBtYXRjaGVkID0galF1ZXJ5Lm1hcCggdGhpcywgZm4sIHVudGlsICk7XG5cblx0XHRpZiAoIG5hbWUuc2xpY2UoIC01ICkgIT09IFwiVW50aWxcIiApIHtcblx0XHRcdHNlbGVjdG9yID0gdW50aWw7XG5cdFx0fVxuXG5cdFx0aWYgKCBzZWxlY3RvciAmJiB0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRtYXRjaGVkID0galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIG1hdGNoZWQgKTtcblx0XHR9XG5cblx0XHRpZiAoIHRoaXMubGVuZ3RoID4gMSApIHtcblx0XHRcdC8vIFJlbW92ZSBkdXBsaWNhdGVzXG5cdFx0XHRpZiAoICFndWFyYW50ZWVkVW5pcXVlWyBuYW1lIF0gKSB7XG5cdFx0XHRcdGpRdWVyeS51bmlxdWUoIG1hdGNoZWQgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmV2ZXJzZSBvcmRlciBmb3IgcGFyZW50cyogYW5kIHByZXYtZGVyaXZhdGl2ZXNcblx0XHRcdGlmICggcnBhcmVudHNwcmV2LnRlc3QoIG5hbWUgKSApIHtcblx0XHRcdFx0bWF0Y2hlZC5yZXZlcnNlKCk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBtYXRjaGVkICk7XG5cdH07XG59KTtcbnZhciBybm90d2hpdGUgPSAoL1xcUysvZyk7XG5cblxuXG4vLyBTdHJpbmcgdG8gT2JqZWN0IG9wdGlvbnMgZm9ybWF0IGNhY2hlXG52YXIgb3B0aW9uc0NhY2hlID0ge307XG5cbi8vIENvbnZlcnQgU3RyaW5nLWZvcm1hdHRlZCBvcHRpb25zIGludG8gT2JqZWN0LWZvcm1hdHRlZCBvbmVzIGFuZCBzdG9yZSBpbiBjYWNoZVxuZnVuY3Rpb24gY3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIHtcblx0dmFyIG9iamVjdCA9IG9wdGlvbnNDYWNoZVsgb3B0aW9ucyBdID0ge307XG5cdGpRdWVyeS5lYWNoKCBvcHRpb25zLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbXSwgZnVuY3Rpb24oIF8sIGZsYWcgKSB7XG5cdFx0b2JqZWN0WyBmbGFnIF0gPSB0cnVlO1xuXHR9KTtcblx0cmV0dXJuIG9iamVjdDtcbn1cblxuLypcbiAqIENyZWF0ZSBhIGNhbGxiYWNrIGxpc3QgdXNpbmcgdGhlIGZvbGxvd2luZyBwYXJhbWV0ZXJzOlxuICpcbiAqXHRvcHRpb25zOiBhbiBvcHRpb25hbCBsaXN0IG9mIHNwYWNlLXNlcGFyYXRlZCBvcHRpb25zIHRoYXQgd2lsbCBjaGFuZ2UgaG93XG4gKlx0XHRcdHRoZSBjYWxsYmFjayBsaXN0IGJlaGF2ZXMgb3IgYSBtb3JlIHRyYWRpdGlvbmFsIG9wdGlvbiBvYmplY3RcbiAqXG4gKiBCeSBkZWZhdWx0IGEgY2FsbGJhY2sgbGlzdCB3aWxsIGFjdCBsaWtlIGFuIGV2ZW50IGNhbGxiYWNrIGxpc3QgYW5kIGNhbiBiZVxuICogXCJmaXJlZFwiIG11bHRpcGxlIHRpbWVzLlxuICpcbiAqIFBvc3NpYmxlIG9wdGlvbnM6XG4gKlxuICpcdG9uY2U6XHRcdFx0d2lsbCBlbnN1cmUgdGhlIGNhbGxiYWNrIGxpc3QgY2FuIG9ubHkgYmUgZmlyZWQgb25jZSAobGlrZSBhIERlZmVycmVkKVxuICpcbiAqXHRtZW1vcnk6XHRcdFx0d2lsbCBrZWVwIHRyYWNrIG9mIHByZXZpb3VzIHZhbHVlcyBhbmQgd2lsbCBjYWxsIGFueSBjYWxsYmFjayBhZGRlZFxuICpcdFx0XHRcdFx0YWZ0ZXIgdGhlIGxpc3QgaGFzIGJlZW4gZmlyZWQgcmlnaHQgYXdheSB3aXRoIHRoZSBsYXRlc3QgXCJtZW1vcml6ZWRcIlxuICpcdFx0XHRcdFx0dmFsdWVzIChsaWtlIGEgRGVmZXJyZWQpXG4gKlxuICpcdHVuaXF1ZTpcdFx0XHR3aWxsIGVuc3VyZSBhIGNhbGxiYWNrIGNhbiBvbmx5IGJlIGFkZGVkIG9uY2UgKG5vIGR1cGxpY2F0ZSBpbiB0aGUgbGlzdClcbiAqXG4gKlx0c3RvcE9uRmFsc2U6XHRpbnRlcnJ1cHQgY2FsbGluZ3Mgd2hlbiBhIGNhbGxiYWNrIHJldHVybnMgZmFsc2VcbiAqXG4gKi9cbmpRdWVyeS5DYWxsYmFja3MgPSBmdW5jdGlvbiggb3B0aW9ucyApIHtcblxuXHQvLyBDb252ZXJ0IG9wdGlvbnMgZnJvbSBTdHJpbmctZm9ybWF0dGVkIHRvIE9iamVjdC1mb3JtYXR0ZWQgaWYgbmVlZGVkXG5cdC8vICh3ZSBjaGVjayBpbiBjYWNoZSBmaXJzdClcblx0b3B0aW9ucyA9IHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiID9cblx0XHQoIG9wdGlvbnNDYWNoZVsgb3B0aW9ucyBdIHx8IGNyZWF0ZU9wdGlvbnMoIG9wdGlvbnMgKSApIDpcblx0XHRqUXVlcnkuZXh0ZW5kKCB7fSwgb3B0aW9ucyApO1xuXG5cdHZhciAvLyBMYXN0IGZpcmUgdmFsdWUgKGZvciBub24tZm9yZ2V0dGFibGUgbGlzdHMpXG5cdFx0bWVtb3J5LFxuXHRcdC8vIEZsYWcgdG8ga25vdyBpZiBsaXN0IHdhcyBhbHJlYWR5IGZpcmVkXG5cdFx0ZmlyZWQsXG5cdFx0Ly8gRmxhZyB0byBrbm93IGlmIGxpc3QgaXMgY3VycmVudGx5IGZpcmluZ1xuXHRcdGZpcmluZyxcblx0XHQvLyBGaXJzdCBjYWxsYmFjayB0byBmaXJlICh1c2VkIGludGVybmFsbHkgYnkgYWRkIGFuZCBmaXJlV2l0aClcblx0XHRmaXJpbmdTdGFydCxcblx0XHQvLyBFbmQgb2YgdGhlIGxvb3Agd2hlbiBmaXJpbmdcblx0XHRmaXJpbmdMZW5ndGgsXG5cdFx0Ly8gSW5kZXggb2YgY3VycmVudGx5IGZpcmluZyBjYWxsYmFjayAobW9kaWZpZWQgYnkgcmVtb3ZlIGlmIG5lZWRlZClcblx0XHRmaXJpbmdJbmRleCxcblx0XHQvLyBBY3R1YWwgY2FsbGJhY2sgbGlzdFxuXHRcdGxpc3QgPSBbXSxcblx0XHQvLyBTdGFjayBvZiBmaXJlIGNhbGxzIGZvciByZXBlYXRhYmxlIGxpc3RzXG5cdFx0c3RhY2sgPSAhb3B0aW9ucy5vbmNlICYmIFtdLFxuXHRcdC8vIEZpcmUgY2FsbGJhY2tzXG5cdFx0ZmlyZSA9IGZ1bmN0aW9uKCBkYXRhICkge1xuXHRcdFx0bWVtb3J5ID0gb3B0aW9ucy5tZW1vcnkgJiYgZGF0YTtcblx0XHRcdGZpcmVkID0gdHJ1ZTtcblx0XHRcdGZpcmluZ0luZGV4ID0gZmlyaW5nU3RhcnQgfHwgMDtcblx0XHRcdGZpcmluZ1N0YXJ0ID0gMDtcblx0XHRcdGZpcmluZ0xlbmd0aCA9IGxpc3QubGVuZ3RoO1xuXHRcdFx0ZmlyaW5nID0gdHJ1ZTtcblx0XHRcdGZvciAoIDsgbGlzdCAmJiBmaXJpbmdJbmRleCA8IGZpcmluZ0xlbmd0aDsgZmlyaW5nSW5kZXgrKyApIHtcblx0XHRcdFx0aWYgKCBsaXN0WyBmaXJpbmdJbmRleCBdLmFwcGx5KCBkYXRhWyAwIF0sIGRhdGFbIDEgXSApID09PSBmYWxzZSAmJiBvcHRpb25zLnN0b3BPbkZhbHNlICkge1xuXHRcdFx0XHRcdG1lbW9yeSA9IGZhbHNlOyAvLyBUbyBwcmV2ZW50IGZ1cnRoZXIgY2FsbHMgdXNpbmcgYWRkXG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGZpcmluZyA9IGZhbHNlO1xuXHRcdFx0aWYgKCBsaXN0ICkge1xuXHRcdFx0XHRpZiAoIHN0YWNrICkge1xuXHRcdFx0XHRcdGlmICggc3RhY2subGVuZ3RoICkge1xuXHRcdFx0XHRcdFx0ZmlyZSggc3RhY2suc2hpZnQoKSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSBlbHNlIGlmICggbWVtb3J5ICkge1xuXHRcdFx0XHRcdGxpc3QgPSBbXTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzZWxmLmRpc2FibGUoKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0sXG5cdFx0Ly8gQWN0dWFsIENhbGxiYWNrcyBvYmplY3Rcblx0XHRzZWxmID0ge1xuXHRcdFx0Ly8gQWRkIGEgY2FsbGJhY2sgb3IgYSBjb2xsZWN0aW9uIG9mIGNhbGxiYWNrcyB0byB0aGUgbGlzdFxuXHRcdFx0YWRkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXHRcdFx0XHRcdC8vIEZpcnN0LCB3ZSBzYXZlIHRoZSBjdXJyZW50IGxlbmd0aFxuXHRcdFx0XHRcdHZhciBzdGFydCA9IGxpc3QubGVuZ3RoO1xuXHRcdFx0XHRcdChmdW5jdGlvbiBhZGQoIGFyZ3MgKSB7XG5cdFx0XHRcdFx0XHRqUXVlcnkuZWFjaCggYXJncywgZnVuY3Rpb24oIF8sIGFyZyApIHtcblx0XHRcdFx0XHRcdFx0dmFyIHR5cGUgPSBqUXVlcnkudHlwZSggYXJnICk7XG5cdFx0XHRcdFx0XHRcdGlmICggdHlwZSA9PT0gXCJmdW5jdGlvblwiICkge1xuXHRcdFx0XHRcdFx0XHRcdGlmICggIW9wdGlvbnMudW5pcXVlIHx8ICFzZWxmLmhhcyggYXJnICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRsaXN0LnB1c2goIGFyZyApO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggYXJnICYmIGFyZy5sZW5ndGggJiYgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdFx0XHRcdFx0XHQvLyBJbnNwZWN0IHJlY3Vyc2l2ZWx5XG5cdFx0XHRcdFx0XHRcdFx0YWRkKCBhcmcgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0fSkoIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRcdC8vIERvIHdlIG5lZWQgdG8gYWRkIHRoZSBjYWxsYmFja3MgdG8gdGhlXG5cdFx0XHRcdFx0Ly8gY3VycmVudCBmaXJpbmcgYmF0Y2g/XG5cdFx0XHRcdFx0aWYgKCBmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJpbmdMZW5ndGggPSBsaXN0Lmxlbmd0aDtcblx0XHRcdFx0XHQvLyBXaXRoIG1lbW9yeSwgaWYgd2UncmUgbm90IGZpcmluZyB0aGVuXG5cdFx0XHRcdFx0Ly8gd2Ugc2hvdWxkIGNhbGwgcmlnaHQgYXdheVxuXHRcdFx0XHRcdH0gZWxzZSBpZiAoIG1lbW9yeSApIHtcblx0XHRcdFx0XHRcdGZpcmluZ1N0YXJ0ID0gc3RhcnQ7XG5cdFx0XHRcdFx0XHRmaXJlKCBtZW1vcnkgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXHRcdFx0Ly8gUmVtb3ZlIGEgY2FsbGJhY2sgZnJvbSB0aGUgbGlzdFxuXHRcdFx0cmVtb3ZlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXHRcdFx0XHRcdGpRdWVyeS5lYWNoKCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBfLCBhcmcgKSB7XG5cdFx0XHRcdFx0XHR2YXIgaW5kZXg7XG5cdFx0XHRcdFx0XHR3aGlsZSAoICggaW5kZXggPSBqUXVlcnkuaW5BcnJheSggYXJnLCBsaXN0LCBpbmRleCApICkgPiAtMSApIHtcblx0XHRcdFx0XHRcdFx0bGlzdC5zcGxpY2UoIGluZGV4LCAxICk7XG5cdFx0XHRcdFx0XHRcdC8vIEhhbmRsZSBmaXJpbmcgaW5kZXhlc1xuXHRcdFx0XHRcdFx0XHRpZiAoIGZpcmluZyApIHtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGluZGV4IDw9IGZpcmluZ0xlbmd0aCApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGZpcmluZ0xlbmd0aC0tO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRpZiAoIGluZGV4IDw9IGZpcmluZ0luZGV4ICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXgtLTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cdFx0XHQvLyBDaGVjayBpZiBhIGdpdmVuIGNhbGxiYWNrIGlzIGluIHRoZSBsaXN0LlxuXHRcdFx0Ly8gSWYgbm8gYXJndW1lbnQgaXMgZ2l2ZW4sIHJldHVybiB3aGV0aGVyIG9yIG5vdCBsaXN0IGhhcyBjYWxsYmFja3MgYXR0YWNoZWQuXG5cdFx0XHRoYXM6IGZ1bmN0aW9uKCBmbiApIHtcblx0XHRcdFx0cmV0dXJuIGZuID8galF1ZXJ5LmluQXJyYXkoIGZuLCBsaXN0ICkgPiAtMSA6ICEhKCBsaXN0ICYmIGxpc3QubGVuZ3RoICk7XG5cdFx0XHR9LFxuXHRcdFx0Ly8gUmVtb3ZlIGFsbCBjYWxsYmFja3MgZnJvbSB0aGUgbGlzdFxuXHRcdFx0ZW1wdHk6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRsaXN0ID0gW107XG5cdFx0XHRcdGZpcmluZ0xlbmd0aCA9IDA7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblx0XHRcdC8vIEhhdmUgdGhlIGxpc3QgZG8gbm90aGluZyBhbnltb3JlXG5cdFx0XHRkaXNhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0bGlzdCA9IHN0YWNrID0gbWVtb3J5ID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cdFx0XHQvLyBJcyBpdCBkaXNhYmxlZD9cblx0XHRcdGRpc2FibGVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICFsaXN0O1xuXHRcdFx0fSxcblx0XHRcdC8vIExvY2sgdGhlIGxpc3QgaW4gaXRzIGN1cnJlbnQgc3RhdGVcblx0XHRcdGxvY2s6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRzdGFjayA9IHVuZGVmaW5lZDtcblx0XHRcdFx0aWYgKCAhbWVtb3J5ICkge1xuXHRcdFx0XHRcdHNlbGYuZGlzYWJsZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblx0XHRcdC8vIElzIGl0IGxvY2tlZD9cblx0XHRcdGxvY2tlZDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiAhc3RhY2s7XG5cdFx0XHR9LFxuXHRcdFx0Ly8gQ2FsbCBhbGwgY2FsbGJhY2tzIHdpdGggdGhlIGdpdmVuIGNvbnRleHQgYW5kIGFyZ3VtZW50c1xuXHRcdFx0ZmlyZVdpdGg6IGZ1bmN0aW9uKCBjb250ZXh0LCBhcmdzICkge1xuXHRcdFx0XHRpZiAoIGxpc3QgJiYgKCAhZmlyZWQgfHwgc3RhY2sgKSApIHtcblx0XHRcdFx0XHRhcmdzID0gYXJncyB8fCBbXTtcblx0XHRcdFx0XHRhcmdzID0gWyBjb250ZXh0LCBhcmdzLnNsaWNlID8gYXJncy5zbGljZSgpIDogYXJncyBdO1xuXHRcdFx0XHRcdGlmICggZmlyaW5nICkge1xuXHRcdFx0XHRcdFx0c3RhY2sucHVzaCggYXJncyApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRmaXJlKCBhcmdzICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblx0XHRcdC8vIENhbGwgYWxsIHRoZSBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gYXJndW1lbnRzXG5cdFx0XHRmaXJlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0c2VsZi5maXJlV2l0aCggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblx0XHRcdC8vIFRvIGtub3cgaWYgdGhlIGNhbGxiYWNrcyBoYXZlIGFscmVhZHkgYmVlbiBjYWxsZWQgYXQgbGVhc3Qgb25jZVxuXHRcdFx0ZmlyZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gISFmaXJlZDtcblx0XHRcdH1cblx0XHR9O1xuXG5cdHJldHVybiBzZWxmO1xufTtcblxuXG5qUXVlcnkuZXh0ZW5kKHtcblxuXHREZWZlcnJlZDogZnVuY3Rpb24oIGZ1bmMgKSB7XG5cdFx0dmFyIHR1cGxlcyA9IFtcblx0XHRcdFx0Ly8gYWN0aW9uLCBhZGQgbGlzdGVuZXIsIGxpc3RlbmVyIGxpc3QsIGZpbmFsIHN0YXRlXG5cdFx0XHRcdFsgXCJyZXNvbHZlXCIsIFwiZG9uZVwiLCBqUXVlcnkuQ2FsbGJhY2tzKFwib25jZSBtZW1vcnlcIiksIFwicmVzb2x2ZWRcIiBdLFxuXHRcdFx0XHRbIFwicmVqZWN0XCIsIFwiZmFpbFwiLCBqUXVlcnkuQ2FsbGJhY2tzKFwib25jZSBtZW1vcnlcIiksIFwicmVqZWN0ZWRcIiBdLFxuXHRcdFx0XHRbIFwibm90aWZ5XCIsIFwicHJvZ3Jlc3NcIiwgalF1ZXJ5LkNhbGxiYWNrcyhcIm1lbW9yeVwiKSBdXG5cdFx0XHRdLFxuXHRcdFx0c3RhdGUgPSBcInBlbmRpbmdcIixcblx0XHRcdHByb21pc2UgPSB7XG5cdFx0XHRcdHN0YXRlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gc3RhdGU7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGFsd2F5czogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0ZGVmZXJyZWQuZG9uZSggYXJndW1lbnRzICkuZmFpbCggYXJndW1lbnRzICk7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdHRoZW46IGZ1bmN0aW9uKCAvKiBmbkRvbmUsIGZuRmFpbCwgZm5Qcm9ncmVzcyAqLyApIHtcblx0XHRcdFx0XHR2YXIgZm5zID0gYXJndW1lbnRzO1xuXHRcdFx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoZnVuY3Rpb24oIG5ld0RlZmVyICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5LmVhY2goIHR1cGxlcywgZnVuY3Rpb24oIGksIHR1cGxlICkge1xuXHRcdFx0XHRcdFx0XHR2YXIgZm4gPSBqUXVlcnkuaXNGdW5jdGlvbiggZm5zWyBpIF0gKSAmJiBmbnNbIGkgXTtcblx0XHRcdFx0XHRcdFx0Ly8gZGVmZXJyZWRbIGRvbmUgfCBmYWlsIHwgcHJvZ3Jlc3MgXSBmb3IgZm9yd2FyZGluZyBhY3Rpb25zIHRvIG5ld0RlZmVyXG5cdFx0XHRcdFx0XHRcdGRlZmVycmVkWyB0dXBsZVsxXSBdKGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdHZhciByZXR1cm5lZCA9IGZuICYmIGZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIHJldHVybmVkICYmIGpRdWVyeS5pc0Z1bmN0aW9uKCByZXR1cm5lZC5wcm9taXNlICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZC5wcm9taXNlKClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LmRvbmUoIG5ld0RlZmVyLnJlc29sdmUgKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQuZmFpbCggbmV3RGVmZXIucmVqZWN0IClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LnByb2dyZXNzKCBuZXdEZWZlci5ub3RpZnkgKTtcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXJbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdKCB0aGlzID09PSBwcm9taXNlID8gbmV3RGVmZXIucHJvbWlzZSgpIDogdGhpcywgZm4gPyBbIHJldHVybmVkIF0gOiBhcmd1bWVudHMgKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRmbnMgPSBudWxsO1xuXHRcdFx0XHRcdH0pLnByb21pc2UoKTtcblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gR2V0IGEgcHJvbWlzZSBmb3IgdGhpcyBkZWZlcnJlZFxuXHRcdFx0XHQvLyBJZiBvYmogaXMgcHJvdmlkZWQsIHRoZSBwcm9taXNlIGFzcGVjdCBpcyBhZGRlZCB0byB0aGUgb2JqZWN0XG5cdFx0XHRcdHByb21pc2U6IGZ1bmN0aW9uKCBvYmogKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG9iaiAhPSBudWxsID8galF1ZXJ5LmV4dGVuZCggb2JqLCBwcm9taXNlICkgOiBwcm9taXNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXHRcdFx0ZGVmZXJyZWQgPSB7fTtcblxuXHRcdC8vIEtlZXAgcGlwZSBmb3IgYmFjay1jb21wYXRcblx0XHRwcm9taXNlLnBpcGUgPSBwcm9taXNlLnRoZW47XG5cblx0XHQvLyBBZGQgbGlzdC1zcGVjaWZpYyBtZXRob2RzXG5cdFx0alF1ZXJ5LmVhY2goIHR1cGxlcywgZnVuY3Rpb24oIGksIHR1cGxlICkge1xuXHRcdFx0dmFyIGxpc3QgPSB0dXBsZVsgMiBdLFxuXHRcdFx0XHRzdGF0ZVN0cmluZyA9IHR1cGxlWyAzIF07XG5cblx0XHRcdC8vIHByb21pc2VbIGRvbmUgfCBmYWlsIHwgcHJvZ3Jlc3MgXSA9IGxpc3QuYWRkXG5cdFx0XHRwcm9taXNlWyB0dXBsZVsxXSBdID0gbGlzdC5hZGQ7XG5cblx0XHRcdC8vIEhhbmRsZSBzdGF0ZVxuXHRcdFx0aWYgKCBzdGF0ZVN0cmluZyApIHtcblx0XHRcdFx0bGlzdC5hZGQoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0Ly8gc3RhdGUgPSBbIHJlc29sdmVkIHwgcmVqZWN0ZWQgXVxuXHRcdFx0XHRcdHN0YXRlID0gc3RhdGVTdHJpbmc7XG5cblx0XHRcdFx0Ly8gWyByZWplY3RfbGlzdCB8IHJlc29sdmVfbGlzdCBdLmRpc2FibGU7IHByb2dyZXNzX2xpc3QubG9ja1xuXHRcdFx0XHR9LCB0dXBsZXNbIGkgXiAxIF1bIDIgXS5kaXNhYmxlLCB0dXBsZXNbIDIgXVsgMiBdLmxvY2sgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gZGVmZXJyZWRbIHJlc29sdmUgfCByZWplY3QgfCBub3RpZnkgXVxuXHRcdFx0ZGVmZXJyZWRbIHR1cGxlWzBdIF0gPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZGVmZXJyZWRbIHR1cGxlWzBdICsgXCJXaXRoXCIgXSggdGhpcyA9PT0gZGVmZXJyZWQgPyBwcm9taXNlIDogdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fTtcblx0XHRcdGRlZmVycmVkWyB0dXBsZVswXSArIFwiV2l0aFwiIF0gPSBsaXN0LmZpcmVXaXRoO1xuXHRcdH0pO1xuXG5cdFx0Ly8gTWFrZSB0aGUgZGVmZXJyZWQgYSBwcm9taXNlXG5cdFx0cHJvbWlzZS5wcm9taXNlKCBkZWZlcnJlZCApO1xuXG5cdFx0Ly8gQ2FsbCBnaXZlbiBmdW5jIGlmIGFueVxuXHRcdGlmICggZnVuYyApIHtcblx0XHRcdGZ1bmMuY2FsbCggZGVmZXJyZWQsIGRlZmVycmVkICk7XG5cdFx0fVxuXG5cdFx0Ly8gQWxsIGRvbmUhXG5cdFx0cmV0dXJuIGRlZmVycmVkO1xuXHR9LFxuXG5cdC8vIERlZmVycmVkIGhlbHBlclxuXHR3aGVuOiBmdW5jdGlvbiggc3Vib3JkaW5hdGUgLyogLCAuLi4sIHN1Ym9yZGluYXRlTiAqLyApIHtcblx0XHR2YXIgaSA9IDAsXG5cdFx0XHRyZXNvbHZlVmFsdWVzID0gc2xpY2UuY2FsbCggYXJndW1lbnRzICksXG5cdFx0XHRsZW5ndGggPSByZXNvbHZlVmFsdWVzLmxlbmd0aCxcblxuXHRcdFx0Ly8gdGhlIGNvdW50IG9mIHVuY29tcGxldGVkIHN1Ym9yZGluYXRlc1xuXHRcdFx0cmVtYWluaW5nID0gbGVuZ3RoICE9PSAxIHx8ICggc3Vib3JkaW5hdGUgJiYgalF1ZXJ5LmlzRnVuY3Rpb24oIHN1Ym9yZGluYXRlLnByb21pc2UgKSApID8gbGVuZ3RoIDogMCxcblxuXHRcdFx0Ly8gdGhlIG1hc3RlciBEZWZlcnJlZC4gSWYgcmVzb2x2ZVZhbHVlcyBjb25zaXN0IG9mIG9ubHkgYSBzaW5nbGUgRGVmZXJyZWQsIGp1c3QgdXNlIHRoYXQuXG5cdFx0XHRkZWZlcnJlZCA9IHJlbWFpbmluZyA9PT0gMSA/IHN1Ym9yZGluYXRlIDogalF1ZXJ5LkRlZmVycmVkKCksXG5cblx0XHRcdC8vIFVwZGF0ZSBmdW5jdGlvbiBmb3IgYm90aCByZXNvbHZlIGFuZCBwcm9ncmVzcyB2YWx1ZXNcblx0XHRcdHVwZGF0ZUZ1bmMgPSBmdW5jdGlvbiggaSwgY29udGV4dHMsIHZhbHVlcyApIHtcblx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdFx0XHRjb250ZXh0c1sgaSBdID0gdGhpcztcblx0XHRcdFx0XHR2YWx1ZXNbIGkgXSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxID8gc2xpY2UuY2FsbCggYXJndW1lbnRzICkgOiB2YWx1ZTtcblx0XHRcdFx0XHRpZiAoIHZhbHVlcyA9PT0gcHJvZ3Jlc3NWYWx1ZXMgKSB7XG5cdFx0XHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBjb250ZXh0cywgdmFsdWVzICk7XG5cdFx0XHRcdFx0fSBlbHNlIGlmICggISggLS1yZW1haW5pbmcgKSApIHtcblx0XHRcdFx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBjb250ZXh0cywgdmFsdWVzICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdFx0fSxcblxuXHRcdFx0cHJvZ3Jlc3NWYWx1ZXMsIHByb2dyZXNzQ29udGV4dHMsIHJlc29sdmVDb250ZXh0cztcblxuXHRcdC8vIEFkZCBsaXN0ZW5lcnMgdG8gRGVmZXJyZWQgc3Vib3JkaW5hdGVzOyB0cmVhdCBvdGhlcnMgYXMgcmVzb2x2ZWRcblx0XHRpZiAoIGxlbmd0aCA+IDEgKSB7XG5cdFx0XHRwcm9ncmVzc1ZhbHVlcyA9IG5ldyBBcnJheSggbGVuZ3RoICk7XG5cdFx0XHRwcm9ncmVzc0NvbnRleHRzID0gbmV3IEFycmF5KCBsZW5ndGggKTtcblx0XHRcdHJlc29sdmVDb250ZXh0cyA9IG5ldyBBcnJheSggbGVuZ3RoICk7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0aWYgKCByZXNvbHZlVmFsdWVzWyBpIF0gJiYgalF1ZXJ5LmlzRnVuY3Rpb24oIHJlc29sdmVWYWx1ZXNbIGkgXS5wcm9taXNlICkgKSB7XG5cdFx0XHRcdFx0cmVzb2x2ZVZhbHVlc1sgaSBdLnByb21pc2UoKVxuXHRcdFx0XHRcdFx0LmRvbmUoIHVwZGF0ZUZ1bmMoIGksIHJlc29sdmVDb250ZXh0cywgcmVzb2x2ZVZhbHVlcyApIClcblx0XHRcdFx0XHRcdC5mYWlsKCBkZWZlcnJlZC5yZWplY3QgKVxuXHRcdFx0XHRcdFx0LnByb2dyZXNzKCB1cGRhdGVGdW5jKCBpLCBwcm9ncmVzc0NvbnRleHRzLCBwcm9ncmVzc1ZhbHVlcyApICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0LS1yZW1haW5pbmc7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBJZiB3ZSdyZSBub3Qgd2FpdGluZyBvbiBhbnl0aGluZywgcmVzb2x2ZSB0aGUgbWFzdGVyXG5cdFx0aWYgKCAhcmVtYWluaW5nICkge1xuXHRcdFx0ZGVmZXJyZWQucmVzb2x2ZVdpdGgoIHJlc29sdmVDb250ZXh0cywgcmVzb2x2ZVZhbHVlcyApO1xuXHRcdH1cblxuXHRcdHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG5cdH1cbn0pO1xuXG5cbi8vIFRoZSBkZWZlcnJlZCB1c2VkIG9uIERPTSByZWFkeVxudmFyIHJlYWR5TGlzdDtcblxualF1ZXJ5LmZuLnJlYWR5ID0gZnVuY3Rpb24oIGZuICkge1xuXHQvLyBBZGQgdGhlIGNhbGxiYWNrXG5cdGpRdWVyeS5yZWFkeS5wcm9taXNlKCkuZG9uZSggZm4gKTtcblxuXHRyZXR1cm4gdGhpcztcbn07XG5cbmpRdWVyeS5leHRlbmQoe1xuXHQvLyBJcyB0aGUgRE9NIHJlYWR5IHRvIGJlIHVzZWQ/IFNldCB0byB0cnVlIG9uY2UgaXQgb2NjdXJzLlxuXHRpc1JlYWR5OiBmYWxzZSxcblxuXHQvLyBBIGNvdW50ZXIgdG8gdHJhY2sgaG93IG1hbnkgaXRlbXMgdG8gd2FpdCBmb3IgYmVmb3JlXG5cdC8vIHRoZSByZWFkeSBldmVudCBmaXJlcy4gU2VlICM2NzgxXG5cdHJlYWR5V2FpdDogMSxcblxuXHQvLyBIb2xkIChvciByZWxlYXNlKSB0aGUgcmVhZHkgZXZlbnRcblx0aG9sZFJlYWR5OiBmdW5jdGlvbiggaG9sZCApIHtcblx0XHRpZiAoIGhvbGQgKSB7XG5cdFx0XHRqUXVlcnkucmVhZHlXYWl0Kys7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGpRdWVyeS5yZWFkeSggdHJ1ZSApO1xuXHRcdH1cblx0fSxcblxuXHQvLyBIYW5kbGUgd2hlbiB0aGUgRE9NIGlzIHJlYWR5XG5cdHJlYWR5OiBmdW5jdGlvbiggd2FpdCApIHtcblxuXHRcdC8vIEFib3J0IGlmIHRoZXJlIGFyZSBwZW5kaW5nIGhvbGRzIG9yIHdlJ3JlIGFscmVhZHkgcmVhZHlcblx0XHRpZiAoIHdhaXQgPT09IHRydWUgPyAtLWpRdWVyeS5yZWFkeVdhaXQgOiBqUXVlcnkuaXNSZWFkeSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBSZW1lbWJlciB0aGF0IHRoZSBET00gaXMgcmVhZHlcblx0XHRqUXVlcnkuaXNSZWFkeSA9IHRydWU7XG5cblx0XHQvLyBJZiBhIG5vcm1hbCBET00gUmVhZHkgZXZlbnQgZmlyZWQsIGRlY3JlbWVudCwgYW5kIHdhaXQgaWYgbmVlZCBiZVxuXHRcdGlmICggd2FpdCAhPT0gdHJ1ZSAmJiAtLWpRdWVyeS5yZWFkeVdhaXQgPiAwICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIElmIHRoZXJlIGFyZSBmdW5jdGlvbnMgYm91bmQsIHRvIGV4ZWN1dGVcblx0XHRyZWFkeUxpc3QucmVzb2x2ZVdpdGgoIGRvY3VtZW50LCBbIGpRdWVyeSBdICk7XG5cblx0XHQvLyBUcmlnZ2VyIGFueSBib3VuZCByZWFkeSBldmVudHNcblx0XHRpZiAoIGpRdWVyeS5mbi50cmlnZ2VySGFuZGxlciApIHtcblx0XHRcdGpRdWVyeSggZG9jdW1lbnQgKS50cmlnZ2VySGFuZGxlciggXCJyZWFkeVwiICk7XG5cdFx0XHRqUXVlcnkoIGRvY3VtZW50ICkub2ZmKCBcInJlYWR5XCIgKTtcblx0XHR9XG5cdH1cbn0pO1xuXG4vKipcbiAqIFRoZSByZWFkeSBldmVudCBoYW5kbGVyIGFuZCBzZWxmIGNsZWFudXAgbWV0aG9kXG4gKi9cbmZ1bmN0aW9uIGNvbXBsZXRlZCgpIHtcblx0ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lciggXCJET01Db250ZW50TG9hZGVkXCIsIGNvbXBsZXRlZCwgZmFsc2UgKTtcblx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQsIGZhbHNlICk7XG5cdGpRdWVyeS5yZWFkeSgpO1xufVxuXG5qUXVlcnkucmVhZHkucHJvbWlzZSA9IGZ1bmN0aW9uKCBvYmogKSB7XG5cdGlmICggIXJlYWR5TGlzdCApIHtcblxuXHRcdHJlYWR5TGlzdCA9IGpRdWVyeS5EZWZlcnJlZCgpO1xuXG5cdFx0Ly8gQ2F0Y2ggY2FzZXMgd2hlcmUgJChkb2N1bWVudCkucmVhZHkoKSBpcyBjYWxsZWQgYWZ0ZXIgdGhlIGJyb3dzZXIgZXZlbnQgaGFzIGFscmVhZHkgb2NjdXJyZWQuXG5cdFx0Ly8gV2Ugb25jZSB0cmllZCB0byB1c2UgcmVhZHlTdGF0ZSBcImludGVyYWN0aXZlXCIgaGVyZSwgYnV0IGl0IGNhdXNlZCBpc3N1ZXMgbGlrZSB0aGUgb25lXG5cdFx0Ly8gZGlzY292ZXJlZCBieSBDaHJpc1MgaGVyZTogaHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTIyODIjY29tbWVudDoxNVxuXHRcdGlmICggZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiICkge1xuXHRcdFx0Ly8gSGFuZGxlIGl0IGFzeW5jaHJvbm91c2x5IHRvIGFsbG93IHNjcmlwdHMgdGhlIG9wcG9ydHVuaXR5IHRvIGRlbGF5IHJlYWR5XG5cdFx0XHRzZXRUaW1lb3V0KCBqUXVlcnkucmVhZHkgKTtcblxuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIFVzZSB0aGUgaGFuZHkgZXZlbnQgY2FsbGJhY2tcblx0XHRcdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBjb21wbGV0ZWQsIGZhbHNlICk7XG5cblx0XHRcdC8vIEEgZmFsbGJhY2sgdG8gd2luZG93Lm9ubG9hZCwgdGhhdCB3aWxsIGFsd2F5cyB3b3JrXG5cdFx0XHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggXCJsb2FkXCIsIGNvbXBsZXRlZCwgZmFsc2UgKTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIHJlYWR5TGlzdC5wcm9taXNlKCBvYmogKTtcbn07XG5cbi8vIEtpY2sgb2ZmIHRoZSBET00gcmVhZHkgY2hlY2sgZXZlbiBpZiB0aGUgdXNlciBkb2VzIG5vdFxualF1ZXJ5LnJlYWR5LnByb21pc2UoKTtcblxuXG5cblxuLy8gTXVsdGlmdW5jdGlvbmFsIG1ldGhvZCB0byBnZXQgYW5kIHNldCB2YWx1ZXMgb2YgYSBjb2xsZWN0aW9uXG4vLyBUaGUgdmFsdWUvcyBjYW4gb3B0aW9uYWxseSBiZSBleGVjdXRlZCBpZiBpdCdzIGEgZnVuY3Rpb25cbnZhciBhY2Nlc3MgPSBqUXVlcnkuYWNjZXNzID0gZnVuY3Rpb24oIGVsZW1zLCBmbiwga2V5LCB2YWx1ZSwgY2hhaW5hYmxlLCBlbXB0eUdldCwgcmF3ICkge1xuXHR2YXIgaSA9IDAsXG5cdFx0bGVuID0gZWxlbXMubGVuZ3RoLFxuXHRcdGJ1bGsgPSBrZXkgPT0gbnVsbDtcblxuXHQvLyBTZXRzIG1hbnkgdmFsdWVzXG5cdGlmICggalF1ZXJ5LnR5cGUoIGtleSApID09PSBcIm9iamVjdFwiICkge1xuXHRcdGNoYWluYWJsZSA9IHRydWU7XG5cdFx0Zm9yICggaSBpbiBrZXkgKSB7XG5cdFx0XHRqUXVlcnkuYWNjZXNzKCBlbGVtcywgZm4sIGksIGtleVtpXSwgdHJ1ZSwgZW1wdHlHZXQsIHJhdyApO1xuXHRcdH1cblxuXHQvLyBTZXRzIG9uZSB2YWx1ZVxuXHR9IGVsc2UgaWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdGNoYWluYWJsZSA9IHRydWU7XG5cblx0XHRpZiAoICFqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJhdyA9IHRydWU7XG5cdFx0fVxuXG5cdFx0aWYgKCBidWxrICkge1xuXHRcdFx0Ly8gQnVsayBvcGVyYXRpb25zIHJ1biBhZ2FpbnN0IHRoZSBlbnRpcmUgc2V0XG5cdFx0XHRpZiAoIHJhdyApIHtcblx0XHRcdFx0Zm4uY2FsbCggZWxlbXMsIHZhbHVlICk7XG5cdFx0XHRcdGZuID0gbnVsbDtcblxuXHRcdFx0Ly8gLi4uZXhjZXB0IHdoZW4gZXhlY3V0aW5nIGZ1bmN0aW9uIHZhbHVlc1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0YnVsayA9IGZuO1xuXHRcdFx0XHRmbiA9IGZ1bmN0aW9uKCBlbGVtLCBrZXksIHZhbHVlICkge1xuXHRcdFx0XHRcdHJldHVybiBidWxrLmNhbGwoIGpRdWVyeSggZWxlbSApLCB2YWx1ZSApO1xuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggZm4gKSB7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0Zm4oIGVsZW1zW2ldLCBrZXksIHJhdyA/IHZhbHVlIDogdmFsdWUuY2FsbCggZWxlbXNbaV0sIGksIGZuKCBlbGVtc1tpXSwga2V5ICkgKSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBjaGFpbmFibGUgP1xuXHRcdGVsZW1zIDpcblxuXHRcdC8vIEdldHNcblx0XHRidWxrID9cblx0XHRcdGZuLmNhbGwoIGVsZW1zICkgOlxuXHRcdFx0bGVuID8gZm4oIGVsZW1zWzBdLCBrZXkgKSA6IGVtcHR5R2V0O1xufTtcblxuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciBhbiBvYmplY3QgY2FuIGhhdmUgZGF0YVxuICovXG5qUXVlcnkuYWNjZXB0RGF0YSA9IGZ1bmN0aW9uKCBvd25lciApIHtcblx0Ly8gQWNjZXB0cyBvbmx5OlxuXHQvLyAgLSBOb2RlXG5cdC8vICAgIC0gTm9kZS5FTEVNRU5UX05PREVcblx0Ly8gICAgLSBOb2RlLkRPQ1VNRU5UX05PREVcblx0Ly8gIC0gT2JqZWN0XG5cdC8vICAgIC0gQW55XG5cdC8qIGpzaGludCAtVzAxOCAqL1xuXHRyZXR1cm4gb3duZXIubm9kZVR5cGUgPT09IDEgfHwgb3duZXIubm9kZVR5cGUgPT09IDkgfHwgISggK293bmVyLm5vZGVUeXBlICk7XG59O1xuXG5cbmZ1bmN0aW9uIERhdGEoKSB7XG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQ8NCxcblx0Ly8gT2xkIFdlYktpdCBkb2VzIG5vdCBoYXZlIE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucy9mcmVlemUgbWV0aG9kLFxuXHQvLyByZXR1cm4gbmV3IGVtcHR5IG9iamVjdCBpbnN0ZWFkIHdpdGggbm8gW1tzZXRdXSBhY2Nlc3NvclxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoIHRoaXMuY2FjaGUgPSB7fSwgMCwge1xuXHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4ge307XG5cdFx0fVxuXHR9KTtcblxuXHR0aGlzLmV4cGFuZG8gPSBqUXVlcnkuZXhwYW5kbyArIERhdGEudWlkKys7XG59XG5cbkRhdGEudWlkID0gMTtcbkRhdGEuYWNjZXB0cyA9IGpRdWVyeS5hY2NlcHREYXRhO1xuXG5EYXRhLnByb3RvdHlwZSA9IHtcblx0a2V5OiBmdW5jdGlvbiggb3duZXIgKSB7XG5cdFx0Ly8gV2UgY2FuIGFjY2VwdCBkYXRhIGZvciBub24tZWxlbWVudCBub2RlcyBpbiBtb2Rlcm4gYnJvd3NlcnMsXG5cdFx0Ly8gYnV0IHdlIHNob3VsZCBub3QsIHNlZSAjODMzNS5cblx0XHQvLyBBbHdheXMgcmV0dXJuIHRoZSBrZXkgZm9yIGEgZnJvemVuIG9iamVjdC5cblx0XHRpZiAoICFEYXRhLmFjY2VwdHMoIG93bmVyICkgKSB7XG5cdFx0XHRyZXR1cm4gMDtcblx0XHR9XG5cblx0XHR2YXIgZGVzY3JpcHRvciA9IHt9LFxuXHRcdFx0Ly8gQ2hlY2sgaWYgdGhlIG93bmVyIG9iamVjdCBhbHJlYWR5IGhhcyBhIGNhY2hlIGtleVxuXHRcdFx0dW5sb2NrID0gb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXG5cdFx0Ly8gSWYgbm90LCBjcmVhdGUgb25lXG5cdFx0aWYgKCAhdW5sb2NrICkge1xuXHRcdFx0dW5sb2NrID0gRGF0YS51aWQrKztcblxuXHRcdFx0Ly8gU2VjdXJlIGl0IGluIGEgbm9uLWVudW1lcmFibGUsIG5vbi13cml0YWJsZSBwcm9wZXJ0eVxuXHRcdFx0dHJ5IHtcblx0XHRcdFx0ZGVzY3JpcHRvclsgdGhpcy5leHBhbmRvIF0gPSB7IHZhbHVlOiB1bmxvY2sgfTtcblx0XHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoIG93bmVyLCBkZXNjcmlwdG9yICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQ8NFxuXHRcdFx0Ly8gRmFsbGJhY2sgdG8gYSBsZXNzIHNlY3VyZSBkZWZpbml0aW9uXG5cdFx0XHR9IGNhdGNoICggZSApIHtcblx0XHRcdFx0ZGVzY3JpcHRvclsgdGhpcy5leHBhbmRvIF0gPSB1bmxvY2s7XG5cdFx0XHRcdGpRdWVyeS5leHRlbmQoIG93bmVyLCBkZXNjcmlwdG9yICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gRW5zdXJlIHRoZSBjYWNoZSBvYmplY3Rcblx0XHRpZiAoICF0aGlzLmNhY2hlWyB1bmxvY2sgXSApIHtcblx0XHRcdHRoaXMuY2FjaGVbIHVubG9jayBdID0ge307XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHVubG9jaztcblx0fSxcblx0c2V0OiBmdW5jdGlvbiggb3duZXIsIGRhdGEsIHZhbHVlICkge1xuXHRcdHZhciBwcm9wLFxuXHRcdFx0Ly8gVGhlcmUgbWF5IGJlIGFuIHVubG9jayBhc3NpZ25lZCB0byB0aGlzIG5vZGUsXG5cdFx0XHQvLyBpZiB0aGVyZSBpcyBubyBlbnRyeSBmb3IgdGhpcyBcIm93bmVyXCIsIGNyZWF0ZSBvbmUgaW5saW5lXG5cdFx0XHQvLyBhbmQgc2V0IHRoZSB1bmxvY2sgYXMgdGhvdWdoIGFuIG93bmVyIGVudHJ5IGhhZCBhbHdheXMgZXhpc3RlZFxuXHRcdFx0dW5sb2NrID0gdGhpcy5rZXkoIG93bmVyICksXG5cdFx0XHRjYWNoZSA9IHRoaXMuY2FjaGVbIHVubG9jayBdO1xuXG5cdFx0Ly8gSGFuZGxlOiBbIG93bmVyLCBrZXksIHZhbHVlIF0gYXJnc1xuXHRcdGlmICggdHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRjYWNoZVsgZGF0YSBdID0gdmFsdWU7XG5cblx0XHQvLyBIYW5kbGU6IFsgb3duZXIsIHsgcHJvcGVydGllcyB9IF0gYXJnc1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBGcmVzaCBhc3NpZ25tZW50cyBieSBvYmplY3QgYXJlIHNoYWxsb3cgY29waWVkXG5cdFx0XHRpZiAoIGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBjYWNoZSApICkge1xuXHRcdFx0XHRqUXVlcnkuZXh0ZW5kKCB0aGlzLmNhY2hlWyB1bmxvY2sgXSwgZGF0YSApO1xuXHRcdFx0Ly8gT3RoZXJ3aXNlLCBjb3B5IHRoZSBwcm9wZXJ0aWVzIG9uZS1ieS1vbmUgdG8gdGhlIGNhY2hlIG9iamVjdFxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Zm9yICggcHJvcCBpbiBkYXRhICkge1xuXHRcdFx0XHRcdGNhY2hlWyBwcm9wIF0gPSBkYXRhWyBwcm9wIF07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIGNhY2hlO1xuXHR9LFxuXHRnZXQ6IGZ1bmN0aW9uKCBvd25lciwga2V5ICkge1xuXHRcdC8vIEVpdGhlciBhIHZhbGlkIGNhY2hlIGlzIGZvdW5kLCBvciB3aWxsIGJlIGNyZWF0ZWQuXG5cdFx0Ly8gTmV3IGNhY2hlcyB3aWxsIGJlIGNyZWF0ZWQgYW5kIHRoZSB1bmxvY2sgcmV0dXJuZWQsXG5cdFx0Ly8gYWxsb3dpbmcgZGlyZWN0IGFjY2VzcyB0byB0aGUgbmV3bHkgY3JlYXRlZFxuXHRcdC8vIGVtcHR5IGRhdGEgb2JqZWN0LiBBIHZhbGlkIG93bmVyIG9iamVjdCBtdXN0IGJlIHByb3ZpZGVkLlxuXHRcdHZhciBjYWNoZSA9IHRoaXMuY2FjaGVbIHRoaXMua2V5KCBvd25lciApIF07XG5cblx0XHRyZXR1cm4ga2V5ID09PSB1bmRlZmluZWQgP1xuXHRcdFx0Y2FjaGUgOiBjYWNoZVsga2V5IF07XG5cdH0sXG5cdGFjY2VzczogZnVuY3Rpb24oIG93bmVyLCBrZXksIHZhbHVlICkge1xuXHRcdHZhciBzdG9yZWQ7XG5cdFx0Ly8gSW4gY2FzZXMgd2hlcmUgZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBObyBrZXkgd2FzIHNwZWNpZmllZFxuXHRcdC8vICAgMi4gQSBzdHJpbmcga2V5IHdhcyBzcGVjaWZpZWQsIGJ1dCBubyB2YWx1ZSBwcm92aWRlZFxuXHRcdC8vXG5cdFx0Ly8gVGFrZSB0aGUgXCJyZWFkXCIgcGF0aCBhbmQgYWxsb3cgdGhlIGdldCBtZXRob2QgdG8gZGV0ZXJtaW5lXG5cdFx0Ly8gd2hpY2ggdmFsdWUgdG8gcmV0dXJuLCByZXNwZWN0aXZlbHkgZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBUaGUgZW50aXJlIGNhY2hlIG9iamVjdFxuXHRcdC8vICAgMi4gVGhlIGRhdGEgc3RvcmVkIGF0IHRoZSBrZXlcblx0XHQvL1xuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgfHxcblx0XHRcdFx0KChrZXkgJiYgdHlwZW9mIGtleSA9PT0gXCJzdHJpbmdcIikgJiYgdmFsdWUgPT09IHVuZGVmaW5lZCkgKSB7XG5cblx0XHRcdHN0b3JlZCA9IHRoaXMuZ2V0KCBvd25lciwga2V5ICk7XG5cblx0XHRcdHJldHVybiBzdG9yZWQgIT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdHN0b3JlZCA6IHRoaXMuZ2V0KCBvd25lciwgalF1ZXJ5LmNhbWVsQ2FzZShrZXkpICk7XG5cdFx0fVxuXG5cdFx0Ly8gWypdV2hlbiB0aGUga2V5IGlzIG5vdCBhIHN0cmluZywgb3IgYm90aCBhIGtleSBhbmQgdmFsdWVcblx0XHQvLyBhcmUgc3BlY2lmaWVkLCBzZXQgb3IgZXh0ZW5kIChleGlzdGluZyBvYmplY3RzKSB3aXRoIGVpdGhlcjpcblx0XHQvL1xuXHRcdC8vICAgMS4gQW4gb2JqZWN0IG9mIHByb3BlcnRpZXNcblx0XHQvLyAgIDIuIEEga2V5IGFuZCB2YWx1ZVxuXHRcdC8vXG5cdFx0dGhpcy5zZXQoIG93bmVyLCBrZXksIHZhbHVlICk7XG5cblx0XHQvLyBTaW5jZSB0aGUgXCJzZXRcIiBwYXRoIGNhbiBoYXZlIHR3byBwb3NzaWJsZSBlbnRyeSBwb2ludHNcblx0XHQvLyByZXR1cm4gdGhlIGV4cGVjdGVkIGRhdGEgYmFzZWQgb24gd2hpY2ggcGF0aCB3YXMgdGFrZW5bKl1cblx0XHRyZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZCA/IHZhbHVlIDoga2V5O1xuXHR9LFxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBvd25lciwga2V5ICkge1xuXHRcdHZhciBpLCBuYW1lLCBjYW1lbCxcblx0XHRcdHVubG9jayA9IHRoaXMua2V5KCBvd25lciApLFxuXHRcdFx0Y2FjaGUgPSB0aGlzLmNhY2hlWyB1bmxvY2sgXTtcblxuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHR0aGlzLmNhY2hlWyB1bmxvY2sgXSA9IHt9O1xuXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIFN1cHBvcnQgYXJyYXkgb3Igc3BhY2Ugc2VwYXJhdGVkIHN0cmluZyBvZiBrZXlzXG5cdFx0XHRpZiAoIGpRdWVyeS5pc0FycmF5KCBrZXkgKSApIHtcblx0XHRcdFx0Ly8gSWYgXCJuYW1lXCIgaXMgYW4gYXJyYXkgb2Yga2V5cy4uLlxuXHRcdFx0XHQvLyBXaGVuIGRhdGEgaXMgaW5pdGlhbGx5IGNyZWF0ZWQsIHZpYSAoXCJrZXlcIiwgXCJ2YWxcIikgc2lnbmF0dXJlLFxuXHRcdFx0XHQvLyBrZXlzIHdpbGwgYmUgY29udmVydGVkIHRvIGNhbWVsQ2FzZS5cblx0XHRcdFx0Ly8gU2luY2UgdGhlcmUgaXMgbm8gd2F5IHRvIHRlbGwgX2hvd18gYSBrZXkgd2FzIGFkZGVkLCByZW1vdmVcblx0XHRcdFx0Ly8gYm90aCBwbGFpbiBrZXkgYW5kIGNhbWVsQ2FzZSBrZXkuICMxMjc4NlxuXHRcdFx0XHQvLyBUaGlzIHdpbGwgb25seSBwZW5hbGl6ZSB0aGUgYXJyYXkgYXJndW1lbnQgcGF0aC5cblx0XHRcdFx0bmFtZSA9IGtleS5jb25jYXQoIGtleS5tYXAoIGpRdWVyeS5jYW1lbENhc2UgKSApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Y2FtZWwgPSBqUXVlcnkuY2FtZWxDYXNlKCBrZXkgKTtcblx0XHRcdFx0Ly8gVHJ5IHRoZSBzdHJpbmcgYXMgYSBrZXkgYmVmb3JlIGFueSBtYW5pcHVsYXRpb25cblx0XHRcdFx0aWYgKCBrZXkgaW4gY2FjaGUgKSB7XG5cdFx0XHRcdFx0bmFtZSA9IFsga2V5LCBjYW1lbCBdO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdC8vIElmIGEga2V5IHdpdGggdGhlIHNwYWNlcyBleGlzdHMsIHVzZSBpdC5cblx0XHRcdFx0XHQvLyBPdGhlcndpc2UsIGNyZWF0ZSBhbiBhcnJheSBieSBtYXRjaGluZyBub24td2hpdGVzcGFjZVxuXHRcdFx0XHRcdG5hbWUgPSBjYW1lbDtcblx0XHRcdFx0XHRuYW1lID0gbmFtZSBpbiBjYWNoZSA/XG5cdFx0XHRcdFx0XHRbIG5hbWUgXSA6ICggbmFtZS5tYXRjaCggcm5vdHdoaXRlICkgfHwgW10gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRpID0gbmFtZS5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0ZGVsZXRlIGNhY2hlWyBuYW1lWyBpIF0gXTtcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cdGhhc0RhdGE6IGZ1bmN0aW9uKCBvd25lciApIHtcblx0XHRyZXR1cm4gIWpRdWVyeS5pc0VtcHR5T2JqZWN0KFxuXHRcdFx0dGhpcy5jYWNoZVsgb3duZXJbIHRoaXMuZXhwYW5kbyBdIF0gfHwge31cblx0XHQpO1xuXHR9LFxuXHRkaXNjYXJkOiBmdW5jdGlvbiggb3duZXIgKSB7XG5cdFx0aWYgKCBvd25lclsgdGhpcy5leHBhbmRvIF0gKSB7XG5cdFx0XHRkZWxldGUgdGhpcy5jYWNoZVsgb3duZXJbIHRoaXMuZXhwYW5kbyBdIF07XG5cdFx0fVxuXHR9XG59O1xudmFyIGRhdGFfcHJpdiA9IG5ldyBEYXRhKCk7XG5cbnZhciBkYXRhX3VzZXIgPSBuZXcgRGF0YSgpO1xuXG5cblxuLy9cdEltcGxlbWVudGF0aW9uIFN1bW1hcnlcbi8vXG4vL1x0MS4gRW5mb3JjZSBBUEkgc3VyZmFjZSBhbmQgc2VtYW50aWMgY29tcGF0aWJpbGl0eSB3aXRoIDEuOS54IGJyYW5jaFxuLy9cdDIuIEltcHJvdmUgdGhlIG1vZHVsZSdzIG1haW50YWluYWJpbGl0eSBieSByZWR1Y2luZyB0aGUgc3RvcmFnZVxuLy9cdFx0cGF0aHMgdG8gYSBzaW5nbGUgbWVjaGFuaXNtLlxuLy9cdDMuIFVzZSB0aGUgc2FtZSBzaW5nbGUgbWVjaGFuaXNtIHRvIHN1cHBvcnQgXCJwcml2YXRlXCIgYW5kIFwidXNlclwiIGRhdGEuXG4vL1x0NC4gX05ldmVyXyBleHBvc2UgXCJwcml2YXRlXCIgZGF0YSB0byB1c2VyIGNvZGUgKFRPRE86IERyb3AgX2RhdGEsIF9yZW1vdmVEYXRhKVxuLy9cdDUuIEF2b2lkIGV4cG9zaW5nIGltcGxlbWVudGF0aW9uIGRldGFpbHMgb24gdXNlciBvYmplY3RzIChlZy4gZXhwYW5kbyBwcm9wZXJ0aWVzKVxuLy9cdDYuIFByb3ZpZGUgYSBjbGVhciBwYXRoIGZvciBpbXBsZW1lbnRhdGlvbiB1cGdyYWRlIHRvIFdlYWtNYXAgaW4gMjAxNFxuXG52YXIgcmJyYWNlID0gL14oPzpcXHtbXFx3XFxXXSpcXH18XFxbW1xcd1xcV10qXFxdKSQvLFxuXHRybXVsdGlEYXNoID0gLyhbQS1aXSkvZztcblxuZnVuY3Rpb24gZGF0YUF0dHIoIGVsZW0sIGtleSwgZGF0YSApIHtcblx0dmFyIG5hbWU7XG5cblx0Ly8gSWYgbm90aGluZyB3YXMgZm91bmQgaW50ZXJuYWxseSwgdHJ5IHRvIGZldGNoIGFueVxuXHQvLyBkYXRhIGZyb20gdGhlIEhUTUw1IGRhdGEtKiBhdHRyaWJ1dGVcblx0aWYgKCBkYXRhID09PSB1bmRlZmluZWQgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRuYW1lID0gXCJkYXRhLVwiICsga2V5LnJlcGxhY2UoIHJtdWx0aURhc2gsIFwiLSQxXCIgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdGRhdGEgPSBlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSApO1xuXG5cdFx0aWYgKCB0eXBlb2YgZGF0YSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHRyeSB7XG5cdFx0XHRcdGRhdGEgPSBkYXRhID09PSBcInRydWVcIiA/IHRydWUgOlxuXHRcdFx0XHRcdGRhdGEgPT09IFwiZmFsc2VcIiA/IGZhbHNlIDpcblx0XHRcdFx0XHRkYXRhID09PSBcIm51bGxcIiA/IG51bGwgOlxuXHRcdFx0XHRcdC8vIE9ubHkgY29udmVydCB0byBhIG51bWJlciBpZiBpdCBkb2Vzbid0IGNoYW5nZSB0aGUgc3RyaW5nXG5cdFx0XHRcdFx0K2RhdGEgKyBcIlwiID09PSBkYXRhID8gK2RhdGEgOlxuXHRcdFx0XHRcdHJicmFjZS50ZXN0KCBkYXRhICkgPyBqUXVlcnkucGFyc2VKU09OKCBkYXRhICkgOlxuXHRcdFx0XHRcdGRhdGE7XG5cdFx0XHR9IGNhdGNoKCBlICkge31cblxuXHRcdFx0Ly8gTWFrZSBzdXJlIHdlIHNldCB0aGUgZGF0YSBzbyBpdCBpc24ndCBjaGFuZ2VkIGxhdGVyXG5cdFx0XHRkYXRhX3VzZXIuc2V0KCBlbGVtLCBrZXksIGRhdGEgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdH1cblx0cmV0dXJuIGRhdGE7XG59XG5cbmpRdWVyeS5leHRlbmQoe1xuXHRoYXNEYXRhOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGF0YV91c2VyLmhhc0RhdGEoIGVsZW0gKSB8fCBkYXRhX3ByaXYuaGFzRGF0YSggZWxlbSApO1xuXHR9LFxuXG5cdGRhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBkYXRhICkge1xuXHRcdHJldHVybiBkYXRhX3VzZXIuYWNjZXNzKCBlbGVtLCBuYW1lLCBkYXRhICk7XG5cdH0sXG5cblx0cmVtb3ZlRGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XG5cdFx0ZGF0YV91c2VyLnJlbW92ZSggZWxlbSwgbmFtZSApO1xuXHR9LFxuXG5cdC8vIFRPRE86IE5vdyB0aGF0IGFsbCBjYWxscyB0byBfZGF0YSBhbmQgX3JlbW92ZURhdGEgaGF2ZSBiZWVuIHJlcGxhY2VkXG5cdC8vIHdpdGggZGlyZWN0IGNhbGxzIHRvIGRhdGFfcHJpdiBtZXRob2RzLCB0aGVzZSBjYW4gYmUgZGVwcmVjYXRlZC5cblx0X2RhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBkYXRhICkge1xuXHRcdHJldHVybiBkYXRhX3ByaXYuYWNjZXNzKCBlbGVtLCBuYW1lLCBkYXRhICk7XG5cdH0sXG5cblx0X3JlbW92ZURhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXHRcdGRhdGFfcHJpdi5yZW1vdmUoIGVsZW0sIG5hbWUgKTtcblx0fVxufSk7XG5cbmpRdWVyeS5mbi5leHRlbmQoe1xuXHRkYXRhOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHtcblx0XHR2YXIgaSwgbmFtZSwgZGF0YSxcblx0XHRcdGVsZW0gPSB0aGlzWyAwIF0sXG5cdFx0XHRhdHRycyA9IGVsZW0gJiYgZWxlbS5hdHRyaWJ1dGVzO1xuXG5cdFx0Ly8gR2V0cyBhbGwgdmFsdWVzXG5cdFx0aWYgKCBrZXkgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGlmICggdGhpcy5sZW5ndGggKSB7XG5cdFx0XHRcdGRhdGEgPSBkYXRhX3VzZXIuZ2V0KCBlbGVtICk7XG5cblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICYmICFkYXRhX3ByaXYuZ2V0KCBlbGVtLCBcImhhc0RhdGFBdHRyc1wiICkgKSB7XG5cdFx0XHRcdFx0aSA9IGF0dHJzLmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUxMStcblx0XHRcdFx0XHRcdC8vIFRoZSBhdHRycyBlbGVtZW50cyBjYW4gYmUgbnVsbCAoIzE0ODk0KVxuXHRcdFx0XHRcdFx0aWYgKCBhdHRyc1sgaSBdICkge1xuXHRcdFx0XHRcdFx0XHRuYW1lID0gYXR0cnNbIGkgXS5uYW1lO1xuXHRcdFx0XHRcdFx0XHRpZiAoIG5hbWUuaW5kZXhPZiggXCJkYXRhLVwiICkgPT09IDAgKSB7XG5cdFx0XHRcdFx0XHRcdFx0bmFtZSA9IGpRdWVyeS5jYW1lbENhc2UoIG5hbWUuc2xpY2UoNSkgKTtcblx0XHRcdFx0XHRcdFx0XHRkYXRhQXR0ciggZWxlbSwgbmFtZSwgZGF0YVsgbmFtZSBdICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZGF0YV9wcml2LnNldCggZWxlbSwgXCJoYXNEYXRhQXR0cnNcIiwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBkYXRhO1xuXHRcdH1cblxuXHRcdC8vIFNldHMgbXVsdGlwbGUgdmFsdWVzXG5cdFx0aWYgKCB0eXBlb2Yga2V5ID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcblx0XHRcdFx0ZGF0YV91c2VyLnNldCggdGhpcywga2V5ICk7XG5cdFx0XHR9KTtcblx0XHR9XG5cblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgZGF0YSxcblx0XHRcdFx0Y2FtZWxLZXkgPSBqUXVlcnkuY2FtZWxDYXNlKCBrZXkgKTtcblxuXHRcdFx0Ly8gVGhlIGNhbGxpbmcgalF1ZXJ5IG9iamVjdCAoZWxlbWVudCBtYXRjaGVzKSBpcyBub3QgZW1wdHlcblx0XHRcdC8vIChhbmQgdGhlcmVmb3JlIGhhcyBhbiBlbGVtZW50IGFwcGVhcnMgYXQgdGhpc1sgMCBdKSBhbmQgdGhlXG5cdFx0XHQvLyBgdmFsdWVgIHBhcmFtZXRlciB3YXMgbm90IHVuZGVmaW5lZC4gQW4gZW1wdHkgalF1ZXJ5IG9iamVjdFxuXHRcdFx0Ly8gd2lsbCByZXN1bHQgaW4gYHVuZGVmaW5lZGAgZm9yIGVsZW0gPSB0aGlzWyAwIF0gd2hpY2ggd2lsbFxuXHRcdFx0Ly8gdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFuIGF0dGVtcHQgdG8gcmVhZCBhIGRhdGEgY2FjaGUgaXMgbWFkZS5cblx0XHRcdGlmICggZWxlbSAmJiB2YWx1ZSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHQvLyBBdHRlbXB0IHRvIGdldCBkYXRhIGZyb20gdGhlIGNhY2hlXG5cdFx0XHRcdC8vIHdpdGggdGhlIGtleSBhcy1pc1xuXHRcdFx0XHRkYXRhID0gZGF0YV91c2VyLmdldCggZWxlbSwga2V5ICk7XG5cdFx0XHRcdGlmICggZGF0YSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHJldHVybiBkYXRhO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQXR0ZW1wdCB0byBnZXQgZGF0YSBmcm9tIHRoZSBjYWNoZVxuXHRcdFx0XHQvLyB3aXRoIHRoZSBrZXkgY2FtZWxpemVkXG5cdFx0XHRcdGRhdGEgPSBkYXRhX3VzZXIuZ2V0KCBlbGVtLCBjYW1lbEtleSApO1xuXHRcdFx0XHRpZiAoIGRhdGEgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gZGF0YTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEF0dGVtcHQgdG8gXCJkaXNjb3ZlclwiIHRoZSBkYXRhIGluXG5cdFx0XHRcdC8vIEhUTUw1IGN1c3RvbSBkYXRhLSogYXR0cnNcblx0XHRcdFx0ZGF0YSA9IGRhdGFBdHRyKCBlbGVtLCBjYW1lbEtleSwgdW5kZWZpbmVkICk7XG5cdFx0XHRcdGlmICggZGF0YSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHJldHVybiBkYXRhO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gV2UgdHJpZWQgcmVhbGx5IGhhcmQsIGJ1dCB0aGUgZGF0YSBkb2Vzbid0IGV4aXN0LlxuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNldCB0aGUgZGF0YS4uLlxuXHRcdFx0dGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuXHRcdFx0XHQvLyBGaXJzdCwgYXR0ZW1wdCB0byBzdG9yZSBhIGNvcHkgb3IgcmVmZXJlbmNlIG9mIGFueVxuXHRcdFx0XHQvLyBkYXRhIHRoYXQgbWlnaHQndmUgYmVlbiBzdG9yZSB3aXRoIGEgY2FtZWxDYXNlZCBrZXkuXG5cdFx0XHRcdHZhciBkYXRhID0gZGF0YV91c2VyLmdldCggdGhpcywgY2FtZWxLZXkgKTtcblxuXHRcdFx0XHQvLyBGb3IgSFRNTDUgZGF0YS0qIGF0dHJpYnV0ZSBpbnRlcm9wLCB3ZSBoYXZlIHRvXG5cdFx0XHRcdC8vIHN0b3JlIHByb3BlcnR5IG5hbWVzIHdpdGggZGFzaGVzIGluIGEgY2FtZWxDYXNlIGZvcm0uXG5cdFx0XHRcdC8vIFRoaXMgbWlnaHQgbm90IGFwcGx5IHRvIGFsbCBwcm9wZXJ0aWVzLi4uKlxuXHRcdFx0XHRkYXRhX3VzZXIuc2V0KCB0aGlzLCBjYW1lbEtleSwgdmFsdWUgKTtcblxuXHRcdFx0XHQvLyAqLi4uIEluIHRoZSBjYXNlIG9mIHByb3BlcnRpZXMgdGhhdCBtaWdodCBfYWN0dWFsbHlfXG5cdFx0XHRcdC8vIGhhdmUgZGFzaGVzLCB3ZSBuZWVkIHRvIGFsc28gc3RvcmUgYSBjb3B5IG9mIHRoYXRcblx0XHRcdFx0Ly8gdW5jaGFuZ2VkIHByb3BlcnR5LlxuXHRcdFx0XHRpZiAoIGtleS5pbmRleE9mKFwiLVwiKSAhPT0gLTEgJiYgZGF0YSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdGRhdGFfdXNlci5zZXQoIHRoaXMsIGtleSwgdmFsdWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxLCBudWxsLCB0cnVlICk7XG5cdH0sXG5cblx0cmVtb3ZlRGF0YTogZnVuY3Rpb24oIGtleSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuXHRcdFx0ZGF0YV91c2VyLnJlbW92ZSggdGhpcywga2V5ICk7XG5cdFx0fSk7XG5cdH1cbn0pO1xuXG5cbmpRdWVyeS5leHRlbmQoe1xuXHRxdWV1ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGUsIGRhdGEgKSB7XG5cdFx0dmFyIHF1ZXVlO1xuXG5cdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0dHlwZSA9ICggdHlwZSB8fCBcImZ4XCIgKSArIFwicXVldWVcIjtcblx0XHRcdHF1ZXVlID0gZGF0YV9wcml2LmdldCggZWxlbSwgdHlwZSApO1xuXG5cdFx0XHQvLyBTcGVlZCB1cCBkZXF1ZXVlIGJ5IGdldHRpbmcgb3V0IHF1aWNrbHkgaWYgdGhpcyBpcyBqdXN0IGEgbG9va3VwXG5cdFx0XHRpZiAoIGRhdGEgKSB7XG5cdFx0XHRcdGlmICggIXF1ZXVlIHx8IGpRdWVyeS5pc0FycmF5KCBkYXRhICkgKSB7XG5cdFx0XHRcdFx0cXVldWUgPSBkYXRhX3ByaXYuYWNjZXNzKCBlbGVtLCB0eXBlLCBqUXVlcnkubWFrZUFycmF5KGRhdGEpICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cXVldWUucHVzaCggZGF0YSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcXVldWUgfHwgW107XG5cdFx0fVxuXHR9LFxuXG5cdGRlcXVldWU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkge1xuXHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRcdHZhciBxdWV1ZSA9IGpRdWVyeS5xdWV1ZSggZWxlbSwgdHlwZSApLFxuXHRcdFx0c3RhcnRMZW5ndGggPSBxdWV1ZS5sZW5ndGgsXG5cdFx0XHRmbiA9IHF1ZXVlLnNoaWZ0KCksXG5cdFx0XHRob29rcyA9IGpRdWVyeS5fcXVldWVIb29rcyggZWxlbSwgdHlwZSApLFxuXHRcdFx0bmV4dCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRqUXVlcnkuZGVxdWV1ZSggZWxlbSwgdHlwZSApO1xuXHRcdFx0fTtcblxuXHRcdC8vIElmIHRoZSBmeCBxdWV1ZSBpcyBkZXF1ZXVlZCwgYWx3YXlzIHJlbW92ZSB0aGUgcHJvZ3Jlc3Mgc2VudGluZWxcblx0XHRpZiAoIGZuID09PSBcImlucHJvZ3Jlc3NcIiApIHtcblx0XHRcdGZuID0gcXVldWUuc2hpZnQoKTtcblx0XHRcdHN0YXJ0TGVuZ3RoLS07XG5cdFx0fVxuXG5cdFx0aWYgKCBmbiApIHtcblxuXHRcdFx0Ly8gQWRkIGEgcHJvZ3Jlc3Mgc2VudGluZWwgdG8gcHJldmVudCB0aGUgZnggcXVldWUgZnJvbSBiZWluZ1xuXHRcdFx0Ly8gYXV0b21hdGljYWxseSBkZXF1ZXVlZFxuXHRcdFx0aWYgKCB0eXBlID09PSBcImZ4XCIgKSB7XG5cdFx0XHRcdHF1ZXVlLnVuc2hpZnQoIFwiaW5wcm9ncmVzc1wiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENsZWFyIHVwIHRoZSBsYXN0IHF1ZXVlIHN0b3AgZnVuY3Rpb25cblx0XHRcdGRlbGV0ZSBob29rcy5zdG9wO1xuXHRcdFx0Zm4uY2FsbCggZWxlbSwgbmV4dCwgaG9va3MgKTtcblx0XHR9XG5cblx0XHRpZiAoICFzdGFydExlbmd0aCAmJiBob29rcyApIHtcblx0XHRcdGhvb2tzLmVtcHR5LmZpcmUoKTtcblx0XHR9XG5cdH0sXG5cblx0Ly8gTm90IHB1YmxpYyAtIGdlbmVyYXRlIGEgcXVldWVIb29rcyBvYmplY3QsIG9yIHJldHVybiB0aGUgY3VycmVudCBvbmVcblx0X3F1ZXVlSG9va3M6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkge1xuXHRcdHZhciBrZXkgPSB0eXBlICsgXCJxdWV1ZUhvb2tzXCI7XG5cdFx0cmV0dXJuIGRhdGFfcHJpdi5nZXQoIGVsZW0sIGtleSApIHx8IGRhdGFfcHJpdi5hY2Nlc3MoIGVsZW0sIGtleSwge1xuXHRcdFx0ZW1wdHk6IGpRdWVyeS5DYWxsYmFja3MoXCJvbmNlIG1lbW9yeVwiKS5hZGQoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGRhdGFfcHJpdi5yZW1vdmUoIGVsZW0sIFsgdHlwZSArIFwicXVldWVcIiwga2V5IF0gKTtcblx0XHRcdH0pXG5cdFx0fSk7XG5cdH1cbn0pO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKHtcblx0cXVldWU6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBzZXR0ZXIgPSAyO1xuXG5cdFx0aWYgKCB0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGRhdGEgPSB0eXBlO1xuXHRcdFx0dHlwZSA9IFwiZnhcIjtcblx0XHRcdHNldHRlci0tO1xuXHRcdH1cblxuXHRcdGlmICggYXJndW1lbnRzLmxlbmd0aCA8IHNldHRlciApIHtcblx0XHRcdHJldHVybiBqUXVlcnkucXVldWUoIHRoaXNbMF0sIHR5cGUgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZGF0YSA9PT0gdW5kZWZpbmVkID9cblx0XHRcdHRoaXMgOlxuXHRcdFx0dGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgcXVldWUgPSBqUXVlcnkucXVldWUoIHRoaXMsIHR5cGUsIGRhdGEgKTtcblxuXHRcdFx0XHQvLyBFbnN1cmUgYSBob29rcyBmb3IgdGhpcyBxdWV1ZVxuXHRcdFx0XHRqUXVlcnkuX3F1ZXVlSG9va3MoIHRoaXMsIHR5cGUgKTtcblxuXHRcdFx0XHRpZiAoIHR5cGUgPT09IFwiZnhcIiAmJiBxdWV1ZVswXSAhPT0gXCJpbnByb2dyZXNzXCIgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdH0sXG5cdGRlcXVldWU6IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApO1xuXHRcdH0pO1xuXHR9LFxuXHRjbGVhclF1ZXVlOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRyZXR1cm4gdGhpcy5xdWV1ZSggdHlwZSB8fCBcImZ4XCIsIFtdICk7XG5cdH0sXG5cdC8vIEdldCBhIHByb21pc2UgcmVzb2x2ZWQgd2hlbiBxdWV1ZXMgb2YgYSBjZXJ0YWluIHR5cGVcblx0Ly8gYXJlIGVtcHRpZWQgKGZ4IGlzIHRoZSB0eXBlIGJ5IGRlZmF1bHQpXG5cdHByb21pc2U6IGZ1bmN0aW9uKCB0eXBlLCBvYmogKSB7XG5cdFx0dmFyIHRtcCxcblx0XHRcdGNvdW50ID0gMSxcblx0XHRcdGRlZmVyID0galF1ZXJ5LkRlZmVycmVkKCksXG5cdFx0XHRlbGVtZW50cyA9IHRoaXMsXG5cdFx0XHRpID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRyZXNvbHZlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggISggLS1jb3VudCApICkge1xuXHRcdFx0XHRcdGRlZmVyLnJlc29sdmVXaXRoKCBlbGVtZW50cywgWyBlbGVtZW50cyBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0b2JqID0gdHlwZTtcblx0XHRcdHR5cGUgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0dG1wID0gZGF0YV9wcml2LmdldCggZWxlbWVudHNbIGkgXSwgdHlwZSArIFwicXVldWVIb29rc1wiICk7XG5cdFx0XHRpZiAoIHRtcCAmJiB0bXAuZW1wdHkgKSB7XG5cdFx0XHRcdGNvdW50Kys7XG5cdFx0XHRcdHRtcC5lbXB0eS5hZGQoIHJlc29sdmUgKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmVzb2x2ZSgpO1xuXHRcdHJldHVybiBkZWZlci5wcm9taXNlKCBvYmogKTtcblx0fVxufSk7XG52YXIgcG51bSA9ICgvWystXT8oPzpcXGQqXFwufClcXGQrKD86W2VFXVsrLV0/XFxkK3wpLykuc291cmNlO1xuXG52YXIgY3NzRXhwYW5kID0gWyBcIlRvcFwiLCBcIlJpZ2h0XCIsIFwiQm90dG9tXCIsIFwiTGVmdFwiIF07XG5cbnZhciBpc0hpZGRlbiA9IGZ1bmN0aW9uKCBlbGVtLCBlbCApIHtcblx0XHQvLyBpc0hpZGRlbiBtaWdodCBiZSBjYWxsZWQgZnJvbSBqUXVlcnkjZmlsdGVyIGZ1bmN0aW9uO1xuXHRcdC8vIGluIHRoYXQgY2FzZSwgZWxlbWVudCB3aWxsIGJlIHNlY29uZCBhcmd1bWVudFxuXHRcdGVsZW0gPSBlbCB8fCBlbGVtO1xuXHRcdHJldHVybiBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApID09PSBcIm5vbmVcIiB8fCAhalF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKTtcblx0fTtcblxudmFyIHJjaGVja2FibGVUeXBlID0gKC9eKD86Y2hlY2tib3h8cmFkaW8pJC9pKTtcblxuXG5cbihmdW5jdGlvbigpIHtcblx0dmFyIGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuXHRcdGRpdiA9IGZyYWdtZW50LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkgKSxcblx0XHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXG5cdC8vIFN1cHBvcnQ6IFNhZmFyaTw9NS4xXG5cdC8vIENoZWNrIHN0YXRlIGxvc3QgaWYgdGhlIG5hbWUgaXMgc2V0ICgjMTEyMTcpXG5cdC8vIFN1cHBvcnQ6IFdpbmRvd3MgV2ViIEFwcHMgKFdXQSlcblx0Ly8gYG5hbWVgIGFuZCBgdHlwZWAgbXVzdCB1c2UgLnNldEF0dHJpYnV0ZSBmb3IgV1dBICgjMTQ5MDEpXG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIFwicmFkaW9cIiApO1xuXHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwiY2hlY2tlZFwiLCBcImNoZWNrZWRcIiApO1xuXHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwibmFtZVwiLCBcInRcIiApO1xuXG5cdGRpdi5hcHBlbmRDaGlsZCggaW5wdXQgKTtcblxuXHQvLyBTdXBwb3J0OiBTYWZhcmk8PTUuMSwgQW5kcm9pZDw0LjJcblx0Ly8gT2xkZXIgV2ViS2l0IGRvZXNuJ3QgY2xvbmUgY2hlY2tlZCBzdGF0ZSBjb3JyZWN0bHkgaW4gZnJhZ21lbnRzXG5cdHN1cHBvcnQuY2hlY2tDbG9uZSA9IGRpdi5jbG9uZU5vZGUoIHRydWUgKS5jbG9uZU5vZGUoIHRydWUgKS5sYXN0Q2hpbGQuY2hlY2tlZDtcblxuXHQvLyBTdXBwb3J0OiBJRTw9MTErXG5cdC8vIE1ha2Ugc3VyZSB0ZXh0YXJlYSAoYW5kIGNoZWNrYm94KSBkZWZhdWx0VmFsdWUgaXMgcHJvcGVybHkgY2xvbmVkXG5cdGRpdi5pbm5lckhUTUwgPSBcIjx0ZXh0YXJlYT54PC90ZXh0YXJlYT5cIjtcblx0c3VwcG9ydC5ub0Nsb25lQ2hlY2tlZCA9ICEhZGl2LmNsb25lTm9kZSggdHJ1ZSApLmxhc3RDaGlsZC5kZWZhdWx0VmFsdWU7XG59KSgpO1xudmFyIHN0cnVuZGVmaW5lZCA9IHR5cGVvZiB1bmRlZmluZWQ7XG5cblxuXG5zdXBwb3J0LmZvY3VzaW5CdWJibGVzID0gXCJvbmZvY3VzaW5cIiBpbiB3aW5kb3c7XG5cblxudmFyXG5cdHJrZXlFdmVudCA9IC9ea2V5Lyxcblx0cm1vdXNlRXZlbnQgPSAvXig/Om1vdXNlfHBvaW50ZXJ8Y29udGV4dG1lbnUpfGNsaWNrLyxcblx0cmZvY3VzTW9ycGggPSAvXig/OmZvY3VzaW5mb2N1c3xmb2N1c291dGJsdXIpJC8sXG5cdHJ0eXBlbmFtZXNwYWNlID0gL14oW14uXSopKD86XFwuKC4rKXwpJC87XG5cbmZ1bmN0aW9uIHJldHVyblRydWUoKSB7XG5cdHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiByZXR1cm5GYWxzZSgpIHtcblx0cmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBzYWZlQWN0aXZlRWxlbWVudCgpIHtcblx0dHJ5IHtcblx0XHRyZXR1cm4gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcblx0fSBjYXRjaCAoIGVyciApIHsgfVxufVxuXG4vKlxuICogSGVscGVyIGZ1bmN0aW9ucyBmb3IgbWFuYWdpbmcgZXZlbnRzIC0tIG5vdCBwYXJ0IG9mIHRoZSBwdWJsaWMgaW50ZXJmYWNlLlxuICogUHJvcHMgdG8gRGVhbiBFZHdhcmRzJyBhZGRFdmVudCBsaWJyYXJ5IGZvciBtYW55IG9mIHRoZSBpZGVhcy5cbiAqL1xualF1ZXJ5LmV2ZW50ID0ge1xuXG5cdGdsb2JhbDoge30sXG5cblx0YWRkOiBmdW5jdGlvbiggZWxlbSwgdHlwZXMsIGhhbmRsZXIsIGRhdGEsIHNlbGVjdG9yICkge1xuXG5cdFx0dmFyIGhhbmRsZU9iakluLCBldmVudEhhbmRsZSwgdG1wLFxuXHRcdFx0ZXZlbnRzLCB0LCBoYW5kbGVPYmosXG5cdFx0XHRzcGVjaWFsLCBoYW5kbGVycywgdHlwZSwgbmFtZXNwYWNlcywgb3JpZ1R5cGUsXG5cdFx0XHRlbGVtRGF0YSA9IGRhdGFfcHJpdi5nZXQoIGVsZW0gKTtcblxuXHRcdC8vIERvbid0IGF0dGFjaCBldmVudHMgdG8gbm9EYXRhIG9yIHRleHQvY29tbWVudCBub2RlcyAoYnV0IGFsbG93IHBsYWluIG9iamVjdHMpXG5cdFx0aWYgKCAhZWxlbURhdGEgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsbGVyIGNhbiBwYXNzIGluIGFuIG9iamVjdCBvZiBjdXN0b20gZGF0YSBpbiBsaWV1IG9mIHRoZSBoYW5kbGVyXG5cdFx0aWYgKCBoYW5kbGVyLmhhbmRsZXIgKSB7XG5cdFx0XHRoYW5kbGVPYmpJbiA9IGhhbmRsZXI7XG5cdFx0XHRoYW5kbGVyID0gaGFuZGxlT2JqSW4uaGFuZGxlcjtcblx0XHRcdHNlbGVjdG9yID0gaGFuZGxlT2JqSW4uc2VsZWN0b3I7XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgdGhlIGhhbmRsZXIgaGFzIGEgdW5pcXVlIElELCB1c2VkIHRvIGZpbmQvcmVtb3ZlIGl0IGxhdGVyXG5cdFx0aWYgKCAhaGFuZGxlci5ndWlkICkge1xuXHRcdFx0aGFuZGxlci5ndWlkID0galF1ZXJ5Lmd1aWQrKztcblx0XHR9XG5cblx0XHQvLyBJbml0IHRoZSBlbGVtZW50J3MgZXZlbnQgc3RydWN0dXJlIGFuZCBtYWluIGhhbmRsZXIsIGlmIHRoaXMgaXMgdGhlIGZpcnN0XG5cdFx0aWYgKCAhKGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cykgKSB7XG5cdFx0XHRldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgPSB7fTtcblx0XHR9XG5cdFx0aWYgKCAhKGV2ZW50SGFuZGxlID0gZWxlbURhdGEuaGFuZGxlKSApIHtcblx0XHRcdGV2ZW50SGFuZGxlID0gZWxlbURhdGEuaGFuZGxlID0gZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRcdC8vIERpc2NhcmQgdGhlIHNlY29uZCBldmVudCBvZiBhIGpRdWVyeS5ldmVudC50cmlnZ2VyKCkgYW5kXG5cdFx0XHRcdC8vIHdoZW4gYW4gZXZlbnQgaXMgY2FsbGVkIGFmdGVyIGEgcGFnZSBoYXMgdW5sb2FkZWRcblx0XHRcdFx0cmV0dXJuIHR5cGVvZiBqUXVlcnkgIT09IHN0cnVuZGVmaW5lZCAmJiBqUXVlcnkuZXZlbnQudHJpZ2dlcmVkICE9PSBlLnR5cGUgP1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5kaXNwYXRjaC5hcHBseSggZWxlbSwgYXJndW1lbnRzICkgOiB1bmRlZmluZWQ7XG5cdFx0XHR9O1xuXHRcdH1cblxuXHRcdC8vIEhhbmRsZSBtdWx0aXBsZSBldmVudHMgc2VwYXJhdGVkIGJ5IGEgc3BhY2Vcblx0XHR0eXBlcyA9ICggdHlwZXMgfHwgXCJcIiApLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbIFwiXCIgXTtcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xuXHRcdHdoaWxlICggdC0tICkge1xuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbdF0gKSB8fCBbXTtcblx0XHRcdHR5cGUgPSBvcmlnVHlwZSA9IHRtcFsxXTtcblx0XHRcdG5hbWVzcGFjZXMgPSAoIHRtcFsyXSB8fCBcIlwiICkuc3BsaXQoIFwiLlwiICkuc29ydCgpO1xuXG5cdFx0XHQvLyBUaGVyZSAqbXVzdCogYmUgYSB0eXBlLCBubyBhdHRhY2hpbmcgbmFtZXNwYWNlLW9ubHkgaGFuZGxlcnNcblx0XHRcdGlmICggIXR5cGUgKSB7XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBldmVudCBjaGFuZ2VzIGl0cyB0eXBlLCB1c2UgdGhlIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMgZm9yIHRoZSBjaGFuZ2VkIHR5cGVcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXG5cdFx0XHQvLyBJZiBzZWxlY3RvciBkZWZpbmVkLCBkZXRlcm1pbmUgc3BlY2lhbCBldmVudCBhcGkgdHlwZSwgb3RoZXJ3aXNlIGdpdmVuIHR5cGVcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcblxuXHRcdFx0Ly8gVXBkYXRlIHNwZWNpYWwgYmFzZWQgb24gbmV3bHkgcmVzZXQgdHlwZVxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cblx0XHRcdC8vIGhhbmRsZU9iaiBpcyBwYXNzZWQgdG8gYWxsIGV2ZW50IGhhbmRsZXJzXG5cdFx0XHRoYW5kbGVPYmogPSBqUXVlcnkuZXh0ZW5kKHtcblx0XHRcdFx0dHlwZTogdHlwZSxcblx0XHRcdFx0b3JpZ1R5cGU6IG9yaWdUeXBlLFxuXHRcdFx0XHRkYXRhOiBkYXRhLFxuXHRcdFx0XHRoYW5kbGVyOiBoYW5kbGVyLFxuXHRcdFx0XHRndWlkOiBoYW5kbGVyLmd1aWQsXG5cdFx0XHRcdHNlbGVjdG9yOiBzZWxlY3Rvcixcblx0XHRcdFx0bmVlZHNDb250ZXh0OiBzZWxlY3RvciAmJiBqUXVlcnkuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3IgKSxcblx0XHRcdFx0bmFtZXNwYWNlOiBuYW1lc3BhY2VzLmpvaW4oXCIuXCIpXG5cdFx0XHR9LCBoYW5kbGVPYmpJbiApO1xuXG5cdFx0XHQvLyBJbml0IHRoZSBldmVudCBoYW5kbGVyIHF1ZXVlIGlmIHdlJ3JlIHRoZSBmaXJzdFxuXHRcdFx0aWYgKCAhKGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0pICkge1xuXHRcdFx0XHRoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdID0gW107XG5cdFx0XHRcdGhhbmRsZXJzLmRlbGVnYXRlQ291bnQgPSAwO1xuXG5cdFx0XHRcdC8vIE9ubHkgdXNlIGFkZEV2ZW50TGlzdGVuZXIgaWYgdGhlIHNwZWNpYWwgZXZlbnRzIGhhbmRsZXIgcmV0dXJucyBmYWxzZVxuXHRcdFx0XHRpZiAoICFzcGVjaWFsLnNldHVwIHx8IHNwZWNpYWwuc2V0dXAuY2FsbCggZWxlbSwgZGF0YSwgbmFtZXNwYWNlcywgZXZlbnRIYW5kbGUgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLmFkZEV2ZW50TGlzdGVuZXIgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIGV2ZW50SGFuZGxlLCBmYWxzZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHNwZWNpYWwuYWRkICkge1xuXHRcdFx0XHRzcGVjaWFsLmFkZC5jYWxsKCBlbGVtLCBoYW5kbGVPYmogKTtcblxuXHRcdFx0XHRpZiAoICFoYW5kbGVPYmouaGFuZGxlci5ndWlkICkge1xuXHRcdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyLmd1aWQgPSBoYW5kbGVyLmd1aWQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIHRvIHRoZSBlbGVtZW50J3MgaGFuZGxlciBsaXN0LCBkZWxlZ2F0ZXMgaW4gZnJvbnRcblx0XHRcdGlmICggc2VsZWN0b3IgKSB7XG5cdFx0XHRcdGhhbmRsZXJzLnNwbGljZSggaGFuZGxlcnMuZGVsZWdhdGVDb3VudCsrLCAwLCBoYW5kbGVPYmogKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGhhbmRsZXJzLnB1c2goIGhhbmRsZU9iaiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBLZWVwIHRyYWNrIG9mIHdoaWNoIGV2ZW50cyBoYXZlIGV2ZXIgYmVlbiB1c2VkLCBmb3IgZXZlbnQgb3B0aW1pemF0aW9uXG5cdFx0XHRqUXVlcnkuZXZlbnQuZ2xvYmFsWyB0eXBlIF0gPSB0cnVlO1xuXHRcdH1cblxuXHR9LFxuXG5cdC8vIERldGFjaCBhbiBldmVudCBvciBzZXQgb2YgZXZlbnRzIGZyb20gYW4gZWxlbWVudFxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlcywgaGFuZGxlciwgc2VsZWN0b3IsIG1hcHBlZFR5cGVzICkge1xuXG5cdFx0dmFyIGosIG9yaWdDb3VudCwgdG1wLFxuXHRcdFx0ZXZlbnRzLCB0LCBoYW5kbGVPYmosXG5cdFx0XHRzcGVjaWFsLCBoYW5kbGVycywgdHlwZSwgbmFtZXNwYWNlcywgb3JpZ1R5cGUsXG5cdFx0XHRlbGVtRGF0YSA9IGRhdGFfcHJpdi5oYXNEYXRhKCBlbGVtICkgJiYgZGF0YV9wcml2LmdldCggZWxlbSApO1xuXG5cdFx0aWYgKCAhZWxlbURhdGEgfHwgIShldmVudHMgPSBlbGVtRGF0YS5ldmVudHMpICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIE9uY2UgZm9yIGVhY2ggdHlwZS5uYW1lc3BhY2UgaW4gdHlwZXM7IHR5cGUgbWF5IGJlIG9taXR0ZWRcblx0XHR0eXBlcyA9ICggdHlwZXMgfHwgXCJcIiApLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbIFwiXCIgXTtcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xuXHRcdHdoaWxlICggdC0tICkge1xuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbdF0gKSB8fCBbXTtcblx0XHRcdHR5cGUgPSBvcmlnVHlwZSA9IHRtcFsxXTtcblx0XHRcdG5hbWVzcGFjZXMgPSAoIHRtcFsyXSB8fCBcIlwiICkuc3BsaXQoIFwiLlwiICkuc29ydCgpO1xuXG5cdFx0XHQvLyBVbmJpbmQgYWxsIGV2ZW50cyAob24gdGhpcyBuYW1lc3BhY2UsIGlmIHByb3ZpZGVkKSBmb3IgdGhlIGVsZW1lbnRcblx0XHRcdGlmICggIXR5cGUgKSB7XG5cdFx0XHRcdGZvciAoIHR5cGUgaW4gZXZlbnRzICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIGVsZW0sIHR5cGUgKyB0eXBlc1sgdCBdLCBoYW5kbGVyLCBzZWxlY3RvciwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcblx0XHRcdGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gfHwgW107XG5cdFx0XHR0bXAgPSB0bXBbMl0gJiYgbmV3IFJlZ0V4cCggXCIoXnxcXFxcLilcIiArIG5hbWVzcGFjZXMuam9pbihcIlxcXFwuKD86LipcXFxcLnwpXCIpICsgXCIoXFxcXC58JClcIiApO1xuXG5cdFx0XHQvLyBSZW1vdmUgbWF0Y2hpbmcgZXZlbnRzXG5cdFx0XHRvcmlnQ291bnQgPSBqID0gaGFuZGxlcnMubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKCBqLS0gKSB7XG5cdFx0XHRcdGhhbmRsZU9iaiA9IGhhbmRsZXJzWyBqIF07XG5cblx0XHRcdFx0aWYgKCAoIG1hcHBlZFR5cGVzIHx8IG9yaWdUeXBlID09PSBoYW5kbGVPYmoub3JpZ1R5cGUgKSAmJlxuXHRcdFx0XHRcdCggIWhhbmRsZXIgfHwgaGFuZGxlci5ndWlkID09PSBoYW5kbGVPYmouZ3VpZCApICYmXG5cdFx0XHRcdFx0KCAhdG1wIHx8IHRtcC50ZXN0KCBoYW5kbGVPYmoubmFtZXNwYWNlICkgKSAmJlxuXHRcdFx0XHRcdCggIXNlbGVjdG9yIHx8IHNlbGVjdG9yID09PSBoYW5kbGVPYmouc2VsZWN0b3IgfHwgc2VsZWN0b3IgPT09IFwiKipcIiAmJiBoYW5kbGVPYmouc2VsZWN0b3IgKSApIHtcblx0XHRcdFx0XHRoYW5kbGVycy5zcGxpY2UoIGosIDEgKTtcblxuXHRcdFx0XHRcdGlmICggaGFuZGxlT2JqLnNlbGVjdG9yICkge1xuXHRcdFx0XHRcdFx0aGFuZGxlcnMuZGVsZWdhdGVDb3VudC0tO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIHNwZWNpYWwucmVtb3ZlICkge1xuXHRcdFx0XHRcdFx0c3BlY2lhbC5yZW1vdmUuY2FsbCggZWxlbSwgaGFuZGxlT2JqICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJlbW92ZSBnZW5lcmljIGV2ZW50IGhhbmRsZXIgaWYgd2UgcmVtb3ZlZCBzb21ldGhpbmcgYW5kIG5vIG1vcmUgaGFuZGxlcnMgZXhpc3Rcblx0XHRcdC8vIChhdm9pZHMgcG90ZW50aWFsIGZvciBlbmRsZXNzIHJlY3Vyc2lvbiBkdXJpbmcgcmVtb3ZhbCBvZiBzcGVjaWFsIGV2ZW50IGhhbmRsZXJzKVxuXHRcdFx0aWYgKCBvcmlnQ291bnQgJiYgIWhhbmRsZXJzLmxlbmd0aCApIHtcblx0XHRcdFx0aWYgKCAhc3BlY2lhbC50ZWFyZG93biB8fCBzcGVjaWFsLnRlYXJkb3duLmNhbGwoIGVsZW0sIG5hbWVzcGFjZXMsIGVsZW1EYXRhLmhhbmRsZSApID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRqUXVlcnkucmVtb3ZlRXZlbnQoIGVsZW0sIHR5cGUsIGVsZW1EYXRhLmhhbmRsZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0ZGVsZXRlIGV2ZW50c1sgdHlwZSBdO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFJlbW92ZSB0aGUgZXhwYW5kbyBpZiBpdCdzIG5vIGxvbmdlciB1c2VkXG5cdFx0aWYgKCBqUXVlcnkuaXNFbXB0eU9iamVjdCggZXZlbnRzICkgKSB7XG5cdFx0XHRkZWxldGUgZWxlbURhdGEuaGFuZGxlO1xuXHRcdFx0ZGF0YV9wcml2LnJlbW92ZSggZWxlbSwgXCJldmVudHNcIiApO1xuXHRcdH1cblx0fSxcblxuXHR0cmlnZ2VyOiBmdW5jdGlvbiggZXZlbnQsIGRhdGEsIGVsZW0sIG9ubHlIYW5kbGVycyApIHtcblxuXHRcdHZhciBpLCBjdXIsIHRtcCwgYnViYmxlVHlwZSwgb250eXBlLCBoYW5kbGUsIHNwZWNpYWwsXG5cdFx0XHRldmVudFBhdGggPSBbIGVsZW0gfHwgZG9jdW1lbnQgXSxcblx0XHRcdHR5cGUgPSBoYXNPd24uY2FsbCggZXZlbnQsIFwidHlwZVwiICkgPyBldmVudC50eXBlIDogZXZlbnQsXG5cdFx0XHRuYW1lc3BhY2VzID0gaGFzT3duLmNhbGwoIGV2ZW50LCBcIm5hbWVzcGFjZVwiICkgPyBldmVudC5uYW1lc3BhY2Uuc3BsaXQoXCIuXCIpIDogW107XG5cblx0XHRjdXIgPSB0bXAgPSBlbGVtID0gZWxlbSB8fCBkb2N1bWVudDtcblxuXHRcdC8vIERvbid0IGRvIGV2ZW50cyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gZm9jdXMvYmx1ciBtb3JwaHMgdG8gZm9jdXNpbi9vdXQ7IGVuc3VyZSB3ZSdyZSBub3QgZmlyaW5nIHRoZW0gcmlnaHQgbm93XG5cdFx0aWYgKCByZm9jdXNNb3JwaC50ZXN0KCB0eXBlICsgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCApICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggdHlwZS5pbmRleE9mKFwiLlwiKSA+PSAwICkge1xuXHRcdFx0Ly8gTmFtZXNwYWNlZCB0cmlnZ2VyOyBjcmVhdGUgYSByZWdleHAgdG8gbWF0Y2ggZXZlbnQgdHlwZSBpbiBoYW5kbGUoKVxuXHRcdFx0bmFtZXNwYWNlcyA9IHR5cGUuc3BsaXQoXCIuXCIpO1xuXHRcdFx0dHlwZSA9IG5hbWVzcGFjZXMuc2hpZnQoKTtcblx0XHRcdG5hbWVzcGFjZXMuc29ydCgpO1xuXHRcdH1cblx0XHRvbnR5cGUgPSB0eXBlLmluZGV4T2YoXCI6XCIpIDwgMCAmJiBcIm9uXCIgKyB0eXBlO1xuXG5cdFx0Ly8gQ2FsbGVyIGNhbiBwYXNzIGluIGEgalF1ZXJ5LkV2ZW50IG9iamVjdCwgT2JqZWN0LCBvciBqdXN0IGFuIGV2ZW50IHR5cGUgc3RyaW5nXG5cdFx0ZXZlbnQgPSBldmVudFsgalF1ZXJ5LmV4cGFuZG8gXSA/XG5cdFx0XHRldmVudCA6XG5cdFx0XHRuZXcgalF1ZXJ5LkV2ZW50KCB0eXBlLCB0eXBlb2YgZXZlbnQgPT09IFwib2JqZWN0XCIgJiYgZXZlbnQgKTtcblxuXHRcdC8vIFRyaWdnZXIgYml0bWFzazogJiAxIGZvciBuYXRpdmUgaGFuZGxlcnM7ICYgMiBmb3IgalF1ZXJ5IChhbHdheXMgdHJ1ZSlcblx0XHRldmVudC5pc1RyaWdnZXIgPSBvbmx5SGFuZGxlcnMgPyAyIDogMztcblx0XHRldmVudC5uYW1lc3BhY2UgPSBuYW1lc3BhY2VzLmpvaW4oXCIuXCIpO1xuXHRcdGV2ZW50Lm5hbWVzcGFjZV9yZSA9IGV2ZW50Lm5hbWVzcGFjZSA/XG5cdFx0XHRuZXcgUmVnRXhwKCBcIihefFxcXFwuKVwiICsgbmFtZXNwYWNlcy5qb2luKFwiXFxcXC4oPzouKlxcXFwufClcIikgKyBcIihcXFxcLnwkKVwiICkgOlxuXHRcdFx0bnVsbDtcblxuXHRcdC8vIENsZWFuIHVwIHRoZSBldmVudCBpbiBjYXNlIGl0IGlzIGJlaW5nIHJldXNlZFxuXHRcdGV2ZW50LnJlc3VsdCA9IHVuZGVmaW5lZDtcblx0XHRpZiAoICFldmVudC50YXJnZXQgKSB7XG5cdFx0XHRldmVudC50YXJnZXQgPSBlbGVtO1xuXHRcdH1cblxuXHRcdC8vIENsb25lIGFueSBpbmNvbWluZyBkYXRhIGFuZCBwcmVwZW5kIHRoZSBldmVudCwgY3JlYXRpbmcgdGhlIGhhbmRsZXIgYXJnIGxpc3Rcblx0XHRkYXRhID0gZGF0YSA9PSBudWxsID9cblx0XHRcdFsgZXZlbnQgXSA6XG5cdFx0XHRqUXVlcnkubWFrZUFycmF5KCBkYXRhLCBbIGV2ZW50IF0gKTtcblxuXHRcdC8vIEFsbG93IHNwZWNpYWwgZXZlbnRzIHRvIGRyYXcgb3V0c2lkZSB0aGUgbGluZXNcblx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgc3BlY2lhbC50cmlnZ2VyICYmIHNwZWNpYWwudHJpZ2dlci5hcHBseSggZWxlbSwgZGF0YSApID09PSBmYWxzZSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBEZXRlcm1pbmUgZXZlbnQgcHJvcGFnYXRpb24gcGF0aCBpbiBhZHZhbmNlLCBwZXIgVzNDIGV2ZW50cyBzcGVjICgjOTk1MSlcblx0XHQvLyBCdWJibGUgdXAgdG8gZG9jdW1lbnQsIHRoZW4gdG8gd2luZG93OyB3YXRjaCBmb3IgYSBnbG9iYWwgb3duZXJEb2N1bWVudCB2YXIgKCM5NzI0KVxuXHRcdGlmICggIW9ubHlIYW5kbGVycyAmJiAhc3BlY2lhbC5ub0J1YmJsZSAmJiAhalF1ZXJ5LmlzV2luZG93KCBlbGVtICkgKSB7XG5cblx0XHRcdGJ1YmJsZVR5cGUgPSBzcGVjaWFsLmRlbGVnYXRlVHlwZSB8fCB0eXBlO1xuXHRcdFx0aWYgKCAhcmZvY3VzTW9ycGgudGVzdCggYnViYmxlVHlwZSArIHR5cGUgKSApIHtcblx0XHRcdFx0Y3VyID0gY3VyLnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cdFx0XHRmb3IgKCA7IGN1cjsgY3VyID0gY3VyLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdGV2ZW50UGF0aC5wdXNoKCBjdXIgKTtcblx0XHRcdFx0dG1wID0gY3VyO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBPbmx5IGFkZCB3aW5kb3cgaWYgd2UgZ290IHRvIGRvY3VtZW50IChlLmcuLCBub3QgcGxhaW4gb2JqIG9yIGRldGFjaGVkIERPTSlcblx0XHRcdGlmICggdG1wID09PSAoZWxlbS5vd25lckRvY3VtZW50IHx8IGRvY3VtZW50KSApIHtcblx0XHRcdFx0ZXZlbnRQYXRoLnB1c2goIHRtcC5kZWZhdWx0VmlldyB8fCB0bXAucGFyZW50V2luZG93IHx8IHdpbmRvdyApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEZpcmUgaGFuZGxlcnMgb24gdGhlIGV2ZW50IHBhdGhcblx0XHRpID0gMDtcblx0XHR3aGlsZSAoIChjdXIgPSBldmVudFBhdGhbaSsrXSkgJiYgIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cblx0XHRcdGV2ZW50LnR5cGUgPSBpID4gMSA/XG5cdFx0XHRcdGJ1YmJsZVR5cGUgOlxuXHRcdFx0XHRzcGVjaWFsLmJpbmRUeXBlIHx8IHR5cGU7XG5cblx0XHRcdC8vIGpRdWVyeSBoYW5kbGVyXG5cdFx0XHRoYW5kbGUgPSAoIGRhdGFfcHJpdi5nZXQoIGN1ciwgXCJldmVudHNcIiApIHx8IHt9IClbIGV2ZW50LnR5cGUgXSAmJiBkYXRhX3ByaXYuZ2V0KCBjdXIsIFwiaGFuZGxlXCIgKTtcblx0XHRcdGlmICggaGFuZGxlICkge1xuXHRcdFx0XHRoYW5kbGUuYXBwbHkoIGN1ciwgZGF0YSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBOYXRpdmUgaGFuZGxlclxuXHRcdFx0aGFuZGxlID0gb250eXBlICYmIGN1clsgb250eXBlIF07XG5cdFx0XHRpZiAoIGhhbmRsZSAmJiBoYW5kbGUuYXBwbHkgJiYgalF1ZXJ5LmFjY2VwdERhdGEoIGN1ciApICkge1xuXHRcdFx0XHRldmVudC5yZXN1bHQgPSBoYW5kbGUuYXBwbHkoIGN1ciwgZGF0YSApO1xuXHRcdFx0XHRpZiAoIGV2ZW50LnJlc3VsdCA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRldmVudC50eXBlID0gdHlwZTtcblxuXHRcdC8vIElmIG5vYm9keSBwcmV2ZW50ZWQgdGhlIGRlZmF1bHQgYWN0aW9uLCBkbyBpdCBub3dcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgIWV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpICkge1xuXG5cdFx0XHRpZiAoICghc3BlY2lhbC5fZGVmYXVsdCB8fCBzcGVjaWFsLl9kZWZhdWx0LmFwcGx5KCBldmVudFBhdGgucG9wKCksIGRhdGEgKSA9PT0gZmFsc2UpICYmXG5cdFx0XHRcdGpRdWVyeS5hY2NlcHREYXRhKCBlbGVtICkgKSB7XG5cblx0XHRcdFx0Ly8gQ2FsbCBhIG5hdGl2ZSBET00gbWV0aG9kIG9uIHRoZSB0YXJnZXQgd2l0aCB0aGUgc2FtZSBuYW1lIG5hbWUgYXMgdGhlIGV2ZW50LlxuXHRcdFx0XHQvLyBEb24ndCBkbyBkZWZhdWx0IGFjdGlvbnMgb24gd2luZG93LCB0aGF0J3Mgd2hlcmUgZ2xvYmFsIHZhcmlhYmxlcyBiZSAoIzYxNzApXG5cdFx0XHRcdGlmICggb250eXBlICYmIGpRdWVyeS5pc0Z1bmN0aW9uKCBlbGVtWyB0eXBlIF0gKSAmJiAhalF1ZXJ5LmlzV2luZG93KCBlbGVtICkgKSB7XG5cblx0XHRcdFx0XHQvLyBEb24ndCByZS10cmlnZ2VyIGFuIG9uRk9PIGV2ZW50IHdoZW4gd2UgY2FsbCBpdHMgRk9PKCkgbWV0aG9kXG5cdFx0XHRcdFx0dG1wID0gZWxlbVsgb250eXBlIF07XG5cblx0XHRcdFx0XHRpZiAoIHRtcCApIHtcblx0XHRcdFx0XHRcdGVsZW1bIG9udHlwZSBdID0gbnVsbDtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBQcmV2ZW50IHJlLXRyaWdnZXJpbmcgb2YgdGhlIHNhbWUgZXZlbnQsIHNpbmNlIHdlIGFscmVhZHkgYnViYmxlZCBpdCBhYm92ZVxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgPSB0eXBlO1xuXHRcdFx0XHRcdGVsZW1bIHR5cGUgXSgpO1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgPSB1bmRlZmluZWQ7XG5cblx0XHRcdFx0XHRpZiAoIHRtcCApIHtcblx0XHRcdFx0XHRcdGVsZW1bIG9udHlwZSBdID0gdG1wO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC5yZXN1bHQ7XG5cdH0sXG5cblx0ZGlzcGF0Y2g6IGZ1bmN0aW9uKCBldmVudCApIHtcblxuXHRcdC8vIE1ha2UgYSB3cml0YWJsZSBqUXVlcnkuRXZlbnQgZnJvbSB0aGUgbmF0aXZlIGV2ZW50IG9iamVjdFxuXHRcdGV2ZW50ID0galF1ZXJ5LmV2ZW50LmZpeCggZXZlbnQgKTtcblxuXHRcdHZhciBpLCBqLCByZXQsIG1hdGNoZWQsIGhhbmRsZU9iaixcblx0XHRcdGhhbmRsZXJRdWV1ZSA9IFtdLFxuXHRcdFx0YXJncyA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApLFxuXHRcdFx0aGFuZGxlcnMgPSAoIGRhdGFfcHJpdi5nZXQoIHRoaXMsIFwiZXZlbnRzXCIgKSB8fCB7fSApWyBldmVudC50eXBlIF0gfHwgW10sXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIGV2ZW50LnR5cGUgXSB8fCB7fTtcblxuXHRcdC8vIFVzZSB0aGUgZml4LWVkIGpRdWVyeS5FdmVudCByYXRoZXIgdGhhbiB0aGUgKHJlYWQtb25seSkgbmF0aXZlIGV2ZW50XG5cdFx0YXJnc1swXSA9IGV2ZW50O1xuXHRcdGV2ZW50LmRlbGVnYXRlVGFyZ2V0ID0gdGhpcztcblxuXHRcdC8vIENhbGwgdGhlIHByZURpc3BhdGNoIGhvb2sgZm9yIHRoZSBtYXBwZWQgdHlwZSwgYW5kIGxldCBpdCBiYWlsIGlmIGRlc2lyZWRcblx0XHRpZiAoIHNwZWNpYWwucHJlRGlzcGF0Y2ggJiYgc3BlY2lhbC5wcmVEaXNwYXRjaC5jYWxsKCB0aGlzLCBldmVudCApID09PSBmYWxzZSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBEZXRlcm1pbmUgaGFuZGxlcnNcblx0XHRoYW5kbGVyUXVldWUgPSBqUXVlcnkuZXZlbnQuaGFuZGxlcnMuY2FsbCggdGhpcywgZXZlbnQsIGhhbmRsZXJzICk7XG5cblx0XHQvLyBSdW4gZGVsZWdhdGVzIGZpcnN0OyB0aGV5IG1heSB3YW50IHRvIHN0b3AgcHJvcGFnYXRpb24gYmVuZWF0aCB1c1xuXHRcdGkgPSAwO1xuXHRcdHdoaWxlICggKG1hdGNoZWQgPSBoYW5kbGVyUXVldWVbIGkrKyBdKSAmJiAhZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdGV2ZW50LmN1cnJlbnRUYXJnZXQgPSBtYXRjaGVkLmVsZW07XG5cblx0XHRcdGogPSAwO1xuXHRcdFx0d2hpbGUgKCAoaGFuZGxlT2JqID0gbWF0Y2hlZC5oYW5kbGVyc1sgaisrIF0pICYmICFldmVudC5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXG5cdFx0XHRcdC8vIFRyaWdnZXJlZCBldmVudCBtdXN0IGVpdGhlciAxKSBoYXZlIG5vIG5hbWVzcGFjZSwgb3IgMikgaGF2ZSBuYW1lc3BhY2Uocylcblx0XHRcdFx0Ly8gYSBzdWJzZXQgb3IgZXF1YWwgdG8gdGhvc2UgaW4gdGhlIGJvdW5kIGV2ZW50IChib3RoIGNhbiBoYXZlIG5vIG5hbWVzcGFjZSkuXG5cdFx0XHRcdGlmICggIWV2ZW50Lm5hbWVzcGFjZV9yZSB8fCBldmVudC5uYW1lc3BhY2VfcmUudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkge1xuXG5cdFx0XHRcdFx0ZXZlbnQuaGFuZGxlT2JqID0gaGFuZGxlT2JqO1xuXHRcdFx0XHRcdGV2ZW50LmRhdGEgPSBoYW5kbGVPYmouZGF0YTtcblxuXHRcdFx0XHRcdHJldCA9ICggKGpRdWVyeS5ldmVudC5zcGVjaWFsWyBoYW5kbGVPYmoub3JpZ1R5cGUgXSB8fCB7fSkuaGFuZGxlIHx8IGhhbmRsZU9iai5oYW5kbGVyIClcblx0XHRcdFx0XHRcdFx0LmFwcGx5KCBtYXRjaGVkLmVsZW0sIGFyZ3MgKTtcblxuXHRcdFx0XHRcdGlmICggcmV0ICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIChldmVudC5yZXN1bHQgPSByZXQpID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsbCB0aGUgcG9zdERpc3BhdGNoIGhvb2sgZm9yIHRoZSBtYXBwZWQgdHlwZVxuXHRcdGlmICggc3BlY2lhbC5wb3N0RGlzcGF0Y2ggKSB7XG5cdFx0XHRzcGVjaWFsLnBvc3REaXNwYXRjaC5jYWxsKCB0aGlzLCBldmVudCApO1xuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC5yZXN1bHQ7XG5cdH0sXG5cblx0aGFuZGxlcnM6IGZ1bmN0aW9uKCBldmVudCwgaGFuZGxlcnMgKSB7XG5cdFx0dmFyIGksIG1hdGNoZXMsIHNlbCwgaGFuZGxlT2JqLFxuXHRcdFx0aGFuZGxlclF1ZXVlID0gW10sXG5cdFx0XHRkZWxlZ2F0ZUNvdW50ID0gaGFuZGxlcnMuZGVsZWdhdGVDb3VudCxcblx0XHRcdGN1ciA9IGV2ZW50LnRhcmdldDtcblxuXHRcdC8vIEZpbmQgZGVsZWdhdGUgaGFuZGxlcnNcblx0XHQvLyBCbGFjay1ob2xlIFNWRyA8dXNlPiBpbnN0YW5jZSB0cmVlcyAoIzEzMTgwKVxuXHRcdC8vIEF2b2lkIG5vbi1sZWZ0LWNsaWNrIGJ1YmJsaW5nIGluIEZpcmVmb3ggKCMzODYxKVxuXHRcdGlmICggZGVsZWdhdGVDb3VudCAmJiBjdXIubm9kZVR5cGUgJiYgKCFldmVudC5idXR0b24gfHwgZXZlbnQudHlwZSAhPT0gXCJjbGlja1wiKSApIHtcblxuXHRcdFx0Zm9yICggOyBjdXIgIT09IHRoaXM7IGN1ciA9IGN1ci5wYXJlbnROb2RlIHx8IHRoaXMgKSB7XG5cblx0XHRcdFx0Ly8gRG9uJ3QgcHJvY2VzcyBjbGlja3Mgb24gZGlzYWJsZWQgZWxlbWVudHMgKCM2OTExLCAjODE2NSwgIzExMzgyLCAjMTE3NjQpXG5cdFx0XHRcdGlmICggY3VyLmRpc2FibGVkICE9PSB0cnVlIHx8IGV2ZW50LnR5cGUgIT09IFwiY2xpY2tcIiApIHtcblx0XHRcdFx0XHRtYXRjaGVzID0gW107XG5cdFx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBkZWxlZ2F0ZUNvdW50OyBpKysgKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVPYmogPSBoYW5kbGVyc1sgaSBdO1xuXG5cdFx0XHRcdFx0XHQvLyBEb24ndCBjb25mbGljdCB3aXRoIE9iamVjdC5wcm90b3R5cGUgcHJvcGVydGllcyAoIzEzMjAzKVxuXHRcdFx0XHRcdFx0c2VsID0gaGFuZGxlT2JqLnNlbGVjdG9yICsgXCIgXCI7XG5cblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlc1sgc2VsIF0gPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRcdFx0bWF0Y2hlc1sgc2VsIF0gPSBoYW5kbGVPYmoubmVlZHNDb250ZXh0ID9cblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkoIHNlbCwgdGhpcyApLmluZGV4KCBjdXIgKSA+PSAwIDpcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuZmluZCggc2VsLCB0aGlzLCBudWxsLCBbIGN1ciBdICkubGVuZ3RoO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVzWyBzZWwgXSApIHtcblx0XHRcdFx0XHRcdFx0bWF0Y2hlcy5wdXNoKCBoYW5kbGVPYmogKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCBtYXRjaGVzLmxlbmd0aCApIHtcblx0XHRcdFx0XHRcdGhhbmRsZXJRdWV1ZS5wdXNoKHsgZWxlbTogY3VyLCBoYW5kbGVyczogbWF0Y2hlcyB9KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBBZGQgdGhlIHJlbWFpbmluZyAoZGlyZWN0bHktYm91bmQpIGhhbmRsZXJzXG5cdFx0aWYgKCBkZWxlZ2F0ZUNvdW50IDwgaGFuZGxlcnMubGVuZ3RoICkge1xuXHRcdFx0aGFuZGxlclF1ZXVlLnB1c2goeyBlbGVtOiB0aGlzLCBoYW5kbGVyczogaGFuZGxlcnMuc2xpY2UoIGRlbGVnYXRlQ291bnQgKSB9KTtcblx0XHR9XG5cblx0XHRyZXR1cm4gaGFuZGxlclF1ZXVlO1xuXHR9LFxuXG5cdC8vIEluY2x1ZGVzIHNvbWUgZXZlbnQgcHJvcHMgc2hhcmVkIGJ5IEtleUV2ZW50IGFuZCBNb3VzZUV2ZW50XG5cdHByb3BzOiBcImFsdEtleSBidWJibGVzIGNhbmNlbGFibGUgY3RybEtleSBjdXJyZW50VGFyZ2V0IGV2ZW50UGhhc2UgbWV0YUtleSByZWxhdGVkVGFyZ2V0IHNoaWZ0S2V5IHRhcmdldCB0aW1lU3RhbXAgdmlldyB3aGljaFwiLnNwbGl0KFwiIFwiKSxcblxuXHRmaXhIb29rczoge30sXG5cblx0a2V5SG9va3M6IHtcblx0XHRwcm9wczogXCJjaGFyIGNoYXJDb2RlIGtleSBrZXlDb2RlXCIuc3BsaXQoXCIgXCIpLFxuXHRcdGZpbHRlcjogZnVuY3Rpb24oIGV2ZW50LCBvcmlnaW5hbCApIHtcblxuXHRcdFx0Ly8gQWRkIHdoaWNoIGZvciBrZXkgZXZlbnRzXG5cdFx0XHRpZiAoIGV2ZW50LndoaWNoID09IG51bGwgKSB7XG5cdFx0XHRcdGV2ZW50LndoaWNoID0gb3JpZ2luYWwuY2hhckNvZGUgIT0gbnVsbCA/IG9yaWdpbmFsLmNoYXJDb2RlIDogb3JpZ2luYWwua2V5Q29kZTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGV2ZW50O1xuXHRcdH1cblx0fSxcblxuXHRtb3VzZUhvb2tzOiB7XG5cdFx0cHJvcHM6IFwiYnV0dG9uIGJ1dHRvbnMgY2xpZW50WCBjbGllbnRZIG9mZnNldFggb2Zmc2V0WSBwYWdlWCBwYWdlWSBzY3JlZW5YIHNjcmVlblkgdG9FbGVtZW50XCIuc3BsaXQoXCIgXCIpLFxuXHRcdGZpbHRlcjogZnVuY3Rpb24oIGV2ZW50LCBvcmlnaW5hbCApIHtcblx0XHRcdHZhciBldmVudERvYywgZG9jLCBib2R5LFxuXHRcdFx0XHRidXR0b24gPSBvcmlnaW5hbC5idXR0b247XG5cblx0XHRcdC8vIENhbGN1bGF0ZSBwYWdlWC9ZIGlmIG1pc3NpbmcgYW5kIGNsaWVudFgvWSBhdmFpbGFibGVcblx0XHRcdGlmICggZXZlbnQucGFnZVggPT0gbnVsbCAmJiBvcmlnaW5hbC5jbGllbnRYICE9IG51bGwgKSB7XG5cdFx0XHRcdGV2ZW50RG9jID0gZXZlbnQudGFyZ2V0Lm93bmVyRG9jdW1lbnQgfHwgZG9jdW1lbnQ7XG5cdFx0XHRcdGRvYyA9IGV2ZW50RG9jLmRvY3VtZW50RWxlbWVudDtcblx0XHRcdFx0Ym9keSA9IGV2ZW50RG9jLmJvZHk7XG5cblx0XHRcdFx0ZXZlbnQucGFnZVggPSBvcmlnaW5hbC5jbGllbnRYICsgKCBkb2MgJiYgZG9jLnNjcm9sbExlZnQgfHwgYm9keSAmJiBib2R5LnNjcm9sbExlZnQgfHwgMCApIC0gKCBkb2MgJiYgZG9jLmNsaWVudExlZnQgfHwgYm9keSAmJiBib2R5LmNsaWVudExlZnQgfHwgMCApO1xuXHRcdFx0XHRldmVudC5wYWdlWSA9IG9yaWdpbmFsLmNsaWVudFkgKyAoIGRvYyAmJiBkb2Muc2Nyb2xsVG9wICB8fCBib2R5ICYmIGJvZHkuc2Nyb2xsVG9wICB8fCAwICkgLSAoIGRvYyAmJiBkb2MuY2xpZW50VG9wICB8fCBib2R5ICYmIGJvZHkuY2xpZW50VG9wICB8fCAwICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCB3aGljaCBmb3IgY2xpY2s6IDEgPT09IGxlZnQ7IDIgPT09IG1pZGRsZTsgMyA9PT0gcmlnaHRcblx0XHRcdC8vIE5vdGU6IGJ1dHRvbiBpcyBub3Qgbm9ybWFsaXplZCwgc28gZG9uJ3QgdXNlIGl0XG5cdFx0XHRpZiAoICFldmVudC53aGljaCAmJiBidXR0b24gIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0ZXZlbnQud2hpY2ggPSAoIGJ1dHRvbiAmIDEgPyAxIDogKCBidXR0b24gJiAyID8gMyA6ICggYnV0dG9uICYgNCA/IDIgOiAwICkgKSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZXZlbnQ7XG5cdFx0fVxuXHR9LFxuXG5cdGZpeDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdGlmICggZXZlbnRbIGpRdWVyeS5leHBhbmRvIF0gKSB7XG5cdFx0XHRyZXR1cm4gZXZlbnQ7XG5cdFx0fVxuXG5cdFx0Ly8gQ3JlYXRlIGEgd3JpdGFibGUgY29weSBvZiB0aGUgZXZlbnQgb2JqZWN0IGFuZCBub3JtYWxpemUgc29tZSBwcm9wZXJ0aWVzXG5cdFx0dmFyIGksIHByb3AsIGNvcHksXG5cdFx0XHR0eXBlID0gZXZlbnQudHlwZSxcblx0XHRcdG9yaWdpbmFsRXZlbnQgPSBldmVudCxcblx0XHRcdGZpeEhvb2sgPSB0aGlzLmZpeEhvb2tzWyB0eXBlIF07XG5cblx0XHRpZiAoICFmaXhIb29rICkge1xuXHRcdFx0dGhpcy5maXhIb29rc1sgdHlwZSBdID0gZml4SG9vayA9XG5cdFx0XHRcdHJtb3VzZUV2ZW50LnRlc3QoIHR5cGUgKSA/IHRoaXMubW91c2VIb29rcyA6XG5cdFx0XHRcdHJrZXlFdmVudC50ZXN0KCB0eXBlICkgPyB0aGlzLmtleUhvb2tzIDpcblx0XHRcdFx0e307XG5cdFx0fVxuXHRcdGNvcHkgPSBmaXhIb29rLnByb3BzID8gdGhpcy5wcm9wcy5jb25jYXQoIGZpeEhvb2sucHJvcHMgKSA6IHRoaXMucHJvcHM7XG5cblx0XHRldmVudCA9IG5ldyBqUXVlcnkuRXZlbnQoIG9yaWdpbmFsRXZlbnQgKTtcblxuXHRcdGkgPSBjb3B5Lmxlbmd0aDtcblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdHByb3AgPSBjb3B5WyBpIF07XG5cdFx0XHRldmVudFsgcHJvcCBdID0gb3JpZ2luYWxFdmVudFsgcHJvcCBdO1xuXHRcdH1cblxuXHRcdC8vIFN1cHBvcnQ6IENvcmRvdmEgMi41IChXZWJLaXQpICgjMTMyNTUpXG5cdFx0Ly8gQWxsIGV2ZW50cyBzaG91bGQgaGF2ZSBhIHRhcmdldDsgQ29yZG92YSBkZXZpY2VyZWFkeSBkb2Vzbid0XG5cdFx0aWYgKCAhZXZlbnQudGFyZ2V0ICkge1xuXHRcdFx0ZXZlbnQudGFyZ2V0ID0gZG9jdW1lbnQ7XG5cdFx0fVxuXG5cdFx0Ly8gU3VwcG9ydDogU2FmYXJpIDYuMCssIENocm9tZTwyOFxuXHRcdC8vIFRhcmdldCBzaG91bGQgbm90IGJlIGEgdGV4dCBub2RlICgjNTA0LCAjMTMxNDMpXG5cdFx0aWYgKCBldmVudC50YXJnZXQubm9kZVR5cGUgPT09IDMgKSB7XG5cdFx0XHRldmVudC50YXJnZXQgPSBldmVudC50YXJnZXQucGFyZW50Tm9kZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZml4SG9vay5maWx0ZXIgPyBmaXhIb29rLmZpbHRlciggZXZlbnQsIG9yaWdpbmFsRXZlbnQgKSA6IGV2ZW50O1xuXHR9LFxuXG5cdHNwZWNpYWw6IHtcblx0XHRsb2FkOiB7XG5cdFx0XHQvLyBQcmV2ZW50IHRyaWdnZXJlZCBpbWFnZS5sb2FkIGV2ZW50cyBmcm9tIGJ1YmJsaW5nIHRvIHdpbmRvdy5sb2FkXG5cdFx0XHRub0J1YmJsZTogdHJ1ZVxuXHRcdH0sXG5cdFx0Zm9jdXM6IHtcblx0XHRcdC8vIEZpcmUgbmF0aXZlIGV2ZW50IGlmIHBvc3NpYmxlIHNvIGJsdXIvZm9jdXMgc2VxdWVuY2UgaXMgY29ycmVjdFxuXHRcdFx0dHJpZ2dlcjogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggdGhpcyAhPT0gc2FmZUFjdGl2ZUVsZW1lbnQoKSAmJiB0aGlzLmZvY3VzICkge1xuXHRcdFx0XHRcdHRoaXMuZm9jdXMoKTtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkZWxlZ2F0ZVR5cGU6IFwiZm9jdXNpblwiXG5cdFx0fSxcblx0XHRibHVyOiB7XG5cdFx0XHR0cmlnZ2VyOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCB0aGlzID09PSBzYWZlQWN0aXZlRWxlbWVudCgpICYmIHRoaXMuYmx1ciApIHtcblx0XHRcdFx0XHR0aGlzLmJsdXIoKTtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkZWxlZ2F0ZVR5cGU6IFwiZm9jdXNvdXRcIlxuXHRcdH0sXG5cdFx0Y2xpY2s6IHtcblx0XHRcdC8vIEZvciBjaGVja2JveCwgZmlyZSBuYXRpdmUgZXZlbnQgc28gY2hlY2tlZCBzdGF0ZSB3aWxsIGJlIHJpZ2h0XG5cdFx0XHR0cmlnZ2VyOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCB0aGlzLnR5cGUgPT09IFwiY2hlY2tib3hcIiAmJiB0aGlzLmNsaWNrICYmIGpRdWVyeS5ub2RlTmFtZSggdGhpcywgXCJpbnB1dFwiICkgKSB7XG5cdFx0XHRcdFx0dGhpcy5jbGljaygpO1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRm9yIGNyb3NzLWJyb3dzZXIgY29uc2lzdGVuY3ksIGRvbid0IGZpcmUgbmF0aXZlIC5jbGljaygpIG9uIGxpbmtzXG5cdFx0XHRfZGVmYXVsdDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0XHRyZXR1cm4galF1ZXJ5Lm5vZGVOYW1lKCBldmVudC50YXJnZXQsIFwiYVwiICk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdGJlZm9yZXVubG9hZDoge1xuXHRcdFx0cG9zdERpc3BhdGNoOiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCAyMCtcblx0XHRcdFx0Ly8gRmlyZWZveCBkb2Vzbid0IGFsZXJ0IGlmIHRoZSByZXR1cm5WYWx1ZSBmaWVsZCBpcyBub3Qgc2V0LlxuXHRcdFx0XHRpZiAoIGV2ZW50LnJlc3VsdCAhPT0gdW5kZWZpbmVkICYmIGV2ZW50Lm9yaWdpbmFsRXZlbnQgKSB7XG5cdFx0XHRcdFx0ZXZlbnQub3JpZ2luYWxFdmVudC5yZXR1cm5WYWx1ZSA9IGV2ZW50LnJlc3VsdDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRzaW11bGF0ZTogZnVuY3Rpb24oIHR5cGUsIGVsZW0sIGV2ZW50LCBidWJibGUgKSB7XG5cdFx0Ly8gUGlnZ3liYWNrIG9uIGEgZG9ub3IgZXZlbnQgdG8gc2ltdWxhdGUgYSBkaWZmZXJlbnQgb25lLlxuXHRcdC8vIEZha2Ugb3JpZ2luYWxFdmVudCB0byBhdm9pZCBkb25vcidzIHN0b3BQcm9wYWdhdGlvbiwgYnV0IGlmIHRoZVxuXHRcdC8vIHNpbXVsYXRlZCBldmVudCBwcmV2ZW50cyBkZWZhdWx0IHRoZW4gd2UgZG8gdGhlIHNhbWUgb24gdGhlIGRvbm9yLlxuXHRcdHZhciBlID0galF1ZXJ5LmV4dGVuZChcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoKSxcblx0XHRcdGV2ZW50LFxuXHRcdFx0e1xuXHRcdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0XHRpc1NpbXVsYXRlZDogdHJ1ZSxcblx0XHRcdFx0b3JpZ2luYWxFdmVudDoge31cblx0XHRcdH1cblx0XHQpO1xuXHRcdGlmICggYnViYmxlICkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoIGUsIG51bGwsIGVsZW0gKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LmRpc3BhdGNoLmNhbGwoIGVsZW0sIGUgKTtcblx0XHR9XG5cdFx0aWYgKCBlLmlzRGVmYXVsdFByZXZlbnRlZCgpICkge1xuXHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHR9XG5cdH1cbn07XG5cbmpRdWVyeS5yZW1vdmVFdmVudCA9IGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCBoYW5kbGUgKSB7XG5cdGlmICggZWxlbS5yZW1vdmVFdmVudExpc3RlbmVyICkge1xuXHRcdGVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lciggdHlwZSwgaGFuZGxlLCBmYWxzZSApO1xuXHR9XG59O1xuXG5qUXVlcnkuRXZlbnQgPSBmdW5jdGlvbiggc3JjLCBwcm9wcyApIHtcblx0Ly8gQWxsb3cgaW5zdGFudGlhdGlvbiB3aXRob3V0IHRoZSAnbmV3JyBrZXl3b3JkXG5cdGlmICggISh0aGlzIGluc3RhbmNlb2YgalF1ZXJ5LkV2ZW50KSApIHtcblx0XHRyZXR1cm4gbmV3IGpRdWVyeS5FdmVudCggc3JjLCBwcm9wcyApO1xuXHR9XG5cblx0Ly8gRXZlbnQgb2JqZWN0XG5cdGlmICggc3JjICYmIHNyYy50eXBlICkge1xuXHRcdHRoaXMub3JpZ2luYWxFdmVudCA9IHNyYztcblx0XHR0aGlzLnR5cGUgPSBzcmMudHlwZTtcblxuXHRcdC8vIEV2ZW50cyBidWJibGluZyB1cCB0aGUgZG9jdW1lbnQgbWF5IGhhdmUgYmVlbiBtYXJrZWQgYXMgcHJldmVudGVkXG5cdFx0Ly8gYnkgYSBoYW5kbGVyIGxvd2VyIGRvd24gdGhlIHRyZWU7IHJlZmxlY3QgdGhlIGNvcnJlY3QgdmFsdWUuXG5cdFx0dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQgPSBzcmMuZGVmYXVsdFByZXZlbnRlZCB8fFxuXHRcdFx0XHRzcmMuZGVmYXVsdFByZXZlbnRlZCA9PT0gdW5kZWZpbmVkICYmXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQ8NC4wXG5cdFx0XHRcdHNyYy5yZXR1cm5WYWx1ZSA9PT0gZmFsc2UgP1xuXHRcdFx0cmV0dXJuVHJ1ZSA6XG5cdFx0XHRyZXR1cm5GYWxzZTtcblxuXHQvLyBFdmVudCB0eXBlXG5cdH0gZWxzZSB7XG5cdFx0dGhpcy50eXBlID0gc3JjO1xuXHR9XG5cblx0Ly8gUHV0IGV4cGxpY2l0bHkgcHJvdmlkZWQgcHJvcGVydGllcyBvbnRvIHRoZSBldmVudCBvYmplY3Rcblx0aWYgKCBwcm9wcyApIHtcblx0XHRqUXVlcnkuZXh0ZW5kKCB0aGlzLCBwcm9wcyApO1xuXHR9XG5cblx0Ly8gQ3JlYXRlIGEgdGltZXN0YW1wIGlmIGluY29taW5nIGV2ZW50IGRvZXNuJ3QgaGF2ZSBvbmVcblx0dGhpcy50aW1lU3RhbXAgPSBzcmMgJiYgc3JjLnRpbWVTdGFtcCB8fCBqUXVlcnkubm93KCk7XG5cblx0Ly8gTWFyayBpdCBhcyBmaXhlZFxuXHR0aGlzWyBqUXVlcnkuZXhwYW5kbyBdID0gdHJ1ZTtcbn07XG5cbi8vIGpRdWVyeS5FdmVudCBpcyBiYXNlZCBvbiBET00zIEV2ZW50cyBhcyBzcGVjaWZpZWQgYnkgdGhlIEVDTUFTY3JpcHQgTGFuZ3VhZ2UgQmluZGluZ1xuLy8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAwMy9XRC1ET00tTGV2ZWwtMy1FdmVudHMtMjAwMzAzMzEvZWNtYS1zY3JpcHQtYmluZGluZy5odG1sXG5qUXVlcnkuRXZlbnQucHJvdG90eXBlID0ge1xuXHRpc0RlZmF1bHRQcmV2ZW50ZWQ6IHJldHVybkZhbHNlLFxuXHRpc1Byb3BhZ2F0aW9uU3RvcHBlZDogcmV0dXJuRmFsc2UsXG5cdGlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkOiByZXR1cm5GYWxzZSxcblxuXHRwcmV2ZW50RGVmYXVsdDogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XG5cblx0XHR0aGlzLmlzRGVmYXVsdFByZXZlbnRlZCA9IHJldHVyblRydWU7XG5cblx0XHRpZiAoIGUgJiYgZS5wcmV2ZW50RGVmYXVsdCApIHtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR9XG5cdH0sXG5cdHN0b3BQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XG5cblx0XHR0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTtcblxuXHRcdGlmICggZSAmJiBlLnN0b3BQcm9wYWdhdGlvbiApIHtcblx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0fVxuXHR9LFxuXHRzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xuXG5cdFx0dGhpcy5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCA9IHJldHVyblRydWU7XG5cblx0XHRpZiAoIGUgJiYgZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24gKSB7XG5cdFx0XHRlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuXHRcdH1cblxuXHRcdHRoaXMuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdH1cbn07XG5cbi8vIENyZWF0ZSBtb3VzZWVudGVyL2xlYXZlIGV2ZW50cyB1c2luZyBtb3VzZW92ZXIvb3V0IGFuZCBldmVudC10aW1lIGNoZWNrc1xuLy8gU3VwcG9ydDogQ2hyb21lIDE1K1xualF1ZXJ5LmVhY2goe1xuXHRtb3VzZWVudGVyOiBcIm1vdXNlb3ZlclwiLFxuXHRtb3VzZWxlYXZlOiBcIm1vdXNlb3V0XCIsXG5cdHBvaW50ZXJlbnRlcjogXCJwb2ludGVyb3ZlclwiLFxuXHRwb2ludGVybGVhdmU6IFwicG9pbnRlcm91dFwiXG59LCBmdW5jdGlvbiggb3JpZywgZml4ICkge1xuXHRqUXVlcnkuZXZlbnQuc3BlY2lhbFsgb3JpZyBdID0ge1xuXHRcdGRlbGVnYXRlVHlwZTogZml4LFxuXHRcdGJpbmRUeXBlOiBmaXgsXG5cblx0XHRoYW5kbGU6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdHZhciByZXQsXG5cdFx0XHRcdHRhcmdldCA9IHRoaXMsXG5cdFx0XHRcdHJlbGF0ZWQgPSBldmVudC5yZWxhdGVkVGFyZ2V0LFxuXHRcdFx0XHRoYW5kbGVPYmogPSBldmVudC5oYW5kbGVPYmo7XG5cblx0XHRcdC8vIEZvciBtb3VzZW50ZXIvbGVhdmUgY2FsbCB0aGUgaGFuZGxlciBpZiByZWxhdGVkIGlzIG91dHNpZGUgdGhlIHRhcmdldC5cblx0XHRcdC8vIE5COiBObyByZWxhdGVkVGFyZ2V0IGlmIHRoZSBtb3VzZSBsZWZ0L2VudGVyZWQgdGhlIGJyb3dzZXIgd2luZG93XG5cdFx0XHRpZiAoICFyZWxhdGVkIHx8IChyZWxhdGVkICE9PSB0YXJnZXQgJiYgIWpRdWVyeS5jb250YWlucyggdGFyZ2V0LCByZWxhdGVkICkpICkge1xuXHRcdFx0XHRldmVudC50eXBlID0gaGFuZGxlT2JqLm9yaWdUeXBlO1xuXHRcdFx0XHRyZXQgPSBoYW5kbGVPYmouaGFuZGxlci5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdGV2ZW50LnR5cGUgPSBmaXg7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblx0fTtcbn0pO1xuXG4vLyBTdXBwb3J0OiBGaXJlZm94LCBDaHJvbWUsIFNhZmFyaVxuLy8gQ3JlYXRlIFwiYnViYmxpbmdcIiBmb2N1cyBhbmQgYmx1ciBldmVudHNcbmlmICggIXN1cHBvcnQuZm9jdXNpbkJ1YmJsZXMgKSB7XG5cdGpRdWVyeS5lYWNoKHsgZm9jdXM6IFwiZm9jdXNpblwiLCBibHVyOiBcImZvY3Vzb3V0XCIgfSwgZnVuY3Rpb24oIG9yaWcsIGZpeCApIHtcblxuXHRcdC8vIEF0dGFjaCBhIHNpbmdsZSBjYXB0dXJpbmcgaGFuZGxlciBvbiB0aGUgZG9jdW1lbnQgd2hpbGUgc29tZW9uZSB3YW50cyBmb2N1c2luL2ZvY3Vzb3V0XG5cdFx0dmFyIGhhbmRsZXIgPSBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRcdGpRdWVyeS5ldmVudC5zaW11bGF0ZSggZml4LCBldmVudC50YXJnZXQsIGpRdWVyeS5ldmVudC5maXgoIGV2ZW50ICksIHRydWUgKTtcblx0XHRcdH07XG5cblx0XHRqUXVlcnkuZXZlbnQuc3BlY2lhbFsgZml4IF0gPSB7XG5cdFx0XHRzZXR1cDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBkb2MgPSB0aGlzLm93bmVyRG9jdW1lbnQgfHwgdGhpcyxcblx0XHRcdFx0XHRhdHRhY2hlcyA9IGRhdGFfcHJpdi5hY2Nlc3MoIGRvYywgZml4ICk7XG5cblx0XHRcdFx0aWYgKCAhYXR0YWNoZXMgKSB7XG5cdFx0XHRcdFx0ZG9jLmFkZEV2ZW50TGlzdGVuZXIoIG9yaWcsIGhhbmRsZXIsIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRkYXRhX3ByaXYuYWNjZXNzKCBkb2MsIGZpeCwgKCBhdHRhY2hlcyB8fCAwICkgKyAxICk7XG5cdFx0XHR9LFxuXHRcdFx0dGVhcmRvd246IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgZG9jID0gdGhpcy5vd25lckRvY3VtZW50IHx8IHRoaXMsXG5cdFx0XHRcdFx0YXR0YWNoZXMgPSBkYXRhX3ByaXYuYWNjZXNzKCBkb2MsIGZpeCApIC0gMTtcblxuXHRcdFx0XHRpZiAoICFhdHRhY2hlcyApIHtcblx0XHRcdFx0XHRkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lciggb3JpZywgaGFuZGxlciwgdHJ1ZSApO1xuXHRcdFx0XHRcdGRhdGFfcHJpdi5yZW1vdmUoIGRvYywgZml4ICk7XG5cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRkYXRhX3ByaXYuYWNjZXNzKCBkb2MsIGZpeCwgYXR0YWNoZXMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH0pO1xufVxuXG5qUXVlcnkuZm4uZXh0ZW5kKHtcblxuXHRvbjogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4sIC8qSU5URVJOQUwqLyBvbmUgKSB7XG5cdFx0dmFyIG9yaWdGbiwgdHlwZTtcblxuXHRcdC8vIFR5cGVzIGNhbiBiZSBhIG1hcCBvZiB0eXBlcy9oYW5kbGVyc1xuXHRcdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0Ly8gKCB0eXBlcy1PYmplY3QsIHNlbGVjdG9yLCBkYXRhIClcblx0XHRcdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0XHQvLyAoIHR5cGVzLU9iamVjdCwgZGF0YSApXG5cdFx0XHRcdGRhdGEgPSBkYXRhIHx8IHNlbGVjdG9yO1xuXHRcdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHRcdH1cblx0XHRcdGZvciAoIHR5cGUgaW4gdHlwZXMgKSB7XG5cdFx0XHRcdHRoaXMub24oIHR5cGUsIHNlbGVjdG9yLCBkYXRhLCB0eXBlc1sgdHlwZSBdLCBvbmUgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblxuXHRcdGlmICggZGF0YSA9PSBudWxsICYmIGZuID09IG51bGwgKSB7XG5cdFx0XHQvLyAoIHR5cGVzLCBmbiApXG5cdFx0XHRmbiA9IHNlbGVjdG9yO1xuXHRcdFx0ZGF0YSA9IHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHRcdH0gZWxzZSBpZiAoIGZuID09IG51bGwgKSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdFx0Ly8gKCB0eXBlcywgc2VsZWN0b3IsIGZuIClcblx0XHRcdFx0Zm4gPSBkYXRhO1xuXHRcdFx0XHRkYXRhID0gdW5kZWZpbmVkO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Ly8gKCB0eXBlcywgZGF0YSwgZm4gKVxuXHRcdFx0XHRmbiA9IGRhdGE7XG5cdFx0XHRcdGRhdGEgPSBzZWxlY3Rvcjtcblx0XHRcdFx0c2VsZWN0b3IgPSB1bmRlZmluZWQ7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmICggZm4gPT09IGZhbHNlICkge1xuXHRcdFx0Zm4gPSByZXR1cm5GYWxzZTtcblx0XHR9IGVsc2UgaWYgKCAhZm4gKSB7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cblx0XHRpZiAoIG9uZSA9PT0gMSApIHtcblx0XHRcdG9yaWdGbiA9IGZuO1xuXHRcdFx0Zm4gPSBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRcdC8vIENhbiB1c2UgYW4gZW1wdHkgc2V0LCBzaW5jZSBldmVudCBjb250YWlucyB0aGUgaW5mb1xuXHRcdFx0XHRqUXVlcnkoKS5vZmYoIGV2ZW50ICk7XG5cdFx0XHRcdHJldHVybiBvcmlnRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0fTtcblx0XHRcdC8vIFVzZSBzYW1lIGd1aWQgc28gY2FsbGVyIGNhbiByZW1vdmUgdXNpbmcgb3JpZ0ZuXG5cdFx0XHRmbi5ndWlkID0gb3JpZ0ZuLmd1aWQgfHwgKCBvcmlnRm4uZ3VpZCA9IGpRdWVyeS5ndWlkKysgKTtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQuYWRkKCB0aGlzLCB0eXBlcywgZm4sIGRhdGEsIHNlbGVjdG9yICk7XG5cdFx0fSk7XG5cdH0sXG5cdG9uZTogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4sIDEgKTtcblx0fSxcblx0b2ZmOiBmdW5jdGlvbiggdHlwZXMsIHNlbGVjdG9yLCBmbiApIHtcblx0XHR2YXIgaGFuZGxlT2JqLCB0eXBlO1xuXHRcdGlmICggdHlwZXMgJiYgdHlwZXMucHJldmVudERlZmF1bHQgJiYgdHlwZXMuaGFuZGxlT2JqICkge1xuXHRcdFx0Ly8gKCBldmVudCApICBkaXNwYXRjaGVkIGpRdWVyeS5FdmVudFxuXHRcdFx0aGFuZGxlT2JqID0gdHlwZXMuaGFuZGxlT2JqO1xuXHRcdFx0alF1ZXJ5KCB0eXBlcy5kZWxlZ2F0ZVRhcmdldCApLm9mZihcblx0XHRcdFx0aGFuZGxlT2JqLm5hbWVzcGFjZSA/IGhhbmRsZU9iai5vcmlnVHlwZSArIFwiLlwiICsgaGFuZGxlT2JqLm5hbWVzcGFjZSA6IGhhbmRsZU9iai5vcmlnVHlwZSxcblx0XHRcdFx0aGFuZGxlT2JqLnNlbGVjdG9yLFxuXHRcdFx0XHRoYW5kbGVPYmouaGFuZGxlclxuXHRcdFx0KTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblx0XHRpZiAoIHR5cGVvZiB0eXBlcyA9PT0gXCJvYmplY3RcIiApIHtcblx0XHRcdC8vICggdHlwZXMtb2JqZWN0IFssIHNlbGVjdG9yXSApXG5cdFx0XHRmb3IgKCB0eXBlIGluIHR5cGVzICkge1xuXHRcdFx0XHR0aGlzLm9mZiggdHlwZSwgc2VsZWN0b3IsIHR5cGVzWyB0eXBlIF0gKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblx0XHRpZiAoIHNlbGVjdG9yID09PSBmYWxzZSB8fCB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiApIHtcblx0XHRcdC8vICggdHlwZXMgWywgZm5dIClcblx0XHRcdGZuID0gc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0aWYgKCBmbiA9PT0gZmFsc2UgKSB7XG5cdFx0XHRmbiA9IHJldHVybkZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggdGhpcywgdHlwZXMsIGZuLCBzZWxlY3RvciApO1xuXHRcdH0pO1xuXHR9LFxuXG5cdHRyaWdnZXI6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgdGhpcyApO1xuXHRcdH0pO1xuXHR9LFxuXHR0cmlnZ2VySGFuZGxlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0dmFyIGVsZW0gPSB0aGlzWzBdO1xuXHRcdGlmICggZWxlbSApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgZWxlbSwgdHJ1ZSApO1xuXHRcdH1cblx0fVxufSk7XG5cblxudmFyXG5cdHJ4aHRtbFRhZyA9IC88KD8hYXJlYXxicnxjb2x8ZW1iZWR8aHJ8aW1nfGlucHV0fGxpbmt8bWV0YXxwYXJhbSkoKFtcXHc6XSspW14+XSopXFwvPi9naSxcblx0cnRhZ05hbWUgPSAvPChbXFx3Ol0rKS8sXG5cdHJodG1sID0gLzx8JiM/XFx3KzsvLFxuXHRybm9Jbm5lcmh0bWwgPSAvPCg/OnNjcmlwdHxzdHlsZXxsaW5rKS9pLFxuXHQvLyBjaGVja2VkPVwiY2hlY2tlZFwiIG9yIGNoZWNrZWRcblx0cmNoZWNrZWQgPSAvY2hlY2tlZFxccyooPzpbXj1dfD1cXHMqLmNoZWNrZWQuKS9pLFxuXHRyc2NyaXB0VHlwZSA9IC9eJHxcXC8oPzpqYXZhfGVjbWEpc2NyaXB0L2ksXG5cdHJzY3JpcHRUeXBlTWFza2VkID0gL150cnVlXFwvKC4qKS8sXG5cdHJjbGVhblNjcmlwdCA9IC9eXFxzKjwhKD86XFxbQ0RBVEFcXFt8LS0pfCg/OlxcXVxcXXwtLSk+XFxzKiQvZyxcblxuXHQvLyBXZSBoYXZlIHRvIGNsb3NlIHRoZXNlIHRhZ3MgdG8gc3VwcG9ydCBYSFRNTCAoIzEzMjAwKVxuXHR3cmFwTWFwID0ge1xuXG5cdFx0Ly8gU3VwcG9ydDogSUU5XG5cdFx0b3B0aW9uOiBbIDEsIFwiPHNlbGVjdCBtdWx0aXBsZT0nbXVsdGlwbGUnPlwiLCBcIjwvc2VsZWN0PlwiIF0sXG5cblx0XHR0aGVhZDogWyAxLCBcIjx0YWJsZT5cIiwgXCI8L3RhYmxlPlwiIF0sXG5cdFx0Y29sOiBbIDIsIFwiPHRhYmxlPjxjb2xncm91cD5cIiwgXCI8L2NvbGdyb3VwPjwvdGFibGU+XCIgXSxcblx0XHR0cjogWyAyLCBcIjx0YWJsZT48dGJvZHk+XCIsIFwiPC90Ym9keT48L3RhYmxlPlwiIF0sXG5cdFx0dGQ6IFsgMywgXCI8dGFibGU+PHRib2R5Pjx0cj5cIiwgXCI8L3RyPjwvdGJvZHk+PC90YWJsZT5cIiBdLFxuXG5cdFx0X2RlZmF1bHQ6IFsgMCwgXCJcIiwgXCJcIiBdXG5cdH07XG5cbi8vIFN1cHBvcnQ6IElFOVxud3JhcE1hcC5vcHRncm91cCA9IHdyYXBNYXAub3B0aW9uO1xuXG53cmFwTWFwLnRib2R5ID0gd3JhcE1hcC50Zm9vdCA9IHdyYXBNYXAuY29sZ3JvdXAgPSB3cmFwTWFwLmNhcHRpb24gPSB3cmFwTWFwLnRoZWFkO1xud3JhcE1hcC50aCA9IHdyYXBNYXAudGQ7XG5cbi8vIFN1cHBvcnQ6IDEueCBjb21wYXRpYmlsaXR5XG4vLyBNYW5pcHVsYXRpbmcgdGFibGVzIHJlcXVpcmVzIGEgdGJvZHlcbmZ1bmN0aW9uIG1hbmlwdWxhdGlvblRhcmdldCggZWxlbSwgY29udGVudCApIHtcblx0cmV0dXJuIGpRdWVyeS5ub2RlTmFtZSggZWxlbSwgXCJ0YWJsZVwiICkgJiZcblx0XHRqUXVlcnkubm9kZU5hbWUoIGNvbnRlbnQubm9kZVR5cGUgIT09IDExID8gY29udGVudCA6IGNvbnRlbnQuZmlyc3RDaGlsZCwgXCJ0clwiICkgP1xuXG5cdFx0ZWxlbS5nZXRFbGVtZW50c0J5VGFnTmFtZShcInRib2R5XCIpWzBdIHx8XG5cdFx0XHRlbGVtLmFwcGVuZENoaWxkKCBlbGVtLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRib2R5XCIpICkgOlxuXHRcdGVsZW07XG59XG5cbi8vIFJlcGxhY2UvcmVzdG9yZSB0aGUgdHlwZSBhdHRyaWJ1dGUgb2Ygc2NyaXB0IGVsZW1lbnRzIGZvciBzYWZlIERPTSBtYW5pcHVsYXRpb25cbmZ1bmN0aW9uIGRpc2FibGVTY3JpcHQoIGVsZW0gKSB7XG5cdGVsZW0udHlwZSA9IChlbGVtLmdldEF0dHJpYnV0ZShcInR5cGVcIikgIT09IG51bGwpICsgXCIvXCIgKyBlbGVtLnR5cGU7XG5cdHJldHVybiBlbGVtO1xufVxuZnVuY3Rpb24gcmVzdG9yZVNjcmlwdCggZWxlbSApIHtcblx0dmFyIG1hdGNoID0gcnNjcmlwdFR5cGVNYXNrZWQuZXhlYyggZWxlbS50eXBlICk7XG5cblx0aWYgKCBtYXRjaCApIHtcblx0XHRlbGVtLnR5cGUgPSBtYXRjaFsgMSBdO1xuXHR9IGVsc2Uge1xuXHRcdGVsZW0ucmVtb3ZlQXR0cmlidXRlKFwidHlwZVwiKTtcblx0fVxuXG5cdHJldHVybiBlbGVtO1xufVxuXG4vLyBNYXJrIHNjcmlwdHMgYXMgaGF2aW5nIGFscmVhZHkgYmVlbiBldmFsdWF0ZWRcbmZ1bmN0aW9uIHNldEdsb2JhbEV2YWwoIGVsZW1zLCByZWZFbGVtZW50cyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGwgPSBlbGVtcy5sZW5ndGg7XG5cblx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdGRhdGFfcHJpdi5zZXQoXG5cdFx0XHRlbGVtc1sgaSBdLCBcImdsb2JhbEV2YWxcIiwgIXJlZkVsZW1lbnRzIHx8IGRhdGFfcHJpdi5nZXQoIHJlZkVsZW1lbnRzWyBpIF0sIFwiZ2xvYmFsRXZhbFwiIClcblx0XHQpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGNsb25lQ29weUV2ZW50KCBzcmMsIGRlc3QgKSB7XG5cdHZhciBpLCBsLCB0eXBlLCBwZGF0YU9sZCwgcGRhdGFDdXIsIHVkYXRhT2xkLCB1ZGF0YUN1ciwgZXZlbnRzO1xuXG5cdGlmICggZGVzdC5ub2RlVHlwZSAhPT0gMSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyAxLiBDb3B5IHByaXZhdGUgZGF0YTogZXZlbnRzLCBoYW5kbGVycywgZXRjLlxuXHRpZiAoIGRhdGFfcHJpdi5oYXNEYXRhKCBzcmMgKSApIHtcblx0XHRwZGF0YU9sZCA9IGRhdGFfcHJpdi5hY2Nlc3MoIHNyYyApO1xuXHRcdHBkYXRhQ3VyID0gZGF0YV9wcml2LnNldCggZGVzdCwgcGRhdGFPbGQgKTtcblx0XHRldmVudHMgPSBwZGF0YU9sZC5ldmVudHM7XG5cblx0XHRpZiAoIGV2ZW50cyApIHtcblx0XHRcdGRlbGV0ZSBwZGF0YUN1ci5oYW5kbGU7XG5cdFx0XHRwZGF0YUN1ci5ldmVudHMgPSB7fTtcblxuXHRcdFx0Zm9yICggdHlwZSBpbiBldmVudHMgKSB7XG5cdFx0XHRcdGZvciAoIGkgPSAwLCBsID0gZXZlbnRzWyB0eXBlIF0ubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5hZGQoIGRlc3QsIHR5cGUsIGV2ZW50c1sgdHlwZSBdWyBpIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIDIuIENvcHkgdXNlciBkYXRhXG5cdGlmICggZGF0YV91c2VyLmhhc0RhdGEoIHNyYyApICkge1xuXHRcdHVkYXRhT2xkID0gZGF0YV91c2VyLmFjY2Vzcyggc3JjICk7XG5cdFx0dWRhdGFDdXIgPSBqUXVlcnkuZXh0ZW5kKCB7fSwgdWRhdGFPbGQgKTtcblxuXHRcdGRhdGFfdXNlci5zZXQoIGRlc3QsIHVkYXRhQ3VyICk7XG5cdH1cbn1cblxuZnVuY3Rpb24gZ2V0QWxsKCBjb250ZXh0LCB0YWcgKSB7XG5cdHZhciByZXQgPSBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lID8gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnIHx8IFwiKlwiICkgOlxuXHRcdFx0Y29udGV4dC5xdWVyeVNlbGVjdG9yQWxsID8gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgfHwgXCIqXCIgKSA6XG5cdFx0XHRbXTtcblxuXHRyZXR1cm4gdGFnID09PSB1bmRlZmluZWQgfHwgdGFnICYmIGpRdWVyeS5ub2RlTmFtZSggY29udGV4dCwgdGFnICkgP1xuXHRcdGpRdWVyeS5tZXJnZSggWyBjb250ZXh0IF0sIHJldCApIDpcblx0XHRyZXQ7XG59XG5cbi8vIEZpeCBJRSBidWdzLCBzZWUgc3VwcG9ydCB0ZXN0c1xuZnVuY3Rpb24gZml4SW5wdXQoIHNyYywgZGVzdCApIHtcblx0dmFyIG5vZGVOYW1lID0gZGVzdC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXG5cdC8vIEZhaWxzIHRvIHBlcnNpc3QgdGhlIGNoZWNrZWQgc3RhdGUgb2YgYSBjbG9uZWQgY2hlY2tib3ggb3IgcmFkaW8gYnV0dG9uLlxuXHRpZiAoIG5vZGVOYW1lID09PSBcImlucHV0XCIgJiYgcmNoZWNrYWJsZVR5cGUudGVzdCggc3JjLnR5cGUgKSApIHtcblx0XHRkZXN0LmNoZWNrZWQgPSBzcmMuY2hlY2tlZDtcblxuXHQvLyBGYWlscyB0byByZXR1cm4gdGhlIHNlbGVjdGVkIG9wdGlvbiB0byB0aGUgZGVmYXVsdCBzZWxlY3RlZCBzdGF0ZSB3aGVuIGNsb25pbmcgb3B0aW9uc1xuXHR9IGVsc2UgaWYgKCBub2RlTmFtZSA9PT0gXCJpbnB1dFwiIHx8IG5vZGVOYW1lID09PSBcInRleHRhcmVhXCIgKSB7XG5cdFx0ZGVzdC5kZWZhdWx0VmFsdWUgPSBzcmMuZGVmYXVsdFZhbHVlO1xuXHR9XG59XG5cbmpRdWVyeS5leHRlbmQoe1xuXHRjbG9uZTogZnVuY3Rpb24oIGVsZW0sIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdHZhciBpLCBsLCBzcmNFbGVtZW50cywgZGVzdEVsZW1lbnRzLFxuXHRcdFx0Y2xvbmUgPSBlbGVtLmNsb25lTm9kZSggdHJ1ZSApLFxuXHRcdFx0aW5QYWdlID0galF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKTtcblxuXHRcdC8vIEZpeCBJRSBjbG9uaW5nIGlzc3Vlc1xuXHRcdGlmICggIXN1cHBvcnQubm9DbG9uZUNoZWNrZWQgJiYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGVsZW0ubm9kZVR5cGUgPT09IDExICkgJiZcblx0XHRcdFx0IWpRdWVyeS5pc1hNTERvYyggZWxlbSApICkge1xuXG5cdFx0XHQvLyBXZSBlc2NoZXcgU2l6emxlIGhlcmUgZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnM6IGh0dHA6Ly9qc3BlcmYuY29tL2dldGFsbC12cy1zaXp6bGUvMlxuXHRcdFx0ZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSApO1xuXHRcdFx0c3JjRWxlbWVudHMgPSBnZXRBbGwoIGVsZW0gKTtcblxuXHRcdFx0Zm9yICggaSA9IDAsIGwgPSBzcmNFbGVtZW50cy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdGZpeElucHV0KCBzcmNFbGVtZW50c1sgaSBdLCBkZXN0RWxlbWVudHNbIGkgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENvcHkgdGhlIGV2ZW50cyBmcm9tIHRoZSBvcmlnaW5hbCB0byB0aGUgY2xvbmVcblx0XHRpZiAoIGRhdGFBbmRFdmVudHMgKSB7XG5cdFx0XHRpZiAoIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdFx0XHRzcmNFbGVtZW50cyA9IHNyY0VsZW1lbnRzIHx8IGdldEFsbCggZWxlbSApO1xuXHRcdFx0XHRkZXN0RWxlbWVudHMgPSBkZXN0RWxlbWVudHMgfHwgZ2V0QWxsKCBjbG9uZSApO1xuXG5cdFx0XHRcdGZvciAoIGkgPSAwLCBsID0gc3JjRWxlbWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdGNsb25lQ29weUV2ZW50KCBzcmNFbGVtZW50c1sgaSBdLCBkZXN0RWxlbWVudHNbIGkgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRjbG9uZUNvcHlFdmVudCggZWxlbSwgY2xvbmUgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5XG5cdFx0ZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSwgXCJzY3JpcHRcIiApO1xuXHRcdGlmICggZGVzdEVsZW1lbnRzLmxlbmd0aCA+IDAgKSB7XG5cdFx0XHRzZXRHbG9iYWxFdmFsKCBkZXN0RWxlbWVudHMsICFpblBhZ2UgJiYgZ2V0QWxsKCBlbGVtLCBcInNjcmlwdFwiICkgKTtcblx0XHR9XG5cblx0XHQvLyBSZXR1cm4gdGhlIGNsb25lZCBzZXRcblx0XHRyZXR1cm4gY2xvbmU7XG5cdH0sXG5cblx0YnVpbGRGcmFnbWVudDogZnVuY3Rpb24oIGVsZW1zLCBjb250ZXh0LCBzY3JpcHRzLCBzZWxlY3Rpb24gKSB7XG5cdFx0dmFyIGVsZW0sIHRtcCwgdGFnLCB3cmFwLCBjb250YWlucywgaixcblx0XHRcdGZyYWdtZW50ID0gY29udGV4dC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksXG5cdFx0XHRub2RlcyA9IFtdLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRsID0gZWxlbXMubGVuZ3RoO1xuXG5cdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0ZWxlbSA9IGVsZW1zWyBpIF07XG5cblx0XHRcdGlmICggZWxlbSB8fCBlbGVtID09PSAwICkge1xuXG5cdFx0XHRcdC8vIEFkZCBub2RlcyBkaXJlY3RseVxuXHRcdFx0XHRpZiAoIGpRdWVyeS50eXBlKCBlbGVtICkgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogUXRXZWJLaXQsIFBoYW50b21KU1xuXHRcdFx0XHRcdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdFx0XHRqUXVlcnkubWVyZ2UoIG5vZGVzLCBlbGVtLm5vZGVUeXBlID8gWyBlbGVtIF0gOiBlbGVtICk7XG5cblx0XHRcdFx0Ly8gQ29udmVydCBub24taHRtbCBpbnRvIGEgdGV4dCBub2RlXG5cdFx0XHRcdH0gZWxzZSBpZiAoICFyaHRtbC50ZXN0KCBlbGVtICkgKSB7XG5cdFx0XHRcdFx0bm9kZXMucHVzaCggY29udGV4dC5jcmVhdGVUZXh0Tm9kZSggZWxlbSApICk7XG5cblx0XHRcdFx0Ly8gQ29udmVydCBodG1sIGludG8gRE9NIG5vZGVzXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dG1wID0gdG1wIHx8IGZyYWdtZW50LmFwcGVuZENoaWxkKCBjb250ZXh0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikgKTtcblxuXHRcdFx0XHRcdC8vIERlc2VyaWFsaXplIGEgc3RhbmRhcmQgcmVwcmVzZW50YXRpb25cblx0XHRcdFx0XHR0YWcgPSAoIHJ0YWdOYW1lLmV4ZWMoIGVsZW0gKSB8fCBbIFwiXCIsIFwiXCIgXSApWyAxIF0udG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0XHR3cmFwID0gd3JhcE1hcFsgdGFnIF0gfHwgd3JhcE1hcC5fZGVmYXVsdDtcblx0XHRcdFx0XHR0bXAuaW5uZXJIVE1MID0gd3JhcFsgMSBdICsgZWxlbS5yZXBsYWNlKCByeGh0bWxUYWcsIFwiPCQxPjwvJDI+XCIgKSArIHdyYXBbIDIgXTtcblxuXHRcdFx0XHRcdC8vIERlc2NlbmQgdGhyb3VnaCB3cmFwcGVycyB0byB0aGUgcmlnaHQgY29udGVudFxuXHRcdFx0XHRcdGogPSB3cmFwWyAwIF07XG5cdFx0XHRcdFx0d2hpbGUgKCBqLS0gKSB7XG5cdFx0XHRcdFx0XHR0bXAgPSB0bXAubGFzdENoaWxkO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFF0V2ViS2l0LCBQaGFudG9tSlNcblx0XHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCBub2RlcywgdG1wLmNoaWxkTm9kZXMgKTtcblxuXHRcdFx0XHRcdC8vIFJlbWVtYmVyIHRoZSB0b3AtbGV2ZWwgY29udGFpbmVyXG5cdFx0XHRcdFx0dG1wID0gZnJhZ21lbnQuZmlyc3RDaGlsZDtcblxuXHRcdFx0XHRcdC8vIEVuc3VyZSB0aGUgY3JlYXRlZCBub2RlcyBhcmUgb3JwaGFuZWQgKCMxMjM5Milcblx0XHRcdFx0XHR0bXAudGV4dENvbnRlbnQgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gUmVtb3ZlIHdyYXBwZXIgZnJvbSBmcmFnbWVudFxuXHRcdGZyYWdtZW50LnRleHRDb250ZW50ID0gXCJcIjtcblxuXHRcdGkgPSAwO1xuXHRcdHdoaWxlICggKGVsZW0gPSBub2Rlc1sgaSsrIF0pICkge1xuXG5cdFx0XHQvLyAjNDA4NyAtIElmIG9yaWdpbiBhbmQgZGVzdGluYXRpb24gZWxlbWVudHMgYXJlIHRoZSBzYW1lLCBhbmQgdGhpcyBpc1xuXHRcdFx0Ly8gdGhhdCBlbGVtZW50LCBkbyBub3QgZG8gYW55dGhpbmdcblx0XHRcdGlmICggc2VsZWN0aW9uICYmIGpRdWVyeS5pbkFycmF5KCBlbGVtLCBzZWxlY3Rpb24gKSAhPT0gLTEgKSB7XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHRjb250YWlucyA9IGpRdWVyeS5jb250YWlucyggZWxlbS5vd25lckRvY3VtZW50LCBlbGVtICk7XG5cblx0XHRcdC8vIEFwcGVuZCB0byBmcmFnbWVudFxuXHRcdFx0dG1wID0gZ2V0QWxsKCBmcmFnbWVudC5hcHBlbmRDaGlsZCggZWxlbSApLCBcInNjcmlwdFwiICk7XG5cblx0XHRcdC8vIFByZXNlcnZlIHNjcmlwdCBldmFsdWF0aW9uIGhpc3Rvcnlcblx0XHRcdGlmICggY29udGFpbnMgKSB7XG5cdFx0XHRcdHNldEdsb2JhbEV2YWwoIHRtcCApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDYXB0dXJlIGV4ZWN1dGFibGVzXG5cdFx0XHRpZiAoIHNjcmlwdHMgKSB7XG5cdFx0XHRcdGogPSAwO1xuXHRcdFx0XHR3aGlsZSAoIChlbGVtID0gdG1wWyBqKysgXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCByc2NyaXB0VHlwZS50ZXN0KCBlbGVtLnR5cGUgfHwgXCJcIiApICkge1xuXHRcdFx0XHRcdFx0c2NyaXB0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZyYWdtZW50O1xuXHR9LFxuXG5cdGNsZWFuRGF0YTogZnVuY3Rpb24oIGVsZW1zICkge1xuXHRcdHZhciBkYXRhLCBlbGVtLCB0eXBlLCBrZXksXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWwsXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgKGVsZW0gPSBlbGVtc1sgaSBdKSAhPT0gdW5kZWZpbmVkOyBpKysgKSB7XG5cdFx0XHRpZiAoIGpRdWVyeS5hY2NlcHREYXRhKCBlbGVtICkgKSB7XG5cdFx0XHRcdGtleSA9IGVsZW1bIGRhdGFfcHJpdi5leHBhbmRvIF07XG5cblx0XHRcdFx0aWYgKCBrZXkgJiYgKGRhdGEgPSBkYXRhX3ByaXYuY2FjaGVbIGtleSBdKSApIHtcblx0XHRcdFx0XHRpZiAoIGRhdGEuZXZlbnRzICkge1xuXHRcdFx0XHRcdFx0Zm9yICggdHlwZSBpbiBkYXRhLmV2ZW50cyApIHtcblx0XHRcdFx0XHRcdFx0aWYgKCBzcGVjaWFsWyB0eXBlIF0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggZWxlbSwgdHlwZSApO1xuXG5cdFx0XHRcdFx0XHRcdC8vIFRoaXMgaXMgYSBzaG9ydGN1dCB0byBhdm9pZCBqUXVlcnkuZXZlbnQucmVtb3ZlJ3Mgb3ZlcmhlYWRcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkucmVtb3ZlRXZlbnQoIGVsZW0sIHR5cGUsIGRhdGEuaGFuZGxlICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCBkYXRhX3ByaXYuY2FjaGVbIGtleSBdICkge1xuXHRcdFx0XHRcdFx0Ly8gRGlzY2FyZCBhbnkgcmVtYWluaW5nIGBwcml2YXRlYCBkYXRhXG5cdFx0XHRcdFx0XHRkZWxldGUgZGF0YV9wcml2LmNhY2hlWyBrZXkgXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdC8vIERpc2NhcmQgYW55IHJlbWFpbmluZyBgdXNlcmAgZGF0YVxuXHRcdFx0ZGVsZXRlIGRhdGFfdXNlci5jYWNoZVsgZWxlbVsgZGF0YV91c2VyLmV4cGFuZG8gXSBdO1xuXHRcdH1cblx0fVxufSk7XG5cbmpRdWVyeS5mbi5leHRlbmQoe1xuXHR0ZXh0OiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0cmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgP1xuXHRcdFx0XHRqUXVlcnkudGV4dCggdGhpcyApIDpcblx0XHRcdFx0dGhpcy5lbXB0eSgpLmVhY2goZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0XHR0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHR9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9LFxuXG5cdGFwcGVuZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuZG9tTWFuaXAoIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0dmFyIHRhcmdldCA9IG1hbmlwdWxhdGlvblRhcmdldCggdGhpcywgZWxlbSApO1xuXHRcdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoIGVsZW0gKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fSxcblxuXHRwcmVwZW5kOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5kb21NYW5pcCggYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHR2YXIgdGFyZ2V0ID0gbWFuaXB1bGF0aW9uVGFyZ2V0KCB0aGlzLCBlbGVtICk7XG5cdFx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoIGVsZW0sIHRhcmdldC5maXJzdENoaWxkICk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0sXG5cblx0YmVmb3JlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5kb21NYW5pcCggYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5wYXJlbnROb2RlICkge1xuXHRcdFx0XHR0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0aGlzICk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0sXG5cblx0YWZ0ZXI6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLmRvbU1hbmlwKCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoIGVsZW0sIHRoaXMubmV4dFNpYmxpbmcgKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fSxcblxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBzZWxlY3Rvciwga2VlcERhdGEgLyogSW50ZXJuYWwgVXNlIE9ubHkgKi8gKSB7XG5cdFx0dmFyIGVsZW0sXG5cdFx0XHRlbGVtcyA9IHNlbGVjdG9yID8galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIHRoaXMgKSA6IHRoaXMsXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgKGVsZW0gPSBlbGVtc1tpXSkgIT0gbnVsbDsgaSsrICkge1xuXHRcdFx0aWYgKCAha2VlcERhdGEgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCBlbGVtICkgKTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBlbGVtLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdGlmICgga2VlcERhdGEgJiYgalF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKSApIHtcblx0XHRcdFx0XHRzZXRHbG9iYWxFdmFsKCBnZXRBbGwoIGVsZW0sIFwic2NyaXB0XCIgKSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGVsZW0ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdGVtcHR5OiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZWxlbSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Zm9yICggOyAoZWxlbSA9IHRoaXNbaV0pICE9IG51bGw7IGkrKyApIHtcblx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblxuXHRcdFx0XHQvLyBQcmV2ZW50IG1lbW9yeSBsZWFrc1xuXHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIGVsZW0sIGZhbHNlICkgKTtcblxuXHRcdFx0XHQvLyBSZW1vdmUgYW55IHJlbWFpbmluZyBub2Rlc1xuXHRcdFx0XHRlbGVtLnRleHRDb250ZW50ID0gXCJcIjtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHRjbG9uZTogZnVuY3Rpb24oIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdGRhdGFBbmRFdmVudHMgPSBkYXRhQW5kRXZlbnRzID09IG51bGwgPyBmYWxzZSA6IGRhdGFBbmRFdmVudHM7XG5cdFx0ZGVlcERhdGFBbmRFdmVudHMgPSBkZWVwRGF0YUFuZEV2ZW50cyA9PSBudWxsID8gZGF0YUFuZEV2ZW50cyA6IGRlZXBEYXRhQW5kRXZlbnRzO1xuXG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5jbG9uZSggdGhpcywgZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKTtcblx0XHR9KTtcblx0fSxcblxuXHRodG1sOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGVsZW0gPSB0aGlzWyAwIF0gfHwge30sXG5cdFx0XHRcdGkgPSAwLFxuXHRcdFx0XHRsID0gdGhpcy5sZW5ndGg7XG5cblx0XHRcdGlmICggdmFsdWUgPT09IHVuZGVmaW5lZCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRyZXR1cm4gZWxlbS5pbm5lckhUTUw7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNlZSBpZiB3ZSBjYW4gdGFrZSBhIHNob3J0Y3V0IGFuZCBqdXN0IHVzZSBpbm5lckhUTUxcblx0XHRcdGlmICggdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmICFybm9Jbm5lcmh0bWwudGVzdCggdmFsdWUgKSAmJlxuXHRcdFx0XHQhd3JhcE1hcFsgKCBydGFnTmFtZS5leGVjKCB2YWx1ZSApIHx8IFsgXCJcIiwgXCJcIiBdIClbIDEgXS50b0xvd2VyQ2FzZSgpIF0gKSB7XG5cblx0XHRcdFx0dmFsdWUgPSB2YWx1ZS5yZXBsYWNlKCByeGh0bWxUYWcsIFwiPCQxPjwvJDI+XCIgKTtcblxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0XHRcdGVsZW0gPSB0aGlzWyBpIF0gfHwge307XG5cblx0XHRcdFx0XHRcdC8vIFJlbW92ZSBlbGVtZW50IG5vZGVzIGFuZCBwcmV2ZW50IG1lbW9yeSBsZWFrc1xuXHRcdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIGVsZW0sIGZhbHNlICkgKTtcblx0XHRcdFx0XHRcdFx0ZWxlbS5pbm5lckhUTUwgPSB2YWx1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRlbGVtID0gMDtcblxuXHRcdFx0XHQvLyBJZiB1c2luZyBpbm5lckhUTUwgdGhyb3dzIGFuIGV4Y2VwdGlvbiwgdXNlIHRoZSBmYWxsYmFjayBtZXRob2Rcblx0XHRcdFx0fSBjYXRjaCggZSApIHt9XG5cdFx0XHR9XG5cblx0XHRcdGlmICggZWxlbSApIHtcblx0XHRcdFx0dGhpcy5lbXB0eSgpLmFwcGVuZCggdmFsdWUgKTtcblx0XHRcdH1cblx0XHR9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9LFxuXG5cdHJlcGxhY2VXaXRoOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgYXJnID0gYXJndW1lbnRzWyAwIF07XG5cblx0XHQvLyBNYWtlIHRoZSBjaGFuZ2VzLCByZXBsYWNpbmcgZWFjaCBjb250ZXh0IGVsZW1lbnQgd2l0aCB0aGUgbmV3IGNvbnRlbnRcblx0XHR0aGlzLmRvbU1hbmlwKCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0YXJnID0gdGhpcy5wYXJlbnROb2RlO1xuXG5cdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIHRoaXMgKSApO1xuXG5cdFx0XHRpZiAoIGFyZyApIHtcblx0XHRcdFx0YXJnLnJlcGxhY2VDaGlsZCggZWxlbSwgdGhpcyApO1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdFx0Ly8gRm9yY2UgcmVtb3ZhbCBpZiB0aGVyZSB3YXMgbm8gbmV3IGNvbnRlbnQgKGUuZy4sIGZyb20gZW1wdHkgYXJndW1lbnRzKVxuXHRcdHJldHVybiBhcmcgJiYgKGFyZy5sZW5ndGggfHwgYXJnLm5vZGVUeXBlKSA/IHRoaXMgOiB0aGlzLnJlbW92ZSgpO1xuXHR9LFxuXG5cdGRldGFjaDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLnJlbW92ZSggc2VsZWN0b3IsIHRydWUgKTtcblx0fSxcblxuXHRkb21NYW5pcDogZnVuY3Rpb24oIGFyZ3MsIGNhbGxiYWNrICkge1xuXG5cdFx0Ly8gRmxhdHRlbiBhbnkgbmVzdGVkIGFycmF5c1xuXHRcdGFyZ3MgPSBjb25jYXQuYXBwbHkoIFtdLCBhcmdzICk7XG5cblx0XHR2YXIgZnJhZ21lbnQsIGZpcnN0LCBzY3JpcHRzLCBoYXNTY3JpcHRzLCBub2RlLCBkb2MsXG5cdFx0XHRpID0gMCxcblx0XHRcdGwgPSB0aGlzLmxlbmd0aCxcblx0XHRcdHNldCA9IHRoaXMsXG5cdFx0XHRpTm9DbG9uZSA9IGwgLSAxLFxuXHRcdFx0dmFsdWUgPSBhcmdzWyAwIF0sXG5cdFx0XHRpc0Z1bmN0aW9uID0galF1ZXJ5LmlzRnVuY3Rpb24oIHZhbHVlICk7XG5cblx0XHQvLyBXZSBjYW4ndCBjbG9uZU5vZGUgZnJhZ21lbnRzIHRoYXQgY29udGFpbiBjaGVja2VkLCBpbiBXZWJLaXRcblx0XHRpZiAoIGlzRnVuY3Rpb24gfHxcblx0XHRcdFx0KCBsID4gMSAmJiB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiZcblx0XHRcdFx0XHQhc3VwcG9ydC5jaGVja0Nsb25lICYmIHJjaGVja2VkLnRlc3QoIHZhbHVlICkgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oIGluZGV4ICkge1xuXHRcdFx0XHR2YXIgc2VsZiA9IHNldC5lcSggaW5kZXggKTtcblx0XHRcdFx0aWYgKCBpc0Z1bmN0aW9uICkge1xuXHRcdFx0XHRcdGFyZ3NbIDAgXSA9IHZhbHVlLmNhbGwoIHRoaXMsIGluZGV4LCBzZWxmLmh0bWwoKSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHNlbGYuZG9tTWFuaXAoIGFyZ3MsIGNhbGxiYWNrICk7XG5cdFx0XHR9KTtcblx0XHR9XG5cblx0XHRpZiAoIGwgKSB7XG5cdFx0XHRmcmFnbWVudCA9IGpRdWVyeS5idWlsZEZyYWdtZW50KCBhcmdzLCB0aGlzWyAwIF0ub3duZXJEb2N1bWVudCwgZmFsc2UsIHRoaXMgKTtcblx0XHRcdGZpcnN0ID0gZnJhZ21lbnQuZmlyc3RDaGlsZDtcblxuXHRcdFx0aWYgKCBmcmFnbWVudC5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMSApIHtcblx0XHRcdFx0ZnJhZ21lbnQgPSBmaXJzdDtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBmaXJzdCApIHtcblx0XHRcdFx0c2NyaXB0cyA9IGpRdWVyeS5tYXAoIGdldEFsbCggZnJhZ21lbnQsIFwic2NyaXB0XCIgKSwgZGlzYWJsZVNjcmlwdCApO1xuXHRcdFx0XHRoYXNTY3JpcHRzID0gc2NyaXB0cy5sZW5ndGg7XG5cblx0XHRcdFx0Ly8gVXNlIHRoZSBvcmlnaW5hbCBmcmFnbWVudCBmb3IgdGhlIGxhc3QgaXRlbSBpbnN0ZWFkIG9mIHRoZSBmaXJzdCBiZWNhdXNlIGl0IGNhbiBlbmQgdXBcblx0XHRcdFx0Ly8gYmVpbmcgZW1wdGllZCBpbmNvcnJlY3RseSBpbiBjZXJ0YWluIHNpdHVhdGlvbnMgKCM4MDcwKS5cblx0XHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdG5vZGUgPSBmcmFnbWVudDtcblxuXHRcdFx0XHRcdGlmICggaSAhPT0gaU5vQ2xvbmUgKSB7XG5cdFx0XHRcdFx0XHRub2RlID0galF1ZXJ5LmNsb25lKCBub2RlLCB0cnVlLCB0cnVlICk7XG5cblx0XHRcdFx0XHRcdC8vIEtlZXAgcmVmZXJlbmNlcyB0byBjbG9uZWQgc2NyaXB0cyBmb3IgbGF0ZXIgcmVzdG9yYXRpb25cblx0XHRcdFx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcblx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUXRXZWJLaXRcblx0XHRcdFx0XHRcdFx0Ly8galF1ZXJ5Lm1lcmdlIGJlY2F1c2UgcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93c1xuXHRcdFx0XHRcdFx0XHRqUXVlcnkubWVyZ2UoIHNjcmlwdHMsIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Y2FsbGJhY2suY2FsbCggdGhpc1sgaSBdLCBub2RlLCBpICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoIGhhc1NjcmlwdHMgKSB7XG5cdFx0XHRcdFx0ZG9jID0gc2NyaXB0c1sgc2NyaXB0cy5sZW5ndGggLSAxIF0ub3duZXJEb2N1bWVudDtcblxuXHRcdFx0XHRcdC8vIFJlZW5hYmxlIHNjcmlwdHNcblx0XHRcdFx0XHRqUXVlcnkubWFwKCBzY3JpcHRzLCByZXN0b3JlU2NyaXB0ICk7XG5cblx0XHRcdFx0XHQvLyBFdmFsdWF0ZSBleGVjdXRhYmxlIHNjcmlwdHMgb24gZmlyc3QgZG9jdW1lbnQgaW5zZXJ0aW9uXG5cdFx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBoYXNTY3JpcHRzOyBpKysgKSB7XG5cdFx0XHRcdFx0XHRub2RlID0gc2NyaXB0c1sgaSBdO1xuXHRcdFx0XHRcdFx0aWYgKCByc2NyaXB0VHlwZS50ZXN0KCBub2RlLnR5cGUgfHwgXCJcIiApICYmXG5cdFx0XHRcdFx0XHRcdCFkYXRhX3ByaXYuYWNjZXNzKCBub2RlLCBcImdsb2JhbEV2YWxcIiApICYmIGpRdWVyeS5jb250YWlucyggZG9jLCBub2RlICkgKSB7XG5cblx0XHRcdFx0XHRcdFx0aWYgKCBub2RlLnNyYyApIHtcblx0XHRcdFx0XHRcdFx0XHQvLyBPcHRpb25hbCBBSkFYIGRlcGVuZGVuY3ksIGJ1dCB3b24ndCBydW4gc2NyaXB0cyBpZiBub3QgcHJlc2VudFxuXHRcdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5Ll9ldmFsVXJsICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0alF1ZXJ5Ll9ldmFsVXJsKCBub2RlLnNyYyApO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuZ2xvYmFsRXZhbCggbm9kZS50ZXh0Q29udGVudC5yZXBsYWNlKCByY2xlYW5TY3JpcHQsIFwiXCIgKSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cbn0pO1xuXG5qUXVlcnkuZWFjaCh7XG5cdGFwcGVuZFRvOiBcImFwcGVuZFwiLFxuXHRwcmVwZW5kVG86IFwicHJlcGVuZFwiLFxuXHRpbnNlcnRCZWZvcmU6IFwiYmVmb3JlXCIsXG5cdGluc2VydEFmdGVyOiBcImFmdGVyXCIsXG5cdHJlcGxhY2VBbGw6IFwicmVwbGFjZVdpdGhcIlxufSwgZnVuY3Rpb24oIG5hbWUsIG9yaWdpbmFsICkge1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR2YXIgZWxlbXMsXG5cdFx0XHRyZXQgPSBbXSxcblx0XHRcdGluc2VydCA9IGpRdWVyeSggc2VsZWN0b3IgKSxcblx0XHRcdGxhc3QgPSBpbnNlcnQubGVuZ3RoIC0gMSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Zm9yICggOyBpIDw9IGxhc3Q7IGkrKyApIHtcblx0XHRcdGVsZW1zID0gaSA9PT0gbGFzdCA/IHRoaXMgOiB0aGlzLmNsb25lKCB0cnVlICk7XG5cdFx0XHRqUXVlcnkoIGluc2VydFsgaSBdIClbIG9yaWdpbmFsIF0oIGVsZW1zICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IFF0V2ViS2l0XG5cdFx0XHQvLyAuZ2V0KCkgYmVjYXVzZSBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzXG5cdFx0XHRwdXNoLmFwcGx5KCByZXQsIGVsZW1zLmdldCgpICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCByZXQgKTtcblx0fTtcbn0pO1xuXG5cbnZhciBpZnJhbWUsXG5cdGVsZW1kaXNwbGF5ID0ge307XG5cbi8qKlxuICogUmV0cmlldmUgdGhlIGFjdHVhbCBkaXNwbGF5IG9mIGEgZWxlbWVudFxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWUgbm9kZU5hbWUgb2YgdGhlIGVsZW1lbnRcbiAqIEBwYXJhbSB7T2JqZWN0fSBkb2MgRG9jdW1lbnQgb2JqZWN0XG4gKi9cbi8vIENhbGxlZCBvbmx5IGZyb20gd2l0aGluIGRlZmF1bHREaXNwbGF5XG5mdW5jdGlvbiBhY3R1YWxEaXNwbGF5KCBuYW1lLCBkb2MgKSB7XG5cdHZhciBzdHlsZSxcblx0XHRlbGVtID0galF1ZXJ5KCBkb2MuY3JlYXRlRWxlbWVudCggbmFtZSApICkuYXBwZW5kVG8oIGRvYy5ib2R5ICksXG5cblx0XHQvLyBnZXREZWZhdWx0Q29tcHV0ZWRTdHlsZSBtaWdodCBiZSByZWxpYWJseSB1c2VkIG9ubHkgb24gYXR0YWNoZWQgZWxlbWVudFxuXHRcdGRpc3BsYXkgPSB3aW5kb3cuZ2V0RGVmYXVsdENvbXB1dGVkU3R5bGUgJiYgKCBzdHlsZSA9IHdpbmRvdy5nZXREZWZhdWx0Q29tcHV0ZWRTdHlsZSggZWxlbVsgMCBdICkgKSA/XG5cblx0XHRcdC8vIFVzZSBvZiB0aGlzIG1ldGhvZCBpcyBhIHRlbXBvcmFyeSBmaXggKG1vcmUgbGlrZSBvcHRpbWl6YXRpb24pIHVudGlsIHNvbWV0aGluZyBiZXR0ZXIgY29tZXMgYWxvbmcsXG5cdFx0XHQvLyBzaW5jZSBpdCB3YXMgcmVtb3ZlZCBmcm9tIHNwZWNpZmljYXRpb24gYW5kIHN1cHBvcnRlZCBvbmx5IGluIEZGXG5cdFx0XHRzdHlsZS5kaXNwbGF5IDogalF1ZXJ5LmNzcyggZWxlbVsgMCBdLCBcImRpc3BsYXlcIiApO1xuXG5cdC8vIFdlIGRvbid0IGhhdmUgYW55IGRhdGEgc3RvcmVkIG9uIHRoZSBlbGVtZW50LFxuXHQvLyBzbyB1c2UgXCJkZXRhY2hcIiBtZXRob2QgYXMgZmFzdCB3YXkgdG8gZ2V0IHJpZCBvZiB0aGUgZWxlbWVudFxuXHRlbGVtLmRldGFjaCgpO1xuXG5cdHJldHVybiBkaXNwbGF5O1xufVxuXG4vKipcbiAqIFRyeSB0byBkZXRlcm1pbmUgdGhlIGRlZmF1bHQgZGlzcGxheSB2YWx1ZSBvZiBhbiBlbGVtZW50XG4gKiBAcGFyYW0ge1N0cmluZ30gbm9kZU5hbWVcbiAqL1xuZnVuY3Rpb24gZGVmYXVsdERpc3BsYXkoIG5vZGVOYW1lICkge1xuXHR2YXIgZG9jID0gZG9jdW1lbnQsXG5cdFx0ZGlzcGxheSA9IGVsZW1kaXNwbGF5WyBub2RlTmFtZSBdO1xuXG5cdGlmICggIWRpc3BsYXkgKSB7XG5cdFx0ZGlzcGxheSA9IGFjdHVhbERpc3BsYXkoIG5vZGVOYW1lLCBkb2MgKTtcblxuXHRcdC8vIElmIHRoZSBzaW1wbGUgd2F5IGZhaWxzLCByZWFkIGZyb20gaW5zaWRlIGFuIGlmcmFtZVxuXHRcdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgfHwgIWRpc3BsYXkgKSB7XG5cblx0XHRcdC8vIFVzZSB0aGUgYWxyZWFkeS1jcmVhdGVkIGlmcmFtZSBpZiBwb3NzaWJsZVxuXHRcdFx0aWZyYW1lID0gKGlmcmFtZSB8fCBqUXVlcnkoIFwiPGlmcmFtZSBmcmFtZWJvcmRlcj0nMCcgd2lkdGg9JzAnIGhlaWdodD0nMCcvPlwiICkpLmFwcGVuZFRvKCBkb2MuZG9jdW1lbnRFbGVtZW50ICk7XG5cblx0XHRcdC8vIEFsd2F5cyB3cml0ZSBhIG5ldyBIVE1MIHNrZWxldG9uIHNvIFdlYmtpdCBhbmQgRmlyZWZveCBkb24ndCBjaG9rZSBvbiByZXVzZVxuXHRcdFx0ZG9jID0gaWZyYW1lWyAwIF0uY29udGVudERvY3VtZW50O1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRVxuXHRcdFx0ZG9jLndyaXRlKCk7XG5cdFx0XHRkb2MuY2xvc2UoKTtcblxuXHRcdFx0ZGlzcGxheSA9IGFjdHVhbERpc3BsYXkoIG5vZGVOYW1lLCBkb2MgKTtcblx0XHRcdGlmcmFtZS5kZXRhY2goKTtcblx0XHR9XG5cblx0XHQvLyBTdG9yZSB0aGUgY29ycmVjdCBkZWZhdWx0IGRpc3BsYXlcblx0XHRlbGVtZGlzcGxheVsgbm9kZU5hbWUgXSA9IGRpc3BsYXk7XG5cdH1cblxuXHRyZXR1cm4gZGlzcGxheTtcbn1cbnZhciBybWFyZ2luID0gKC9ebWFyZ2luLyk7XG5cbnZhciBybnVtbm9ucHggPSBuZXcgUmVnRXhwKCBcIl4oXCIgKyBwbnVtICsgXCIpKD8hcHgpW2EteiVdKyRcIiwgXCJpXCIgKTtcblxudmFyIGdldFN0eWxlcyA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdC8vIFN1cHBvcnQ6IElFPD0xMSssIEZpcmVmb3g8PTMwKyAoIzE1MDk4LCAjMTQxNTApXG5cdFx0Ly8gSUUgdGhyb3dzIG9uIGVsZW1lbnRzIGNyZWF0ZWQgaW4gcG9wdXBzXG5cdFx0Ly8gRkYgbWVhbndoaWxlIHRocm93cyBvbiBmcmFtZSBlbGVtZW50cyB0aHJvdWdoIFwiZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZVwiXG5cdFx0aWYgKCBlbGVtLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcub3BlbmVyICkge1xuXHRcdFx0cmV0dXJuIGVsZW0ub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlKCBlbGVtLCBudWxsICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKCBlbGVtLCBudWxsICk7XG5cdH07XG5cblxuXG5mdW5jdGlvbiBjdXJDU1MoIGVsZW0sIG5hbWUsIGNvbXB1dGVkICkge1xuXHR2YXIgd2lkdGgsIG1pbldpZHRoLCBtYXhXaWR0aCwgcmV0LFxuXHRcdHN0eWxlID0gZWxlbS5zdHlsZTtcblxuXHRjb21wdXRlZCA9IGNvbXB1dGVkIHx8IGdldFN0eWxlcyggZWxlbSApO1xuXG5cdC8vIFN1cHBvcnQ6IElFOVxuXHQvLyBnZXRQcm9wZXJ0eVZhbHVlIGlzIG9ubHkgbmVlZGVkIGZvciAuY3NzKCdmaWx0ZXInKSAoIzEyNTM3KVxuXHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdHJldCA9IGNvbXB1dGVkLmdldFByb3BlcnR5VmFsdWUoIG5hbWUgKSB8fCBjb21wdXRlZFsgbmFtZSBdO1xuXHR9XG5cblx0aWYgKCBjb21wdXRlZCApIHtcblxuXHRcdGlmICggcmV0ID09PSBcIlwiICYmICFqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApICkge1xuXHRcdFx0cmV0ID0galF1ZXJ5LnN0eWxlKCBlbGVtLCBuYW1lICk7XG5cdFx0fVxuXG5cdFx0Ly8gU3VwcG9ydDogaU9TIDwgNlxuXHRcdC8vIEEgdHJpYnV0ZSB0byB0aGUgXCJhd2Vzb21lIGhhY2sgYnkgRGVhbiBFZHdhcmRzXCJcblx0XHQvLyBpT1MgPCA2IChhdCBsZWFzdCkgcmV0dXJucyBwZXJjZW50YWdlIGZvciBhIGxhcmdlciBzZXQgb2YgdmFsdWVzLCBidXQgd2lkdGggc2VlbXMgdG8gYmUgcmVsaWFibHkgcGl4ZWxzXG5cdFx0Ly8gdGhpcyBpcyBhZ2FpbnN0IHRoZSBDU1NPTSBkcmFmdCBzcGVjOiBodHRwOi8vZGV2LnczLm9yZy9jc3N3Zy9jc3NvbS8jcmVzb2x2ZWQtdmFsdWVzXG5cdFx0aWYgKCBybnVtbm9ucHgudGVzdCggcmV0ICkgJiYgcm1hcmdpbi50ZXN0KCBuYW1lICkgKSB7XG5cblx0XHRcdC8vIFJlbWVtYmVyIHRoZSBvcmlnaW5hbCB2YWx1ZXNcblx0XHRcdHdpZHRoID0gc3R5bGUud2lkdGg7XG5cdFx0XHRtaW5XaWR0aCA9IHN0eWxlLm1pbldpZHRoO1xuXHRcdFx0bWF4V2lkdGggPSBzdHlsZS5tYXhXaWR0aDtcblxuXHRcdFx0Ly8gUHV0IGluIHRoZSBuZXcgdmFsdWVzIHRvIGdldCBhIGNvbXB1dGVkIHZhbHVlIG91dFxuXHRcdFx0c3R5bGUubWluV2lkdGggPSBzdHlsZS5tYXhXaWR0aCA9IHN0eWxlLndpZHRoID0gcmV0O1xuXHRcdFx0cmV0ID0gY29tcHV0ZWQud2lkdGg7XG5cblx0XHRcdC8vIFJldmVydCB0aGUgY2hhbmdlZCB2YWx1ZXNcblx0XHRcdHN0eWxlLndpZHRoID0gd2lkdGg7XG5cdFx0XHRzdHlsZS5taW5XaWR0aCA9IG1pbldpZHRoO1xuXHRcdFx0c3R5bGUubWF4V2lkdGggPSBtYXhXaWR0aDtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gcmV0ICE9PSB1bmRlZmluZWQgP1xuXHRcdC8vIFN1cHBvcnQ6IElFXG5cdFx0Ly8gSUUgcmV0dXJucyB6SW5kZXggdmFsdWUgYXMgYW4gaW50ZWdlci5cblx0XHRyZXQgKyBcIlwiIDpcblx0XHRyZXQ7XG59XG5cblxuZnVuY3Rpb24gYWRkR2V0SG9va0lmKCBjb25kaXRpb25GbiwgaG9va0ZuICkge1xuXHQvLyBEZWZpbmUgdGhlIGhvb2ssIHdlJ2xsIGNoZWNrIG9uIHRoZSBmaXJzdCBydW4gaWYgaXQncyByZWFsbHkgbmVlZGVkLlxuXHRyZXR1cm4ge1xuXHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoIGNvbmRpdGlvbkZuKCkgKSB7XG5cdFx0XHRcdC8vIEhvb2sgbm90IG5lZWRlZCAob3IgaXQncyBub3QgcG9zc2libGUgdG8gdXNlIGl0IGR1ZVxuXHRcdFx0XHQvLyB0byBtaXNzaW5nIGRlcGVuZGVuY3kpLCByZW1vdmUgaXQuXG5cdFx0XHRcdGRlbGV0ZSB0aGlzLmdldDtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBIb29rIG5lZWRlZDsgcmVkZWZpbmUgaXQgc28gdGhhdCB0aGUgc3VwcG9ydCB0ZXN0IGlzIG5vdCBleGVjdXRlZCBhZ2Fpbi5cblx0XHRcdHJldHVybiAodGhpcy5nZXQgPSBob29rRm4pLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHR9XG5cdH07XG59XG5cblxuKGZ1bmN0aW9uKCkge1xuXHR2YXIgcGl4ZWxQb3NpdGlvblZhbCwgYm94U2l6aW5nUmVsaWFibGVWYWwsXG5cdFx0ZG9jRWxlbSA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxcblx0XHRjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICksXG5cdFx0ZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApO1xuXG5cdGlmICggIWRpdi5zdHlsZSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyBTdXBwb3J0OiBJRTktMTErXG5cdC8vIFN0eWxlIG9mIGNsb25lZCBlbGVtZW50IGFmZmVjdHMgc291cmNlIGVsZW1lbnQgY2xvbmVkICgjODkwOClcblx0ZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID0gXCJjb250ZW50LWJveFwiO1xuXHRkaXYuY2xvbmVOb2RlKCB0cnVlICkuc3R5bGUuYmFja2dyb3VuZENsaXAgPSBcIlwiO1xuXHRzdXBwb3J0LmNsZWFyQ2xvbmVTdHlsZSA9IGRpdi5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9PT0gXCJjb250ZW50LWJveFwiO1xuXG5cdGNvbnRhaW5lci5zdHlsZS5jc3NUZXh0ID0gXCJib3JkZXI6MDt3aWR0aDowO2hlaWdodDowO3RvcDowO2xlZnQ6LTk5OTlweDttYXJnaW4tdG9wOjFweDtcIiArXG5cdFx0XCJwb3NpdGlvbjphYnNvbHV0ZVwiO1xuXHRjb250YWluZXIuYXBwZW5kQ2hpbGQoIGRpdiApO1xuXG5cdC8vIEV4ZWN1dGluZyBib3RoIHBpeGVsUG9zaXRpb24gJiBib3hTaXppbmdSZWxpYWJsZSB0ZXN0cyByZXF1aXJlIG9ubHkgb25lIGxheW91dFxuXHQvLyBzbyB0aGV5J3JlIGV4ZWN1dGVkIGF0IHRoZSBzYW1lIHRpbWUgdG8gc2F2ZSB0aGUgc2Vjb25kIGNvbXB1dGF0aW9uLlxuXHRmdW5jdGlvbiBjb21wdXRlUGl4ZWxQb3NpdGlvbkFuZEJveFNpemluZ1JlbGlhYmxlKCkge1xuXHRcdGRpdi5zdHlsZS5jc3NUZXh0ID1cblx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3g8MjksIEFuZHJvaWQgMi4zXG5cdFx0XHQvLyBWZW5kb3ItcHJlZml4IGJveC1zaXppbmdcblx0XHRcdFwiLXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7LW1vei1ib3gtc2l6aW5nOmJvcmRlci1ib3g7XCIgK1xuXHRcdFx0XCJib3gtc2l6aW5nOmJvcmRlci1ib3g7ZGlzcGxheTpibG9jazttYXJnaW4tdG9wOjElO3RvcDoxJTtcIiArXG5cdFx0XHRcImJvcmRlcjoxcHg7cGFkZGluZzoxcHg7d2lkdGg6NHB4O3Bvc2l0aW9uOmFic29sdXRlXCI7XG5cdFx0ZGl2LmlubmVySFRNTCA9IFwiXCI7XG5cdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggY29udGFpbmVyICk7XG5cblx0XHR2YXIgZGl2U3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSggZGl2LCBudWxsICk7XG5cdFx0cGl4ZWxQb3NpdGlvblZhbCA9IGRpdlN0eWxlLnRvcCAhPT0gXCIxJVwiO1xuXHRcdGJveFNpemluZ1JlbGlhYmxlVmFsID0gZGl2U3R5bGUud2lkdGggPT09IFwiNHB4XCI7XG5cblx0XHRkb2NFbGVtLnJlbW92ZUNoaWxkKCBjb250YWluZXIgKTtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IG5vZGUuanMganNkb21cblx0Ly8gRG9uJ3QgYXNzdW1lIHRoYXQgZ2V0Q29tcHV0ZWRTdHlsZSBpcyBhIHByb3BlcnR5IG9mIHRoZSBnbG9iYWwgb2JqZWN0XG5cdGlmICggd2luZG93LmdldENvbXB1dGVkU3R5bGUgKSB7XG5cdFx0alF1ZXJ5LmV4dGVuZCggc3VwcG9ydCwge1xuXHRcdFx0cGl4ZWxQb3NpdGlvbjogZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0Ly8gVGhpcyB0ZXN0IGlzIGV4ZWN1dGVkIG9ubHkgb25jZSBidXQgd2Ugc3RpbGwgZG8gbWVtb2l6aW5nXG5cdFx0XHRcdC8vIHNpbmNlIHdlIGNhbiB1c2UgdGhlIGJveFNpemluZ1JlbGlhYmxlIHByZS1jb21wdXRpbmcuXG5cdFx0XHRcdC8vIE5vIG5lZWQgdG8gY2hlY2sgaWYgdGhlIHRlc3Qgd2FzIGFscmVhZHkgcGVyZm9ybWVkLCB0aG91Z2guXG5cdFx0XHRcdGNvbXB1dGVQaXhlbFBvc2l0aW9uQW5kQm94U2l6aW5nUmVsaWFibGUoKTtcblx0XHRcdFx0cmV0dXJuIHBpeGVsUG9zaXRpb25WYWw7XG5cdFx0XHR9LFxuXHRcdFx0Ym94U2l6aW5nUmVsaWFibGU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGJveFNpemluZ1JlbGlhYmxlVmFsID09IG51bGwgKSB7XG5cdFx0XHRcdFx0Y29tcHV0ZVBpeGVsUG9zaXRpb25BbmRCb3hTaXppbmdSZWxpYWJsZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBib3hTaXppbmdSZWxpYWJsZVZhbDtcblx0XHRcdH0sXG5cdFx0XHRyZWxpYWJsZU1hcmdpblJpZ2h0OiBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDIuM1xuXHRcdFx0XHQvLyBDaGVjayBpZiBkaXYgd2l0aCBleHBsaWNpdCB3aWR0aCBhbmQgbm8gbWFyZ2luLXJpZ2h0IGluY29ycmVjdGx5XG5cdFx0XHRcdC8vIGdldHMgY29tcHV0ZWQgbWFyZ2luLXJpZ2h0IGJhc2VkIG9uIHdpZHRoIG9mIGNvbnRhaW5lci4gKCMzMzMzKVxuXHRcdFx0XHQvLyBXZWJLaXQgQnVnIDEzMzQzIC0gZ2V0Q29tcHV0ZWRTdHlsZSByZXR1cm5zIHdyb25nIHZhbHVlIGZvciBtYXJnaW4tcmlnaHRcblx0XHRcdFx0Ly8gVGhpcyBzdXBwb3J0IGZ1bmN0aW9uIGlzIG9ubHkgZXhlY3V0ZWQgb25jZSBzbyBubyBtZW1vaXppbmcgaXMgbmVlZGVkLlxuXHRcdFx0XHR2YXIgcmV0LFxuXHRcdFx0XHRcdG1hcmdpbkRpdiA9IGRpdi5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICk7XG5cblx0XHRcdFx0Ly8gUmVzZXQgQ1NTOiBib3gtc2l6aW5nOyBkaXNwbGF5OyBtYXJnaW47IGJvcmRlcjsgcGFkZGluZ1xuXHRcdFx0XHRtYXJnaW5EaXYuc3R5bGUuY3NzVGV4dCA9IGRpdi5zdHlsZS5jc3NUZXh0ID1cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94PDI5LCBBbmRyb2lkIDIuM1xuXHRcdFx0XHRcdC8vIFZlbmRvci1wcmVmaXggYm94LXNpemluZ1xuXHRcdFx0XHRcdFwiLXdlYmtpdC1ib3gtc2l6aW5nOmNvbnRlbnQtYm94Oy1tb3otYm94LXNpemluZzpjb250ZW50LWJveDtcIiArXG5cdFx0XHRcdFx0XCJib3gtc2l6aW5nOmNvbnRlbnQtYm94O2Rpc3BsYXk6YmxvY2s7bWFyZ2luOjA7Ym9yZGVyOjA7cGFkZGluZzowXCI7XG5cdFx0XHRcdG1hcmdpbkRpdi5zdHlsZS5tYXJnaW5SaWdodCA9IG1hcmdpbkRpdi5zdHlsZS53aWR0aCA9IFwiMFwiO1xuXHRcdFx0XHRkaXYuc3R5bGUud2lkdGggPSBcIjFweFwiO1xuXHRcdFx0XHRkb2NFbGVtLmFwcGVuZENoaWxkKCBjb250YWluZXIgKTtcblxuXHRcdFx0XHRyZXQgPSAhcGFyc2VGbG9hdCggd2luZG93LmdldENvbXB1dGVkU3R5bGUoIG1hcmdpbkRpdiwgbnVsbCApLm1hcmdpblJpZ2h0ICk7XG5cblx0XHRcdFx0ZG9jRWxlbS5yZW1vdmVDaGlsZCggY29udGFpbmVyICk7XG5cdFx0XHRcdGRpdi5yZW1vdmVDaGlsZCggbWFyZ2luRGl2ICk7XG5cblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblx0XHR9KTtcblx0fVxufSkoKTtcblxuXG4vLyBBIG1ldGhvZCBmb3IgcXVpY2tseSBzd2FwcGluZyBpbi9vdXQgQ1NTIHByb3BlcnRpZXMgdG8gZ2V0IGNvcnJlY3QgY2FsY3VsYXRpb25zLlxualF1ZXJ5LnN3YXAgPSBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgY2FsbGJhY2ssIGFyZ3MgKSB7XG5cdHZhciByZXQsIG5hbWUsXG5cdFx0b2xkID0ge307XG5cblx0Ly8gUmVtZW1iZXIgdGhlIG9sZCB2YWx1ZXMsIGFuZCBpbnNlcnQgdGhlIG5ldyBvbmVzXG5cdGZvciAoIG5hbWUgaW4gb3B0aW9ucyApIHtcblx0XHRvbGRbIG5hbWUgXSA9IGVsZW0uc3R5bGVbIG5hbWUgXTtcblx0XHRlbGVtLnN0eWxlWyBuYW1lIF0gPSBvcHRpb25zWyBuYW1lIF07XG5cdH1cblxuXHRyZXQgPSBjYWxsYmFjay5hcHBseSggZWxlbSwgYXJncyB8fCBbXSApO1xuXG5cdC8vIFJldmVydCB0aGUgb2xkIHZhbHVlc1xuXHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb2xkWyBuYW1lIF07XG5cdH1cblxuXHRyZXR1cm4gcmV0O1xufTtcblxuXG52YXJcblx0Ly8gU3dhcHBhYmxlIGlmIGRpc3BsYXkgaXMgbm9uZSBvciBzdGFydHMgd2l0aCB0YWJsZSBleGNlcHQgXCJ0YWJsZVwiLCBcInRhYmxlLWNlbGxcIiwgb3IgXCJ0YWJsZS1jYXB0aW9uXCJcblx0Ly8gU2VlIGhlcmUgZm9yIGRpc3BsYXkgdmFsdWVzOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL0NTUy9kaXNwbGF5XG5cdHJkaXNwbGF5c3dhcCA9IC9eKG5vbmV8dGFibGUoPyEtY1tlYV0pLispLyxcblx0cm51bXNwbGl0ID0gbmV3IFJlZ0V4cCggXCJeKFwiICsgcG51bSArIFwiKSguKikkXCIsIFwiaVwiICksXG5cdHJyZWxOdW0gPSBuZXcgUmVnRXhwKCBcIl4oWystXSk9KFwiICsgcG51bSArIFwiKVwiLCBcImlcIiApLFxuXG5cdGNzc1Nob3cgPSB7IHBvc2l0aW9uOiBcImFic29sdXRlXCIsIHZpc2liaWxpdHk6IFwiaGlkZGVuXCIsIGRpc3BsYXk6IFwiYmxvY2tcIiB9LFxuXHRjc3NOb3JtYWxUcmFuc2Zvcm0gPSB7XG5cdFx0bGV0dGVyU3BhY2luZzogXCIwXCIsXG5cdFx0Zm9udFdlaWdodDogXCI0MDBcIlxuXHR9LFxuXG5cdGNzc1ByZWZpeGVzID0gWyBcIldlYmtpdFwiLCBcIk9cIiwgXCJNb3pcIiwgXCJtc1wiIF07XG5cbi8vIFJldHVybiBhIGNzcyBwcm9wZXJ0eSBtYXBwZWQgdG8gYSBwb3RlbnRpYWxseSB2ZW5kb3IgcHJlZml4ZWQgcHJvcGVydHlcbmZ1bmN0aW9uIHZlbmRvclByb3BOYW1lKCBzdHlsZSwgbmFtZSApIHtcblxuXHQvLyBTaG9ydGN1dCBmb3IgbmFtZXMgdGhhdCBhcmUgbm90IHZlbmRvciBwcmVmaXhlZFxuXHRpZiAoIG5hbWUgaW4gc3R5bGUgKSB7XG5cdFx0cmV0dXJuIG5hbWU7XG5cdH1cblxuXHQvLyBDaGVjayBmb3IgdmVuZG9yIHByZWZpeGVkIG5hbWVzXG5cdHZhciBjYXBOYW1lID0gbmFtZVswXS50b1VwcGVyQ2FzZSgpICsgbmFtZS5zbGljZSgxKSxcblx0XHRvcmlnTmFtZSA9IG5hbWUsXG5cdFx0aSA9IGNzc1ByZWZpeGVzLmxlbmd0aDtcblxuXHR3aGlsZSAoIGktLSApIHtcblx0XHRuYW1lID0gY3NzUHJlZml4ZXNbIGkgXSArIGNhcE5hbWU7XG5cdFx0aWYgKCBuYW1lIGluIHN0eWxlICkge1xuXHRcdFx0cmV0dXJuIG5hbWU7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIG9yaWdOYW1lO1xufVxuXG5mdW5jdGlvbiBzZXRQb3NpdGl2ZU51bWJlciggZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICkge1xuXHR2YXIgbWF0Y2hlcyA9IHJudW1zcGxpdC5leGVjKCB2YWx1ZSApO1xuXHRyZXR1cm4gbWF0Y2hlcyA/XG5cdFx0Ly8gR3VhcmQgYWdhaW5zdCB1bmRlZmluZWQgXCJzdWJ0cmFjdFwiLCBlLmcuLCB3aGVuIHVzZWQgYXMgaW4gY3NzSG9va3Ncblx0XHRNYXRoLm1heCggMCwgbWF0Y2hlc1sgMSBdIC0gKCBzdWJ0cmFjdCB8fCAwICkgKSArICggbWF0Y2hlc1sgMiBdIHx8IFwicHhcIiApIDpcblx0XHR2YWx1ZTtcbn1cblxuZnVuY3Rpb24gYXVnbWVudFdpZHRoT3JIZWlnaHQoIGVsZW0sIG5hbWUsIGV4dHJhLCBpc0JvcmRlckJveCwgc3R5bGVzICkge1xuXHR2YXIgaSA9IGV4dHJhID09PSAoIGlzQm9yZGVyQm94ID8gXCJib3JkZXJcIiA6IFwiY29udGVudFwiICkgP1xuXHRcdC8vIElmIHdlIGFscmVhZHkgaGF2ZSB0aGUgcmlnaHQgbWVhc3VyZW1lbnQsIGF2b2lkIGF1Z21lbnRhdGlvblxuXHRcdDQgOlxuXHRcdC8vIE90aGVyd2lzZSBpbml0aWFsaXplIGZvciBob3Jpem9udGFsIG9yIHZlcnRpY2FsIHByb3BlcnRpZXNcblx0XHRuYW1lID09PSBcIndpZHRoXCIgPyAxIDogMCxcblxuXHRcdHZhbCA9IDA7XG5cblx0Zm9yICggOyBpIDwgNDsgaSArPSAyICkge1xuXHRcdC8vIEJvdGggYm94IG1vZGVscyBleGNsdWRlIG1hcmdpbiwgc28gYWRkIGl0IGlmIHdlIHdhbnQgaXRcblx0XHRpZiAoIGV4dHJhID09PSBcIm1hcmdpblwiICkge1xuXHRcdFx0dmFsICs9IGpRdWVyeS5jc3MoIGVsZW0sIGV4dHJhICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xuXHRcdH1cblxuXHRcdGlmICggaXNCb3JkZXJCb3ggKSB7XG5cdFx0XHQvLyBib3JkZXItYm94IGluY2x1ZGVzIHBhZGRpbmcsIHNvIHJlbW92ZSBpdCBpZiB3ZSB3YW50IGNvbnRlbnRcblx0XHRcdGlmICggZXh0cmEgPT09IFwiY29udGVudFwiICkge1xuXHRcdFx0XHR2YWwgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEF0IHRoaXMgcG9pbnQsIGV4dHJhIGlzbid0IGJvcmRlciBub3IgbWFyZ2luLCBzbyByZW1vdmUgYm9yZGVyXG5cdFx0XHRpZiAoIGV4dHJhICE9PSBcIm1hcmdpblwiICkge1xuXHRcdFx0XHR2YWwgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gQXQgdGhpcyBwb2ludCwgZXh0cmEgaXNuJ3QgY29udGVudCwgc28gYWRkIHBhZGRpbmdcblx0XHRcdHZhbCArPSBqUXVlcnkuY3NzKCBlbGVtLCBcInBhZGRpbmdcIiArIGNzc0V4cGFuZFsgaSBdLCB0cnVlLCBzdHlsZXMgKTtcblxuXHRcdFx0Ly8gQXQgdGhpcyBwb2ludCwgZXh0cmEgaXNuJ3QgY29udGVudCBub3IgcGFkZGluZywgc28gYWRkIGJvcmRlclxuXHRcdFx0aWYgKCBleHRyYSAhPT0gXCJwYWRkaW5nXCIgKSB7XG5cdFx0XHRcdHZhbCArPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJvcmRlclwiICsgY3NzRXhwYW5kWyBpIF0gKyBcIldpZHRoXCIsIHRydWUsIHN0eWxlcyApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB2YWw7XG59XG5cbmZ1bmN0aW9uIGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIG5hbWUsIGV4dHJhICkge1xuXG5cdC8vIFN0YXJ0IHdpdGggb2Zmc2V0IHByb3BlcnR5LCB3aGljaCBpcyBlcXVpdmFsZW50IHRvIHRoZSBib3JkZXItYm94IHZhbHVlXG5cdHZhciB2YWx1ZUlzQm9yZGVyQm94ID0gdHJ1ZSxcblx0XHR2YWwgPSBuYW1lID09PSBcIndpZHRoXCIgPyBlbGVtLm9mZnNldFdpZHRoIDogZWxlbS5vZmZzZXRIZWlnaHQsXG5cdFx0c3R5bGVzID0gZ2V0U3R5bGVzKCBlbGVtICksXG5cdFx0aXNCb3JkZXJCb3ggPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiO1xuXG5cdC8vIFNvbWUgbm9uLWh0bWwgZWxlbWVudHMgcmV0dXJuIHVuZGVmaW5lZCBmb3Igb2Zmc2V0V2lkdGgsIHNvIGNoZWNrIGZvciBudWxsL3VuZGVmaW5lZFxuXHQvLyBzdmcgLSBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD02NDkyODVcblx0Ly8gTWF0aE1MIC0gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NDkxNjY4XG5cdGlmICggdmFsIDw9IDAgfHwgdmFsID09IG51bGwgKSB7XG5cdFx0Ly8gRmFsbCBiYWNrIHRvIGNvbXB1dGVkIHRoZW4gdW5jb21wdXRlZCBjc3MgaWYgbmVjZXNzYXJ5XG5cdFx0dmFsID0gY3VyQ1NTKCBlbGVtLCBuYW1lLCBzdHlsZXMgKTtcblx0XHRpZiAoIHZhbCA8IDAgfHwgdmFsID09IG51bGwgKSB7XG5cdFx0XHR2YWwgPSBlbGVtLnN0eWxlWyBuYW1lIF07XG5cdFx0fVxuXG5cdFx0Ly8gQ29tcHV0ZWQgdW5pdCBpcyBub3QgcGl4ZWxzLiBTdG9wIGhlcmUgYW5kIHJldHVybi5cblx0XHRpZiAoIHJudW1ub25weC50ZXN0KHZhbCkgKSB7XG5cdFx0XHRyZXR1cm4gdmFsO1xuXHRcdH1cblxuXHRcdC8vIENoZWNrIGZvciBzdHlsZSBpbiBjYXNlIGEgYnJvd3NlciB3aGljaCByZXR1cm5zIHVucmVsaWFibGUgdmFsdWVzXG5cdFx0Ly8gZm9yIGdldENvbXB1dGVkU3R5bGUgc2lsZW50bHkgZmFsbHMgYmFjayB0byB0aGUgcmVsaWFibGUgZWxlbS5zdHlsZVxuXHRcdHZhbHVlSXNCb3JkZXJCb3ggPSBpc0JvcmRlckJveCAmJlxuXHRcdFx0KCBzdXBwb3J0LmJveFNpemluZ1JlbGlhYmxlKCkgfHwgdmFsID09PSBlbGVtLnN0eWxlWyBuYW1lIF0gKTtcblxuXHRcdC8vIE5vcm1hbGl6ZSBcIlwiLCBhdXRvLCBhbmQgcHJlcGFyZSBmb3IgZXh0cmFcblx0XHR2YWwgPSBwYXJzZUZsb2F0KCB2YWwgKSB8fCAwO1xuXHR9XG5cblx0Ly8gVXNlIHRoZSBhY3RpdmUgYm94LXNpemluZyBtb2RlbCB0byBhZGQvc3VidHJhY3QgaXJyZWxldmFudCBzdHlsZXNcblx0cmV0dXJuICggdmFsICtcblx0XHRhdWdtZW50V2lkdGhPckhlaWdodChcblx0XHRcdGVsZW0sXG5cdFx0XHRuYW1lLFxuXHRcdFx0ZXh0cmEgfHwgKCBpc0JvcmRlckJveCA/IFwiYm9yZGVyXCIgOiBcImNvbnRlbnRcIiApLFxuXHRcdFx0dmFsdWVJc0JvcmRlckJveCxcblx0XHRcdHN0eWxlc1xuXHRcdClcblx0KSArIFwicHhcIjtcbn1cblxuZnVuY3Rpb24gc2hvd0hpZGUoIGVsZW1lbnRzLCBzaG93ICkge1xuXHR2YXIgZGlzcGxheSwgZWxlbSwgaGlkZGVuLFxuXHRcdHZhbHVlcyA9IFtdLFxuXHRcdGluZGV4ID0gMCxcblx0XHRsZW5ndGggPSBlbGVtZW50cy5sZW5ndGg7XG5cblx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRlbGVtID0gZWxlbWVudHNbIGluZGV4IF07XG5cdFx0aWYgKCAhZWxlbS5zdHlsZSApIHtcblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdHZhbHVlc1sgaW5kZXggXSA9IGRhdGFfcHJpdi5nZXQoIGVsZW0sIFwib2xkZGlzcGxheVwiICk7XG5cdFx0ZGlzcGxheSA9IGVsZW0uc3R5bGUuZGlzcGxheTtcblx0XHRpZiAoIHNob3cgKSB7XG5cdFx0XHQvLyBSZXNldCB0aGUgaW5saW5lIGRpc3BsYXkgb2YgdGhpcyBlbGVtZW50IHRvIGxlYXJuIGlmIGl0IGlzXG5cdFx0XHQvLyBiZWluZyBoaWRkZW4gYnkgY2FzY2FkZWQgcnVsZXMgb3Igbm90XG5cdFx0XHRpZiAoICF2YWx1ZXNbIGluZGV4IF0gJiYgZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0XHRcdGVsZW0uc3R5bGUuZGlzcGxheSA9IFwiXCI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNldCBlbGVtZW50cyB3aGljaCBoYXZlIGJlZW4gb3ZlcnJpZGRlbiB3aXRoIGRpc3BsYXk6IG5vbmVcblx0XHRcdC8vIGluIGEgc3R5bGVzaGVldCB0byB3aGF0ZXZlciB0aGUgZGVmYXVsdCBicm93c2VyIHN0eWxlIGlzXG5cdFx0XHQvLyBmb3Igc3VjaCBhbiBlbGVtZW50XG5cdFx0XHRpZiAoIGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJcIiAmJiBpc0hpZGRlbiggZWxlbSApICkge1xuXHRcdFx0XHR2YWx1ZXNbIGluZGV4IF0gPSBkYXRhX3ByaXYuYWNjZXNzKCBlbGVtLCBcIm9sZGRpc3BsYXlcIiwgZGVmYXVsdERpc3BsYXkoZWxlbS5ub2RlTmFtZSkgKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0aGlkZGVuID0gaXNIaWRkZW4oIGVsZW0gKTtcblxuXHRcdFx0aWYgKCBkaXNwbGF5ICE9PSBcIm5vbmVcIiB8fCAhaGlkZGVuICkge1xuXHRcdFx0XHRkYXRhX3ByaXYuc2V0KCBlbGVtLCBcIm9sZGRpc3BsYXlcIiwgaGlkZGVuID8gZGlzcGxheSA6IGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiICkgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBTZXQgdGhlIGRpc3BsYXkgb2YgbW9zdCBvZiB0aGUgZWxlbWVudHMgaW4gYSBzZWNvbmQgbG9vcFxuXHQvLyB0byBhdm9pZCB0aGUgY29uc3RhbnQgcmVmbG93XG5cdGZvciAoIGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0ZWxlbSA9IGVsZW1lbnRzWyBpbmRleCBdO1xuXHRcdGlmICggIWVsZW0uc3R5bGUgKSB7XG5cdFx0XHRjb250aW51ZTtcblx0XHR9XG5cdFx0aWYgKCAhc2hvdyB8fCBlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwibm9uZVwiIHx8IGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJcIiApIHtcblx0XHRcdGVsZW0uc3R5bGUuZGlzcGxheSA9IHNob3cgPyB2YWx1ZXNbIGluZGV4IF0gfHwgXCJcIiA6IFwibm9uZVwiO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBlbGVtZW50cztcbn1cblxualF1ZXJ5LmV4dGVuZCh7XG5cblx0Ly8gQWRkIGluIHN0eWxlIHByb3BlcnR5IGhvb2tzIGZvciBvdmVycmlkaW5nIHRoZSBkZWZhdWx0XG5cdC8vIGJlaGF2aW9yIG9mIGdldHRpbmcgYW5kIHNldHRpbmcgYSBzdHlsZSBwcm9wZXJ0eVxuXHRjc3NIb29rczoge1xuXHRcdG9wYWNpdHk6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xuXHRcdFx0XHRpZiAoIGNvbXB1dGVkICkge1xuXG5cdFx0XHRcdFx0Ly8gV2Ugc2hvdWxkIGFsd2F5cyBnZXQgYSBudW1iZXIgYmFjayBmcm9tIG9wYWNpdHlcblx0XHRcdFx0XHR2YXIgcmV0ID0gY3VyQ1NTKCBlbGVtLCBcIm9wYWNpdHlcIiApO1xuXHRcdFx0XHRcdHJldHVybiByZXQgPT09IFwiXCIgPyBcIjFcIiA6IHJldDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHQvLyBEb24ndCBhdXRvbWF0aWNhbGx5IGFkZCBcInB4XCIgdG8gdGhlc2UgcG9zc2libHktdW5pdGxlc3MgcHJvcGVydGllc1xuXHRjc3NOdW1iZXI6IHtcblx0XHRcImNvbHVtbkNvdW50XCI6IHRydWUsXG5cdFx0XCJmaWxsT3BhY2l0eVwiOiB0cnVlLFxuXHRcdFwiZmxleEdyb3dcIjogdHJ1ZSxcblx0XHRcImZsZXhTaHJpbmtcIjogdHJ1ZSxcblx0XHRcImZvbnRXZWlnaHRcIjogdHJ1ZSxcblx0XHRcImxpbmVIZWlnaHRcIjogdHJ1ZSxcblx0XHRcIm9wYWNpdHlcIjogdHJ1ZSxcblx0XHRcIm9yZGVyXCI6IHRydWUsXG5cdFx0XCJvcnBoYW5zXCI6IHRydWUsXG5cdFx0XCJ3aWRvd3NcIjogdHJ1ZSxcblx0XHRcInpJbmRleFwiOiB0cnVlLFxuXHRcdFwiem9vbVwiOiB0cnVlXG5cdH0sXG5cblx0Ly8gQWRkIGluIHByb3BlcnRpZXMgd2hvc2UgbmFtZXMgeW91IHdpc2ggdG8gZml4IGJlZm9yZVxuXHQvLyBzZXR0aW5nIG9yIGdldHRpbmcgdGhlIHZhbHVlXG5cdGNzc1Byb3BzOiB7XG5cdFx0XCJmbG9hdFwiOiBcImNzc0Zsb2F0XCJcblx0fSxcblxuXHQvLyBHZXQgYW5kIHNldCB0aGUgc3R5bGUgcHJvcGVydHkgb24gYSBET00gTm9kZVxuXHRzdHlsZTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlLCBleHRyYSApIHtcblxuXHRcdC8vIERvbid0IHNldCBzdHlsZXMgb24gdGV4dCBhbmQgY29tbWVudCBub2Rlc1xuXHRcdGlmICggIWVsZW0gfHwgZWxlbS5ub2RlVHlwZSA9PT0gMyB8fCBlbGVtLm5vZGVUeXBlID09PSA4IHx8ICFlbGVtLnN0eWxlICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZVxuXHRcdHZhciByZXQsIHR5cGUsIGhvb2tzLFxuXHRcdFx0b3JpZ05hbWUgPSBqUXVlcnkuY2FtZWxDYXNlKCBuYW1lICksXG5cdFx0XHRzdHlsZSA9IGVsZW0uc3R5bGU7XG5cblx0XHRuYW1lID0galF1ZXJ5LmNzc1Byb3BzWyBvcmlnTmFtZSBdIHx8ICggalF1ZXJ5LmNzc1Byb3BzWyBvcmlnTmFtZSBdID0gdmVuZG9yUHJvcE5hbWUoIHN0eWxlLCBvcmlnTmFtZSApICk7XG5cblx0XHQvLyBHZXRzIGhvb2sgZm9yIHRoZSBwcmVmaXhlZCB2ZXJzaW9uLCB0aGVuIHVucHJlZml4ZWQgdmVyc2lvblxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gfHwgalF1ZXJ5LmNzc0hvb2tzWyBvcmlnTmFtZSBdO1xuXG5cdFx0Ly8gQ2hlY2sgaWYgd2UncmUgc2V0dGluZyBhIHZhbHVlXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dHlwZSA9IHR5cGVvZiB2YWx1ZTtcblxuXHRcdFx0Ly8gQ29udmVydCBcIis9XCIgb3IgXCItPVwiIHRvIHJlbGF0aXZlIG51bWJlcnMgKCM3MzQ1KVxuXHRcdFx0aWYgKCB0eXBlID09PSBcInN0cmluZ1wiICYmIChyZXQgPSBycmVsTnVtLmV4ZWMoIHZhbHVlICkpICkge1xuXHRcdFx0XHR2YWx1ZSA9ICggcmV0WzFdICsgMSApICogcmV0WzJdICsgcGFyc2VGbG9hdCggalF1ZXJ5LmNzcyggZWxlbSwgbmFtZSApICk7XG5cdFx0XHRcdC8vIEZpeGVzIGJ1ZyAjOTIzN1xuXHRcdFx0XHR0eXBlID0gXCJudW1iZXJcIjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTWFrZSBzdXJlIHRoYXQgbnVsbCBhbmQgTmFOIHZhbHVlcyBhcmVuJ3Qgc2V0ICgjNzExNilcblx0XHRcdGlmICggdmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSAhPT0gdmFsdWUgKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgYSBudW1iZXIsIGFkZCAncHgnIHRvIHRoZSAoZXhjZXB0IGZvciBjZXJ0YWluIENTUyBwcm9wZXJ0aWVzKVxuXHRcdFx0aWYgKCB0eXBlID09PSBcIm51bWJlclwiICYmICFqUXVlcnkuY3NzTnVtYmVyWyBvcmlnTmFtZSBdICkge1xuXHRcdFx0XHR2YWx1ZSArPSBcInB4XCI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOS0xMStcblx0XHRcdC8vIGJhY2tncm91bmQtKiBwcm9wcyBhZmZlY3Qgb3JpZ2luYWwgY2xvbmUncyB2YWx1ZXNcblx0XHRcdGlmICggIXN1cHBvcnQuY2xlYXJDbG9uZVN0eWxlICYmIHZhbHVlID09PSBcIlwiICYmIG5hbWUuaW5kZXhPZiggXCJiYWNrZ3JvdW5kXCIgKSA9PT0gMCApIHtcblx0XHRcdFx0c3R5bGVbIG5hbWUgXSA9IFwiaW5oZXJpdFwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkLCB1c2UgdGhhdCB2YWx1ZSwgb3RoZXJ3aXNlIGp1c3Qgc2V0IHRoZSBzcGVjaWZpZWQgdmFsdWVcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoXCJzZXRcIiBpbiBob29rcykgfHwgKHZhbHVlID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgZXh0cmEgKSkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0c3R5bGVbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0fVxuXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQgZ2V0IHRoZSBub24tY29tcHV0ZWQgdmFsdWUgZnJvbSB0aGVyZVxuXHRcdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmIChyZXQgPSBob29rcy5nZXQoIGVsZW0sIGZhbHNlLCBleHRyYSApKSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBPdGhlcndpc2UganVzdCBnZXQgdGhlIHZhbHVlIGZyb20gdGhlIHN0eWxlIG9iamVjdFxuXHRcdFx0cmV0dXJuIHN0eWxlWyBuYW1lIF07XG5cdFx0fVxuXHR9LFxuXG5cdGNzczogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGV4dHJhLCBzdHlsZXMgKSB7XG5cdFx0dmFyIHZhbCwgbnVtLCBob29rcyxcblx0XHRcdG9yaWdOYW1lID0galF1ZXJ5LmNhbWVsQ2FzZSggbmFtZSApO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lXG5cdFx0bmFtZSA9IGpRdWVyeS5jc3NQcm9wc1sgb3JpZ05hbWUgXSB8fCAoIGpRdWVyeS5jc3NQcm9wc1sgb3JpZ05hbWUgXSA9IHZlbmRvclByb3BOYW1lKCBlbGVtLnN0eWxlLCBvcmlnTmFtZSApICk7XG5cblx0XHQvLyBUcnkgcHJlZml4ZWQgbmFtZSBmb2xsb3dlZCBieSB0aGUgdW5wcmVmaXhlZCBuYW1lXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXSB8fCBqUXVlcnkuY3NzSG9va3NbIG9yaWdOYW1lIF07XG5cblx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkIGdldCB0aGUgY29tcHV0ZWQgdmFsdWUgZnJvbSB0aGVyZVxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyApIHtcblx0XHRcdHZhbCA9IGhvb2tzLmdldCggZWxlbSwgdHJ1ZSwgZXh0cmEgKTtcblx0XHR9XG5cblx0XHQvLyBPdGhlcndpc2UsIGlmIGEgd2F5IHRvIGdldCB0aGUgY29tcHV0ZWQgdmFsdWUgZXhpc3RzLCB1c2UgdGhhdFxuXHRcdGlmICggdmFsID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHR2YWwgPSBjdXJDU1MoIGVsZW0sIG5hbWUsIHN0eWxlcyApO1xuXHRcdH1cblxuXHRcdC8vIENvbnZlcnQgXCJub3JtYWxcIiB0byBjb21wdXRlZCB2YWx1ZVxuXHRcdGlmICggdmFsID09PSBcIm5vcm1hbFwiICYmIG5hbWUgaW4gY3NzTm9ybWFsVHJhbnNmb3JtICkge1xuXHRcdFx0dmFsID0gY3NzTm9ybWFsVHJhbnNmb3JtWyBuYW1lIF07XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBudW1lcmljIGlmIGZvcmNlZCBvciBhIHF1YWxpZmllciB3YXMgcHJvdmlkZWQgYW5kIHZhbCBsb29rcyBudW1lcmljXG5cdFx0aWYgKCBleHRyYSA9PT0gXCJcIiB8fCBleHRyYSApIHtcblx0XHRcdG51bSA9IHBhcnNlRmxvYXQoIHZhbCApO1xuXHRcdFx0cmV0dXJuIGV4dHJhID09PSB0cnVlIHx8IGpRdWVyeS5pc051bWVyaWMoIG51bSApID8gbnVtIHx8IDAgOiB2YWw7XG5cdFx0fVxuXHRcdHJldHVybiB2YWw7XG5cdH1cbn0pO1xuXG5qUXVlcnkuZWFjaChbIFwiaGVpZ2h0XCIsIFwid2lkdGhcIiBdLCBmdW5jdGlvbiggaSwgbmFtZSApIHtcblx0alF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gPSB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQsIGV4dHJhICkge1xuXHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblxuXHRcdFx0XHQvLyBDZXJ0YWluIGVsZW1lbnRzIGNhbiBoYXZlIGRpbWVuc2lvbiBpbmZvIGlmIHdlIGludmlzaWJseSBzaG93IHRoZW1cblx0XHRcdFx0Ly8gYnV0IGl0IG11c3QgaGF2ZSBhIGN1cnJlbnQgZGlzcGxheSBzdHlsZSB0aGF0IHdvdWxkIGJlbmVmaXRcblx0XHRcdFx0cmV0dXJuIHJkaXNwbGF5c3dhcC50ZXN0KCBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApICkgJiYgZWxlbS5vZmZzZXRXaWR0aCA9PT0gMCA/XG5cdFx0XHRcdFx0alF1ZXJ5LnN3YXAoIGVsZW0sIGNzc1Nob3csIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIG5hbWUsIGV4dHJhICk7XG5cdFx0XHRcdFx0fSkgOlxuXHRcdFx0XHRcdGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIG5hbWUsIGV4dHJhICk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBleHRyYSApIHtcblx0XHRcdHZhciBzdHlsZXMgPSBleHRyYSAmJiBnZXRTdHlsZXMoIGVsZW0gKTtcblx0XHRcdHJldHVybiBzZXRQb3NpdGl2ZU51bWJlciggZWxlbSwgdmFsdWUsIGV4dHJhID9cblx0XHRcdFx0YXVnbWVudFdpZHRoT3JIZWlnaHQoXG5cdFx0XHRcdFx0ZWxlbSxcblx0XHRcdFx0XHRuYW1lLFxuXHRcdFx0XHRcdGV4dHJhLFxuXHRcdFx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIFwiYm94U2l6aW5nXCIsIGZhbHNlLCBzdHlsZXMgKSA9PT0gXCJib3JkZXItYm94XCIsXG5cdFx0XHRcdFx0c3R5bGVzXG5cdFx0XHRcdCkgOiAwXG5cdFx0XHQpO1xuXHRcdH1cblx0fTtcbn0pO1xuXG4vLyBTdXBwb3J0OiBBbmRyb2lkIDIuM1xualF1ZXJ5LmNzc0hvb2tzLm1hcmdpblJpZ2h0ID0gYWRkR2V0SG9va0lmKCBzdXBwb3J0LnJlbGlhYmxlTWFyZ2luUmlnaHQsXG5cdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5zd2FwKCBlbGVtLCB7IFwiZGlzcGxheVwiOiBcImlubGluZS1ibG9ja1wiIH0sXG5cdFx0XHRcdGN1ckNTUywgWyBlbGVtLCBcIm1hcmdpblJpZ2h0XCIgXSApO1xuXHRcdH1cblx0fVxuKTtcblxuLy8gVGhlc2UgaG9va3MgYXJlIHVzZWQgYnkgYW5pbWF0ZSB0byBleHBhbmQgcHJvcGVydGllc1xualF1ZXJ5LmVhY2goe1xuXHRtYXJnaW46IFwiXCIsXG5cdHBhZGRpbmc6IFwiXCIsXG5cdGJvcmRlcjogXCJXaWR0aFwiXG59LCBmdW5jdGlvbiggcHJlZml4LCBzdWZmaXggKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgcHJlZml4ICsgc3VmZml4IF0gPSB7XG5cdFx0ZXhwYW5kOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgaSA9IDAsXG5cdFx0XHRcdGV4cGFuZGVkID0ge30sXG5cblx0XHRcdFx0Ly8gQXNzdW1lcyBhIHNpbmdsZSBudW1iZXIgaWYgbm90IGEgc3RyaW5nXG5cdFx0XHRcdHBhcnRzID0gdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiID8gdmFsdWUuc3BsaXQoXCIgXCIpIDogWyB2YWx1ZSBdO1xuXG5cdFx0XHRmb3IgKCA7IGkgPCA0OyBpKysgKSB7XG5cdFx0XHRcdGV4cGFuZGVkWyBwcmVmaXggKyBjc3NFeHBhbmRbIGkgXSArIHN1ZmZpeCBdID1cblx0XHRcdFx0XHRwYXJ0c1sgaSBdIHx8IHBhcnRzWyBpIC0gMiBdIHx8IHBhcnRzWyAwIF07XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBleHBhbmRlZDtcblx0XHR9XG5cdH07XG5cblx0aWYgKCAhcm1hcmdpbi50ZXN0KCBwcmVmaXggKSApIHtcblx0XHRqUXVlcnkuY3NzSG9va3NbIHByZWZpeCArIHN1ZmZpeCBdLnNldCA9IHNldFBvc2l0aXZlTnVtYmVyO1xuXHR9XG59KTtcblxualF1ZXJ5LmZuLmV4dGVuZCh7XG5cdGNzczogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHRcdHZhciBzdHlsZXMsIGxlbixcblx0XHRcdFx0bWFwID0ge30sXG5cdFx0XHRcdGkgPSAwO1xuXG5cdFx0XHRpZiAoIGpRdWVyeS5pc0FycmF5KCBuYW1lICkgKSB7XG5cdFx0XHRcdHN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApO1xuXHRcdFx0XHRsZW4gPSBuYW1lLmxlbmd0aDtcblxuXHRcdFx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0XHRtYXBbIG5hbWVbIGkgXSBdID0galF1ZXJ5LmNzcyggZWxlbSwgbmFtZVsgaSBdLCBmYWxzZSwgc3R5bGVzICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gbWFwO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgbmFtZSwgdmFsdWUgKSA6XG5cdFx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIG5hbWUgKTtcblx0XHR9LCBuYW1lLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgKTtcblx0fSxcblx0c2hvdzogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHNob3dIaWRlKCB0aGlzLCB0cnVlICk7XG5cdH0sXG5cdGhpZGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzaG93SGlkZSggdGhpcyApO1xuXHR9LFxuXHR0b2dnbGU6IGZ1bmN0aW9uKCBzdGF0ZSApIHtcblx0XHRpZiAoIHR5cGVvZiBzdGF0ZSA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0XHRyZXR1cm4gc3RhdGUgPyB0aGlzLnNob3coKSA6IHRoaXMuaGlkZSgpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoIGlzSGlkZGVuKCB0aGlzICkgKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnNob3coKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLmhpZGUoKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fVxufSk7XG5cblxuZnVuY3Rpb24gVHdlZW4oIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nICkge1xuXHRyZXR1cm4gbmV3IFR3ZWVuLnByb3RvdHlwZS5pbml0KCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZyApO1xufVxualF1ZXJ5LlR3ZWVuID0gVHdlZW47XG5cblR3ZWVuLnByb3RvdHlwZSA9IHtcblx0Y29uc3RydWN0b3I6IFR3ZWVuLFxuXHRpbml0OiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcsIHVuaXQgKSB7XG5cdFx0dGhpcy5lbGVtID0gZWxlbTtcblx0XHR0aGlzLnByb3AgPSBwcm9wO1xuXHRcdHRoaXMuZWFzaW5nID0gZWFzaW5nIHx8IFwic3dpbmdcIjtcblx0XHR0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuXHRcdHRoaXMuc3RhcnQgPSB0aGlzLm5vdyA9IHRoaXMuY3VyKCk7XG5cdFx0dGhpcy5lbmQgPSBlbmQ7XG5cdFx0dGhpcy51bml0ID0gdW5pdCB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSA/IFwiXCIgOiBcInB4XCIgKTtcblx0fSxcblx0Y3VyOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgaG9va3MgPSBUd2Vlbi5wcm9wSG9va3NbIHRoaXMucHJvcCBdO1xuXG5cdFx0cmV0dXJuIGhvb2tzICYmIGhvb2tzLmdldCA/XG5cdFx0XHRob29rcy5nZXQoIHRoaXMgKSA6XG5cdFx0XHRUd2Vlbi5wcm9wSG9va3MuX2RlZmF1bHQuZ2V0KCB0aGlzICk7XG5cdH0sXG5cdHJ1bjogZnVuY3Rpb24oIHBlcmNlbnQgKSB7XG5cdFx0dmFyIGVhc2VkLFxuXHRcdFx0aG9va3MgPSBUd2Vlbi5wcm9wSG9va3NbIHRoaXMucHJvcCBdO1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuZHVyYXRpb24gKSB7XG5cdFx0XHR0aGlzLnBvcyA9IGVhc2VkID0galF1ZXJ5LmVhc2luZ1sgdGhpcy5lYXNpbmcgXShcblx0XHRcdFx0cGVyY2VudCwgdGhpcy5vcHRpb25zLmR1cmF0aW9uICogcGVyY2VudCwgMCwgMSwgdGhpcy5vcHRpb25zLmR1cmF0aW9uXG5cdFx0XHQpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLnBvcyA9IGVhc2VkID0gcGVyY2VudDtcblx0XHR9XG5cdFx0dGhpcy5ub3cgPSAoIHRoaXMuZW5kIC0gdGhpcy5zdGFydCApICogZWFzZWQgKyB0aGlzLnN0YXJ0O1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuc3RlcCApIHtcblx0XHRcdHRoaXMub3B0aW9ucy5zdGVwLmNhbGwoIHRoaXMuZWxlbSwgdGhpcy5ub3csIHRoaXMgKTtcblx0XHR9XG5cblx0XHRpZiAoIGhvb2tzICYmIGhvb2tzLnNldCApIHtcblx0XHRcdGhvb2tzLnNldCggdGhpcyApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRUd2Vlbi5wcm9wSG9va3MuX2RlZmF1bHQuc2V0KCB0aGlzICk7XG5cdFx0fVxuXHRcdHJldHVybiB0aGlzO1xuXHR9XG59O1xuXG5Ud2Vlbi5wcm90b3R5cGUuaW5pdC5wcm90b3R5cGUgPSBUd2Vlbi5wcm90b3R5cGU7XG5cblR3ZWVuLnByb3BIb29rcyA9IHtcblx0X2RlZmF1bHQ6IHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHtcblx0XHRcdHZhciByZXN1bHQ7XG5cblx0XHRcdGlmICggdHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdICE9IG51bGwgJiZcblx0XHRcdFx0KCF0d2Vlbi5lbGVtLnN0eWxlIHx8IHR3ZWVuLmVsZW0uc3R5bGVbIHR3ZWVuLnByb3AgXSA9PSBudWxsKSApIHtcblx0XHRcdFx0cmV0dXJuIHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUGFzc2luZyBhbiBlbXB0eSBzdHJpbmcgYXMgYSAzcmQgcGFyYW1ldGVyIHRvIC5jc3Mgd2lsbCBhdXRvbWF0aWNhbGx5XG5cdFx0XHQvLyBhdHRlbXB0IGEgcGFyc2VGbG9hdCBhbmQgZmFsbGJhY2sgdG8gYSBzdHJpbmcgaWYgdGhlIHBhcnNlIGZhaWxzLlxuXHRcdFx0Ly8gU2ltcGxlIHZhbHVlcyBzdWNoIGFzIFwiMTBweFwiIGFyZSBwYXJzZWQgdG8gRmxvYXQ7XG5cdFx0XHQvLyBjb21wbGV4IHZhbHVlcyBzdWNoIGFzIFwicm90YXRlKDFyYWQpXCIgYXJlIHJldHVybmVkIGFzLWlzLlxuXHRcdFx0cmVzdWx0ID0galF1ZXJ5LmNzcyggdHdlZW4uZWxlbSwgdHdlZW4ucHJvcCwgXCJcIiApO1xuXHRcdFx0Ly8gRW1wdHkgc3RyaW5ncywgbnVsbCwgdW5kZWZpbmVkIGFuZCBcImF1dG9cIiBhcmUgY29udmVydGVkIHRvIDAuXG5cdFx0XHRyZXR1cm4gIXJlc3VsdCB8fCByZXN1bHQgPT09IFwiYXV0b1wiID8gMCA6IHJlc3VsdDtcblx0XHR9LFxuXHRcdHNldDogZnVuY3Rpb24oIHR3ZWVuICkge1xuXHRcdFx0Ly8gVXNlIHN0ZXAgaG9vayBmb3IgYmFjayBjb21wYXQuXG5cdFx0XHQvLyBVc2UgY3NzSG9vayBpZiBpdHMgdGhlcmUuXG5cdFx0XHQvLyBVc2UgLnN0eWxlIGlmIGF2YWlsYWJsZSBhbmQgdXNlIHBsYWluIHByb3BlcnRpZXMgd2hlcmUgYXZhaWxhYmxlLlxuXHRcdFx0aWYgKCBqUXVlcnkuZnguc3RlcFsgdHdlZW4ucHJvcCBdICkge1xuXHRcdFx0XHRqUXVlcnkuZnguc3RlcFsgdHdlZW4ucHJvcCBdKCB0d2VlbiApO1xuXHRcdFx0fSBlbHNlIGlmICggdHdlZW4uZWxlbS5zdHlsZSAmJiAoIHR3ZWVuLmVsZW0uc3R5bGVbIGpRdWVyeS5jc3NQcm9wc1sgdHdlZW4ucHJvcCBdIF0gIT0gbnVsbCB8fCBqUXVlcnkuY3NzSG9va3NbIHR3ZWVuLnByb3AgXSApICkge1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIHR3ZWVuLmVsZW0sIHR3ZWVuLnByb3AsIHR3ZWVuLm5vdyArIHR3ZWVuLnVuaXQgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdztcblx0XHRcdH1cblx0XHR9XG5cdH1cbn07XG5cbi8vIFN1cHBvcnQ6IElFOVxuLy8gUGFuaWMgYmFzZWQgYXBwcm9hY2ggdG8gc2V0dGluZyB0aGluZ3Mgb24gZGlzY29ubmVjdGVkIG5vZGVzXG5Ud2Vlbi5wcm9wSG9va3Muc2Nyb2xsVG9wID0gVHdlZW4ucHJvcEhvb2tzLnNjcm9sbExlZnQgPSB7XG5cdHNldDogZnVuY3Rpb24oIHR3ZWVuICkge1xuXHRcdGlmICggdHdlZW4uZWxlbS5ub2RlVHlwZSAmJiB0d2Vlbi5lbGVtLnBhcmVudE5vZGUgKSB7XG5cdFx0XHR0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gPSB0d2Vlbi5ub3c7XG5cdFx0fVxuXHR9XG59O1xuXG5qUXVlcnkuZWFzaW5nID0ge1xuXHRsaW5lYXI6IGZ1bmN0aW9uKCBwICkge1xuXHRcdHJldHVybiBwO1xuXHR9LFxuXHRzd2luZzogZnVuY3Rpb24oIHAgKSB7XG5cdFx0cmV0dXJuIDAuNSAtIE1hdGguY29zKCBwICogTWF0aC5QSSApIC8gMjtcblx0fVxufTtcblxualF1ZXJ5LmZ4ID0gVHdlZW4ucHJvdG90eXBlLmluaXQ7XG5cbi8vIEJhY2sgQ29tcGF0IDwxLjggZXh0ZW5zaW9uIHBvaW50XG5qUXVlcnkuZnguc3RlcCA9IHt9O1xuXG5cblxuXG52YXJcblx0ZnhOb3csIHRpbWVySWQsXG5cdHJmeHR5cGVzID0gL14oPzp0b2dnbGV8c2hvd3xoaWRlKSQvLFxuXHRyZnhudW0gPSBuZXcgUmVnRXhwKCBcIl4oPzooWystXSk9fCkoXCIgKyBwbnVtICsgXCIpKFthLXolXSopJFwiLCBcImlcIiApLFxuXHRycnVuID0gL3F1ZXVlSG9va3MkLyxcblx0YW5pbWF0aW9uUHJlZmlsdGVycyA9IFsgZGVmYXVsdFByZWZpbHRlciBdLFxuXHR0d2VlbmVycyA9IHtcblx0XHRcIipcIjogWyBmdW5jdGlvbiggcHJvcCwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgdHdlZW4gPSB0aGlzLmNyZWF0ZVR3ZWVuKCBwcm9wLCB2YWx1ZSApLFxuXHRcdFx0XHR0YXJnZXQgPSB0d2Vlbi5jdXIoKSxcblx0XHRcdFx0cGFydHMgPSByZnhudW0uZXhlYyggdmFsdWUgKSxcblx0XHRcdFx0dW5pdCA9IHBhcnRzICYmIHBhcnRzWyAzIF0gfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gPyBcIlwiIDogXCJweFwiICksXG5cblx0XHRcdFx0Ly8gU3RhcnRpbmcgdmFsdWUgY29tcHV0YXRpb24gaXMgcmVxdWlyZWQgZm9yIHBvdGVudGlhbCB1bml0IG1pc21hdGNoZXNcblx0XHRcdFx0c3RhcnQgPSAoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSB8fCB1bml0ICE9PSBcInB4XCIgJiYgK3RhcmdldCApICYmXG5cdFx0XHRcdFx0cmZ4bnVtLmV4ZWMoIGpRdWVyeS5jc3MoIHR3ZWVuLmVsZW0sIHByb3AgKSApLFxuXHRcdFx0XHRzY2FsZSA9IDEsXG5cdFx0XHRcdG1heEl0ZXJhdGlvbnMgPSAyMDtcblxuXHRcdFx0aWYgKCBzdGFydCAmJiBzdGFydFsgMyBdICE9PSB1bml0ICkge1xuXHRcdFx0XHQvLyBUcnVzdCB1bml0cyByZXBvcnRlZCBieSBqUXVlcnkuY3NzXG5cdFx0XHRcdHVuaXQgPSB1bml0IHx8IHN0YXJ0WyAzIF07XG5cblx0XHRcdFx0Ly8gTWFrZSBzdXJlIHdlIHVwZGF0ZSB0aGUgdHdlZW4gcHJvcGVydGllcyBsYXRlciBvblxuXHRcdFx0XHRwYXJ0cyA9IHBhcnRzIHx8IFtdO1xuXG5cdFx0XHRcdC8vIEl0ZXJhdGl2ZWx5IGFwcHJveGltYXRlIGZyb20gYSBub256ZXJvIHN0YXJ0aW5nIHBvaW50XG5cdFx0XHRcdHN0YXJ0ID0gK3RhcmdldCB8fCAxO1xuXG5cdFx0XHRcdGRvIHtcblx0XHRcdFx0XHQvLyBJZiBwcmV2aW91cyBpdGVyYXRpb24gemVyb2VkIG91dCwgZG91YmxlIHVudGlsIHdlIGdldCAqc29tZXRoaW5nKi5cblx0XHRcdFx0XHQvLyBVc2Ugc3RyaW5nIGZvciBkb3VibGluZyBzbyB3ZSBkb24ndCBhY2NpZGVudGFsbHkgc2VlIHNjYWxlIGFzIHVuY2hhbmdlZCBiZWxvd1xuXHRcdFx0XHRcdHNjYWxlID0gc2NhbGUgfHwgXCIuNVwiO1xuXG5cdFx0XHRcdFx0Ly8gQWRqdXN0IGFuZCBhcHBseVxuXHRcdFx0XHRcdHN0YXJ0ID0gc3RhcnQgLyBzY2FsZTtcblx0XHRcdFx0XHRqUXVlcnkuc3R5bGUoIHR3ZWVuLmVsZW0sIHByb3AsIHN0YXJ0ICsgdW5pdCApO1xuXG5cdFx0XHRcdC8vIFVwZGF0ZSBzY2FsZSwgdG9sZXJhdGluZyB6ZXJvIG9yIE5hTiBmcm9tIHR3ZWVuLmN1cigpLFxuXHRcdFx0XHQvLyBicmVhayB0aGUgbG9vcCBpZiBzY2FsZSBpcyB1bmNoYW5nZWQgb3IgcGVyZmVjdCwgb3IgaWYgd2UndmUganVzdCBoYWQgZW5vdWdoXG5cdFx0XHRcdH0gd2hpbGUgKCBzY2FsZSAhPT0gKHNjYWxlID0gdHdlZW4uY3VyKCkgLyB0YXJnZXQpICYmIHNjYWxlICE9PSAxICYmIC0tbWF4SXRlcmF0aW9ucyApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBVcGRhdGUgdHdlZW4gcHJvcGVydGllc1xuXHRcdFx0aWYgKCBwYXJ0cyApIHtcblx0XHRcdFx0c3RhcnQgPSB0d2Vlbi5zdGFydCA9ICtzdGFydCB8fCArdGFyZ2V0IHx8IDA7XG5cdFx0XHRcdHR3ZWVuLnVuaXQgPSB1bml0O1xuXHRcdFx0XHQvLyBJZiBhICs9Ly09IHRva2VuIHdhcyBwcm92aWRlZCwgd2UncmUgZG9pbmcgYSByZWxhdGl2ZSBhbmltYXRpb25cblx0XHRcdFx0dHdlZW4uZW5kID0gcGFydHNbIDEgXSA/XG5cdFx0XHRcdFx0c3RhcnQgKyAoIHBhcnRzWyAxIF0gKyAxICkgKiBwYXJ0c1sgMiBdIDpcblx0XHRcdFx0XHQrcGFydHNbIDIgXTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHR3ZWVuO1xuXHRcdH0gXVxuXHR9O1xuXG4vLyBBbmltYXRpb25zIGNyZWF0ZWQgc3luY2hyb25vdXNseSB3aWxsIHJ1biBzeW5jaHJvbm91c2x5XG5mdW5jdGlvbiBjcmVhdGVGeE5vdygpIHtcblx0c2V0VGltZW91dChmdW5jdGlvbigpIHtcblx0XHRmeE5vdyA9IHVuZGVmaW5lZDtcblx0fSk7XG5cdHJldHVybiAoIGZ4Tm93ID0galF1ZXJ5Lm5vdygpICk7XG59XG5cbi8vIEdlbmVyYXRlIHBhcmFtZXRlcnMgdG8gY3JlYXRlIGEgc3RhbmRhcmQgYW5pbWF0aW9uXG5mdW5jdGlvbiBnZW5GeCggdHlwZSwgaW5jbHVkZVdpZHRoICkge1xuXHR2YXIgd2hpY2gsXG5cdFx0aSA9IDAsXG5cdFx0YXR0cnMgPSB7IGhlaWdodDogdHlwZSB9O1xuXG5cdC8vIElmIHdlIGluY2x1ZGUgd2lkdGgsIHN0ZXAgdmFsdWUgaXMgMSB0byBkbyBhbGwgY3NzRXhwYW5kIHZhbHVlcyxcblx0Ly8gb3RoZXJ3aXNlIHN0ZXAgdmFsdWUgaXMgMiB0byBza2lwIG92ZXIgTGVmdCBhbmQgUmlnaHRcblx0aW5jbHVkZVdpZHRoID0gaW5jbHVkZVdpZHRoID8gMSA6IDA7XG5cdGZvciAoIDsgaSA8IDQgOyBpICs9IDIgLSBpbmNsdWRlV2lkdGggKSB7XG5cdFx0d2hpY2ggPSBjc3NFeHBhbmRbIGkgXTtcblx0XHRhdHRyc1sgXCJtYXJnaW5cIiArIHdoaWNoIF0gPSBhdHRyc1sgXCJwYWRkaW5nXCIgKyB3aGljaCBdID0gdHlwZTtcblx0fVxuXG5cdGlmICggaW5jbHVkZVdpZHRoICkge1xuXHRcdGF0dHJzLm9wYWNpdHkgPSBhdHRycy53aWR0aCA9IHR5cGU7XG5cdH1cblxuXHRyZXR1cm4gYXR0cnM7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVR3ZWVuKCB2YWx1ZSwgcHJvcCwgYW5pbWF0aW9uICkge1xuXHR2YXIgdHdlZW4sXG5cdFx0Y29sbGVjdGlvbiA9ICggdHdlZW5lcnNbIHByb3AgXSB8fCBbXSApLmNvbmNhdCggdHdlZW5lcnNbIFwiKlwiIF0gKSxcblx0XHRpbmRleCA9IDAsXG5cdFx0bGVuZ3RoID0gY29sbGVjdGlvbi5sZW5ndGg7XG5cdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0aWYgKCAodHdlZW4gPSBjb2xsZWN0aW9uWyBpbmRleCBdLmNhbGwoIGFuaW1hdGlvbiwgcHJvcCwgdmFsdWUgKSkgKSB7XG5cblx0XHRcdC8vIFdlJ3JlIGRvbmUgd2l0aCB0aGlzIHByb3BlcnR5XG5cdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRQcmVmaWx0ZXIoIGVsZW0sIHByb3BzLCBvcHRzICkge1xuXHQvKiBqc2hpbnQgdmFsaWR0aGlzOiB0cnVlICovXG5cdHZhciBwcm9wLCB2YWx1ZSwgdG9nZ2xlLCB0d2VlbiwgaG9va3MsIG9sZGZpcmUsIGRpc3BsYXksIGNoZWNrRGlzcGxheSxcblx0XHRhbmltID0gdGhpcyxcblx0XHRvcmlnID0ge30sXG5cdFx0c3R5bGUgPSBlbGVtLnN0eWxlLFxuXHRcdGhpZGRlbiA9IGVsZW0ubm9kZVR5cGUgJiYgaXNIaWRkZW4oIGVsZW0gKSxcblx0XHRkYXRhU2hvdyA9IGRhdGFfcHJpdi5nZXQoIGVsZW0sIFwiZnhzaG93XCIgKTtcblxuXHQvLyBIYW5kbGUgcXVldWU6IGZhbHNlIHByb21pc2VzXG5cdGlmICggIW9wdHMucXVldWUgKSB7XG5cdFx0aG9va3MgPSBqUXVlcnkuX3F1ZXVlSG9va3MoIGVsZW0sIFwiZnhcIiApO1xuXHRcdGlmICggaG9va3MudW5xdWV1ZWQgPT0gbnVsbCApIHtcblx0XHRcdGhvb2tzLnVucXVldWVkID0gMDtcblx0XHRcdG9sZGZpcmUgPSBob29rcy5lbXB0eS5maXJlO1xuXHRcdFx0aG9va3MuZW1wdHkuZmlyZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoICFob29rcy51bnF1ZXVlZCApIHtcblx0XHRcdFx0XHRvbGRmaXJlKCk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0fVxuXHRcdGhvb2tzLnVucXVldWVkKys7XG5cblx0XHRhbmltLmFsd2F5cyhmdW5jdGlvbigpIHtcblx0XHRcdC8vIEVuc3VyZSB0aGUgY29tcGxldGUgaGFuZGxlciBpcyBjYWxsZWQgYmVmb3JlIHRoaXMgY29tcGxldGVzXG5cdFx0XHRhbmltLmFsd2F5cyhmdW5jdGlvbigpIHtcblx0XHRcdFx0aG9va3MudW5xdWV1ZWQtLTtcblx0XHRcdFx0aWYgKCAhalF1ZXJ5LnF1ZXVlKCBlbGVtLCBcImZ4XCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdFx0aG9va3MuZW1wdHkuZmlyZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9KTtcblx0fVxuXG5cdC8vIEhlaWdodC93aWR0aCBvdmVyZmxvdyBwYXNzXG5cdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAoIFwiaGVpZ2h0XCIgaW4gcHJvcHMgfHwgXCJ3aWR0aFwiIGluIHByb3BzICkgKSB7XG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgbm90aGluZyBzbmVha3Mgb3V0XG5cdFx0Ly8gUmVjb3JkIGFsbCAzIG92ZXJmbG93IGF0dHJpYnV0ZXMgYmVjYXVzZSBJRTktMTAgZG8gbm90XG5cdFx0Ly8gY2hhbmdlIHRoZSBvdmVyZmxvdyBhdHRyaWJ1dGUgd2hlbiBvdmVyZmxvd1ggYW5kXG5cdFx0Ly8gb3ZlcmZsb3dZIGFyZSBzZXQgdG8gdGhlIHNhbWUgdmFsdWVcblx0XHRvcHRzLm92ZXJmbG93ID0gWyBzdHlsZS5vdmVyZmxvdywgc3R5bGUub3ZlcmZsb3dYLCBzdHlsZS5vdmVyZmxvd1kgXTtcblxuXHRcdC8vIFNldCBkaXNwbGF5IHByb3BlcnR5IHRvIGlubGluZS1ibG9jayBmb3IgaGVpZ2h0L3dpZHRoXG5cdFx0Ly8gYW5pbWF0aW9ucyBvbiBpbmxpbmUgZWxlbWVudHMgdGhhdCBhcmUgaGF2aW5nIHdpZHRoL2hlaWdodCBhbmltYXRlZFxuXHRcdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApO1xuXG5cdFx0Ly8gVGVzdCBkZWZhdWx0IGRpc3BsYXkgaWYgZGlzcGxheSBpcyBjdXJyZW50bHkgXCJub25lXCJcblx0XHRjaGVja0Rpc3BsYXkgPSBkaXNwbGF5ID09PSBcIm5vbmVcIiA/XG5cdFx0XHRkYXRhX3ByaXYuZ2V0KCBlbGVtLCBcIm9sZGRpc3BsYXlcIiApIHx8IGRlZmF1bHREaXNwbGF5KCBlbGVtLm5vZGVOYW1lICkgOiBkaXNwbGF5O1xuXG5cdFx0aWYgKCBjaGVja0Rpc3BsYXkgPT09IFwiaW5saW5lXCIgJiYgalF1ZXJ5LmNzcyggZWxlbSwgXCJmbG9hdFwiICkgPT09IFwibm9uZVwiICkge1xuXHRcdFx0c3R5bGUuZGlzcGxheSA9IFwiaW5saW5lLWJsb2NrXCI7XG5cdFx0fVxuXHR9XG5cblx0aWYgKCBvcHRzLm92ZXJmbG93ICkge1xuXHRcdHN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcblx0XHRhbmltLmFsd2F5cyhmdW5jdGlvbigpIHtcblx0XHRcdHN0eWxlLm92ZXJmbG93ID0gb3B0cy5vdmVyZmxvd1sgMCBdO1xuXHRcdFx0c3R5bGUub3ZlcmZsb3dYID0gb3B0cy5vdmVyZmxvd1sgMSBdO1xuXHRcdFx0c3R5bGUub3ZlcmZsb3dZID0gb3B0cy5vdmVyZmxvd1sgMiBdO1xuXHRcdH0pO1xuXHR9XG5cblx0Ly8gc2hvdy9oaWRlIHBhc3Ncblx0Zm9yICggcHJvcCBpbiBwcm9wcyApIHtcblx0XHR2YWx1ZSA9IHByb3BzWyBwcm9wIF07XG5cdFx0aWYgKCByZnh0eXBlcy5leGVjKCB2YWx1ZSApICkge1xuXHRcdFx0ZGVsZXRlIHByb3BzWyBwcm9wIF07XG5cdFx0XHR0b2dnbGUgPSB0b2dnbGUgfHwgdmFsdWUgPT09IFwidG9nZ2xlXCI7XG5cdFx0XHRpZiAoIHZhbHVlID09PSAoIGhpZGRlbiA/IFwiaGlkZVwiIDogXCJzaG93XCIgKSApIHtcblxuXHRcdFx0XHQvLyBJZiB0aGVyZSBpcyBkYXRhU2hvdyBsZWZ0IG92ZXIgZnJvbSBhIHN0b3BwZWQgaGlkZSBvciBzaG93IGFuZCB3ZSBhcmUgZ29pbmcgdG8gcHJvY2VlZCB3aXRoIHNob3csIHdlIHNob3VsZCBwcmV0ZW5kIHRvIGJlIGhpZGRlblxuXHRcdFx0XHRpZiAoIHZhbHVlID09PSBcInNob3dcIiAmJiBkYXRhU2hvdyAmJiBkYXRhU2hvd1sgcHJvcCBdICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0aGlkZGVuID0gdHJ1ZTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0b3JpZ1sgcHJvcCBdID0gZGF0YVNob3cgJiYgZGF0YVNob3dbIHByb3AgXSB8fCBqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AgKTtcblxuXHRcdC8vIEFueSBub24tZnggdmFsdWUgc3RvcHMgdXMgZnJvbSByZXN0b3JpbmcgdGhlIG9yaWdpbmFsIGRpc3BsYXkgdmFsdWVcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZGlzcGxheSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdH1cblxuXHRpZiAoICFqUXVlcnkuaXNFbXB0eU9iamVjdCggb3JpZyApICkge1xuXHRcdGlmICggZGF0YVNob3cgKSB7XG5cdFx0XHRpZiAoIFwiaGlkZGVuXCIgaW4gZGF0YVNob3cgKSB7XG5cdFx0XHRcdGhpZGRlbiA9IGRhdGFTaG93LmhpZGRlbjtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0ZGF0YVNob3cgPSBkYXRhX3ByaXYuYWNjZXNzKCBlbGVtLCBcImZ4c2hvd1wiLCB7fSApO1xuXHRcdH1cblxuXHRcdC8vIFN0b3JlIHN0YXRlIGlmIGl0cyB0b2dnbGUgLSBlbmFibGVzIC5zdG9wKCkudG9nZ2xlKCkgdG8gXCJyZXZlcnNlXCJcblx0XHRpZiAoIHRvZ2dsZSApIHtcblx0XHRcdGRhdGFTaG93LmhpZGRlbiA9ICFoaWRkZW47XG5cdFx0fVxuXHRcdGlmICggaGlkZGVuICkge1xuXHRcdFx0alF1ZXJ5KCBlbGVtICkuc2hvdygpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRhbmltLmRvbmUoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGpRdWVyeSggZWxlbSApLmhpZGUoKTtcblx0XHRcdH0pO1xuXHRcdH1cblx0XHRhbmltLmRvbmUoZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgcHJvcDtcblxuXHRcdFx0ZGF0YV9wcml2LnJlbW92ZSggZWxlbSwgXCJmeHNob3dcIiApO1xuXHRcdFx0Zm9yICggcHJvcCBpbiBvcmlnICkge1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIG9yaWdbIHByb3AgXSApO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdGZvciAoIHByb3AgaW4gb3JpZyApIHtcblx0XHRcdHR3ZWVuID0gY3JlYXRlVHdlZW4oIGhpZGRlbiA/IGRhdGFTaG93WyBwcm9wIF0gOiAwLCBwcm9wLCBhbmltICk7XG5cblx0XHRcdGlmICggISggcHJvcCBpbiBkYXRhU2hvdyApICkge1xuXHRcdFx0XHRkYXRhU2hvd1sgcHJvcCBdID0gdHdlZW4uc3RhcnQ7XG5cdFx0XHRcdGlmICggaGlkZGVuICkge1xuXHRcdFx0XHRcdHR3ZWVuLmVuZCA9IHR3ZWVuLnN0YXJ0O1xuXHRcdFx0XHRcdHR3ZWVuLnN0YXJ0ID0gcHJvcCA9PT0gXCJ3aWR0aFwiIHx8IHByb3AgPT09IFwiaGVpZ2h0XCIgPyAxIDogMDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHQvLyBJZiB0aGlzIGlzIGEgbm9vcCBsaWtlIC5oaWRlKCkuaGlkZSgpLCByZXN0b3JlIGFuIG92ZXJ3cml0dGVuIGRpc3BsYXkgdmFsdWVcblx0fSBlbHNlIGlmICggKGRpc3BsYXkgPT09IFwibm9uZVwiID8gZGVmYXVsdERpc3BsYXkoIGVsZW0ubm9kZU5hbWUgKSA6IGRpc3BsYXkpID09PSBcImlubGluZVwiICkge1xuXHRcdHN0eWxlLmRpc3BsYXkgPSBkaXNwbGF5O1xuXHR9XG59XG5cbmZ1bmN0aW9uIHByb3BGaWx0ZXIoIHByb3BzLCBzcGVjaWFsRWFzaW5nICkge1xuXHR2YXIgaW5kZXgsIG5hbWUsIGVhc2luZywgdmFsdWUsIGhvb2tzO1xuXG5cdC8vIGNhbWVsQ2FzZSwgc3BlY2lhbEVhc2luZyBhbmQgZXhwYW5kIGNzc0hvb2sgcGFzc1xuXHRmb3IgKCBpbmRleCBpbiBwcm9wcyApIHtcblx0XHRuYW1lID0galF1ZXJ5LmNhbWVsQ2FzZSggaW5kZXggKTtcblx0XHRlYXNpbmcgPSBzcGVjaWFsRWFzaW5nWyBuYW1lIF07XG5cdFx0dmFsdWUgPSBwcm9wc1sgaW5kZXggXTtcblx0XHRpZiAoIGpRdWVyeS5pc0FycmF5KCB2YWx1ZSApICkge1xuXHRcdFx0ZWFzaW5nID0gdmFsdWVbIDEgXTtcblx0XHRcdHZhbHVlID0gcHJvcHNbIGluZGV4IF0gPSB2YWx1ZVsgMCBdO1xuXHRcdH1cblxuXHRcdGlmICggaW5kZXggIT09IG5hbWUgKSB7XG5cdFx0XHRwcm9wc1sgbmFtZSBdID0gdmFsdWU7XG5cdFx0XHRkZWxldGUgcHJvcHNbIGluZGV4IF07XG5cdFx0fVxuXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXTtcblx0XHRpZiAoIGhvb2tzICYmIFwiZXhwYW5kXCIgaW4gaG9va3MgKSB7XG5cdFx0XHR2YWx1ZSA9IGhvb2tzLmV4cGFuZCggdmFsdWUgKTtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgbmFtZSBdO1xuXG5cdFx0XHQvLyBOb3QgcXVpdGUgJC5leHRlbmQsIHRoaXMgd29uJ3Qgb3ZlcndyaXRlIGV4aXN0aW5nIGtleXMuXG5cdFx0XHQvLyBSZXVzaW5nICdpbmRleCcgYmVjYXVzZSB3ZSBoYXZlIHRoZSBjb3JyZWN0IFwibmFtZVwiXG5cdFx0XHRmb3IgKCBpbmRleCBpbiB2YWx1ZSApIHtcblx0XHRcdFx0aWYgKCAhKCBpbmRleCBpbiBwcm9wcyApICkge1xuXHRcdFx0XHRcdHByb3BzWyBpbmRleCBdID0gdmFsdWVbIGluZGV4IF07XG5cdFx0XHRcdFx0c3BlY2lhbEVhc2luZ1sgaW5kZXggXSA9IGVhc2luZztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRzcGVjaWFsRWFzaW5nWyBuYW1lIF0gPSBlYXNpbmc7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIEFuaW1hdGlvbiggZWxlbSwgcHJvcGVydGllcywgb3B0aW9ucyApIHtcblx0dmFyIHJlc3VsdCxcblx0XHRzdG9wcGVkLFxuXHRcdGluZGV4ID0gMCxcblx0XHRsZW5ndGggPSBhbmltYXRpb25QcmVmaWx0ZXJzLmxlbmd0aCxcblx0XHRkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cdFx0XHQvLyBEb24ndCBtYXRjaCBlbGVtIGluIHRoZSA6YW5pbWF0ZWQgc2VsZWN0b3Jcblx0XHRcdGRlbGV0ZSB0aWNrLmVsZW07XG5cdFx0fSksXG5cdFx0dGljayA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBzdG9wcGVkICkge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0XHR2YXIgY3VycmVudFRpbWUgPSBmeE5vdyB8fCBjcmVhdGVGeE5vdygpLFxuXHRcdFx0XHRyZW1haW5pbmcgPSBNYXRoLm1heCggMCwgYW5pbWF0aW9uLnN0YXJ0VGltZSArIGFuaW1hdGlvbi5kdXJhdGlvbiAtIGN1cnJlbnRUaW1lICksXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgMi4zXG5cdFx0XHRcdC8vIEFyY2hhaWMgY3Jhc2ggYnVnIHdvbid0IGFsbG93IHVzIHRvIHVzZSBgMSAtICggMC41IHx8IDAgKWAgKCMxMjQ5Nylcblx0XHRcdFx0dGVtcCA9IHJlbWFpbmluZyAvIGFuaW1hdGlvbi5kdXJhdGlvbiB8fCAwLFxuXHRcdFx0XHRwZXJjZW50ID0gMSAtIHRlbXAsXG5cdFx0XHRcdGluZGV4ID0gMCxcblx0XHRcdFx0bGVuZ3RoID0gYW5pbWF0aW9uLnR3ZWVucy5sZW5ndGg7XG5cblx0XHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGggOyBpbmRleCsrICkge1xuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggcGVyY2VudCApO1xuXHRcdFx0fVxuXG5cdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgcGVyY2VudCwgcmVtYWluaW5nIF0pO1xuXG5cdFx0XHRpZiAoIHBlcmNlbnQgPCAxICYmIGxlbmd0aCApIHtcblx0XHRcdFx0cmV0dXJuIHJlbWFpbmluZztcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiBdICk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblx0XHR9LFxuXHRcdGFuaW1hdGlvbiA9IGRlZmVycmVkLnByb21pc2Uoe1xuXHRcdFx0ZWxlbTogZWxlbSxcblx0XHRcdHByb3BzOiBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcGVydGllcyApLFxuXHRcdFx0b3B0czogalF1ZXJ5LmV4dGVuZCggdHJ1ZSwgeyBzcGVjaWFsRWFzaW5nOiB7fSB9LCBvcHRpb25zICksXG5cdFx0XHRvcmlnaW5hbFByb3BlcnRpZXM6IHByb3BlcnRpZXMsXG5cdFx0XHRvcmlnaW5hbE9wdGlvbnM6IG9wdGlvbnMsXG5cdFx0XHRzdGFydFRpbWU6IGZ4Tm93IHx8IGNyZWF0ZUZ4Tm93KCksXG5cdFx0XHRkdXJhdGlvbjogb3B0aW9ucy5kdXJhdGlvbixcblx0XHRcdHR3ZWVuczogW10sXG5cdFx0XHRjcmVhdGVUd2VlbjogZnVuY3Rpb24oIHByb3AsIGVuZCApIHtcblx0XHRcdFx0dmFyIHR3ZWVuID0galF1ZXJ5LlR3ZWVuKCBlbGVtLCBhbmltYXRpb24ub3B0cywgcHJvcCwgZW5kLFxuXHRcdFx0XHRcdFx0YW5pbWF0aW9uLm9wdHMuc3BlY2lhbEVhc2luZ1sgcHJvcCBdIHx8IGFuaW1hdGlvbi5vcHRzLmVhc2luZyApO1xuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zLnB1c2goIHR3ZWVuICk7XG5cdFx0XHRcdHJldHVybiB0d2Vlbjtcblx0XHRcdH0sXG5cdFx0XHRzdG9wOiBmdW5jdGlvbiggZ290b0VuZCApIHtcblx0XHRcdFx0dmFyIGluZGV4ID0gMCxcblx0XHRcdFx0XHQvLyBJZiB3ZSBhcmUgZ29pbmcgdG8gdGhlIGVuZCwgd2Ugd2FudCB0byBydW4gYWxsIHRoZSB0d2VlbnNcblx0XHRcdFx0XHQvLyBvdGhlcndpc2Ugd2Ugc2tpcCB0aGlzIHBhcnRcblx0XHRcdFx0XHRsZW5ndGggPSBnb3RvRW5kID8gYW5pbWF0aW9uLnR3ZWVucy5sZW5ndGggOiAwO1xuXHRcdFx0XHRpZiAoIHN0b3BwZWQgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH1cblx0XHRcdFx0c3RvcHBlZCA9IHRydWU7XG5cdFx0XHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGggOyBpbmRleCsrICkge1xuXHRcdFx0XHRcdGFuaW1hdGlvbi50d2VlbnNbIGluZGV4IF0ucnVuKCAxICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBSZXNvbHZlIHdoZW4gd2UgcGxheWVkIHRoZSBsYXN0IGZyYW1lOyBvdGhlcndpc2UsIHJlamVjdFxuXHRcdFx0XHRpZiAoIGdvdG9FbmQgKSB7XG5cdFx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBnb3RvRW5kIF0gKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3RXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgZ290b0VuZCBdICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9XG5cdFx0fSksXG5cdFx0cHJvcHMgPSBhbmltYXRpb24ucHJvcHM7XG5cblx0cHJvcEZpbHRlciggcHJvcHMsIGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmcgKTtcblxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoIDsgaW5kZXgrKyApIHtcblx0XHRyZXN1bHQgPSBhbmltYXRpb25QcmVmaWx0ZXJzWyBpbmRleCBdLmNhbGwoIGFuaW1hdGlvbiwgZWxlbSwgcHJvcHMsIGFuaW1hdGlvbi5vcHRzICk7XG5cdFx0aWYgKCByZXN1bHQgKSB7XG5cdFx0XHRyZXR1cm4gcmVzdWx0O1xuXHRcdH1cblx0fVxuXG5cdGpRdWVyeS5tYXAoIHByb3BzLCBjcmVhdGVUd2VlbiwgYW5pbWF0aW9uICk7XG5cblx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggYW5pbWF0aW9uLm9wdHMuc3RhcnQgKSApIHtcblx0XHRhbmltYXRpb24ub3B0cy5zdGFydC5jYWxsKCBlbGVtLCBhbmltYXRpb24gKTtcblx0fVxuXG5cdGpRdWVyeS5meC50aW1lcihcblx0XHRqUXVlcnkuZXh0ZW5kKCB0aWNrLCB7XG5cdFx0XHRlbGVtOiBlbGVtLFxuXHRcdFx0YW5pbTogYW5pbWF0aW9uLFxuXHRcdFx0cXVldWU6IGFuaW1hdGlvbi5vcHRzLnF1ZXVlXG5cdFx0fSlcblx0KTtcblxuXHQvLyBhdHRhY2ggY2FsbGJhY2tzIGZyb20gb3B0aW9uc1xuXHRyZXR1cm4gYW5pbWF0aW9uLnByb2dyZXNzKCBhbmltYXRpb24ub3B0cy5wcm9ncmVzcyApXG5cdFx0LmRvbmUoIGFuaW1hdGlvbi5vcHRzLmRvbmUsIGFuaW1hdGlvbi5vcHRzLmNvbXBsZXRlIClcblx0XHQuZmFpbCggYW5pbWF0aW9uLm9wdHMuZmFpbCApXG5cdFx0LmFsd2F5cyggYW5pbWF0aW9uLm9wdHMuYWx3YXlzICk7XG59XG5cbmpRdWVyeS5BbmltYXRpb24gPSBqUXVlcnkuZXh0ZW5kKCBBbmltYXRpb24sIHtcblxuXHR0d2VlbmVyOiBmdW5jdGlvbiggcHJvcHMsIGNhbGxiYWNrICkge1xuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHByb3BzICkgKSB7XG5cdFx0XHRjYWxsYmFjayA9IHByb3BzO1xuXHRcdFx0cHJvcHMgPSBbIFwiKlwiIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdHByb3BzID0gcHJvcHMuc3BsaXQoXCIgXCIpO1xuXHRcdH1cblxuXHRcdHZhciBwcm9wLFxuXHRcdFx0aW5kZXggPSAwLFxuXHRcdFx0bGVuZ3RoID0gcHJvcHMubGVuZ3RoO1xuXG5cdFx0Zm9yICggOyBpbmRleCA8IGxlbmd0aCA7IGluZGV4KysgKSB7XG5cdFx0XHRwcm9wID0gcHJvcHNbIGluZGV4IF07XG5cdFx0XHR0d2VlbmVyc1sgcHJvcCBdID0gdHdlZW5lcnNbIHByb3AgXSB8fCBbXTtcblx0XHRcdHR3ZWVuZXJzWyBwcm9wIF0udW5zaGlmdCggY2FsbGJhY2sgKTtcblx0XHR9XG5cdH0sXG5cblx0cHJlZmlsdGVyOiBmdW5jdGlvbiggY2FsbGJhY2ssIHByZXBlbmQgKSB7XG5cdFx0aWYgKCBwcmVwZW5kICkge1xuXHRcdFx0YW5pbWF0aW9uUHJlZmlsdGVycy51bnNoaWZ0KCBjYWxsYmFjayApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRhbmltYXRpb25QcmVmaWx0ZXJzLnB1c2goIGNhbGxiYWNrICk7XG5cdFx0fVxuXHR9XG59KTtcblxualF1ZXJ5LnNwZWVkID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGZuICkge1xuXHR2YXIgb3B0ID0gc3BlZWQgJiYgdHlwZW9mIHNwZWVkID09PSBcIm9iamVjdFwiID8galF1ZXJ5LmV4dGVuZCgge30sIHNwZWVkICkgOiB7XG5cdFx0Y29tcGxldGU6IGZuIHx8ICFmbiAmJiBlYXNpbmcgfHxcblx0XHRcdGpRdWVyeS5pc0Z1bmN0aW9uKCBzcGVlZCApICYmIHNwZWVkLFxuXHRcdGR1cmF0aW9uOiBzcGVlZCxcblx0XHRlYXNpbmc6IGZuICYmIGVhc2luZyB8fCBlYXNpbmcgJiYgIWpRdWVyeS5pc0Z1bmN0aW9uKCBlYXNpbmcgKSAmJiBlYXNpbmdcblx0fTtcblxuXHRvcHQuZHVyYXRpb24gPSBqUXVlcnkuZngub2ZmID8gMCA6IHR5cGVvZiBvcHQuZHVyYXRpb24gPT09IFwibnVtYmVyXCIgPyBvcHQuZHVyYXRpb24gOlxuXHRcdG9wdC5kdXJhdGlvbiBpbiBqUXVlcnkuZnguc3BlZWRzID8galF1ZXJ5LmZ4LnNwZWVkc1sgb3B0LmR1cmF0aW9uIF0gOiBqUXVlcnkuZnguc3BlZWRzLl9kZWZhdWx0O1xuXG5cdC8vIE5vcm1hbGl6ZSBvcHQucXVldWUgLSB0cnVlL3VuZGVmaW5lZC9udWxsIC0+IFwiZnhcIlxuXHRpZiAoIG9wdC5xdWV1ZSA9PSBudWxsIHx8IG9wdC5xdWV1ZSA9PT0gdHJ1ZSApIHtcblx0XHRvcHQucXVldWUgPSBcImZ4XCI7XG5cdH1cblxuXHQvLyBRdWV1ZWluZ1xuXHRvcHQub2xkID0gb3B0LmNvbXBsZXRlO1xuXG5cdG9wdC5jb21wbGV0ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIG9wdC5vbGQgKSApIHtcblx0XHRcdG9wdC5vbGQuY2FsbCggdGhpcyApO1xuXHRcdH1cblxuXHRcdGlmICggb3B0LnF1ZXVlICkge1xuXHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIG9wdC5xdWV1ZSApO1xuXHRcdH1cblx0fTtcblxuXHRyZXR1cm4gb3B0O1xufTtcblxualF1ZXJ5LmZuLmV4dGVuZCh7XG5cdGZhZGVUbzogZnVuY3Rpb24oIHNwZWVkLCB0bywgZWFzaW5nLCBjYWxsYmFjayApIHtcblxuXHRcdC8vIFNob3cgYW55IGhpZGRlbiBlbGVtZW50cyBhZnRlciBzZXR0aW5nIG9wYWNpdHkgdG8gMFxuXHRcdHJldHVybiB0aGlzLmZpbHRlciggaXNIaWRkZW4gKS5jc3MoIFwib3BhY2l0eVwiLCAwICkuc2hvdygpXG5cblx0XHRcdC8vIEFuaW1hdGUgdG8gdGhlIHZhbHVlIHNwZWNpZmllZFxuXHRcdFx0LmVuZCgpLmFuaW1hdGUoeyBvcGFjaXR5OiB0byB9LCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApO1xuXHR9LFxuXHRhbmltYXRlOiBmdW5jdGlvbiggcHJvcCwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7XG5cdFx0dmFyIGVtcHR5ID0galF1ZXJ5LmlzRW1wdHlPYmplY3QoIHByb3AgKSxcblx0XHRcdG9wdGFsbCA9IGpRdWVyeS5zcGVlZCggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSxcblx0XHRcdGRvQW5pbWF0aW9uID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdC8vIE9wZXJhdGUgb24gYSBjb3B5IG9mIHByb3Agc28gcGVyLXByb3BlcnR5IGVhc2luZyB3b24ndCBiZSBsb3N0XG5cdFx0XHRcdHZhciBhbmltID0gQW5pbWF0aW9uKCB0aGlzLCBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcCApLCBvcHRhbGwgKTtcblxuXHRcdFx0XHQvLyBFbXB0eSBhbmltYXRpb25zLCBvciBmaW5pc2hpbmcgcmVzb2x2ZXMgaW1tZWRpYXRlbHlcblx0XHRcdFx0aWYgKCBlbXB0eSB8fCBkYXRhX3ByaXYuZ2V0KCB0aGlzLCBcImZpbmlzaFwiICkgKSB7XG5cdFx0XHRcdFx0YW5pbS5zdG9wKCB0cnVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0XHRkb0FuaW1hdGlvbi5maW5pc2ggPSBkb0FuaW1hdGlvbjtcblxuXHRcdHJldHVybiBlbXB0eSB8fCBvcHRhbGwucXVldWUgPT09IGZhbHNlID9cblx0XHRcdHRoaXMuZWFjaCggZG9BbmltYXRpb24gKSA6XG5cdFx0XHR0aGlzLnF1ZXVlKCBvcHRhbGwucXVldWUsIGRvQW5pbWF0aW9uICk7XG5cdH0sXG5cdHN0b3A6IGZ1bmN0aW9uKCB0eXBlLCBjbGVhclF1ZXVlLCBnb3RvRW5kICkge1xuXHRcdHZhciBzdG9wUXVldWUgPSBmdW5jdGlvbiggaG9va3MgKSB7XG5cdFx0XHR2YXIgc3RvcCA9IGhvb2tzLnN0b3A7XG5cdFx0XHRkZWxldGUgaG9va3Muc3RvcDtcblx0XHRcdHN0b3AoIGdvdG9FbmQgKTtcblx0XHR9O1xuXG5cdFx0aWYgKCB0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGdvdG9FbmQgPSBjbGVhclF1ZXVlO1xuXHRcdFx0Y2xlYXJRdWV1ZSA9IHR5cGU7XG5cdFx0XHR0eXBlID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHRpZiAoIGNsZWFyUXVldWUgJiYgdHlwZSAhPT0gZmFsc2UgKSB7XG5cdFx0XHR0aGlzLnF1ZXVlKCB0eXBlIHx8IFwiZnhcIiwgW10gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGRlcXVldWUgPSB0cnVlLFxuXHRcdFx0XHRpbmRleCA9IHR5cGUgIT0gbnVsbCAmJiB0eXBlICsgXCJxdWV1ZUhvb2tzXCIsXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGRhdGEgPSBkYXRhX3ByaXYuZ2V0KCB0aGlzICk7XG5cblx0XHRcdGlmICggaW5kZXggKSB7XG5cdFx0XHRcdGlmICggZGF0YVsgaW5kZXggXSAmJiBkYXRhWyBpbmRleCBdLnN0b3AgKSB7XG5cdFx0XHRcdFx0c3RvcFF1ZXVlKCBkYXRhWyBpbmRleCBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGZvciAoIGluZGV4IGluIGRhdGEgKSB7XG5cdFx0XHRcdFx0aWYgKCBkYXRhWyBpbmRleCBdICYmIGRhdGFbIGluZGV4IF0uc3RvcCAmJiBycnVuLnRlc3QoIGluZGV4ICkgKSB7XG5cdFx0XHRcdFx0XHRzdG9wUXVldWUoIGRhdGFbIGluZGV4IF0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Zm9yICggaW5kZXggPSB0aW1lcnMubGVuZ3RoOyBpbmRleC0tOyApIHtcblx0XHRcdFx0aWYgKCB0aW1lcnNbIGluZGV4IF0uZWxlbSA9PT0gdGhpcyAmJiAodHlwZSA9PSBudWxsIHx8IHRpbWVyc1sgaW5kZXggXS5xdWV1ZSA9PT0gdHlwZSkgKSB7XG5cdFx0XHRcdFx0dGltZXJzWyBpbmRleCBdLmFuaW0uc3RvcCggZ290b0VuZCApO1xuXHRcdFx0XHRcdGRlcXVldWUgPSBmYWxzZTtcblx0XHRcdFx0XHR0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN0YXJ0IHRoZSBuZXh0IGluIHRoZSBxdWV1ZSBpZiB0aGUgbGFzdCBzdGVwIHdhc24ndCBmb3JjZWQuXG5cdFx0XHQvLyBUaW1lcnMgY3VycmVudGx5IHdpbGwgY2FsbCB0aGVpciBjb21wbGV0ZSBjYWxsYmFja3MsIHdoaWNoXG5cdFx0XHQvLyB3aWxsIGRlcXVldWUgYnV0IG9ubHkgaWYgdGhleSB3ZXJlIGdvdG9FbmQuXG5cdFx0XHRpZiAoIGRlcXVldWUgfHwgIWdvdG9FbmQgKSB7XG5cdFx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0sXG5cdGZpbmlzaDogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0aWYgKCB0eXBlICE9PSBmYWxzZSApIHtcblx0XHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcblx0XHRcdHZhciBpbmRleCxcblx0XHRcdFx0ZGF0YSA9IGRhdGFfcHJpdi5nZXQoIHRoaXMgKSxcblx0XHRcdFx0cXVldWUgPSBkYXRhWyB0eXBlICsgXCJxdWV1ZVwiIF0sXG5cdFx0XHRcdGhvb2tzID0gZGF0YVsgdHlwZSArIFwicXVldWVIb29rc1wiIF0sXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGxlbmd0aCA9IHF1ZXVlID8gcXVldWUubGVuZ3RoIDogMDtcblxuXHRcdFx0Ly8gRW5hYmxlIGZpbmlzaGluZyBmbGFnIG9uIHByaXZhdGUgZGF0YVxuXHRcdFx0ZGF0YS5maW5pc2ggPSB0cnVlO1xuXG5cdFx0XHQvLyBFbXB0eSB0aGUgcXVldWUgZmlyc3Rcblx0XHRcdGpRdWVyeS5xdWV1ZSggdGhpcywgdHlwZSwgW10gKTtcblxuXHRcdFx0aWYgKCBob29rcyAmJiBob29rcy5zdG9wICkge1xuXHRcdFx0XHRob29rcy5zdG9wLmNhbGwoIHRoaXMsIHRydWUgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTG9vayBmb3IgYW55IGFjdGl2ZSBhbmltYXRpb25zLCBhbmQgZmluaXNoIHRoZW1cblx0XHRcdGZvciAoIGluZGV4ID0gdGltZXJzLmxlbmd0aDsgaW5kZXgtLTsgKSB7XG5cdFx0XHRcdGlmICggdGltZXJzWyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiYgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkge1xuXHRcdFx0XHRcdHRpbWVyc1sgaW5kZXggXS5hbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0XHR0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIExvb2sgZm9yIGFueSBhbmltYXRpb25zIGluIHRoZSBvbGQgcXVldWUgYW5kIGZpbmlzaCB0aGVtXG5cdFx0XHRmb3IgKCBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0XHRpZiAoIHF1ZXVlWyBpbmRleCBdICYmIHF1ZXVlWyBpbmRleCBdLmZpbmlzaCApIHtcblx0XHRcdFx0XHRxdWV1ZVsgaW5kZXggXS5maW5pc2guY2FsbCggdGhpcyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFR1cm4gb2ZmIGZpbmlzaGluZyBmbGFnXG5cdFx0XHRkZWxldGUgZGF0YS5maW5pc2g7XG5cdFx0fSk7XG5cdH1cbn0pO1xuXG5qUXVlcnkuZWFjaChbIFwidG9nZ2xlXCIsIFwic2hvd1wiLCBcImhpZGVcIiBdLCBmdW5jdGlvbiggaSwgbmFtZSApIHtcblx0dmFyIGNzc0ZuID0galF1ZXJ5LmZuWyBuYW1lIF07XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBzcGVlZCA9PSBudWxsIHx8IHR5cGVvZiBzcGVlZCA9PT0gXCJib29sZWFuXCIgP1xuXHRcdFx0Y3NzRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApIDpcblx0XHRcdHRoaXMuYW5pbWF0ZSggZ2VuRngoIG5hbWUsIHRydWUgKSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fTtcbn0pO1xuXG4vLyBHZW5lcmF0ZSBzaG9ydGN1dHMgZm9yIGN1c3RvbSBhbmltYXRpb25zXG5qUXVlcnkuZWFjaCh7XG5cdHNsaWRlRG93bjogZ2VuRngoXCJzaG93XCIpLFxuXHRzbGlkZVVwOiBnZW5GeChcImhpZGVcIiksXG5cdHNsaWRlVG9nZ2xlOiBnZW5GeChcInRvZ2dsZVwiKSxcblx0ZmFkZUluOiB7IG9wYWNpdHk6IFwic2hvd1wiIH0sXG5cdGZhZGVPdXQ6IHsgb3BhY2l0eTogXCJoaWRlXCIgfSxcblx0ZmFkZVRvZ2dsZTogeyBvcGFjaXR5OiBcInRvZ2dsZVwiIH1cbn0sIGZ1bmN0aW9uKCBuYW1lLCBwcm9wcyApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIHRoaXMuYW5pbWF0ZSggcHJvcHMsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XG5cdH07XG59KTtcblxualF1ZXJ5LnRpbWVycyA9IFtdO1xualF1ZXJ5LmZ4LnRpY2sgPSBmdW5jdGlvbigpIHtcblx0dmFyIHRpbWVyLFxuXHRcdGkgPSAwLFxuXHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnM7XG5cblx0ZnhOb3cgPSBqUXVlcnkubm93KCk7XG5cblx0Zm9yICggOyBpIDwgdGltZXJzLmxlbmd0aDsgaSsrICkge1xuXHRcdHRpbWVyID0gdGltZXJzWyBpIF07XG5cdFx0Ly8gQ2hlY2tzIHRoZSB0aW1lciBoYXMgbm90IGFscmVhZHkgYmVlbiByZW1vdmVkXG5cdFx0aWYgKCAhdGltZXIoKSAmJiB0aW1lcnNbIGkgXSA9PT0gdGltZXIgKSB7XG5cdFx0XHR0aW1lcnMuc3BsaWNlKCBpLS0sIDEgKTtcblx0XHR9XG5cdH1cblxuXHRpZiAoICF0aW1lcnMubGVuZ3RoICkge1xuXHRcdGpRdWVyeS5meC5zdG9wKCk7XG5cdH1cblx0ZnhOb3cgPSB1bmRlZmluZWQ7XG59O1xuXG5qUXVlcnkuZngudGltZXIgPSBmdW5jdGlvbiggdGltZXIgKSB7XG5cdGpRdWVyeS50aW1lcnMucHVzaCggdGltZXIgKTtcblx0aWYgKCB0aW1lcigpICkge1xuXHRcdGpRdWVyeS5meC5zdGFydCgpO1xuXHR9IGVsc2Uge1xuXHRcdGpRdWVyeS50aW1lcnMucG9wKCk7XG5cdH1cbn07XG5cbmpRdWVyeS5meC5pbnRlcnZhbCA9IDEzO1xuXG5qUXVlcnkuZnguc3RhcnQgPSBmdW5jdGlvbigpIHtcblx0aWYgKCAhdGltZXJJZCApIHtcblx0XHR0aW1lcklkID0gc2V0SW50ZXJ2YWwoIGpRdWVyeS5meC50aWNrLCBqUXVlcnkuZnguaW50ZXJ2YWwgKTtcblx0fVxufTtcblxualF1ZXJ5LmZ4LnN0b3AgPSBmdW5jdGlvbigpIHtcblx0Y2xlYXJJbnRlcnZhbCggdGltZXJJZCApO1xuXHR0aW1lcklkID0gbnVsbDtcbn07XG5cbmpRdWVyeS5meC5zcGVlZHMgPSB7XG5cdHNsb3c6IDYwMCxcblx0ZmFzdDogMjAwLFxuXHQvLyBEZWZhdWx0IHNwZWVkXG5cdF9kZWZhdWx0OiA0MDBcbn07XG5cblxuLy8gQmFzZWQgb2ZmIG9mIHRoZSBwbHVnaW4gYnkgQ2xpbnQgSGVsZmVycywgd2l0aCBwZXJtaXNzaW9uLlxuLy8gaHR0cDovL2JsaW5kc2lnbmFscy5jb20vaW5kZXgucGhwLzIwMDkvMDcvanF1ZXJ5LWRlbGF5L1xualF1ZXJ5LmZuLmRlbGF5ID0gZnVuY3Rpb24oIHRpbWUsIHR5cGUgKSB7XG5cdHRpbWUgPSBqUXVlcnkuZnggPyBqUXVlcnkuZnguc3BlZWRzWyB0aW1lIF0gfHwgdGltZSA6IHRpbWU7XG5cdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRyZXR1cm4gdGhpcy5xdWV1ZSggdHlwZSwgZnVuY3Rpb24oIG5leHQsIGhvb2tzICkge1xuXHRcdHZhciB0aW1lb3V0ID0gc2V0VGltZW91dCggbmV4dCwgdGltZSApO1xuXHRcdGhvb2tzLnN0b3AgPSBmdW5jdGlvbigpIHtcblx0XHRcdGNsZWFyVGltZW91dCggdGltZW91dCApO1xuXHRcdH07XG5cdH0pO1xufTtcblxuXG4oZnVuY3Rpb24oKSB7XG5cdHZhciBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApLFxuXHRcdHNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwic2VsZWN0XCIgKSxcblx0XHRvcHQgPSBzZWxlY3QuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwib3B0aW9uXCIgKSApO1xuXG5cdGlucHV0LnR5cGUgPSBcImNoZWNrYm94XCI7XG5cblx0Ly8gU3VwcG9ydDogaU9TPD01LjEsIEFuZHJvaWQ8PTQuMitcblx0Ly8gRGVmYXVsdCB2YWx1ZSBmb3IgYSBjaGVja2JveCBzaG91bGQgYmUgXCJvblwiXG5cdHN1cHBvcnQuY2hlY2tPbiA9IGlucHV0LnZhbHVlICE9PSBcIlwiO1xuXG5cdC8vIFN1cHBvcnQ6IElFPD0xMStcblx0Ly8gTXVzdCBhY2Nlc3Mgc2VsZWN0ZWRJbmRleCB0byBtYWtlIGRlZmF1bHQgb3B0aW9ucyBzZWxlY3Rcblx0c3VwcG9ydC5vcHRTZWxlY3RlZCA9IG9wdC5zZWxlY3RlZDtcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkPD0yLjNcblx0Ly8gT3B0aW9ucyBpbnNpZGUgZGlzYWJsZWQgc2VsZWN0cyBhcmUgaW5jb3JyZWN0bHkgbWFya2VkIGFzIGRpc2FibGVkXG5cdHNlbGVjdC5kaXNhYmxlZCA9IHRydWU7XG5cdHN1cHBvcnQub3B0RGlzYWJsZWQgPSAhb3B0LmRpc2FibGVkO1xuXG5cdC8vIFN1cHBvcnQ6IElFPD0xMStcblx0Ly8gQW4gaW5wdXQgbG9zZXMgaXRzIHZhbHVlIGFmdGVyIGJlY29taW5nIGEgcmFkaW9cblx0aW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKTtcblx0aW5wdXQudmFsdWUgPSBcInRcIjtcblx0aW5wdXQudHlwZSA9IFwicmFkaW9cIjtcblx0c3VwcG9ydC5yYWRpb1ZhbHVlID0gaW5wdXQudmFsdWUgPT09IFwidFwiO1xufSkoKTtcblxuXG52YXIgbm9kZUhvb2ssIGJvb2xIb29rLFxuXHRhdHRySGFuZGxlID0galF1ZXJ5LmV4cHIuYXR0ckhhbmRsZTtcblxualF1ZXJ5LmZuLmV4dGVuZCh7XG5cdGF0dHI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkuYXR0ciwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH0sXG5cblx0cmVtb3ZlQXR0cjogZnVuY3Rpb24oIG5hbWUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCB0aGlzLCBuYW1lICk7XG5cdFx0fSk7XG5cdH1cbn0pO1xuXG5qUXVlcnkuZXh0ZW5kKHtcblx0YXR0cjogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xuXHRcdHZhciBob29rcywgcmV0LFxuXHRcdFx0blR5cGUgPSBlbGVtLm5vZGVUeXBlO1xuXG5cdFx0Ly8gZG9uJ3QgZ2V0L3NldCBhdHRyaWJ1dGVzIG9uIHRleHQsIGNvbW1lbnQgYW5kIGF0dHJpYnV0ZSBub2Rlc1xuXHRcdGlmICggIWVsZW0gfHwgblR5cGUgPT09IDMgfHwgblR5cGUgPT09IDggfHwgblR5cGUgPT09IDIgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRmFsbGJhY2sgdG8gcHJvcCB3aGVuIGF0dHJpYnV0ZXMgYXJlIG5vdCBzdXBwb3J0ZWRcblx0XHRpZiAoIHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZSA9PT0gc3RydW5kZWZpbmVkICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5wcm9wKCBlbGVtLCBuYW1lLCB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdC8vIEFsbCBhdHRyaWJ1dGVzIGFyZSBsb3dlcmNhc2Vcblx0XHQvLyBHcmFiIG5lY2Vzc2FyeSBob29rIGlmIG9uZSBpcyBkZWZpbmVkXG5cdFx0aWYgKCBuVHlwZSAhPT0gMSB8fCAhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XG5cdFx0XHRuYW1lID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0aG9va3MgPSBqUXVlcnkuYXR0ckhvb2tzWyBuYW1lIF0gfHxcblx0XHRcdFx0KCBqUXVlcnkuZXhwci5tYXRjaC5ib29sLnRlc3QoIG5hbWUgKSA/IGJvb2xIb29rIDogbm9kZUhvb2sgKTtcblx0XHR9XG5cblx0XHRpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdGlmICggdmFsdWUgPT09IG51bGwgKSB7XG5cdFx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCBlbGVtLCBuYW1lICk7XG5cblx0XHRcdH0gZWxzZSBpZiAoIGhvb2tzICYmIFwic2V0XCIgaW4gaG9va3MgJiYgKHJldCA9IGhvb2tzLnNldCggZWxlbSwgdmFsdWUsIG5hbWUgKSkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIG5hbWUsIHZhbHVlICsgXCJcIiApO1xuXHRcdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0XHR9XG5cblx0XHR9IGVsc2UgaWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmIChyZXQgPSBob29rcy5nZXQoIGVsZW0sIG5hbWUgKSkgIT09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIG5hbWUgKTtcblxuXHRcdFx0Ly8gTm9uLWV4aXN0ZW50IGF0dHJpYnV0ZXMgcmV0dXJuIG51bGwsIHdlIG5vcm1hbGl6ZSB0byB1bmRlZmluZWRcblx0XHRcdHJldHVybiByZXQgPT0gbnVsbCA/XG5cdFx0XHRcdHVuZGVmaW5lZCA6XG5cdFx0XHRcdHJldDtcblx0XHR9XG5cdH0sXG5cblx0cmVtb3ZlQXR0cjogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdHZhciBuYW1lLCBwcm9wTmFtZSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0YXR0ck5hbWVzID0gdmFsdWUgJiYgdmFsdWUubWF0Y2goIHJub3R3aGl0ZSApO1xuXG5cdFx0aWYgKCBhdHRyTmFtZXMgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdHdoaWxlICggKG5hbWUgPSBhdHRyTmFtZXNbaSsrXSkgKSB7XG5cdFx0XHRcdHByb3BOYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lO1xuXG5cdFx0XHRcdC8vIEJvb2xlYW4gYXR0cmlidXRlcyBnZXQgc3BlY2lhbCB0cmVhdG1lbnQgKCMxMDg3MClcblx0XHRcdFx0aWYgKCBqUXVlcnkuZXhwci5tYXRjaC5ib29sLnRlc3QoIG5hbWUgKSApIHtcblx0XHRcdFx0XHQvLyBTZXQgY29ycmVzcG9uZGluZyBwcm9wZXJ0eSB0byBmYWxzZVxuXHRcdFx0XHRcdGVsZW1bIHByb3BOYW1lIF0gPSBmYWxzZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGVsZW0ucmVtb3ZlQXR0cmlidXRlKCBuYW1lICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdGF0dHJIb29rczoge1xuXHRcdHR5cGU6IHtcblx0XHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdFx0XHRpZiAoICFzdXBwb3J0LnJhZGlvVmFsdWUgJiYgdmFsdWUgPT09IFwicmFkaW9cIiAmJlxuXHRcdFx0XHRcdGpRdWVyeS5ub2RlTmFtZSggZWxlbSwgXCJpbnB1dFwiICkgKSB7XG5cdFx0XHRcdFx0dmFyIHZhbCA9IGVsZW0udmFsdWU7XG5cdFx0XHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIFwidHlwZVwiLCB2YWx1ZSApO1xuXHRcdFx0XHRcdGlmICggdmFsICkge1xuXHRcdFx0XHRcdFx0ZWxlbS52YWx1ZSA9IHZhbDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59KTtcblxuLy8gSG9va3MgZm9yIGJvb2xlYW4gYXR0cmlidXRlc1xuYm9vbEhvb2sgPSB7XG5cdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBuYW1lICkge1xuXHRcdGlmICggdmFsdWUgPT09IGZhbHNlICkge1xuXHRcdFx0Ly8gUmVtb3ZlIGJvb2xlYW4gYXR0cmlidXRlcyB3aGVuIHNldCB0byBmYWxzZVxuXHRcdFx0alF1ZXJ5LnJlbW92ZUF0dHIoIGVsZW0sIG5hbWUgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIG5hbWUsIG5hbWUgKTtcblx0XHR9XG5cdFx0cmV0dXJuIG5hbWU7XG5cdH1cbn07XG5qUXVlcnkuZWFjaCggalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC5zb3VyY2UubWF0Y2goIC9cXHcrL2cgKSwgZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cdHZhciBnZXR0ZXIgPSBhdHRySGFuZGxlWyBuYW1lIF0gfHwgalF1ZXJ5LmZpbmQuYXR0cjtcblxuXHRhdHRySGFuZGxlWyBuYW1lIF0gPSBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0dmFyIHJldCwgaGFuZGxlO1xuXHRcdGlmICggIWlzWE1MICkge1xuXHRcdFx0Ly8gQXZvaWQgYW4gaW5maW5pdGUgbG9vcCBieSB0ZW1wb3JhcmlseSByZW1vdmluZyB0aGlzIGZ1bmN0aW9uIGZyb20gdGhlIGdldHRlclxuXHRcdFx0aGFuZGxlID0gYXR0ckhhbmRsZVsgbmFtZSBdO1xuXHRcdFx0YXR0ckhhbmRsZVsgbmFtZSBdID0gcmV0O1xuXHRcdFx0cmV0ID0gZ2V0dGVyKCBlbGVtLCBuYW1lLCBpc1hNTCApICE9IG51bGwgP1xuXHRcdFx0XHRuYW1lLnRvTG93ZXJDYXNlKCkgOlxuXHRcdFx0XHRudWxsO1xuXHRcdFx0YXR0ckhhbmRsZVsgbmFtZSBdID0gaGFuZGxlO1xuXHRcdH1cblx0XHRyZXR1cm4gcmV0O1xuXHR9O1xufSk7XG5cblxuXG5cbnZhciByZm9jdXNhYmxlID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaTtcblxualF1ZXJ5LmZuLmV4dGVuZCh7XG5cdHByb3A6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkucHJvcCwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH0sXG5cblx0cmVtb3ZlUHJvcDogZnVuY3Rpb24oIG5hbWUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcblx0XHRcdGRlbGV0ZSB0aGlzWyBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWUgXTtcblx0XHR9KTtcblx0fVxufSk7XG5cbmpRdWVyeS5leHRlbmQoe1xuXHRwcm9wRml4OiB7XG5cdFx0XCJmb3JcIjogXCJodG1sRm9yXCIsXG5cdFx0XCJjbGFzc1wiOiBcImNsYXNzTmFtZVwiXG5cdH0sXG5cblx0cHJvcDogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xuXHRcdHZhciByZXQsIGhvb2tzLCBub3R4bWwsXG5cdFx0XHRuVHlwZSA9IGVsZW0ubm9kZVR5cGU7XG5cblx0XHQvLyBEb24ndCBnZXQvc2V0IHByb3BlcnRpZXMgb24gdGV4dCwgY29tbWVudCBhbmQgYXR0cmlidXRlIG5vZGVzXG5cdFx0aWYgKCAhZWxlbSB8fCBuVHlwZSA9PT0gMyB8fCBuVHlwZSA9PT0gOCB8fCBuVHlwZSA9PT0gMiApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRub3R4bWwgPSBuVHlwZSAhPT0gMSB8fCAhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICk7XG5cblx0XHRpZiAoIG5vdHhtbCApIHtcblx0XHRcdC8vIEZpeCBuYW1lIGFuZCBhdHRhY2ggaG9va3Ncblx0XHRcdG5hbWUgPSBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWU7XG5cdFx0XHRob29rcyA9IGpRdWVyeS5wcm9wSG9va3NbIG5hbWUgXTtcblx0XHR9XG5cblx0XHRpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRyZXR1cm4gaG9va3MgJiYgXCJzZXRcIiBpbiBob29rcyAmJiAocmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApKSAhPT0gdW5kZWZpbmVkID9cblx0XHRcdFx0cmV0IDpcblx0XHRcdFx0KCBlbGVtWyBuYW1lIF0gPSB2YWx1ZSApO1xuXG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldHVybiBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmIChyZXQgPSBob29rcy5nZXQoIGVsZW0sIG5hbWUgKSkgIT09IG51bGwgP1xuXHRcdFx0XHRyZXQgOlxuXHRcdFx0XHRlbGVtWyBuYW1lIF07XG5cdFx0fVxuXHR9LFxuXG5cdHByb3BIb29rczoge1xuXHRcdHRhYkluZGV4OiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRyZXR1cm4gZWxlbS5oYXNBdHRyaWJ1dGUoIFwidGFiaW5kZXhcIiApIHx8IHJmb2N1c2FibGUudGVzdCggZWxlbS5ub2RlTmFtZSApIHx8IGVsZW0uaHJlZiA/XG5cdFx0XHRcdFx0ZWxlbS50YWJJbmRleCA6XG5cdFx0XHRcdFx0LTE7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59KTtcblxuaWYgKCAhc3VwcG9ydC5vcHRTZWxlY3RlZCApIHtcblx0alF1ZXJ5LnByb3BIb29rcy5zZWxlY3RlZCA9IHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcblx0XHRcdGlmICggcGFyZW50ICYmIHBhcmVudC5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRwYXJlbnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0fVxuXHR9O1xufVxuXG5qUXVlcnkuZWFjaChbXG5cdFwidGFiSW5kZXhcIixcblx0XCJyZWFkT25seVwiLFxuXHRcIm1heExlbmd0aFwiLFxuXHRcImNlbGxTcGFjaW5nXCIsXG5cdFwiY2VsbFBhZGRpbmdcIixcblx0XCJyb3dTcGFuXCIsXG5cdFwiY29sU3BhblwiLFxuXHRcInVzZU1hcFwiLFxuXHRcImZyYW1lQm9yZGVyXCIsXG5cdFwiY29udGVudEVkaXRhYmxlXCJcbl0sIGZ1bmN0aW9uKCkge1xuXHRqUXVlcnkucHJvcEZpeFsgdGhpcy50b0xvd2VyQ2FzZSgpIF0gPSB0aGlzO1xufSk7XG5cblxuXG5cbnZhciByY2xhc3MgPSAvW1xcdFxcclxcblxcZl0vZztcblxualF1ZXJ5LmZuLmV4dGVuZCh7XG5cdGFkZENsYXNzOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFyIGNsYXNzZXMsIGVsZW0sIGN1ciwgY2xhenosIGosIGZpbmFsVmFsdWUsXG5cdFx0XHRwcm9jZWVkID0gdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmIHZhbHVlLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRsZW4gPSB0aGlzLmxlbmd0aDtcblxuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCBqICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5hZGRDbGFzcyggdmFsdWUuY2FsbCggdGhpcywgaiwgdGhpcy5jbGFzc05hbWUgKSApO1xuXHRcdFx0fSk7XG5cdFx0fVxuXG5cdFx0aWYgKCBwcm9jZWVkICkge1xuXHRcdFx0Ly8gVGhlIGRpc2p1bmN0aW9uIGhlcmUgaXMgZm9yIGJldHRlciBjb21wcmVzc2liaWxpdHkgKHNlZSByZW1vdmVDbGFzcylcblx0XHRcdGNsYXNzZXMgPSAoIHZhbHVlIHx8IFwiXCIgKS5tYXRjaCggcm5vdHdoaXRlICkgfHwgW107XG5cblx0XHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0XHRlbGVtID0gdGhpc1sgaSBdO1xuXHRcdFx0XHRjdXIgPSBlbGVtLm5vZGVUeXBlID09PSAxICYmICggZWxlbS5jbGFzc05hbWUgP1xuXHRcdFx0XHRcdCggXCIgXCIgKyBlbGVtLmNsYXNzTmFtZSArIFwiIFwiICkucmVwbGFjZSggcmNsYXNzLCBcIiBcIiApIDpcblx0XHRcdFx0XHRcIiBcIlxuXHRcdFx0XHQpO1xuXG5cdFx0XHRcdGlmICggY3VyICkge1xuXHRcdFx0XHRcdGogPSAwO1xuXHRcdFx0XHRcdHdoaWxlICggKGNsYXp6ID0gY2xhc3Nlc1tqKytdKSApIHtcblx0XHRcdFx0XHRcdGlmICggY3VyLmluZGV4T2YoIFwiIFwiICsgY2xhenogKyBcIiBcIiApIDwgMCApIHtcblx0XHRcdFx0XHRcdFx0Y3VyICs9IGNsYXp6ICsgXCIgXCI7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gb25seSBhc3NpZ24gaWYgZGlmZmVyZW50IHRvIGF2b2lkIHVubmVlZGVkIHJlbmRlcmluZy5cblx0XHRcdFx0XHRmaW5hbFZhbHVlID0galF1ZXJ5LnRyaW0oIGN1ciApO1xuXHRcdFx0XHRcdGlmICggZWxlbS5jbGFzc05hbWUgIT09IGZpbmFsVmFsdWUgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLmNsYXNzTmFtZSA9IGZpbmFsVmFsdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0cmVtb3ZlQ2xhc3M6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHR2YXIgY2xhc3NlcywgZWxlbSwgY3VyLCBjbGF6eiwgaiwgZmluYWxWYWx1ZSxcblx0XHRcdHByb2NlZWQgPSBhcmd1bWVudHMubGVuZ3RoID09PSAwIHx8IHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJiB2YWx1ZSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0bGVuID0gdGhpcy5sZW5ndGg7XG5cblx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiggaiApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkucmVtb3ZlQ2xhc3MoIHZhbHVlLmNhbGwoIHRoaXMsIGosIHRoaXMuY2xhc3NOYW1lICkgKTtcblx0XHRcdH0pO1xuXHRcdH1cblx0XHRpZiAoIHByb2NlZWQgKSB7XG5cdFx0XHRjbGFzc2VzID0gKCB2YWx1ZSB8fCBcIlwiICkubWF0Y2goIHJub3R3aGl0ZSApIHx8IFtdO1xuXG5cdFx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0ZWxlbSA9IHRoaXNbIGkgXTtcblx0XHRcdFx0Ly8gVGhpcyBleHByZXNzaW9uIGlzIGhlcmUgZm9yIGJldHRlciBjb21wcmVzc2liaWxpdHkgKHNlZSBhZGRDbGFzcylcblx0XHRcdFx0Y3VyID0gZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAoIGVsZW0uY2xhc3NOYW1lID9cblx0XHRcdFx0XHQoIFwiIFwiICsgZWxlbS5jbGFzc05hbWUgKyBcIiBcIiApLnJlcGxhY2UoIHJjbGFzcywgXCIgXCIgKSA6XG5cdFx0XHRcdFx0XCJcIlxuXHRcdFx0XHQpO1xuXG5cdFx0XHRcdGlmICggY3VyICkge1xuXHRcdFx0XHRcdGogPSAwO1xuXHRcdFx0XHRcdHdoaWxlICggKGNsYXp6ID0gY2xhc3Nlc1tqKytdKSApIHtcblx0XHRcdFx0XHRcdC8vIFJlbW92ZSAqYWxsKiBpbnN0YW5jZXNcblx0XHRcdFx0XHRcdHdoaWxlICggY3VyLmluZGV4T2YoIFwiIFwiICsgY2xhenogKyBcIiBcIiApID49IDAgKSB7XG5cdFx0XHRcdFx0XHRcdGN1ciA9IGN1ci5yZXBsYWNlKCBcIiBcIiArIGNsYXp6ICsgXCIgXCIsIFwiIFwiICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gT25seSBhc3NpZ24gaWYgZGlmZmVyZW50IHRvIGF2b2lkIHVubmVlZGVkIHJlbmRlcmluZy5cblx0XHRcdFx0XHRmaW5hbFZhbHVlID0gdmFsdWUgPyBqUXVlcnkudHJpbSggY3VyICkgOiBcIlwiO1xuXHRcdFx0XHRcdGlmICggZWxlbS5jbGFzc05hbWUgIT09IGZpbmFsVmFsdWUgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLmNsYXNzTmFtZSA9IGZpbmFsVmFsdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0dG9nZ2xlQ2xhc3M6IGZ1bmN0aW9uKCB2YWx1ZSwgc3RhdGVWYWwgKSB7XG5cdFx0dmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG5cblx0XHRpZiAoIHR5cGVvZiBzdGF0ZVZhbCA9PT0gXCJib29sZWFuXCIgJiYgdHlwZSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHJldHVybiBzdGF0ZVZhbCA/IHRoaXMuYWRkQ2xhc3MoIHZhbHVlICkgOiB0aGlzLnJlbW92ZUNsYXNzKCB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS50b2dnbGVDbGFzcyggdmFsdWUuY2FsbCh0aGlzLCBpLCB0aGlzLmNsYXNzTmFtZSwgc3RhdGVWYWwpLCBzdGF0ZVZhbCApO1xuXHRcdFx0fSk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcblx0XHRcdGlmICggdHlwZSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdFx0Ly8gVG9nZ2xlIGluZGl2aWR1YWwgY2xhc3MgbmFtZXNcblx0XHRcdFx0dmFyIGNsYXNzTmFtZSxcblx0XHRcdFx0XHRpID0gMCxcblx0XHRcdFx0XHRzZWxmID0galF1ZXJ5KCB0aGlzICksXG5cdFx0XHRcdFx0Y2xhc3NOYW1lcyA9IHZhbHVlLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbXTtcblxuXHRcdFx0XHR3aGlsZSAoIChjbGFzc05hbWUgPSBjbGFzc05hbWVzWyBpKysgXSkgKSB7XG5cdFx0XHRcdFx0Ly8gQ2hlY2sgZWFjaCBjbGFzc05hbWUgZ2l2ZW4sIHNwYWNlIHNlcGFyYXRlZCBsaXN0XG5cdFx0XHRcdFx0aWYgKCBzZWxmLmhhc0NsYXNzKCBjbGFzc05hbWUgKSApIHtcblx0XHRcdFx0XHRcdHNlbGYucmVtb3ZlQ2xhc3MoIGNsYXNzTmFtZSApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRzZWxmLmFkZENsYXNzKCBjbGFzc05hbWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gVG9nZ2xlIHdob2xlIGNsYXNzIG5hbWVcblx0XHRcdH0gZWxzZSBpZiAoIHR5cGUgPT09IHN0cnVuZGVmaW5lZCB8fCB0eXBlID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRcdFx0aWYgKCB0aGlzLmNsYXNzTmFtZSApIHtcblx0XHRcdFx0XHQvLyBzdG9yZSBjbGFzc05hbWUgaWYgc2V0XG5cdFx0XHRcdFx0ZGF0YV9wcml2LnNldCggdGhpcywgXCJfX2NsYXNzTmFtZV9fXCIsIHRoaXMuY2xhc3NOYW1lICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBJZiB0aGUgZWxlbWVudCBoYXMgYSBjbGFzcyBuYW1lIG9yIGlmIHdlJ3JlIHBhc3NlZCBgZmFsc2VgLFxuXHRcdFx0XHQvLyB0aGVuIHJlbW92ZSB0aGUgd2hvbGUgY2xhc3NuYW1lIChpZiB0aGVyZSB3YXMgb25lLCB0aGUgYWJvdmUgc2F2ZWQgaXQpLlxuXHRcdFx0XHQvLyBPdGhlcndpc2UgYnJpbmcgYmFjayB3aGF0ZXZlciB3YXMgcHJldmlvdXNseSBzYXZlZCAoaWYgYW55dGhpbmcpLFxuXHRcdFx0XHQvLyBmYWxsaW5nIGJhY2sgdG8gdGhlIGVtcHR5IHN0cmluZyBpZiBub3RoaW5nIHdhcyBzdG9yZWQuXG5cdFx0XHRcdHRoaXMuY2xhc3NOYW1lID0gdGhpcy5jbGFzc05hbWUgfHwgdmFsdWUgPT09IGZhbHNlID8gXCJcIiA6IGRhdGFfcHJpdi5nZXQoIHRoaXMsIFwiX19jbGFzc05hbWVfX1wiICkgfHwgXCJcIjtcblx0XHRcdH1cblx0XHR9KTtcblx0fSxcblxuXHRoYXNDbGFzczogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBjbGFzc05hbWUgPSBcIiBcIiArIHNlbGVjdG9yICsgXCIgXCIsXG5cdFx0XHRpID0gMCxcblx0XHRcdGwgPSB0aGlzLmxlbmd0aDtcblx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRpZiAoIHRoaXNbaV0ubm9kZVR5cGUgPT09IDEgJiYgKFwiIFwiICsgdGhpc1tpXS5jbGFzc05hbWUgKyBcIiBcIikucmVwbGFjZShyY2xhc3MsIFwiIFwiKS5pbmRleE9mKCBjbGFzc05hbWUgKSA+PSAwICkge1xuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn0pO1xuXG5cblxuXG52YXIgcnJldHVybiA9IC9cXHIvZztcblxualF1ZXJ5LmZuLmV4dGVuZCh7XG5cdHZhbDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBob29rcywgcmV0LCBpc0Z1bmN0aW9uLFxuXHRcdFx0ZWxlbSA9IHRoaXNbMF07XG5cblx0XHRpZiAoICFhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0XHRob29rcyA9IGpRdWVyeS52YWxIb29rc1sgZWxlbS50eXBlIF0gfHwgalF1ZXJ5LnZhbEhvb2tzWyBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTtcblxuXHRcdFx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgJiYgKHJldCA9IGhvb2tzLmdldCggZWxlbSwgXCJ2YWx1ZVwiICkpICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldCA9IGVsZW0udmFsdWU7XG5cblx0XHRcdFx0cmV0dXJuIHR5cGVvZiByZXQgPT09IFwic3RyaW5nXCIgP1xuXHRcdFx0XHRcdC8vIEhhbmRsZSBtb3N0IGNvbW1vbiBzdHJpbmcgY2FzZXNcblx0XHRcdFx0XHRyZXQucmVwbGFjZShycmV0dXJuLCBcIlwiKSA6XG5cdFx0XHRcdFx0Ly8gSGFuZGxlIGNhc2VzIHdoZXJlIHZhbHVlIGlzIG51bGwvdW5kZWYgb3IgbnVtYmVyXG5cdFx0XHRcdFx0cmV0ID09IG51bGwgPyBcIlwiIDogcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aXNGdW5jdGlvbiA9IGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApO1xuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiggaSApIHtcblx0XHRcdHZhciB2YWw7XG5cblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSAhPT0gMSApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGlzRnVuY3Rpb24gKSB7XG5cdFx0XHRcdHZhbCA9IHZhbHVlLmNhbGwoIHRoaXMsIGksIGpRdWVyeSggdGhpcyApLnZhbCgpICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR2YWwgPSB2YWx1ZTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVHJlYXQgbnVsbC91bmRlZmluZWQgYXMgXCJcIjsgY29udmVydCBudW1iZXJzIHRvIHN0cmluZ1xuXHRcdFx0aWYgKCB2YWwgPT0gbnVsbCApIHtcblx0XHRcdFx0dmFsID0gXCJcIjtcblxuXHRcdFx0fSBlbHNlIGlmICggdHlwZW9mIHZhbCA9PT0gXCJudW1iZXJcIiApIHtcblx0XHRcdFx0dmFsICs9IFwiXCI7XG5cblx0XHRcdH0gZWxzZSBpZiAoIGpRdWVyeS5pc0FycmF5KCB2YWwgKSApIHtcblx0XHRcdFx0dmFsID0galF1ZXJ5Lm1hcCggdmFsLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHZhbHVlID09IG51bGwgPyBcIlwiIDogdmFsdWUgKyBcIlwiO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblxuXHRcdFx0aG9va3MgPSBqUXVlcnkudmFsSG9va3NbIHRoaXMudHlwZSBdIHx8IGpRdWVyeS52YWxIb29rc1sgdGhpcy5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpIF07XG5cblx0XHRcdC8vIElmIHNldCByZXR1cm5zIHVuZGVmaW5lZCwgZmFsbCBiYWNrIHRvIG5vcm1hbCBzZXR0aW5nXG5cdFx0XHRpZiAoICFob29rcyB8fCAhKFwic2V0XCIgaW4gaG9va3MpIHx8IGhvb2tzLnNldCggdGhpcywgdmFsLCBcInZhbHVlXCIgKSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHR0aGlzLnZhbHVlID0gdmFsO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHR9XG59KTtcblxualF1ZXJ5LmV4dGVuZCh7XG5cdHZhbEhvb2tzOiB7XG5cdFx0b3B0aW9uOiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgdmFsID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgXCJ2YWx1ZVwiICk7XG5cdFx0XHRcdHJldHVybiB2YWwgIT0gbnVsbCA/XG5cdFx0XHRcdFx0dmFsIDpcblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRTEwLTExK1xuXHRcdFx0XHRcdC8vIG9wdGlvbi50ZXh0IHRocm93cyBleGNlcHRpb25zICgjMTQ2ODYsICMxNDg1OClcblx0XHRcdFx0XHRqUXVlcnkudHJpbSggalF1ZXJ5LnRleHQoIGVsZW0gKSApO1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0c2VsZWN0OiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgdmFsdWUsIG9wdGlvbixcblx0XHRcdFx0XHRvcHRpb25zID0gZWxlbS5vcHRpb25zLFxuXHRcdFx0XHRcdGluZGV4ID0gZWxlbS5zZWxlY3RlZEluZGV4LFxuXHRcdFx0XHRcdG9uZSA9IGVsZW0udHlwZSA9PT0gXCJzZWxlY3Qtb25lXCIgfHwgaW5kZXggPCAwLFxuXHRcdFx0XHRcdHZhbHVlcyA9IG9uZSA/IG51bGwgOiBbXSxcblx0XHRcdFx0XHRtYXggPSBvbmUgPyBpbmRleCArIDEgOiBvcHRpb25zLmxlbmd0aCxcblx0XHRcdFx0XHRpID0gaW5kZXggPCAwID9cblx0XHRcdFx0XHRcdG1heCA6XG5cdFx0XHRcdFx0XHRvbmUgPyBpbmRleCA6IDA7XG5cblx0XHRcdFx0Ly8gTG9vcCB0aHJvdWdoIGFsbCB0aGUgc2VsZWN0ZWQgb3B0aW9uc1xuXHRcdFx0XHRmb3IgKCA7IGkgPCBtYXg7IGkrKyApIHtcblx0XHRcdFx0XHRvcHRpb24gPSBvcHRpb25zWyBpIF07XG5cblx0XHRcdFx0XHQvLyBJRTYtOSBkb2Vzbid0IHVwZGF0ZSBzZWxlY3RlZCBhZnRlciBmb3JtIHJlc2V0ICgjMjU1MSlcblx0XHRcdFx0XHRpZiAoICggb3B0aW9uLnNlbGVjdGVkIHx8IGkgPT09IGluZGV4ICkgJiZcblx0XHRcdFx0XHRcdFx0Ly8gRG9uJ3QgcmV0dXJuIG9wdGlvbnMgdGhhdCBhcmUgZGlzYWJsZWQgb3IgaW4gYSBkaXNhYmxlZCBvcHRncm91cFxuXHRcdFx0XHRcdFx0XHQoIHN1cHBvcnQub3B0RGlzYWJsZWQgPyAhb3B0aW9uLmRpc2FibGVkIDogb3B0aW9uLmdldEF0dHJpYnV0ZSggXCJkaXNhYmxlZFwiICkgPT09IG51bGwgKSAmJlxuXHRcdFx0XHRcdFx0XHQoICFvcHRpb24ucGFyZW50Tm9kZS5kaXNhYmxlZCB8fCAhalF1ZXJ5Lm5vZGVOYW1lKCBvcHRpb24ucGFyZW50Tm9kZSwgXCJvcHRncm91cFwiICkgKSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gR2V0IHRoZSBzcGVjaWZpYyB2YWx1ZSBmb3IgdGhlIG9wdGlvblxuXHRcdFx0XHRcdFx0dmFsdWUgPSBqUXVlcnkoIG9wdGlvbiApLnZhbCgpO1xuXG5cdFx0XHRcdFx0XHQvLyBXZSBkb24ndCBuZWVkIGFuIGFycmF5IGZvciBvbmUgc2VsZWN0c1xuXHRcdFx0XHRcdFx0aWYgKCBvbmUgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0Ly8gTXVsdGktU2VsZWN0cyByZXR1cm4gYW4gYXJyYXlcblx0XHRcdFx0XHRcdHZhbHVlcy5wdXNoKCB2YWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB2YWx1ZXM7XG5cdFx0XHR9LFxuXG5cdFx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcblx0XHRcdFx0dmFyIG9wdGlvblNldCwgb3B0aW9uLFxuXHRcdFx0XHRcdG9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsXG5cdFx0XHRcdFx0dmFsdWVzID0galF1ZXJ5Lm1ha2VBcnJheSggdmFsdWUgKSxcblx0XHRcdFx0XHRpID0gb3B0aW9ucy5sZW5ndGg7XG5cblx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0b3B0aW9uID0gb3B0aW9uc1sgaSBdO1xuXHRcdFx0XHRcdGlmICggKG9wdGlvbi5zZWxlY3RlZCA9IGpRdWVyeS5pbkFycmF5KCBvcHRpb24udmFsdWUsIHZhbHVlcyApID49IDApICkge1xuXHRcdFx0XHRcdFx0b3B0aW9uU2V0ID0gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBGb3JjZSBicm93c2VycyB0byBiZWhhdmUgY29uc2lzdGVudGx5IHdoZW4gbm9uLW1hdGNoaW5nIHZhbHVlIGlzIHNldFxuXHRcdFx0XHRpZiAoICFvcHRpb25TZXQgKSB7XG5cdFx0XHRcdFx0ZWxlbS5zZWxlY3RlZEluZGV4ID0gLTE7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHZhbHVlcztcblx0XHRcdH1cblx0XHR9XG5cdH1cbn0pO1xuXG4vLyBSYWRpb3MgYW5kIGNoZWNrYm94ZXMgZ2V0dGVyL3NldHRlclxualF1ZXJ5LmVhY2goWyBcInJhZGlvXCIsIFwiY2hlY2tib3hcIiBdLCBmdW5jdGlvbigpIHtcblx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0gPSB7XG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRpZiAoIGpRdWVyeS5pc0FycmF5KCB2YWx1ZSApICkge1xuXHRcdFx0XHRyZXR1cm4gKCBlbGVtLmNoZWNrZWQgPSBqUXVlcnkuaW5BcnJheSggalF1ZXJ5KGVsZW0pLnZhbCgpLCB2YWx1ZSApID49IDAgKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdGlmICggIXN1cHBvcnQuY2hlY2tPbiApIHtcblx0XHRqUXVlcnkudmFsSG9va3NbIHRoaXMgXS5nZXQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZShcInZhbHVlXCIpID09PSBudWxsID8gXCJvblwiIDogZWxlbS52YWx1ZTtcblx0XHR9O1xuXHR9XG59KTtcblxuXG5cblxuLy8gUmV0dXJuIGpRdWVyeSBmb3IgYXR0cmlidXRlcy1vbmx5IGluY2x1c2lvblxuXG5cbmpRdWVyeS5lYWNoKCAoXCJibHVyIGZvY3VzIGZvY3VzaW4gZm9jdXNvdXQgbG9hZCByZXNpemUgc2Nyb2xsIHVubG9hZCBjbGljayBkYmxjbGljayBcIiArXG5cdFwibW91c2Vkb3duIG1vdXNldXAgbW91c2Vtb3ZlIG1vdXNlb3ZlciBtb3VzZW91dCBtb3VzZWVudGVyIG1vdXNlbGVhdmUgXCIgK1xuXHRcImNoYW5nZSBzZWxlY3Qgc3VibWl0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgZXJyb3IgY29udGV4dG1lbnVcIikuc3BsaXQoXCIgXCIpLCBmdW5jdGlvbiggaSwgbmFtZSApIHtcblxuXHQvLyBIYW5kbGUgZXZlbnQgYmluZGluZ1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBkYXRhLCBmbiApIHtcblx0XHRyZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA+IDAgP1xuXHRcdFx0dGhpcy5vbiggbmFtZSwgbnVsbCwgZGF0YSwgZm4gKSA6XG5cdFx0XHR0aGlzLnRyaWdnZXIoIG5hbWUgKTtcblx0fTtcbn0pO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKHtcblx0aG92ZXI6IGZ1bmN0aW9uKCBmbk92ZXIsIGZuT3V0ICkge1xuXHRcdHJldHVybiB0aGlzLm1vdXNlZW50ZXIoIGZuT3ZlciApLm1vdXNlbGVhdmUoIGZuT3V0IHx8IGZuT3ZlciApO1xuXHR9LFxuXG5cdGJpbmQ6IGZ1bmN0aW9uKCB0eXBlcywgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGVzLCBudWxsLCBkYXRhLCBmbiApO1xuXHR9LFxuXHR1bmJpbmQ6IGZ1bmN0aW9uKCB0eXBlcywgZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub2ZmKCB0eXBlcywgbnVsbCwgZm4gKTtcblx0fSxcblxuXHRkZWxlZ2F0ZTogZnVuY3Rpb24oIHNlbGVjdG9yLCB0eXBlcywgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKTtcblx0fSxcblx0dW5kZWxlZ2F0ZTogZnVuY3Rpb24oIHNlbGVjdG9yLCB0eXBlcywgZm4gKSB7XG5cdFx0Ly8gKCBuYW1lc3BhY2UgKSBvciAoIHNlbGVjdG9yLCB0eXBlcyBbLCBmbl0gKVxuXHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gdGhpcy5vZmYoIHNlbGVjdG9yLCBcIioqXCIgKSA6IHRoaXMub2ZmKCB0eXBlcywgc2VsZWN0b3IgfHwgXCIqKlwiLCBmbiApO1xuXHR9XG59KTtcblxuXG52YXIgbm9uY2UgPSBqUXVlcnkubm93KCk7XG5cbnZhciBycXVlcnkgPSAoL1xcPy8pO1xuXG5cblxuLy8gU3VwcG9ydDogQW5kcm9pZCAyLjNcbi8vIFdvcmthcm91bmQgZmFpbHVyZSB0byBzdHJpbmctY2FzdCBudWxsIGlucHV0XG5qUXVlcnkucGFyc2VKU09OID0gZnVuY3Rpb24oIGRhdGEgKSB7XG5cdHJldHVybiBKU09OLnBhcnNlKCBkYXRhICsgXCJcIiApO1xufTtcblxuXG4vLyBDcm9zcy1icm93c2VyIHhtbCBwYXJzaW5nXG5qUXVlcnkucGFyc2VYTUwgPSBmdW5jdGlvbiggZGF0YSApIHtcblx0dmFyIHhtbCwgdG1wO1xuXHRpZiAoICFkYXRhIHx8IHR5cGVvZiBkYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0Ly8gU3VwcG9ydDogSUU5XG5cdHRyeSB7XG5cdFx0dG1wID0gbmV3IERPTVBhcnNlcigpO1xuXHRcdHhtbCA9IHRtcC5wYXJzZUZyb21TdHJpbmcoIGRhdGEsIFwidGV4dC94bWxcIiApO1xuXHR9IGNhdGNoICggZSApIHtcblx0XHR4bWwgPSB1bmRlZmluZWQ7XG5cdH1cblxuXHRpZiAoICF4bWwgfHwgeG1sLmdldEVsZW1lbnRzQnlUYWdOYW1lKCBcInBhcnNlcmVycm9yXCIgKS5sZW5ndGggKSB7XG5cdFx0alF1ZXJ5LmVycm9yKCBcIkludmFsaWQgWE1MOiBcIiArIGRhdGEgKTtcblx0fVxuXHRyZXR1cm4geG1sO1xufTtcblxuXG52YXJcblx0cmhhc2ggPSAvIy4qJC8sXG5cdHJ0cyA9IC8oWz8mXSlfPVteJl0qLyxcblx0cmhlYWRlcnMgPSAvXiguKj8pOlsgXFx0XSooW15cXHJcXG5dKikkL21nLFxuXHQvLyAjNzY1MywgIzgxMjUsICM4MTUyOiBsb2NhbCBwcm90b2NvbCBkZXRlY3Rpb25cblx0cmxvY2FsUHJvdG9jb2wgPSAvXig/OmFib3V0fGFwcHxhcHAtc3RvcmFnZXwuKy1leHRlbnNpb258ZmlsZXxyZXN8d2lkZ2V0KTokLyxcblx0cm5vQ29udGVudCA9IC9eKD86R0VUfEhFQUQpJC8sXG5cdHJwcm90b2NvbCA9IC9eXFwvXFwvLyxcblx0cnVybCA9IC9eKFtcXHcuKy1dKzopKD86XFwvXFwvKD86W15cXC8/I10qQHwpKFteXFwvPyM6XSopKD86OihcXGQrKXwpfCkvLFxuXG5cdC8qIFByZWZpbHRlcnNcblx0ICogMSkgVGhleSBhcmUgdXNlZnVsIHRvIGludHJvZHVjZSBjdXN0b20gZGF0YVR5cGVzIChzZWUgYWpheC9qc29ucC5qcyBmb3IgYW4gZXhhbXBsZSlcblx0ICogMikgVGhlc2UgYXJlIGNhbGxlZDpcblx0ICogICAgLSBCRUZPUkUgYXNraW5nIGZvciBhIHRyYW5zcG9ydFxuXHQgKiAgICAtIEFGVEVSIHBhcmFtIHNlcmlhbGl6YXRpb24gKHMuZGF0YSBpcyBhIHN0cmluZyBpZiBzLnByb2Nlc3NEYXRhIGlzIHRydWUpXG5cdCAqIDMpIGtleSBpcyB0aGUgZGF0YVR5cGVcblx0ICogNCkgdGhlIGNhdGNoYWxsIHN5bWJvbCBcIipcIiBjYW4gYmUgdXNlZFxuXHQgKiA1KSBleGVjdXRpb24gd2lsbCBzdGFydCB3aXRoIHRyYW5zcG9ydCBkYXRhVHlwZSBhbmQgVEhFTiBjb250aW51ZSBkb3duIHRvIFwiKlwiIGlmIG5lZWRlZFxuXHQgKi9cblx0cHJlZmlsdGVycyA9IHt9LFxuXG5cdC8qIFRyYW5zcG9ydHMgYmluZGluZ3Ncblx0ICogMSkga2V5IGlzIHRoZSBkYXRhVHlwZVxuXHQgKiAyKSB0aGUgY2F0Y2hhbGwgc3ltYm9sIFwiKlwiIGNhbiBiZSB1c2VkXG5cdCAqIDMpIHNlbGVjdGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGdvIHRvIFwiKlwiIGlmIG5lZWRlZFxuXHQgKi9cblx0dHJhbnNwb3J0cyA9IHt9LFxuXG5cdC8vIEF2b2lkIGNvbW1lbnQtcHJvbG9nIGNoYXIgc2VxdWVuY2UgKCMxMDA5OCk7IG11c3QgYXBwZWFzZSBsaW50IGFuZCBldmFkZSBjb21wcmVzc2lvblxuXHRhbGxUeXBlcyA9IFwiKi9cIi5jb25jYXQoIFwiKlwiICksXG5cblx0Ly8gRG9jdW1lbnQgbG9jYXRpb25cblx0YWpheExvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLmhyZWYsXG5cblx0Ly8gU2VnbWVudCBsb2NhdGlvbiBpbnRvIHBhcnRzXG5cdGFqYXhMb2NQYXJ0cyA9IHJ1cmwuZXhlYyggYWpheExvY2F0aW9uLnRvTG93ZXJDYXNlKCkgKSB8fCBbXTtcblxuLy8gQmFzZSBcImNvbnN0cnVjdG9yXCIgZm9yIGpRdWVyeS5hamF4UHJlZmlsdGVyIGFuZCBqUXVlcnkuYWpheFRyYW5zcG9ydFxuZnVuY3Rpb24gYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBzdHJ1Y3R1cmUgKSB7XG5cblx0Ly8gZGF0YVR5cGVFeHByZXNzaW9uIGlzIG9wdGlvbmFsIGFuZCBkZWZhdWx0cyB0byBcIipcIlxuXHRyZXR1cm4gZnVuY3Rpb24oIGRhdGFUeXBlRXhwcmVzc2lvbiwgZnVuYyApIHtcblxuXHRcdGlmICggdHlwZW9mIGRhdGFUeXBlRXhwcmVzc2lvbiAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGZ1bmMgPSBkYXRhVHlwZUV4cHJlc3Npb247XG5cdFx0XHRkYXRhVHlwZUV4cHJlc3Npb24gPSBcIipcIjtcblx0XHR9XG5cblx0XHR2YXIgZGF0YVR5cGUsXG5cdFx0XHRpID0gMCxcblx0XHRcdGRhdGFUeXBlcyA9IGRhdGFUeXBlRXhwcmVzc2lvbi50b0xvd2VyQ2FzZSgpLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbXTtcblxuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIGZ1bmMgKSApIHtcblx0XHRcdC8vIEZvciBlYWNoIGRhdGFUeXBlIGluIHRoZSBkYXRhVHlwZUV4cHJlc3Npb25cblx0XHRcdHdoaWxlICggKGRhdGFUeXBlID0gZGF0YVR5cGVzW2krK10pICkge1xuXHRcdFx0XHQvLyBQcmVwZW5kIGlmIHJlcXVlc3RlZFxuXHRcdFx0XHRpZiAoIGRhdGFUeXBlWzBdID09PSBcIitcIiApIHtcblx0XHRcdFx0XHRkYXRhVHlwZSA9IGRhdGFUeXBlLnNsaWNlKCAxICkgfHwgXCIqXCI7XG5cdFx0XHRcdFx0KHN0cnVjdHVyZVsgZGF0YVR5cGUgXSA9IHN0cnVjdHVyZVsgZGF0YVR5cGUgXSB8fCBbXSkudW5zaGlmdCggZnVuYyApO1xuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSBhcHBlbmRcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHQoc3RydWN0dXJlWyBkYXRhVHlwZSBdID0gc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdKS5wdXNoKCBmdW5jICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH07XG59XG5cbi8vIEJhc2UgaW5zcGVjdGlvbiBmdW5jdGlvbiBmb3IgcHJlZmlsdGVycyBhbmQgdHJhbnNwb3J0c1xuZnVuY3Rpb24gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHN0cnVjdHVyZSwgb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiApIHtcblxuXHR2YXIgaW5zcGVjdGVkID0ge30sXG5cdFx0c2Vla2luZ1RyYW5zcG9ydCA9ICggc3RydWN0dXJlID09PSB0cmFuc3BvcnRzICk7XG5cblx0ZnVuY3Rpb24gaW5zcGVjdCggZGF0YVR5cGUgKSB7XG5cdFx0dmFyIHNlbGVjdGVkO1xuXHRcdGluc3BlY3RlZFsgZGF0YVR5cGUgXSA9IHRydWU7XG5cdFx0alF1ZXJ5LmVhY2goIHN0cnVjdHVyZVsgZGF0YVR5cGUgXSB8fCBbXSwgZnVuY3Rpb24oIF8sIHByZWZpbHRlck9yRmFjdG9yeSApIHtcblx0XHRcdHZhciBkYXRhVHlwZU9yVHJhbnNwb3J0ID0gcHJlZmlsdGVyT3JGYWN0b3J5KCBvcHRpb25zLCBvcmlnaW5hbE9wdGlvbnMsIGpxWEhSICk7XG5cdFx0XHRpZiAoIHR5cGVvZiBkYXRhVHlwZU9yVHJhbnNwb3J0ID09PSBcInN0cmluZ1wiICYmICFzZWVraW5nVHJhbnNwb3J0ICYmICFpbnNwZWN0ZWRbIGRhdGFUeXBlT3JUcmFuc3BvcnQgXSApIHtcblx0XHRcdFx0b3B0aW9ucy5kYXRhVHlwZXMudW5zaGlmdCggZGF0YVR5cGVPclRyYW5zcG9ydCApO1xuXHRcdFx0XHRpbnNwZWN0KCBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH0gZWxzZSBpZiAoIHNlZWtpbmdUcmFuc3BvcnQgKSB7XG5cdFx0XHRcdHJldHVybiAhKCBzZWxlY3RlZCA9IGRhdGFUeXBlT3JUcmFuc3BvcnQgKTtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRyZXR1cm4gc2VsZWN0ZWQ7XG5cdH1cblxuXHRyZXR1cm4gaW5zcGVjdCggb3B0aW9ucy5kYXRhVHlwZXNbIDAgXSApIHx8ICFpbnNwZWN0ZWRbIFwiKlwiIF0gJiYgaW5zcGVjdCggXCIqXCIgKTtcbn1cblxuLy8gQSBzcGVjaWFsIGV4dGVuZCBmb3IgYWpheCBvcHRpb25zXG4vLyB0aGF0IHRha2VzIFwiZmxhdFwiIG9wdGlvbnMgKG5vdCB0byBiZSBkZWVwIGV4dGVuZGVkKVxuLy8gRml4ZXMgIzk4ODdcbmZ1bmN0aW9uIGFqYXhFeHRlbmQoIHRhcmdldCwgc3JjICkge1xuXHR2YXIga2V5LCBkZWVwLFxuXHRcdGZsYXRPcHRpb25zID0galF1ZXJ5LmFqYXhTZXR0aW5ncy5mbGF0T3B0aW9ucyB8fCB7fTtcblxuXHRmb3IgKCBrZXkgaW4gc3JjICkge1xuXHRcdGlmICggc3JjWyBrZXkgXSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0KCBmbGF0T3B0aW9uc1sga2V5IF0gPyB0YXJnZXQgOiAoIGRlZXAgfHwgKGRlZXAgPSB7fSkgKSApWyBrZXkgXSA9IHNyY1sga2V5IF07XG5cdFx0fVxuXHR9XG5cdGlmICggZGVlcCApIHtcblx0XHRqUXVlcnkuZXh0ZW5kKCB0cnVlLCB0YXJnZXQsIGRlZXAgKTtcblx0fVxuXG5cdHJldHVybiB0YXJnZXQ7XG59XG5cbi8qIEhhbmRsZXMgcmVzcG9uc2VzIHRvIGFuIGFqYXggcmVxdWVzdDpcbiAqIC0gZmluZHMgdGhlIHJpZ2h0IGRhdGFUeXBlIChtZWRpYXRlcyBiZXR3ZWVuIGNvbnRlbnQtdHlwZSBhbmQgZXhwZWN0ZWQgZGF0YVR5cGUpXG4gKiAtIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgcmVzcG9uc2VcbiAqL1xuZnVuY3Rpb24gYWpheEhhbmRsZVJlc3BvbnNlcyggcywganFYSFIsIHJlc3BvbnNlcyApIHtcblxuXHR2YXIgY3QsIHR5cGUsIGZpbmFsRGF0YVR5cGUsIGZpcnN0RGF0YVR5cGUsXG5cdFx0Y29udGVudHMgPSBzLmNvbnRlbnRzLFxuXHRcdGRhdGFUeXBlcyA9IHMuZGF0YVR5cGVzO1xuXG5cdC8vIFJlbW92ZSBhdXRvIGRhdGFUeXBlIGFuZCBnZXQgY29udGVudC10eXBlIGluIHRoZSBwcm9jZXNzXG5cdHdoaWxlICggZGF0YVR5cGVzWyAwIF0gPT09IFwiKlwiICkge1xuXHRcdGRhdGFUeXBlcy5zaGlmdCgpO1xuXHRcdGlmICggY3QgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGN0ID0gcy5taW1lVHlwZSB8fCBqcVhIUi5nZXRSZXNwb25zZUhlYWRlcihcIkNvbnRlbnQtVHlwZVwiKTtcblx0XHR9XG5cdH1cblxuXHQvLyBDaGVjayBpZiB3ZSdyZSBkZWFsaW5nIHdpdGggYSBrbm93biBjb250ZW50LXR5cGVcblx0aWYgKCBjdCApIHtcblx0XHRmb3IgKCB0eXBlIGluIGNvbnRlbnRzICkge1xuXHRcdFx0aWYgKCBjb250ZW50c1sgdHlwZSBdICYmIGNvbnRlbnRzWyB0eXBlIF0udGVzdCggY3QgKSApIHtcblx0XHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIHR5cGUgKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ2hlY2sgdG8gc2VlIGlmIHdlIGhhdmUgYSByZXNwb25zZSBmb3IgdGhlIGV4cGVjdGVkIGRhdGFUeXBlXG5cdGlmICggZGF0YVR5cGVzWyAwIF0gaW4gcmVzcG9uc2VzICkge1xuXHRcdGZpbmFsRGF0YVR5cGUgPSBkYXRhVHlwZXNbIDAgXTtcblx0fSBlbHNlIHtcblx0XHQvLyBUcnkgY29udmVydGlibGUgZGF0YVR5cGVzXG5cdFx0Zm9yICggdHlwZSBpbiByZXNwb25zZXMgKSB7XG5cdFx0XHRpZiAoICFkYXRhVHlwZXNbIDAgXSB8fCBzLmNvbnZlcnRlcnNbIHR5cGUgKyBcIiBcIiArIGRhdGFUeXBlc1swXSBdICkge1xuXHRcdFx0XHRmaW5hbERhdGFUeXBlID0gdHlwZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRpZiAoICFmaXJzdERhdGFUeXBlICkge1xuXHRcdFx0XHRmaXJzdERhdGFUeXBlID0gdHlwZTtcblx0XHRcdH1cblx0XHR9XG5cdFx0Ly8gT3IganVzdCB1c2UgZmlyc3Qgb25lXG5cdFx0ZmluYWxEYXRhVHlwZSA9IGZpbmFsRGF0YVR5cGUgfHwgZmlyc3REYXRhVHlwZTtcblx0fVxuXG5cdC8vIElmIHdlIGZvdW5kIGEgZGF0YVR5cGVcblx0Ly8gV2UgYWRkIHRoZSBkYXRhVHlwZSB0byB0aGUgbGlzdCBpZiBuZWVkZWRcblx0Ly8gYW5kIHJldHVybiB0aGUgY29ycmVzcG9uZGluZyByZXNwb25zZVxuXHRpZiAoIGZpbmFsRGF0YVR5cGUgKSB7XG5cdFx0aWYgKCBmaW5hbERhdGFUeXBlICE9PSBkYXRhVHlwZXNbIDAgXSApIHtcblx0XHRcdGRhdGFUeXBlcy51bnNoaWZ0KCBmaW5hbERhdGFUeXBlICk7XG5cdFx0fVxuXHRcdHJldHVybiByZXNwb25zZXNbIGZpbmFsRGF0YVR5cGUgXTtcblx0fVxufVxuXG4vKiBDaGFpbiBjb252ZXJzaW9ucyBnaXZlbiB0aGUgcmVxdWVzdCBhbmQgdGhlIG9yaWdpbmFsIHJlc3BvbnNlXG4gKiBBbHNvIHNldHMgdGhlIHJlc3BvbnNlWFhYIGZpZWxkcyBvbiB0aGUganFYSFIgaW5zdGFuY2VcbiAqL1xuZnVuY3Rpb24gYWpheENvbnZlcnQoIHMsIHJlc3BvbnNlLCBqcVhIUiwgaXNTdWNjZXNzICkge1xuXHR2YXIgY29udjIsIGN1cnJlbnQsIGNvbnYsIHRtcCwgcHJldixcblx0XHRjb252ZXJ0ZXJzID0ge30sXG5cdFx0Ly8gV29yayB3aXRoIGEgY29weSBvZiBkYXRhVHlwZXMgaW4gY2FzZSB3ZSBuZWVkIHRvIG1vZGlmeSBpdCBmb3IgY29udmVyc2lvblxuXHRcdGRhdGFUeXBlcyA9IHMuZGF0YVR5cGVzLnNsaWNlKCk7XG5cblx0Ly8gQ3JlYXRlIGNvbnZlcnRlcnMgbWFwIHdpdGggbG93ZXJjYXNlZCBrZXlzXG5cdGlmICggZGF0YVR5cGVzWyAxIF0gKSB7XG5cdFx0Zm9yICggY29udiBpbiBzLmNvbnZlcnRlcnMgKSB7XG5cdFx0XHRjb252ZXJ0ZXJzWyBjb252LnRvTG93ZXJDYXNlKCkgXSA9IHMuY29udmVydGVyc1sgY29udiBdO1xuXHRcdH1cblx0fVxuXG5cdGN1cnJlbnQgPSBkYXRhVHlwZXMuc2hpZnQoKTtcblxuXHQvLyBDb252ZXJ0IHRvIGVhY2ggc2VxdWVudGlhbCBkYXRhVHlwZVxuXHR3aGlsZSAoIGN1cnJlbnQgKSB7XG5cblx0XHRpZiAoIHMucmVzcG9uc2VGaWVsZHNbIGN1cnJlbnQgXSApIHtcblx0XHRcdGpxWEhSWyBzLnJlc3BvbnNlRmllbGRzWyBjdXJyZW50IF0gXSA9IHJlc3BvbnNlO1xuXHRcdH1cblxuXHRcdC8vIEFwcGx5IHRoZSBkYXRhRmlsdGVyIGlmIHByb3ZpZGVkXG5cdFx0aWYgKCAhcHJldiAmJiBpc1N1Y2Nlc3MgJiYgcy5kYXRhRmlsdGVyICkge1xuXHRcdFx0cmVzcG9uc2UgPSBzLmRhdGFGaWx0ZXIoIHJlc3BvbnNlLCBzLmRhdGFUeXBlICk7XG5cdFx0fVxuXG5cdFx0cHJldiA9IGN1cnJlbnQ7XG5cdFx0Y3VycmVudCA9IGRhdGFUeXBlcy5zaGlmdCgpO1xuXG5cdFx0aWYgKCBjdXJyZW50ICkge1xuXG5cdFx0Ly8gVGhlcmUncyBvbmx5IHdvcmsgdG8gZG8gaWYgY3VycmVudCBkYXRhVHlwZSBpcyBub24tYXV0b1xuXHRcdFx0aWYgKCBjdXJyZW50ID09PSBcIipcIiApIHtcblxuXHRcdFx0XHRjdXJyZW50ID0gcHJldjtcblxuXHRcdFx0Ly8gQ29udmVydCByZXNwb25zZSBpZiBwcmV2IGRhdGFUeXBlIGlzIG5vbi1hdXRvIGFuZCBkaWZmZXJzIGZyb20gY3VycmVudFxuXHRcdFx0fSBlbHNlIGlmICggcHJldiAhPT0gXCIqXCIgJiYgcHJldiAhPT0gY3VycmVudCApIHtcblxuXHRcdFx0XHQvLyBTZWVrIGEgZGlyZWN0IGNvbnZlcnRlclxuXHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgY3VycmVudCBdIHx8IGNvbnZlcnRlcnNbIFwiKiBcIiArIGN1cnJlbnQgXTtcblxuXHRcdFx0XHQvLyBJZiBub25lIGZvdW5kLCBzZWVrIGEgcGFpclxuXHRcdFx0XHRpZiAoICFjb252ICkge1xuXHRcdFx0XHRcdGZvciAoIGNvbnYyIGluIGNvbnZlcnRlcnMgKSB7XG5cblx0XHRcdFx0XHRcdC8vIElmIGNvbnYyIG91dHB1dHMgY3VycmVudFxuXHRcdFx0XHRcdFx0dG1wID0gY29udjIuc3BsaXQoIFwiIFwiICk7XG5cdFx0XHRcdFx0XHRpZiAoIHRtcFsgMSBdID09PSBjdXJyZW50ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIElmIHByZXYgY2FuIGJlIGNvbnZlcnRlZCB0byBhY2NlcHRlZCBpbnB1dFxuXHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgdG1wWyAwIF0gXSB8fFxuXHRcdFx0XHRcdFx0XHRcdGNvbnZlcnRlcnNbIFwiKiBcIiArIHRtcFsgMCBdIF07XG5cdFx0XHRcdFx0XHRcdGlmICggY29udiApIHtcblx0XHRcdFx0XHRcdFx0XHQvLyBDb25kZW5zZSBlcXVpdmFsZW5jZSBjb252ZXJ0ZXJzXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBjb252ID09PSB0cnVlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y29udiA9IGNvbnZlcnRlcnNbIGNvbnYyIF07XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBPdGhlcndpc2UsIGluc2VydCB0aGUgaW50ZXJtZWRpYXRlIGRhdGFUeXBlXG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggY29udmVydGVyc1sgY29udjIgXSAhPT0gdHJ1ZSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGN1cnJlbnQgPSB0bXBbIDAgXTtcblx0XHRcdFx0XHRcdFx0XHRcdGRhdGFUeXBlcy51bnNoaWZ0KCB0bXBbIDEgXSApO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEFwcGx5IGNvbnZlcnRlciAoaWYgbm90IGFuIGVxdWl2YWxlbmNlKVxuXHRcdFx0XHRpZiAoIGNvbnYgIT09IHRydWUgKSB7XG5cblx0XHRcdFx0XHQvLyBVbmxlc3MgZXJyb3JzIGFyZSBhbGxvd2VkIHRvIGJ1YmJsZSwgY2F0Y2ggYW5kIHJldHVybiB0aGVtXG5cdFx0XHRcdFx0aWYgKCBjb252ICYmIHNbIFwidGhyb3dzXCIgXSApIHtcblx0XHRcdFx0XHRcdHJlc3BvbnNlID0gY29udiggcmVzcG9uc2UgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0cmVzcG9uc2UgPSBjb252KCByZXNwb25zZSApO1xuXHRcdFx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB7IHN0YXRlOiBcInBhcnNlcmVycm9yXCIsIGVycm9yOiBjb252ID8gZSA6IFwiTm8gY29udmVyc2lvbiBmcm9tIFwiICsgcHJldiArIFwiIHRvIFwiICsgY3VycmVudCB9O1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB7IHN0YXRlOiBcInN1Y2Nlc3NcIiwgZGF0YTogcmVzcG9uc2UgfTtcbn1cblxualF1ZXJ5LmV4dGVuZCh7XG5cblx0Ly8gQ291bnRlciBmb3IgaG9sZGluZyB0aGUgbnVtYmVyIG9mIGFjdGl2ZSBxdWVyaWVzXG5cdGFjdGl2ZTogMCxcblxuXHQvLyBMYXN0LU1vZGlmaWVkIGhlYWRlciBjYWNoZSBmb3IgbmV4dCByZXF1ZXN0XG5cdGxhc3RNb2RpZmllZDoge30sXG5cdGV0YWc6IHt9LFxuXG5cdGFqYXhTZXR0aW5nczoge1xuXHRcdHVybDogYWpheExvY2F0aW9uLFxuXHRcdHR5cGU6IFwiR0VUXCIsXG5cdFx0aXNMb2NhbDogcmxvY2FsUHJvdG9jb2wudGVzdCggYWpheExvY1BhcnRzWyAxIF0gKSxcblx0XHRnbG9iYWw6IHRydWUsXG5cdFx0cHJvY2Vzc0RhdGE6IHRydWUsXG5cdFx0YXN5bmM6IHRydWUsXG5cdFx0Y29udGVudFR5cGU6IFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04XCIsXG5cdFx0Lypcblx0XHR0aW1lb3V0OiAwLFxuXHRcdGRhdGE6IG51bGwsXG5cdFx0ZGF0YVR5cGU6IG51bGwsXG5cdFx0dXNlcm5hbWU6IG51bGwsXG5cdFx0cGFzc3dvcmQ6IG51bGwsXG5cdFx0Y2FjaGU6IG51bGwsXG5cdFx0dGhyb3dzOiBmYWxzZSxcblx0XHR0cmFkaXRpb25hbDogZmFsc2UsXG5cdFx0aGVhZGVyczoge30sXG5cdFx0Ki9cblxuXHRcdGFjY2VwdHM6IHtcblx0XHRcdFwiKlwiOiBhbGxUeXBlcyxcblx0XHRcdHRleHQ6IFwidGV4dC9wbGFpblwiLFxuXHRcdFx0aHRtbDogXCJ0ZXh0L2h0bWxcIixcblx0XHRcdHhtbDogXCJhcHBsaWNhdGlvbi94bWwsIHRleHQveG1sXCIsXG5cdFx0XHRqc29uOiBcImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdFwiXG5cdFx0fSxcblxuXHRcdGNvbnRlbnRzOiB7XG5cdFx0XHR4bWw6IC94bWwvLFxuXHRcdFx0aHRtbDogL2h0bWwvLFxuXHRcdFx0anNvbjogL2pzb24vXG5cdFx0fSxcblxuXHRcdHJlc3BvbnNlRmllbGRzOiB7XG5cdFx0XHR4bWw6IFwicmVzcG9uc2VYTUxcIixcblx0XHRcdHRleHQ6IFwicmVzcG9uc2VUZXh0XCIsXG5cdFx0XHRqc29uOiBcInJlc3BvbnNlSlNPTlwiXG5cdFx0fSxcblxuXHRcdC8vIERhdGEgY29udmVydGVyc1xuXHRcdC8vIEtleXMgc2VwYXJhdGUgc291cmNlIChvciBjYXRjaGFsbCBcIipcIikgYW5kIGRlc3RpbmF0aW9uIHR5cGVzIHdpdGggYSBzaW5nbGUgc3BhY2Vcblx0XHRjb252ZXJ0ZXJzOiB7XG5cblx0XHRcdC8vIENvbnZlcnQgYW55dGhpbmcgdG8gdGV4dFxuXHRcdFx0XCIqIHRleHRcIjogU3RyaW5nLFxuXG5cdFx0XHQvLyBUZXh0IHRvIGh0bWwgKHRydWUgPSBubyB0cmFuc2Zvcm1hdGlvbilcblx0XHRcdFwidGV4dCBodG1sXCI6IHRydWUsXG5cblx0XHRcdC8vIEV2YWx1YXRlIHRleHQgYXMgYSBqc29uIGV4cHJlc3Npb25cblx0XHRcdFwidGV4dCBqc29uXCI6IGpRdWVyeS5wYXJzZUpTT04sXG5cblx0XHRcdC8vIFBhcnNlIHRleHQgYXMgeG1sXG5cdFx0XHRcInRleHQgeG1sXCI6IGpRdWVyeS5wYXJzZVhNTFxuXHRcdH0sXG5cblx0XHQvLyBGb3Igb3B0aW9ucyB0aGF0IHNob3VsZG4ndCBiZSBkZWVwIGV4dGVuZGVkOlxuXHRcdC8vIHlvdSBjYW4gYWRkIHlvdXIgb3duIGN1c3RvbSBvcHRpb25zIGhlcmUgaWZcblx0XHQvLyBhbmQgd2hlbiB5b3UgY3JlYXRlIG9uZSB0aGF0IHNob3VsZG4ndCBiZVxuXHRcdC8vIGRlZXAgZXh0ZW5kZWQgKHNlZSBhamF4RXh0ZW5kKVxuXHRcdGZsYXRPcHRpb25zOiB7XG5cdFx0XHR1cmw6IHRydWUsXG5cdFx0XHRjb250ZXh0OiB0cnVlXG5cdFx0fVxuXHR9LFxuXG5cdC8vIENyZWF0ZXMgYSBmdWxsIGZsZWRnZWQgc2V0dGluZ3Mgb2JqZWN0IGludG8gdGFyZ2V0XG5cdC8vIHdpdGggYm90aCBhamF4U2V0dGluZ3MgYW5kIHNldHRpbmdzIGZpZWxkcy5cblx0Ly8gSWYgdGFyZ2V0IGlzIG9taXR0ZWQsIHdyaXRlcyBpbnRvIGFqYXhTZXR0aW5ncy5cblx0YWpheFNldHVwOiBmdW5jdGlvbiggdGFyZ2V0LCBzZXR0aW5ncyApIHtcblx0XHRyZXR1cm4gc2V0dGluZ3MgP1xuXG5cdFx0XHQvLyBCdWlsZGluZyBhIHNldHRpbmdzIG9iamVjdFxuXHRcdFx0YWpheEV4dGVuZCggYWpheEV4dGVuZCggdGFyZ2V0LCBqUXVlcnkuYWpheFNldHRpbmdzICksIHNldHRpbmdzICkgOlxuXG5cdFx0XHQvLyBFeHRlbmRpbmcgYWpheFNldHRpbmdzXG5cdFx0XHRhamF4RXh0ZW5kKCBqUXVlcnkuYWpheFNldHRpbmdzLCB0YXJnZXQgKTtcblx0fSxcblxuXHRhamF4UHJlZmlsdGVyOiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMgKSxcblx0YWpheFRyYW5zcG9ydDogYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCB0cmFuc3BvcnRzICksXG5cblx0Ly8gTWFpbiBtZXRob2Rcblx0YWpheDogZnVuY3Rpb24oIHVybCwgb3B0aW9ucyApIHtcblxuXHRcdC8vIElmIHVybCBpcyBhbiBvYmplY3QsIHNpbXVsYXRlIHByZS0xLjUgc2lnbmF0dXJlXG5cdFx0aWYgKCB0eXBlb2YgdXJsID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0b3B0aW9ucyA9IHVybDtcblx0XHRcdHVybCA9IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHQvLyBGb3JjZSBvcHRpb25zIHRvIGJlIGFuIG9iamVjdFxuXHRcdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdFx0dmFyIHRyYW5zcG9ydCxcblx0XHRcdC8vIFVSTCB3aXRob3V0IGFudGktY2FjaGUgcGFyYW1cblx0XHRcdGNhY2hlVVJMLFxuXHRcdFx0Ly8gUmVzcG9uc2UgaGVhZGVyc1xuXHRcdFx0cmVzcG9uc2VIZWFkZXJzU3RyaW5nLFxuXHRcdFx0cmVzcG9uc2VIZWFkZXJzLFxuXHRcdFx0Ly8gdGltZW91dCBoYW5kbGVcblx0XHRcdHRpbWVvdXRUaW1lcixcblx0XHRcdC8vIENyb3NzLWRvbWFpbiBkZXRlY3Rpb24gdmFyc1xuXHRcdFx0cGFydHMsXG5cdFx0XHQvLyBUbyBrbm93IGlmIGdsb2JhbCBldmVudHMgYXJlIHRvIGJlIGRpc3BhdGNoZWRcblx0XHRcdGZpcmVHbG9iYWxzLFxuXHRcdFx0Ly8gTG9vcCB2YXJpYWJsZVxuXHRcdFx0aSxcblx0XHRcdC8vIENyZWF0ZSB0aGUgZmluYWwgb3B0aW9ucyBvYmplY3Rcblx0XHRcdHMgPSBqUXVlcnkuYWpheFNldHVwKCB7fSwgb3B0aW9ucyApLFxuXHRcdFx0Ly8gQ2FsbGJhY2tzIGNvbnRleHRcblx0XHRcdGNhbGxiYWNrQ29udGV4dCA9IHMuY29udGV4dCB8fCBzLFxuXHRcdFx0Ly8gQ29udGV4dCBmb3IgZ2xvYmFsIGV2ZW50cyBpcyBjYWxsYmFja0NvbnRleHQgaWYgaXQgaXMgYSBET00gbm9kZSBvciBqUXVlcnkgY29sbGVjdGlvblxuXHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0ID0gcy5jb250ZXh0ICYmICggY2FsbGJhY2tDb250ZXh0Lm5vZGVUeXBlIHx8IGNhbGxiYWNrQ29udGV4dC5qcXVlcnkgKSA/XG5cdFx0XHRcdGpRdWVyeSggY2FsbGJhY2tDb250ZXh0ICkgOlxuXHRcdFx0XHRqUXVlcnkuZXZlbnQsXG5cdFx0XHQvLyBEZWZlcnJlZHNcblx0XHRcdGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG5cdFx0XHRjb21wbGV0ZURlZmVycmVkID0galF1ZXJ5LkNhbGxiYWNrcyhcIm9uY2UgbWVtb3J5XCIpLFxuXHRcdFx0Ly8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3Ncblx0XHRcdHN0YXR1c0NvZGUgPSBzLnN0YXR1c0NvZGUgfHwge30sXG5cdFx0XHQvLyBIZWFkZXJzICh0aGV5IGFyZSBzZW50IGFsbCBhdCBvbmNlKVxuXHRcdFx0cmVxdWVzdEhlYWRlcnMgPSB7fSxcblx0XHRcdHJlcXVlc3RIZWFkZXJzTmFtZXMgPSB7fSxcblx0XHRcdC8vIFRoZSBqcVhIUiBzdGF0ZVxuXHRcdFx0c3RhdGUgPSAwLFxuXHRcdFx0Ly8gRGVmYXVsdCBhYm9ydCBtZXNzYWdlXG5cdFx0XHRzdHJBYm9ydCA9IFwiY2FuY2VsZWRcIixcblx0XHRcdC8vIEZha2UgeGhyXG5cdFx0XHRqcVhIUiA9IHtcblx0XHRcdFx0cmVhZHlTdGF0ZTogMCxcblxuXHRcdFx0XHQvLyBCdWlsZHMgaGVhZGVycyBoYXNodGFibGUgaWYgbmVlZGVkXG5cdFx0XHRcdGdldFJlc3BvbnNlSGVhZGVyOiBmdW5jdGlvbigga2V5ICkge1xuXHRcdFx0XHRcdHZhciBtYXRjaDtcblx0XHRcdFx0XHRpZiAoIHN0YXRlID09PSAyICkge1xuXHRcdFx0XHRcdFx0aWYgKCAhcmVzcG9uc2VIZWFkZXJzICkge1xuXHRcdFx0XHRcdFx0XHRyZXNwb25zZUhlYWRlcnMgPSB7fTtcblx0XHRcdFx0XHRcdFx0d2hpbGUgKCAobWF0Y2ggPSByaGVhZGVycy5leGVjKCByZXNwb25zZUhlYWRlcnNTdHJpbmcgKSkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmVzcG9uc2VIZWFkZXJzWyBtYXRjaFsxXS50b0xvd2VyQ2FzZSgpIF0gPSBtYXRjaFsgMiBdO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRtYXRjaCA9IHJlc3BvbnNlSGVhZGVyc1sga2V5LnRvTG93ZXJDYXNlKCkgXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIG1hdGNoID09IG51bGwgPyBudWxsIDogbWF0Y2g7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gUmF3IHN0cmluZ1xuXHRcdFx0XHRnZXRBbGxSZXNwb25zZUhlYWRlcnM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHJldHVybiBzdGF0ZSA9PT0gMiA/IHJlc3BvbnNlSGVhZGVyc1N0cmluZyA6IG51bGw7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gQ2FjaGVzIHRoZSBoZWFkZXJcblx0XHRcdFx0c2V0UmVxdWVzdEhlYWRlcjogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdFx0XHRcdHZhciBsbmFtZSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0XHRpZiAoICFzdGF0ZSApIHtcblx0XHRcdFx0XHRcdG5hbWUgPSByZXF1ZXN0SGVhZGVyc05hbWVzWyBsbmFtZSBdID0gcmVxdWVzdEhlYWRlcnNOYW1lc1sgbG5hbWUgXSB8fCBuYW1lO1xuXHRcdFx0XHRcdFx0cmVxdWVzdEhlYWRlcnNbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBPdmVycmlkZXMgcmVzcG9uc2UgY29udGVudC10eXBlIGhlYWRlclxuXHRcdFx0XHRvdmVycmlkZU1pbWVUeXBlOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRcdFx0XHRpZiAoICFzdGF0ZSApIHtcblx0XHRcdFx0XHRcdHMubWltZVR5cGUgPSB0eXBlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0XHRzdGF0dXNDb2RlOiBmdW5jdGlvbiggbWFwICkge1xuXHRcdFx0XHRcdHZhciBjb2RlO1xuXHRcdFx0XHRcdGlmICggbWFwICkge1xuXHRcdFx0XHRcdFx0aWYgKCBzdGF0ZSA8IDIgKSB7XG5cdFx0XHRcdFx0XHRcdGZvciAoIGNvZGUgaW4gbWFwICkge1xuXHRcdFx0XHRcdFx0XHRcdC8vIExhenktYWRkIHRoZSBuZXcgY2FsbGJhY2sgaW4gYSB3YXkgdGhhdCBwcmVzZXJ2ZXMgb2xkIG9uZXNcblx0XHRcdFx0XHRcdFx0XHRzdGF0dXNDb2RlWyBjb2RlIF0gPSBbIHN0YXR1c0NvZGVbIGNvZGUgXSwgbWFwWyBjb2RlIF0gXTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0Ly8gRXhlY3V0ZSB0aGUgYXBwcm9wcmlhdGUgY2FsbGJhY2tzXG5cdFx0XHRcdFx0XHRcdGpxWEhSLmFsd2F5cyggbWFwWyBqcVhIUi5zdGF0dXMgXSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBDYW5jZWwgdGhlIHJlcXVlc3Rcblx0XHRcdFx0YWJvcnQ6IGZ1bmN0aW9uKCBzdGF0dXNUZXh0ICkge1xuXHRcdFx0XHRcdHZhciBmaW5hbFRleHQgPSBzdGF0dXNUZXh0IHx8IHN0ckFib3J0O1xuXHRcdFx0XHRcdGlmICggdHJhbnNwb3J0ICkge1xuXHRcdFx0XHRcdFx0dHJhbnNwb3J0LmFib3J0KCBmaW5hbFRleHQgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZG9uZSggMCwgZmluYWxUZXh0ICk7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHQvLyBBdHRhY2ggZGVmZXJyZWRzXG5cdFx0ZGVmZXJyZWQucHJvbWlzZSgganFYSFIgKS5jb21wbGV0ZSA9IGNvbXBsZXRlRGVmZXJyZWQuYWRkO1xuXHRcdGpxWEhSLnN1Y2Nlc3MgPSBqcVhIUi5kb25lO1xuXHRcdGpxWEhSLmVycm9yID0ganFYSFIuZmFpbDtcblxuXHRcdC8vIFJlbW92ZSBoYXNoIGNoYXJhY3RlciAoIzc1MzE6IGFuZCBzdHJpbmcgcHJvbW90aW9uKVxuXHRcdC8vIEFkZCBwcm90b2NvbCBpZiBub3QgcHJvdmlkZWQgKHByZWZpbHRlcnMgbWlnaHQgZXhwZWN0IGl0KVxuXHRcdC8vIEhhbmRsZSBmYWxzeSB1cmwgaW4gdGhlIHNldHRpbmdzIG9iamVjdCAoIzEwMDkzOiBjb25zaXN0ZW5jeSB3aXRoIG9sZCBzaWduYXR1cmUpXG5cdFx0Ly8gV2UgYWxzbyB1c2UgdGhlIHVybCBwYXJhbWV0ZXIgaWYgYXZhaWxhYmxlXG5cdFx0cy51cmwgPSAoICggdXJsIHx8IHMudXJsIHx8IGFqYXhMb2NhdGlvbiApICsgXCJcIiApLnJlcGxhY2UoIHJoYXNoLCBcIlwiIClcblx0XHRcdC5yZXBsYWNlKCBycHJvdG9jb2wsIGFqYXhMb2NQYXJ0c1sgMSBdICsgXCIvL1wiICk7XG5cblx0XHQvLyBBbGlhcyBtZXRob2Qgb3B0aW9uIHRvIHR5cGUgYXMgcGVyIHRpY2tldCAjMTIwMDRcblx0XHRzLnR5cGUgPSBvcHRpb25zLm1ldGhvZCB8fCBvcHRpb25zLnR5cGUgfHwgcy5tZXRob2QgfHwgcy50eXBlO1xuXG5cdFx0Ly8gRXh0cmFjdCBkYXRhVHlwZXMgbGlzdFxuXHRcdHMuZGF0YVR5cGVzID0galF1ZXJ5LnRyaW0oIHMuZGF0YVR5cGUgfHwgXCIqXCIgKS50b0xvd2VyQ2FzZSgpLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbIFwiXCIgXTtcblxuXHRcdC8vIEEgY3Jvc3MtZG9tYWluIHJlcXVlc3QgaXMgaW4gb3JkZXIgd2hlbiB3ZSBoYXZlIGEgcHJvdG9jb2w6aG9zdDpwb3J0IG1pc21hdGNoXG5cdFx0aWYgKCBzLmNyb3NzRG9tYWluID09IG51bGwgKSB7XG5cdFx0XHRwYXJ0cyA9IHJ1cmwuZXhlYyggcy51cmwudG9Mb3dlckNhc2UoKSApO1xuXHRcdFx0cy5jcm9zc0RvbWFpbiA9ICEhKCBwYXJ0cyAmJlxuXHRcdFx0XHQoIHBhcnRzWyAxIF0gIT09IGFqYXhMb2NQYXJ0c1sgMSBdIHx8IHBhcnRzWyAyIF0gIT09IGFqYXhMb2NQYXJ0c1sgMiBdIHx8XG5cdFx0XHRcdFx0KCBwYXJ0c1sgMyBdIHx8ICggcGFydHNbIDEgXSA9PT0gXCJodHRwOlwiID8gXCI4MFwiIDogXCI0NDNcIiApICkgIT09XG5cdFx0XHRcdFx0XHQoIGFqYXhMb2NQYXJ0c1sgMyBdIHx8ICggYWpheExvY1BhcnRzWyAxIF0gPT09IFwiaHR0cDpcIiA/IFwiODBcIiA6IFwiNDQzXCIgKSApIClcblx0XHRcdCk7XG5cdFx0fVxuXG5cdFx0Ly8gQ29udmVydCBkYXRhIGlmIG5vdCBhbHJlYWR5IGEgc3RyaW5nXG5cdFx0aWYgKCBzLmRhdGEgJiYgcy5wcm9jZXNzRGF0YSAmJiB0eXBlb2Ygcy5kYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cy5kYXRhID0galF1ZXJ5LnBhcmFtKCBzLmRhdGEsIHMudHJhZGl0aW9uYWwgKTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSBwcmVmaWx0ZXJzXG5cdFx0aW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XG5cblx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhIHByZWZpbHRlciwgc3RvcCB0aGVyZVxuXHRcdGlmICggc3RhdGUgPT09IDIgKSB7XG5cdFx0XHRyZXR1cm4ganFYSFI7XG5cdFx0fVxuXG5cdFx0Ly8gV2UgY2FuIGZpcmUgZ2xvYmFsIGV2ZW50cyBhcyBvZiBub3cgaWYgYXNrZWQgdG9cblx0XHQvLyBEb24ndCBmaXJlIGV2ZW50cyBpZiBqUXVlcnkuZXZlbnQgaXMgdW5kZWZpbmVkIGluIGFuIEFNRC11c2FnZSBzY2VuYXJpbyAoIzE1MTE4KVxuXHRcdGZpcmVHbG9iYWxzID0galF1ZXJ5LmV2ZW50ICYmIHMuZ2xvYmFsO1xuXG5cdFx0Ly8gV2F0Y2ggZm9yIGEgbmV3IHNldCBvZiByZXF1ZXN0c1xuXHRcdGlmICggZmlyZUdsb2JhbHMgJiYgalF1ZXJ5LmFjdGl2ZSsrID09PSAwICkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoXCJhamF4U3RhcnRcIik7XG5cdFx0fVxuXG5cdFx0Ly8gVXBwZXJjYXNlIHRoZSB0eXBlXG5cdFx0cy50eXBlID0gcy50eXBlLnRvVXBwZXJDYXNlKCk7XG5cblx0XHQvLyBEZXRlcm1pbmUgaWYgcmVxdWVzdCBoYXMgY29udGVudFxuXHRcdHMuaGFzQ29udGVudCA9ICFybm9Db250ZW50LnRlc3QoIHMudHlwZSApO1xuXG5cdFx0Ly8gU2F2ZSB0aGUgVVJMIGluIGNhc2Ugd2UncmUgdG95aW5nIHdpdGggdGhlIElmLU1vZGlmaWVkLVNpbmNlXG5cdFx0Ly8gYW5kL29yIElmLU5vbmUtTWF0Y2ggaGVhZGVyIGxhdGVyIG9uXG5cdFx0Y2FjaGVVUkwgPSBzLnVybDtcblxuXHRcdC8vIE1vcmUgb3B0aW9ucyBoYW5kbGluZyBmb3IgcmVxdWVzdHMgd2l0aCBubyBjb250ZW50XG5cdFx0aWYgKCAhcy5oYXNDb250ZW50ICkge1xuXG5cdFx0XHQvLyBJZiBkYXRhIGlzIGF2YWlsYWJsZSwgYXBwZW5kIGRhdGEgdG8gdXJsXG5cdFx0XHRpZiAoIHMuZGF0YSApIHtcblx0XHRcdFx0Y2FjaGVVUkwgPSAoIHMudXJsICs9ICggcnF1ZXJ5LnRlc3QoIGNhY2hlVVJMICkgPyBcIiZcIiA6IFwiP1wiICkgKyBzLmRhdGEgKTtcblx0XHRcdFx0Ly8gIzk2ODI6IHJlbW92ZSBkYXRhIHNvIHRoYXQgaXQncyBub3QgdXNlZCBpbiBhbiBldmVudHVhbCByZXRyeVxuXHRcdFx0XHRkZWxldGUgcy5kYXRhO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgYW50aS1jYWNoZSBpbiB1cmwgaWYgbmVlZGVkXG5cdFx0XHRpZiAoIHMuY2FjaGUgPT09IGZhbHNlICkge1xuXHRcdFx0XHRzLnVybCA9IHJ0cy50ZXN0KCBjYWNoZVVSTCApID9cblxuXHRcdFx0XHRcdC8vIElmIHRoZXJlIGlzIGFscmVhZHkgYSAnXycgcGFyYW1ldGVyLCBzZXQgaXRzIHZhbHVlXG5cdFx0XHRcdFx0Y2FjaGVVUkwucmVwbGFjZSggcnRzLCBcIiQxXz1cIiArIG5vbmNlKysgKSA6XG5cblx0XHRcdFx0XHQvLyBPdGhlcndpc2UgYWRkIG9uZSB0byB0aGUgZW5kXG5cdFx0XHRcdFx0Y2FjaGVVUkwgKyAoIHJxdWVyeS50ZXN0KCBjYWNoZVVSTCApID8gXCImXCIgOiBcIj9cIiApICsgXCJfPVwiICsgbm9uY2UrKztcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLlxuXHRcdGlmICggcy5pZk1vZGlmaWVkICkge1xuXHRcdFx0aWYgKCBqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdICkge1xuXHRcdFx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBcIklmLU1vZGlmaWVkLVNpbmNlXCIsIGpRdWVyeS5sYXN0TW9kaWZpZWRbIGNhY2hlVVJMIF0gKTtcblx0XHRcdH1cblx0XHRcdGlmICggalF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gKSB7XG5cdFx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIFwiSWYtTm9uZS1NYXRjaFwiLCBqUXVlcnkuZXRhZ1sgY2FjaGVVUkwgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFNldCB0aGUgY29ycmVjdCBoZWFkZXIsIGlmIGRhdGEgaXMgYmVpbmcgc2VudFxuXHRcdGlmICggcy5kYXRhICYmIHMuaGFzQ29udGVudCAmJiBzLmNvbnRlbnRUeXBlICE9PSBmYWxzZSB8fCBvcHRpb25zLmNvbnRlbnRUeXBlICkge1xuXHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggXCJDb250ZW50LVR5cGVcIiwgcy5jb250ZW50VHlwZSApO1xuXHRcdH1cblxuXHRcdC8vIFNldCB0aGUgQWNjZXB0cyBoZWFkZXIgZm9yIHRoZSBzZXJ2ZXIsIGRlcGVuZGluZyBvbiB0aGUgZGF0YVR5cGVcblx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKFxuXHRcdFx0XCJBY2NlcHRcIixcblx0XHRcdHMuZGF0YVR5cGVzWyAwIF0gJiYgcy5hY2NlcHRzWyBzLmRhdGFUeXBlc1swXSBdID9cblx0XHRcdFx0cy5hY2NlcHRzWyBzLmRhdGFUeXBlc1swXSBdICsgKCBzLmRhdGFUeXBlc1sgMCBdICE9PSBcIipcIiA/IFwiLCBcIiArIGFsbFR5cGVzICsgXCI7IHE9MC4wMVwiIDogXCJcIiApIDpcblx0XHRcdFx0cy5hY2NlcHRzWyBcIipcIiBdXG5cdFx0KTtcblxuXHRcdC8vIENoZWNrIGZvciBoZWFkZXJzIG9wdGlvblxuXHRcdGZvciAoIGkgaW4gcy5oZWFkZXJzICkge1xuXHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggaSwgcy5oZWFkZXJzWyBpIF0gKTtcblx0XHR9XG5cblx0XHQvLyBBbGxvdyBjdXN0b20gaGVhZGVycy9taW1ldHlwZXMgYW5kIGVhcmx5IGFib3J0XG5cdFx0aWYgKCBzLmJlZm9yZVNlbmQgJiYgKCBzLmJlZm9yZVNlbmQuY2FsbCggY2FsbGJhY2tDb250ZXh0LCBqcVhIUiwgcyApID09PSBmYWxzZSB8fCBzdGF0ZSA9PT0gMiApICkge1xuXHRcdFx0Ly8gQWJvcnQgaWYgbm90IGRvbmUgYWxyZWFkeSBhbmQgcmV0dXJuXG5cdFx0XHRyZXR1cm4ganFYSFIuYWJvcnQoKTtcblx0XHR9XG5cblx0XHQvLyBBYm9ydGluZyBpcyBubyBsb25nZXIgYSBjYW5jZWxsYXRpb25cblx0XHRzdHJBYm9ydCA9IFwiYWJvcnRcIjtcblxuXHRcdC8vIEluc3RhbGwgY2FsbGJhY2tzIG9uIGRlZmVycmVkc1xuXHRcdGZvciAoIGkgaW4geyBzdWNjZXNzOiAxLCBlcnJvcjogMSwgY29tcGxldGU6IDEgfSApIHtcblx0XHRcdGpxWEhSWyBpIF0oIHNbIGkgXSApO1xuXHRcdH1cblxuXHRcdC8vIEdldCB0cmFuc3BvcnRcblx0XHR0cmFuc3BvcnQgPSBpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyggdHJhbnNwb3J0cywgcywgb3B0aW9ucywganFYSFIgKTtcblxuXHRcdC8vIElmIG5vIHRyYW5zcG9ydCwgd2UgYXV0by1hYm9ydFxuXHRcdGlmICggIXRyYW5zcG9ydCApIHtcblx0XHRcdGRvbmUoIC0xLCBcIk5vIFRyYW5zcG9ydFwiICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGpxWEhSLnJlYWR5U3RhdGUgPSAxO1xuXG5cdFx0XHQvLyBTZW5kIGdsb2JhbCBldmVudFxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIFwiYWpheFNlbmRcIiwgWyBqcVhIUiwgcyBdICk7XG5cdFx0XHR9XG5cdFx0XHQvLyBUaW1lb3V0XG5cdFx0XHRpZiAoIHMuYXN5bmMgJiYgcy50aW1lb3V0ID4gMCApIHtcblx0XHRcdFx0dGltZW91dFRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRqcVhIUi5hYm9ydChcInRpbWVvdXRcIik7XG5cdFx0XHRcdH0sIHMudGltZW91dCApO1xuXHRcdFx0fVxuXG5cdFx0XHR0cnkge1xuXHRcdFx0XHRzdGF0ZSA9IDE7XG5cdFx0XHRcdHRyYW5zcG9ydC5zZW5kKCByZXF1ZXN0SGVhZGVycywgZG9uZSApO1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0XHRcdC8vIFByb3BhZ2F0ZSBleGNlcHRpb24gYXMgZXJyb3IgaWYgbm90IGRvbmVcblx0XHRcdFx0aWYgKCBzdGF0ZSA8IDIgKSB7XG5cdFx0XHRcdFx0ZG9uZSggLTEsIGUgKTtcblx0XHRcdFx0Ly8gU2ltcGx5IHJldGhyb3cgb3RoZXJ3aXNlXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dGhyb3cgZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGxiYWNrIGZvciB3aGVuIGV2ZXJ5dGhpbmcgaXMgZG9uZVxuXHRcdGZ1bmN0aW9uIGRvbmUoIHN0YXR1cywgbmF0aXZlU3RhdHVzVGV4dCwgcmVzcG9uc2VzLCBoZWFkZXJzICkge1xuXHRcdFx0dmFyIGlzU3VjY2Vzcywgc3VjY2VzcywgZXJyb3IsIHJlc3BvbnNlLCBtb2RpZmllZCxcblx0XHRcdFx0c3RhdHVzVGV4dCA9IG5hdGl2ZVN0YXR1c1RleHQ7XG5cblx0XHRcdC8vIENhbGxlZCBvbmNlXG5cdFx0XHRpZiAoIHN0YXRlID09PSAyICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN0YXRlIGlzIFwiZG9uZVwiIG5vd1xuXHRcdFx0c3RhdGUgPSAyO1xuXG5cdFx0XHQvLyBDbGVhciB0aW1lb3V0IGlmIGl0IGV4aXN0c1xuXHRcdFx0aWYgKCB0aW1lb3V0VGltZXIgKSB7XG5cdFx0XHRcdGNsZWFyVGltZW91dCggdGltZW91dFRpbWVyICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIERlcmVmZXJlbmNlIHRyYW5zcG9ydCBmb3IgZWFybHkgZ2FyYmFnZSBjb2xsZWN0aW9uXG5cdFx0XHQvLyAobm8gbWF0dGVyIGhvdyBsb25nIHRoZSBqcVhIUiBvYmplY3Qgd2lsbCBiZSB1c2VkKVxuXHRcdFx0dHJhbnNwb3J0ID0gdW5kZWZpbmVkO1xuXG5cdFx0XHQvLyBDYWNoZSByZXNwb25zZSBoZWFkZXJzXG5cdFx0XHRyZXNwb25zZUhlYWRlcnNTdHJpbmcgPSBoZWFkZXJzIHx8IFwiXCI7XG5cblx0XHRcdC8vIFNldCByZWFkeVN0YXRlXG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gc3RhdHVzID4gMCA/IDQgOiAwO1xuXG5cdFx0XHQvLyBEZXRlcm1pbmUgaWYgc3VjY2Vzc2Z1bFxuXHRcdFx0aXNTdWNjZXNzID0gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID09PSAzMDQ7XG5cblx0XHRcdC8vIEdldCByZXNwb25zZSBkYXRhXG5cdFx0XHRpZiAoIHJlc3BvbnNlcyApIHtcblx0XHRcdFx0cmVzcG9uc2UgPSBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvbnZlcnQgbm8gbWF0dGVyIHdoYXQgKHRoYXQgd2F5IHJlc3BvbnNlWFhYIGZpZWxkcyBhcmUgYWx3YXlzIHNldClcblx0XHRcdHJlc3BvbnNlID0gYWpheENvbnZlcnQoIHMsIHJlc3BvbnNlLCBqcVhIUiwgaXNTdWNjZXNzICk7XG5cblx0XHRcdC8vIElmIHN1Y2Nlc3NmdWwsIGhhbmRsZSB0eXBlIGNoYWluaW5nXG5cdFx0XHRpZiAoIGlzU3VjY2VzcyApIHtcblxuXHRcdFx0XHQvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLlxuXHRcdFx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdFx0XHRtb2RpZmllZCA9IGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKFwiTGFzdC1Nb2RpZmllZFwiKTtcblx0XHRcdFx0XHRpZiAoIG1vZGlmaWVkICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5Lmxhc3RNb2RpZmllZFsgY2FjaGVVUkwgXSA9IG1vZGlmaWVkO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRtb2RpZmllZCA9IGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKFwiZXRhZ1wiKTtcblx0XHRcdFx0XHRpZiAoIG1vZGlmaWVkICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gPSBtb2RpZmllZDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBpZiBubyBjb250ZW50XG5cdFx0XHRcdGlmICggc3RhdHVzID09PSAyMDQgfHwgcy50eXBlID09PSBcIkhFQURcIiApIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gXCJub2NvbnRlbnRcIjtcblxuXHRcdFx0XHQvLyBpZiBub3QgbW9kaWZpZWRcblx0XHRcdFx0fSBlbHNlIGlmICggc3RhdHVzID09PSAzMDQgKSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwibm90bW9kaWZpZWRcIjtcblxuXHRcdFx0XHQvLyBJZiB3ZSBoYXZlIGRhdGEsIGxldCdzIGNvbnZlcnQgaXRcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gcmVzcG9uc2Uuc3RhdGU7XG5cdFx0XHRcdFx0c3VjY2VzcyA9IHJlc3BvbnNlLmRhdGE7XG5cdFx0XHRcdFx0ZXJyb3IgPSByZXNwb25zZS5lcnJvcjtcblx0XHRcdFx0XHRpc1N1Y2Nlc3MgPSAhZXJyb3I7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdC8vIEV4dHJhY3QgZXJyb3IgZnJvbSBzdGF0dXNUZXh0IGFuZCBub3JtYWxpemUgZm9yIG5vbi1hYm9ydHNcblx0XHRcdFx0ZXJyb3IgPSBzdGF0dXNUZXh0O1xuXHRcdFx0XHRpZiAoIHN0YXR1cyB8fCAhc3RhdHVzVGV4dCApIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gXCJlcnJvclwiO1xuXHRcdFx0XHRcdGlmICggc3RhdHVzIDwgMCApIHtcblx0XHRcdFx0XHRcdHN0YXR1cyA9IDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNldCBkYXRhIGZvciB0aGUgZmFrZSB4aHIgb2JqZWN0XG5cdFx0XHRqcVhIUi5zdGF0dXMgPSBzdGF0dXM7XG5cdFx0XHRqcVhIUi5zdGF0dXNUZXh0ID0gKCBuYXRpdmVTdGF0dXNUZXh0IHx8IHN0YXR1c1RleHQgKSArIFwiXCI7XG5cblx0XHRcdC8vIFN1Y2Nlc3MvRXJyb3Jcblx0XHRcdGlmICggaXNTdWNjZXNzICkge1xuXHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIHN1Y2Nlc3MsIHN0YXR1c1RleHQsIGpxWEhSIF0gKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCwgZXJyb3IgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0anFYSFIuc3RhdHVzQ29kZSggc3RhdHVzQ29kZSApO1xuXHRcdFx0c3RhdHVzQ29kZSA9IHVuZGVmaW5lZDtcblxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIGlzU3VjY2VzcyA/IFwiYWpheFN1Y2Nlc3NcIiA6IFwiYWpheEVycm9yXCIsXG5cdFx0XHRcdFx0WyBqcVhIUiwgcywgaXNTdWNjZXNzID8gc3VjY2VzcyA6IGVycm9yIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29tcGxldGVcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQuZmlyZVdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCBdICk7XG5cblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhDb21wbGV0ZVwiLCBbIGpxWEhSLCBzIF0gKTtcblx0XHRcdFx0Ly8gSGFuZGxlIHRoZSBnbG9iYWwgQUpBWCBjb3VudGVyXG5cdFx0XHRcdGlmICggISggLS1qUXVlcnkuYWN0aXZlICkgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoXCJhamF4U3RvcFwiKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBqcVhIUjtcblx0fSxcblxuXHRnZXRKU09OOiBmdW5jdGlvbiggdXJsLCBkYXRhLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdldCggdXJsLCBkYXRhLCBjYWxsYmFjaywgXCJqc29uXCIgKTtcblx0fSxcblxuXHRnZXRTY3JpcHQ6IGZ1bmN0aW9uKCB1cmwsIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ2V0KCB1cmwsIHVuZGVmaW5lZCwgY2FsbGJhY2ssIFwic2NyaXB0XCIgKTtcblx0fVxufSk7XG5cbmpRdWVyeS5lYWNoKCBbIFwiZ2V0XCIsIFwicG9zdFwiIF0sIGZ1bmN0aW9uKCBpLCBtZXRob2QgKSB7XG5cdGpRdWVyeVsgbWV0aG9kIF0gPSBmdW5jdGlvbiggdXJsLCBkYXRhLCBjYWxsYmFjaywgdHlwZSApIHtcblx0XHQvLyBTaGlmdCBhcmd1bWVudHMgaWYgZGF0YSBhcmd1bWVudCB3YXMgb21pdHRlZFxuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIGRhdGEgKSApIHtcblx0XHRcdHR5cGUgPSB0eXBlIHx8IGNhbGxiYWNrO1xuXHRcdFx0Y2FsbGJhY2sgPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHRyZXR1cm4galF1ZXJ5LmFqYXgoe1xuXHRcdFx0dXJsOiB1cmwsXG5cdFx0XHR0eXBlOiBtZXRob2QsXG5cdFx0XHRkYXRhVHlwZTogdHlwZSxcblx0XHRcdGRhdGE6IGRhdGEsXG5cdFx0XHRzdWNjZXNzOiBjYWxsYmFja1xuXHRcdH0pO1xuXHR9O1xufSk7XG5cblxualF1ZXJ5Ll9ldmFsVXJsID0gZnVuY3Rpb24oIHVybCApIHtcblx0cmV0dXJuIGpRdWVyeS5hamF4KHtcblx0XHR1cmw6IHVybCxcblx0XHR0eXBlOiBcIkdFVFwiLFxuXHRcdGRhdGFUeXBlOiBcInNjcmlwdFwiLFxuXHRcdGFzeW5jOiBmYWxzZSxcblx0XHRnbG9iYWw6IGZhbHNlLFxuXHRcdFwidGhyb3dzXCI6IHRydWVcblx0fSk7XG59O1xuXG5cbmpRdWVyeS5mbi5leHRlbmQoe1xuXHR3cmFwQWxsOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHR2YXIgd3JhcDtcblxuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIGh0bWwgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLndyYXBBbGwoIGh0bWwuY2FsbCh0aGlzLCBpKSApO1xuXHRcdFx0fSk7XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzWyAwIF0gKSB7XG5cblx0XHRcdC8vIFRoZSBlbGVtZW50cyB0byB3cmFwIHRoZSB0YXJnZXQgYXJvdW5kXG5cdFx0XHR3cmFwID0galF1ZXJ5KCBodG1sLCB0aGlzWyAwIF0ub3duZXJEb2N1bWVudCApLmVxKCAwICkuY2xvbmUoIHRydWUgKTtcblxuXHRcdFx0aWYgKCB0aGlzWyAwIF0ucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0d3JhcC5pbnNlcnRCZWZvcmUoIHRoaXNbIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHR3cmFwLm1hcChmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGVsZW0gPSB0aGlzO1xuXG5cdFx0XHRcdHdoaWxlICggZWxlbS5maXJzdEVsZW1lbnRDaGlsZCApIHtcblx0XHRcdFx0XHRlbGVtID0gZWxlbS5maXJzdEVsZW1lbnRDaGlsZDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBlbGVtO1xuXHRcdFx0fSkuYXBwZW5kKCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0d3JhcElubmVyOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBodG1sICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS53cmFwSW5uZXIoIGh0bWwuY2FsbCh0aGlzLCBpKSApO1xuXHRcdFx0fSk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcblx0XHRcdHZhciBzZWxmID0galF1ZXJ5KCB0aGlzICksXG5cdFx0XHRcdGNvbnRlbnRzID0gc2VsZi5jb250ZW50cygpO1xuXG5cdFx0XHRpZiAoIGNvbnRlbnRzLmxlbmd0aCApIHtcblx0XHRcdFx0Y29udGVudHMud3JhcEFsbCggaHRtbCApO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRzZWxmLmFwcGVuZCggaHRtbCApO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHR9LFxuXG5cdHdyYXA6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdHZhciBpc0Z1bmN0aW9uID0galF1ZXJ5LmlzRnVuY3Rpb24oIGh0bWwgKTtcblxuXHRcdHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRqUXVlcnkoIHRoaXMgKS53cmFwQWxsKCBpc0Z1bmN0aW9uID8gaHRtbC5jYWxsKHRoaXMsIGkpIDogaHRtbCApO1xuXHRcdH0pO1xuXHR9LFxuXG5cdHVud3JhcDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMucGFyZW50KCkuZWFjaChmdW5jdGlvbigpIHtcblx0XHRcdGlmICggIWpRdWVyeS5ub2RlTmFtZSggdGhpcywgXCJib2R5XCIgKSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkucmVwbGFjZVdpdGgoIHRoaXMuY2hpbGROb2RlcyApO1xuXHRcdFx0fVxuXHRcdH0pLmVuZCgpO1xuXHR9XG59KTtcblxuXG5qUXVlcnkuZXhwci5maWx0ZXJzLmhpZGRlbiA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHQvLyBTdXBwb3J0OiBPcGVyYSA8PSAxMi4xMlxuXHQvLyBPcGVyYSByZXBvcnRzIG9mZnNldFdpZHRocyBhbmQgb2Zmc2V0SGVpZ2h0cyBsZXNzIHRoYW4gemVybyBvbiBzb21lIGVsZW1lbnRzXG5cdHJldHVybiBlbGVtLm9mZnNldFdpZHRoIDw9IDAgJiYgZWxlbS5vZmZzZXRIZWlnaHQgPD0gMDtcbn07XG5qUXVlcnkuZXhwci5maWx0ZXJzLnZpc2libGUgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0cmV0dXJuICFqUXVlcnkuZXhwci5maWx0ZXJzLmhpZGRlbiggZWxlbSApO1xufTtcblxuXG5cblxudmFyIHIyMCA9IC8lMjAvZyxcblx0cmJyYWNrZXQgPSAvXFxbXFxdJC8sXG5cdHJDUkxGID0gL1xccj9cXG4vZyxcblx0cnN1Ym1pdHRlclR5cGVzID0gL14oPzpzdWJtaXR8YnV0dG9ufGltYWdlfHJlc2V0fGZpbGUpJC9pLFxuXHRyc3VibWl0dGFibGUgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxrZXlnZW4pL2k7XG5cbmZ1bmN0aW9uIGJ1aWxkUGFyYW1zKCBwcmVmaXgsIG9iaiwgdHJhZGl0aW9uYWwsIGFkZCApIHtcblx0dmFyIG5hbWU7XG5cblx0aWYgKCBqUXVlcnkuaXNBcnJheSggb2JqICkgKSB7XG5cdFx0Ly8gU2VyaWFsaXplIGFycmF5IGl0ZW0uXG5cdFx0alF1ZXJ5LmVhY2goIG9iaiwgZnVuY3Rpb24oIGksIHYgKSB7XG5cdFx0XHRpZiAoIHRyYWRpdGlvbmFsIHx8IHJicmFja2V0LnRlc3QoIHByZWZpeCApICkge1xuXHRcdFx0XHQvLyBUcmVhdCBlYWNoIGFycmF5IGl0ZW0gYXMgYSBzY2FsYXIuXG5cdFx0XHRcdGFkZCggcHJlZml4LCB2ICk7XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdC8vIEl0ZW0gaXMgbm9uLXNjYWxhciAoYXJyYXkgb3Igb2JqZWN0KSwgZW5jb2RlIGl0cyBudW1lcmljIGluZGV4LlxuXHRcdFx0XHRidWlsZFBhcmFtcyggcHJlZml4ICsgXCJbXCIgKyAoIHR5cGVvZiB2ID09PSBcIm9iamVjdFwiID8gaSA6IFwiXCIgKSArIFwiXVwiLCB2LCB0cmFkaXRpb25hbCwgYWRkICk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0fSBlbHNlIGlmICggIXRyYWRpdGlvbmFsICYmIGpRdWVyeS50eXBlKCBvYmogKSA9PT0gXCJvYmplY3RcIiApIHtcblx0XHQvLyBTZXJpYWxpemUgb2JqZWN0IGl0ZW0uXG5cdFx0Zm9yICggbmFtZSBpbiBvYmogKSB7XG5cdFx0XHRidWlsZFBhcmFtcyggcHJlZml4ICsgXCJbXCIgKyBuYW1lICsgXCJdXCIsIG9ialsgbmFtZSBdLCB0cmFkaXRpb25hbCwgYWRkICk7XG5cdFx0fVxuXG5cdH0gZWxzZSB7XG5cdFx0Ly8gU2VyaWFsaXplIHNjYWxhciBpdGVtLlxuXHRcdGFkZCggcHJlZml4LCBvYmogKTtcblx0fVxufVxuXG4vLyBTZXJpYWxpemUgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cyBvciBhIHNldCBvZlxuLy8ga2V5L3ZhbHVlcyBpbnRvIGEgcXVlcnkgc3RyaW5nXG5qUXVlcnkucGFyYW0gPSBmdW5jdGlvbiggYSwgdHJhZGl0aW9uYWwgKSB7XG5cdHZhciBwcmVmaXgsXG5cdFx0cyA9IFtdLFxuXHRcdGFkZCA9IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkge1xuXHRcdFx0Ly8gSWYgdmFsdWUgaXMgYSBmdW5jdGlvbiwgaW52b2tlIGl0IGFuZCByZXR1cm4gaXRzIHZhbHVlXG5cdFx0XHR2YWx1ZSA9IGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApID8gdmFsdWUoKSA6ICggdmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSApO1xuXHRcdFx0c1sgcy5sZW5ndGggXSA9IGVuY29kZVVSSUNvbXBvbmVudCgga2V5ICkgKyBcIj1cIiArIGVuY29kZVVSSUNvbXBvbmVudCggdmFsdWUgKTtcblx0XHR9O1xuXG5cdC8vIFNldCB0cmFkaXRpb25hbCB0byB0cnVlIGZvciBqUXVlcnkgPD0gMS4zLjIgYmVoYXZpb3IuXG5cdGlmICggdHJhZGl0aW9uYWwgPT09IHVuZGVmaW5lZCApIHtcblx0XHR0cmFkaXRpb25hbCA9IGpRdWVyeS5hamF4U2V0dGluZ3MgJiYgalF1ZXJ5LmFqYXhTZXR0aW5ncy50cmFkaXRpb25hbDtcblx0fVxuXG5cdC8vIElmIGFuIGFycmF5IHdhcyBwYXNzZWQgaW4sIGFzc3VtZSB0aGF0IGl0IGlzIGFuIGFycmF5IG9mIGZvcm0gZWxlbWVudHMuXG5cdGlmICggalF1ZXJ5LmlzQXJyYXkoIGEgKSB8fCAoIGEuanF1ZXJ5ICYmICFqUXVlcnkuaXNQbGFpbk9iamVjdCggYSApICkgKSB7XG5cdFx0Ly8gU2VyaWFsaXplIHRoZSBmb3JtIGVsZW1lbnRzXG5cdFx0alF1ZXJ5LmVhY2goIGEsIGZ1bmN0aW9uKCkge1xuXHRcdFx0YWRkKCB0aGlzLm5hbWUsIHRoaXMudmFsdWUgKTtcblx0XHR9KTtcblxuXHR9IGVsc2Uge1xuXHRcdC8vIElmIHRyYWRpdGlvbmFsLCBlbmNvZGUgdGhlIFwib2xkXCIgd2F5ICh0aGUgd2F5IDEuMy4yIG9yIG9sZGVyXG5cdFx0Ly8gZGlkIGl0KSwgb3RoZXJ3aXNlIGVuY29kZSBwYXJhbXMgcmVjdXJzaXZlbHkuXG5cdFx0Zm9yICggcHJlZml4IGluIGEgKSB7XG5cdFx0XHRidWlsZFBhcmFtcyggcHJlZml4LCBhWyBwcmVmaXggXSwgdHJhZGl0aW9uYWwsIGFkZCApO1xuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgcmVzdWx0aW5nIHNlcmlhbGl6YXRpb25cblx0cmV0dXJuIHMuam9pbiggXCImXCIgKS5yZXBsYWNlKCByMjAsIFwiK1wiICk7XG59O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKHtcblx0c2VyaWFsaXplOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4galF1ZXJ5LnBhcmFtKCB0aGlzLnNlcmlhbGl6ZUFycmF5KCkgKTtcblx0fSxcblx0c2VyaWFsaXplQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcChmdW5jdGlvbigpIHtcblx0XHRcdC8vIENhbiBhZGQgcHJvcEhvb2sgZm9yIFwiZWxlbWVudHNcIiB0byBmaWx0ZXIgb3IgYWRkIGZvcm0gZWxlbWVudHNcblx0XHRcdHZhciBlbGVtZW50cyA9IGpRdWVyeS5wcm9wKCB0aGlzLCBcImVsZW1lbnRzXCIgKTtcblx0XHRcdHJldHVybiBlbGVtZW50cyA/IGpRdWVyeS5tYWtlQXJyYXkoIGVsZW1lbnRzICkgOiB0aGlzO1xuXHRcdH0pXG5cdFx0LmZpbHRlcihmdW5jdGlvbigpIHtcblx0XHRcdHZhciB0eXBlID0gdGhpcy50eXBlO1xuXG5cdFx0XHQvLyBVc2UgLmlzKCBcIjpkaXNhYmxlZFwiICkgc28gdGhhdCBmaWVsZHNldFtkaXNhYmxlZF0gd29ya3Ncblx0XHRcdHJldHVybiB0aGlzLm5hbWUgJiYgIWpRdWVyeSggdGhpcyApLmlzKCBcIjpkaXNhYmxlZFwiICkgJiZcblx0XHRcdFx0cnN1Ym1pdHRhYmxlLnRlc3QoIHRoaXMubm9kZU5hbWUgKSAmJiAhcnN1Ym1pdHRlclR5cGVzLnRlc3QoIHR5cGUgKSAmJlxuXHRcdFx0XHQoIHRoaXMuY2hlY2tlZCB8fCAhcmNoZWNrYWJsZVR5cGUudGVzdCggdHlwZSApICk7XG5cdFx0fSlcblx0XHQubWFwKGZ1bmN0aW9uKCBpLCBlbGVtICkge1xuXHRcdFx0dmFyIHZhbCA9IGpRdWVyeSggdGhpcyApLnZhbCgpO1xuXG5cdFx0XHRyZXR1cm4gdmFsID09IG51bGwgP1xuXHRcdFx0XHRudWxsIDpcblx0XHRcdFx0alF1ZXJ5LmlzQXJyYXkoIHZhbCApID9cblx0XHRcdFx0XHRqUXVlcnkubWFwKCB2YWwsIGZ1bmN0aW9uKCB2YWwgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4geyBuYW1lOiBlbGVtLm5hbWUsIHZhbHVlOiB2YWwucmVwbGFjZSggckNSTEYsIFwiXFxyXFxuXCIgKSB9O1xuXHRcdFx0XHRcdH0pIDpcblx0XHRcdFx0XHR7IG5hbWU6IGVsZW0ubmFtZSwgdmFsdWU6IHZhbC5yZXBsYWNlKCByQ1JMRiwgXCJcXHJcXG5cIiApIH07XG5cdFx0fSkuZ2V0KCk7XG5cdH1cbn0pO1xuXG5cbmpRdWVyeS5hamF4U2V0dGluZ3MueGhyID0gZnVuY3Rpb24oKSB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuXHR9IGNhdGNoKCBlICkge31cbn07XG5cbnZhciB4aHJJZCA9IDAsXG5cdHhockNhbGxiYWNrcyA9IHt9LFxuXHR4aHJTdWNjZXNzU3RhdHVzID0ge1xuXHRcdC8vIGZpbGUgcHJvdG9jb2wgYWx3YXlzIHlpZWxkcyBzdGF0dXMgY29kZSAwLCBhc3N1bWUgMjAwXG5cdFx0MDogMjAwLFxuXHRcdC8vIFN1cHBvcnQ6IElFOVxuXHRcdC8vICMxNDUwOiBzb21ldGltZXMgSUUgcmV0dXJucyAxMjIzIHdoZW4gaXQgc2hvdWxkIGJlIDIwNFxuXHRcdDEyMjM6IDIwNFxuXHR9LFxuXHR4aHJTdXBwb3J0ZWQgPSBqUXVlcnkuYWpheFNldHRpbmdzLnhocigpO1xuXG4vLyBTdXBwb3J0OiBJRTlcbi8vIE9wZW4gcmVxdWVzdHMgbXVzdCBiZSBtYW51YWxseSBhYm9ydGVkIG9uIHVubG9hZCAoIzUyODApXG4vLyBTZWUgaHR0cHM6Ly9zdXBwb3J0Lm1pY3Jvc29mdC5jb20va2IvMjg1Njc0NiBmb3IgbW9yZSBpbmZvXG5pZiAoIHdpbmRvdy5hdHRhY2hFdmVudCApIHtcblx0d2luZG93LmF0dGFjaEV2ZW50KCBcIm9udW5sb2FkXCIsIGZ1bmN0aW9uKCkge1xuXHRcdGZvciAoIHZhciBrZXkgaW4geGhyQ2FsbGJhY2tzICkge1xuXHRcdFx0eGhyQ2FsbGJhY2tzWyBrZXkgXSgpO1xuXHRcdH1cblx0fSk7XG59XG5cbnN1cHBvcnQuY29ycyA9ICEheGhyU3VwcG9ydGVkICYmICggXCJ3aXRoQ3JlZGVudGlhbHNcIiBpbiB4aHJTdXBwb3J0ZWQgKTtcbnN1cHBvcnQuYWpheCA9IHhoclN1cHBvcnRlZCA9ICEheGhyU3VwcG9ydGVkO1xuXG5qUXVlcnkuYWpheFRyYW5zcG9ydChmdW5jdGlvbiggb3B0aW9ucyApIHtcblx0dmFyIGNhbGxiYWNrO1xuXG5cdC8vIENyb3NzIGRvbWFpbiBvbmx5IGFsbG93ZWQgaWYgc3VwcG9ydGVkIHRocm91Z2ggWE1MSHR0cFJlcXVlc3Rcblx0aWYgKCBzdXBwb3J0LmNvcnMgfHwgeGhyU3VwcG9ydGVkICYmICFvcHRpb25zLmNyb3NzRG9tYWluICkge1xuXHRcdHJldHVybiB7XG5cdFx0XHRzZW5kOiBmdW5jdGlvbiggaGVhZGVycywgY29tcGxldGUgKSB7XG5cdFx0XHRcdHZhciBpLFxuXHRcdFx0XHRcdHhociA9IG9wdGlvbnMueGhyKCksXG5cdFx0XHRcdFx0aWQgPSArK3hocklkO1xuXG5cdFx0XHRcdHhoci5vcGVuKCBvcHRpb25zLnR5cGUsIG9wdGlvbnMudXJsLCBvcHRpb25zLmFzeW5jLCBvcHRpb25zLnVzZXJuYW1lLCBvcHRpb25zLnBhc3N3b3JkICk7XG5cblx0XHRcdFx0Ly8gQXBwbHkgY3VzdG9tIGZpZWxkcyBpZiBwcm92aWRlZFxuXHRcdFx0XHRpZiAoIG9wdGlvbnMueGhyRmllbGRzICkge1xuXHRcdFx0XHRcdGZvciAoIGkgaW4gb3B0aW9ucy54aHJGaWVsZHMgKSB7XG5cdFx0XHRcdFx0XHR4aHJbIGkgXSA9IG9wdGlvbnMueGhyRmllbGRzWyBpIF07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gT3ZlcnJpZGUgbWltZSB0eXBlIGlmIG5lZWRlZFxuXHRcdFx0XHRpZiAoIG9wdGlvbnMubWltZVR5cGUgJiYgeGhyLm92ZXJyaWRlTWltZVR5cGUgKSB7XG5cdFx0XHRcdFx0eGhyLm92ZXJyaWRlTWltZVR5cGUoIG9wdGlvbnMubWltZVR5cGUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFgtUmVxdWVzdGVkLVdpdGggaGVhZGVyXG5cdFx0XHRcdC8vIEZvciBjcm9zcy1kb21haW4gcmVxdWVzdHMsIHNlZWluZyBhcyBjb25kaXRpb25zIGZvciBhIHByZWZsaWdodCBhcmVcblx0XHRcdFx0Ly8gYWtpbiB0byBhIGppZ3NhdyBwdXp6bGUsIHdlIHNpbXBseSBuZXZlciBzZXQgaXQgdG8gYmUgc3VyZS5cblx0XHRcdFx0Ly8gKGl0IGNhbiBhbHdheXMgYmUgc2V0IG9uIGEgcGVyLXJlcXVlc3QgYmFzaXMgb3IgZXZlbiB1c2luZyBhamF4U2V0dXApXG5cdFx0XHRcdC8vIEZvciBzYW1lLWRvbWFpbiByZXF1ZXN0cywgd29uJ3QgY2hhbmdlIGhlYWRlciBpZiBhbHJlYWR5IHByb3ZpZGVkLlxuXHRcdFx0XHRpZiAoICFvcHRpb25zLmNyb3NzRG9tYWluICYmICFoZWFkZXJzW1wiWC1SZXF1ZXN0ZWQtV2l0aFwiXSApIHtcblx0XHRcdFx0XHRoZWFkZXJzW1wiWC1SZXF1ZXN0ZWQtV2l0aFwiXSA9IFwiWE1MSHR0cFJlcXVlc3RcIjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFNldCBoZWFkZXJzXG5cdFx0XHRcdGZvciAoIGkgaW4gaGVhZGVycyApIHtcblx0XHRcdFx0XHR4aHIuc2V0UmVxdWVzdEhlYWRlciggaSwgaGVhZGVyc1sgaSBdICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBDYWxsYmFja1xuXHRcdFx0XHRjYWxsYmFjayA9IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdFx0XHRcdHJldHVybiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0XHRcdGRlbGV0ZSB4aHJDYWxsYmFja3NbIGlkIF07XG5cdFx0XHRcdFx0XHRcdGNhbGxiYWNrID0geGhyLm9ubG9hZCA9IHhoci5vbmVycm9yID0gbnVsbDtcblxuXHRcdFx0XHRcdFx0XHRpZiAoIHR5cGUgPT09IFwiYWJvcnRcIiApIHtcblx0XHRcdFx0XHRcdFx0XHR4aHIuYWJvcnQoKTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggdHlwZSA9PT0gXCJlcnJvclwiICkge1xuXHRcdFx0XHRcdFx0XHRcdGNvbXBsZXRlKFxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gZmlsZTogcHJvdG9jb2wgYWx3YXlzIHlpZWxkcyBzdGF0dXMgMDsgc2VlICM4NjA1LCAjMTQyMDdcblx0XHRcdFx0XHRcdFx0XHRcdHhoci5zdGF0dXMsXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzVGV4dFxuXHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHJTdWNjZXNzU3RhdHVzWyB4aHIuc3RhdHVzIF0gfHwgeGhyLnN0YXR1cyxcblx0XHRcdFx0XHRcdFx0XHRcdHhoci5zdGF0dXNUZXh0LFxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUU5XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBBY2Nlc3NpbmcgYmluYXJ5LWRhdGEgcmVzcG9uc2VUZXh0IHRocm93cyBhbiBleGNlcHRpb25cblx0XHRcdFx0XHRcdFx0XHRcdC8vICgjMTE0MjYpXG5cdFx0XHRcdFx0XHRcdFx0XHR0eXBlb2YgeGhyLnJlc3BvbnNlVGV4dCA9PT0gXCJzdHJpbmdcIiA/IHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0dGV4dDogeGhyLnJlc3BvbnNlVGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0fSA6IHVuZGVmaW5lZCxcblx0XHRcdFx0XHRcdFx0XHRcdHhoci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKVxuXHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdC8vIExpc3RlbiB0byBldmVudHNcblx0XHRcdFx0eGhyLm9ubG9hZCA9IGNhbGxiYWNrKCk7XG5cdFx0XHRcdHhoci5vbmVycm9yID0gY2FsbGJhY2soXCJlcnJvclwiKTtcblxuXHRcdFx0XHQvLyBDcmVhdGUgdGhlIGFib3J0IGNhbGxiYWNrXG5cdFx0XHRcdGNhbGxiYWNrID0geGhyQ2FsbGJhY2tzWyBpZCBdID0gY2FsbGJhY2soXCJhYm9ydFwiKTtcblxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdC8vIERvIHNlbmQgdGhlIHJlcXVlc3QgKHRoaXMgbWF5IHJhaXNlIGFuIGV4Y2VwdGlvbilcblx0XHRcdFx0XHR4aHIuc2VuZCggb3B0aW9ucy5oYXNDb250ZW50ICYmIG9wdGlvbnMuZGF0YSB8fCBudWxsICk7XG5cdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXHRcdFx0XHRcdC8vICMxNDY4MzogT25seSByZXRocm93IGlmIHRoaXMgaGFzbid0IGJlZW4gbm90aWZpZWQgYXMgYW4gZXJyb3IgeWV0XG5cdFx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRcdHRocm93IGU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXG5cdFx0XHRhYm9ydDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0Y2FsbGJhY2soKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH1cbn0pO1xuXG5cblxuXG4vLyBJbnN0YWxsIHNjcmlwdCBkYXRhVHlwZVxualF1ZXJ5LmFqYXhTZXR1cCh7XG5cdGFjY2VwdHM6IHtcblx0XHRzY3JpcHQ6IFwidGV4dC9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9lY21hc2NyaXB0LCBhcHBsaWNhdGlvbi94LWVjbWFzY3JpcHRcIlxuXHR9LFxuXHRjb250ZW50czoge1xuXHRcdHNjcmlwdDogLyg/OmphdmF8ZWNtYSlzY3JpcHQvXG5cdH0sXG5cdGNvbnZlcnRlcnM6IHtcblx0XHRcInRleHQgc2NyaXB0XCI6IGZ1bmN0aW9uKCB0ZXh0ICkge1xuXHRcdFx0alF1ZXJ5Lmdsb2JhbEV2YWwoIHRleHQgKTtcblx0XHRcdHJldHVybiB0ZXh0O1xuXHRcdH1cblx0fVxufSk7XG5cbi8vIEhhbmRsZSBjYWNoZSdzIHNwZWNpYWwgY2FzZSBhbmQgY3Jvc3NEb21haW5cbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBcInNjcmlwdFwiLCBmdW5jdGlvbiggcyApIHtcblx0aWYgKCBzLmNhY2hlID09PSB1bmRlZmluZWQgKSB7XG5cdFx0cy5jYWNoZSA9IGZhbHNlO1xuXHR9XG5cdGlmICggcy5jcm9zc0RvbWFpbiApIHtcblx0XHRzLnR5cGUgPSBcIkdFVFwiO1xuXHR9XG59KTtcblxuLy8gQmluZCBzY3JpcHQgdGFnIGhhY2sgdHJhbnNwb3J0XG5qUXVlcnkuYWpheFRyYW5zcG9ydCggXCJzY3JpcHRcIiwgZnVuY3Rpb24oIHMgKSB7XG5cdC8vIFRoaXMgdHJhbnNwb3J0IG9ubHkgZGVhbHMgd2l0aCBjcm9zcyBkb21haW4gcmVxdWVzdHNcblx0aWYgKCBzLmNyb3NzRG9tYWluICkge1xuXHRcdHZhciBzY3JpcHQsIGNhbGxiYWNrO1xuXHRcdHJldHVybiB7XG5cdFx0XHRzZW5kOiBmdW5jdGlvbiggXywgY29tcGxldGUgKSB7XG5cdFx0XHRcdHNjcmlwdCA9IGpRdWVyeShcIjxzY3JpcHQ+XCIpLnByb3Aoe1xuXHRcdFx0XHRcdGFzeW5jOiB0cnVlLFxuXHRcdFx0XHRcdGNoYXJzZXQ6IHMuc2NyaXB0Q2hhcnNldCxcblx0XHRcdFx0XHRzcmM6IHMudXJsXG5cdFx0XHRcdH0pLm9uKFxuXHRcdFx0XHRcdFwibG9hZCBlcnJvclwiLFxuXHRcdFx0XHRcdGNhbGxiYWNrID0gZnVuY3Rpb24oIGV2dCApIHtcblx0XHRcdFx0XHRcdHNjcmlwdC5yZW1vdmUoKTtcblx0XHRcdFx0XHRcdGNhbGxiYWNrID0gbnVsbDtcblx0XHRcdFx0XHRcdGlmICggZXZ0ICkge1xuXHRcdFx0XHRcdFx0XHRjb21wbGV0ZSggZXZ0LnR5cGUgPT09IFwiZXJyb3JcIiA/IDQwNCA6IDIwMCwgZXZ0LnR5cGUgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdCk7XG5cdFx0XHRcdGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoIHNjcmlwdFsgMCBdICk7XG5cdFx0XHR9LFxuXHRcdFx0YWJvcnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdGNhbGxiYWNrKCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHR9XG59KTtcblxuXG5cblxudmFyIG9sZENhbGxiYWNrcyA9IFtdLFxuXHRyanNvbnAgPSAvKD0pXFw/KD89JnwkKXxcXD9cXD8vO1xuXG4vLyBEZWZhdWx0IGpzb25wIHNldHRpbmdzXG5qUXVlcnkuYWpheFNldHVwKHtcblx0anNvbnA6IFwiY2FsbGJhY2tcIixcblx0anNvbnBDYWxsYmFjazogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGNhbGxiYWNrID0gb2xkQ2FsbGJhY2tzLnBvcCgpIHx8ICggalF1ZXJ5LmV4cGFuZG8gKyBcIl9cIiArICggbm9uY2UrKyApICk7XG5cdFx0dGhpc1sgY2FsbGJhY2sgXSA9IHRydWU7XG5cdFx0cmV0dXJuIGNhbGxiYWNrO1xuXHR9XG59KTtcblxuLy8gRGV0ZWN0LCBub3JtYWxpemUgb3B0aW9ucyBhbmQgaW5zdGFsbCBjYWxsYmFja3MgZm9yIGpzb25wIHJlcXVlc3RzXG5qUXVlcnkuYWpheFByZWZpbHRlciggXCJqc29uIGpzb25wXCIsIGZ1bmN0aW9uKCBzLCBvcmlnaW5hbFNldHRpbmdzLCBqcVhIUiApIHtcblxuXHR2YXIgY2FsbGJhY2tOYW1lLCBvdmVyd3JpdHRlbiwgcmVzcG9uc2VDb250YWluZXIsXG5cdFx0anNvblByb3AgPSBzLmpzb25wICE9PSBmYWxzZSAmJiAoIHJqc29ucC50ZXN0KCBzLnVybCApID9cblx0XHRcdFwidXJsXCIgOlxuXHRcdFx0dHlwZW9mIHMuZGF0YSA9PT0gXCJzdHJpbmdcIiAmJiAhKCBzLmNvbnRlbnRUeXBlIHx8IFwiXCIgKS5pbmRleE9mKFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIpICYmIHJqc29ucC50ZXN0KCBzLmRhdGEgKSAmJiBcImRhdGFcIlxuXHRcdCk7XG5cblx0Ly8gSGFuZGxlIGlmZiB0aGUgZXhwZWN0ZWQgZGF0YSB0eXBlIGlzIFwianNvbnBcIiBvciB3ZSBoYXZlIGEgcGFyYW1ldGVyIHRvIHNldFxuXHRpZiAoIGpzb25Qcm9wIHx8IHMuZGF0YVR5cGVzWyAwIF0gPT09IFwianNvbnBcIiApIHtcblxuXHRcdC8vIEdldCBjYWxsYmFjayBuYW1lLCByZW1lbWJlcmluZyBwcmVleGlzdGluZyB2YWx1ZSBhc3NvY2lhdGVkIHdpdGggaXRcblx0XHRjYWxsYmFja05hbWUgPSBzLmpzb25wQ2FsbGJhY2sgPSBqUXVlcnkuaXNGdW5jdGlvbiggcy5qc29ucENhbGxiYWNrICkgP1xuXHRcdFx0cy5qc29ucENhbGxiYWNrKCkgOlxuXHRcdFx0cy5qc29ucENhbGxiYWNrO1xuXG5cdFx0Ly8gSW5zZXJ0IGNhbGxiYWNrIGludG8gdXJsIG9yIGZvcm0gZGF0YVxuXHRcdGlmICgganNvblByb3AgKSB7XG5cdFx0XHRzWyBqc29uUHJvcCBdID0gc1sganNvblByb3AgXS5yZXBsYWNlKCByanNvbnAsIFwiJDFcIiArIGNhbGxiYWNrTmFtZSApO1xuXHRcdH0gZWxzZSBpZiAoIHMuanNvbnAgIT09IGZhbHNlICkge1xuXHRcdFx0cy51cmwgKz0gKCBycXVlcnkudGVzdCggcy51cmwgKSA/IFwiJlwiIDogXCI/XCIgKSArIHMuanNvbnAgKyBcIj1cIiArIGNhbGxiYWNrTmFtZTtcblx0XHR9XG5cblx0XHQvLyBVc2UgZGF0YSBjb252ZXJ0ZXIgdG8gcmV0cmlldmUganNvbiBhZnRlciBzY3JpcHQgZXhlY3V0aW9uXG5cdFx0cy5jb252ZXJ0ZXJzW1wic2NyaXB0IGpzb25cIl0gPSBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggIXJlc3BvbnNlQ29udGFpbmVyICkge1xuXHRcdFx0XHRqUXVlcnkuZXJyb3IoIGNhbGxiYWNrTmFtZSArIFwiIHdhcyBub3QgY2FsbGVkXCIgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXNwb25zZUNvbnRhaW5lclsgMCBdO1xuXHRcdH07XG5cblx0XHQvLyBmb3JjZSBqc29uIGRhdGFUeXBlXG5cdFx0cy5kYXRhVHlwZXNbIDAgXSA9IFwianNvblwiO1xuXG5cdFx0Ly8gSW5zdGFsbCBjYWxsYmFja1xuXHRcdG92ZXJ3cml0dGVuID0gd2luZG93WyBjYWxsYmFja05hbWUgXTtcblx0XHR3aW5kb3dbIGNhbGxiYWNrTmFtZSBdID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXNwb25zZUNvbnRhaW5lciA9IGFyZ3VtZW50cztcblx0XHR9O1xuXG5cdFx0Ly8gQ2xlYW4tdXAgZnVuY3Rpb24gKGZpcmVzIGFmdGVyIGNvbnZlcnRlcnMpXG5cdFx0anFYSFIuYWx3YXlzKGZ1bmN0aW9uKCkge1xuXHRcdFx0Ly8gUmVzdG9yZSBwcmVleGlzdGluZyB2YWx1ZVxuXHRcdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IG92ZXJ3cml0dGVuO1xuXG5cdFx0XHQvLyBTYXZlIGJhY2sgYXMgZnJlZVxuXHRcdFx0aWYgKCBzWyBjYWxsYmFja05hbWUgXSApIHtcblx0XHRcdFx0Ly8gbWFrZSBzdXJlIHRoYXQgcmUtdXNpbmcgdGhlIG9wdGlvbnMgZG9lc24ndCBzY3JldyB0aGluZ3MgYXJvdW5kXG5cdFx0XHRcdHMuanNvbnBDYWxsYmFjayA9IG9yaWdpbmFsU2V0dGluZ3MuanNvbnBDYWxsYmFjaztcblxuXHRcdFx0XHQvLyBzYXZlIHRoZSBjYWxsYmFjayBuYW1lIGZvciBmdXR1cmUgdXNlXG5cdFx0XHRcdG9sZENhbGxiYWNrcy5wdXNoKCBjYWxsYmFja05hbWUgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ2FsbCBpZiBpdCB3YXMgYSBmdW5jdGlvbiBhbmQgd2UgaGF2ZSBhIHJlc3BvbnNlXG5cdFx0XHRpZiAoIHJlc3BvbnNlQ29udGFpbmVyICYmIGpRdWVyeS5pc0Z1bmN0aW9uKCBvdmVyd3JpdHRlbiApICkge1xuXHRcdFx0XHRvdmVyd3JpdHRlbiggcmVzcG9uc2VDb250YWluZXJbIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXNwb25zZUNvbnRhaW5lciA9IG92ZXJ3cml0dGVuID0gdW5kZWZpbmVkO1xuXHRcdH0pO1xuXG5cdFx0Ly8gRGVsZWdhdGUgdG8gc2NyaXB0XG5cdFx0cmV0dXJuIFwic2NyaXB0XCI7XG5cdH1cbn0pO1xuXG5cblxuXG4vLyBkYXRhOiBzdHJpbmcgb2YgaHRtbFxuLy8gY29udGV4dCAob3B0aW9uYWwpOiBJZiBzcGVjaWZpZWQsIHRoZSBmcmFnbWVudCB3aWxsIGJlIGNyZWF0ZWQgaW4gdGhpcyBjb250ZXh0LCBkZWZhdWx0cyB0byBkb2N1bWVudFxuLy8ga2VlcFNjcmlwdHMgKG9wdGlvbmFsKTogSWYgdHJ1ZSwgd2lsbCBpbmNsdWRlIHNjcmlwdHMgcGFzc2VkIGluIHRoZSBodG1sIHN0cmluZ1xualF1ZXJ5LnBhcnNlSFRNTCA9IGZ1bmN0aW9uKCBkYXRhLCBjb250ZXh0LCBrZWVwU2NyaXB0cyApIHtcblx0aWYgKCAhZGF0YSB8fCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXHRpZiAoIHR5cGVvZiBjb250ZXh0ID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRrZWVwU2NyaXB0cyA9IGNvbnRleHQ7XG5cdFx0Y29udGV4dCA9IGZhbHNlO1xuXHR9XG5cdGNvbnRleHQgPSBjb250ZXh0IHx8IGRvY3VtZW50O1xuXG5cdHZhciBwYXJzZWQgPSByc2luZ2xlVGFnLmV4ZWMoIGRhdGEgKSxcblx0XHRzY3JpcHRzID0gIWtlZXBTY3JpcHRzICYmIFtdO1xuXG5cdC8vIFNpbmdsZSB0YWdcblx0aWYgKCBwYXJzZWQgKSB7XG5cdFx0cmV0dXJuIFsgY29udGV4dC5jcmVhdGVFbGVtZW50KCBwYXJzZWRbMV0gKSBdO1xuXHR9XG5cblx0cGFyc2VkID0galF1ZXJ5LmJ1aWxkRnJhZ21lbnQoIFsgZGF0YSBdLCBjb250ZXh0LCBzY3JpcHRzICk7XG5cblx0aWYgKCBzY3JpcHRzICYmIHNjcmlwdHMubGVuZ3RoICkge1xuXHRcdGpRdWVyeSggc2NyaXB0cyApLnJlbW92ZSgpO1xuXHR9XG5cblx0cmV0dXJuIGpRdWVyeS5tZXJnZSggW10sIHBhcnNlZC5jaGlsZE5vZGVzICk7XG59O1xuXG5cbi8vIEtlZXAgYSBjb3B5IG9mIHRoZSBvbGQgbG9hZCBtZXRob2RcbnZhciBfbG9hZCA9IGpRdWVyeS5mbi5sb2FkO1xuXG4vKipcbiAqIExvYWQgYSB1cmwgaW50byBhIHBhZ2VcbiAqL1xualF1ZXJ5LmZuLmxvYWQgPSBmdW5jdGlvbiggdXJsLCBwYXJhbXMsIGNhbGxiYWNrICkge1xuXHRpZiAoIHR5cGVvZiB1cmwgIT09IFwic3RyaW5nXCIgJiYgX2xvYWQgKSB7XG5cdFx0cmV0dXJuIF9sb2FkLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0fVxuXG5cdHZhciBzZWxlY3RvciwgdHlwZSwgcmVzcG9uc2UsXG5cdFx0c2VsZiA9IHRoaXMsXG5cdFx0b2ZmID0gdXJsLmluZGV4T2YoXCIgXCIpO1xuXG5cdGlmICggb2ZmID49IDAgKSB7XG5cdFx0c2VsZWN0b3IgPSBqUXVlcnkudHJpbSggdXJsLnNsaWNlKCBvZmYgKSApO1xuXHRcdHVybCA9IHVybC5zbGljZSggMCwgb2ZmICk7XG5cdH1cblxuXHQvLyBJZiBpdCdzIGEgZnVuY3Rpb25cblx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggcGFyYW1zICkgKSB7XG5cblx0XHQvLyBXZSBhc3N1bWUgdGhhdCBpdCdzIHRoZSBjYWxsYmFja1xuXHRcdGNhbGxiYWNrID0gcGFyYW1zO1xuXHRcdHBhcmFtcyA9IHVuZGVmaW5lZDtcblxuXHQvLyBPdGhlcndpc2UsIGJ1aWxkIGEgcGFyYW0gc3RyaW5nXG5cdH0gZWxzZSBpZiAoIHBhcmFtcyAmJiB0eXBlb2YgcGFyYW1zID09PSBcIm9iamVjdFwiICkge1xuXHRcdHR5cGUgPSBcIlBPU1RcIjtcblx0fVxuXG5cdC8vIElmIHdlIGhhdmUgZWxlbWVudHMgdG8gbW9kaWZ5LCBtYWtlIHRoZSByZXF1ZXN0XG5cdGlmICggc2VsZi5sZW5ndGggPiAwICkge1xuXHRcdGpRdWVyeS5hamF4KHtcblx0XHRcdHVybDogdXJsLFxuXG5cdFx0XHQvLyBpZiBcInR5cGVcIiB2YXJpYWJsZSBpcyB1bmRlZmluZWQsIHRoZW4gXCJHRVRcIiBtZXRob2Qgd2lsbCBiZSB1c2VkXG5cdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0ZGF0YVR5cGU6IFwiaHRtbFwiLFxuXHRcdFx0ZGF0YTogcGFyYW1zXG5cdFx0fSkuZG9uZShmdW5jdGlvbiggcmVzcG9uc2VUZXh0ICkge1xuXG5cdFx0XHQvLyBTYXZlIHJlc3BvbnNlIGZvciB1c2UgaW4gY29tcGxldGUgY2FsbGJhY2tcblx0XHRcdHJlc3BvbnNlID0gYXJndW1lbnRzO1xuXG5cdFx0XHRzZWxmLmh0bWwoIHNlbGVjdG9yID9cblxuXHRcdFx0XHQvLyBJZiBhIHNlbGVjdG9yIHdhcyBzcGVjaWZpZWQsIGxvY2F0ZSB0aGUgcmlnaHQgZWxlbWVudHMgaW4gYSBkdW1teSBkaXZcblx0XHRcdFx0Ly8gRXhjbHVkZSBzY3JpcHRzIHRvIGF2b2lkIElFICdQZXJtaXNzaW9uIERlbmllZCcgZXJyb3JzXG5cdFx0XHRcdGpRdWVyeShcIjxkaXY+XCIpLmFwcGVuZCggalF1ZXJ5LnBhcnNlSFRNTCggcmVzcG9uc2VUZXh0ICkgKS5maW5kKCBzZWxlY3RvciApIDpcblxuXHRcdFx0XHQvLyBPdGhlcndpc2UgdXNlIHRoZSBmdWxsIHJlc3VsdFxuXHRcdFx0XHRyZXNwb25zZVRleHQgKTtcblxuXHRcdH0pLmNvbXBsZXRlKCBjYWxsYmFjayAmJiBmdW5jdGlvbigganFYSFIsIHN0YXR1cyApIHtcblx0XHRcdHNlbGYuZWFjaCggY2FsbGJhY2ssIHJlc3BvbnNlIHx8IFsganFYSFIucmVzcG9uc2VUZXh0LCBzdGF0dXMsIGpxWEhSIF0gKTtcblx0XHR9KTtcblx0fVxuXG5cdHJldHVybiB0aGlzO1xufTtcblxuXG5cblxuLy8gQXR0YWNoIGEgYnVuY2ggb2YgZnVuY3Rpb25zIGZvciBoYW5kbGluZyBjb21tb24gQUpBWCBldmVudHNcbmpRdWVyeS5lYWNoKCBbIFwiYWpheFN0YXJ0XCIsIFwiYWpheFN0b3BcIiwgXCJhamF4Q29tcGxldGVcIiwgXCJhamF4RXJyb3JcIiwgXCJhamF4U3VjY2Vzc1wiLCBcImFqYXhTZW5kXCIgXSwgZnVuY3Rpb24oIGksIHR5cGUgKSB7XG5cdGpRdWVyeS5mblsgdHlwZSBdID0gZnVuY3Rpb24oIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlLCBmbiApO1xuXHR9O1xufSk7XG5cblxuXG5cbmpRdWVyeS5leHByLmZpbHRlcnMuYW5pbWF0ZWQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0cmV0dXJuIGpRdWVyeS5ncmVwKGpRdWVyeS50aW1lcnMsIGZ1bmN0aW9uKCBmbiApIHtcblx0XHRyZXR1cm4gZWxlbSA9PT0gZm4uZWxlbTtcblx0fSkubGVuZ3RoO1xufTtcblxuXG5cblxudmFyIGRvY0VsZW0gPSB3aW5kb3cuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuXG4vKipcbiAqIEdldHMgYSB3aW5kb3cgZnJvbSBhbiBlbGVtZW50XG4gKi9cbmZ1bmN0aW9uIGdldFdpbmRvdyggZWxlbSApIHtcblx0cmV0dXJuIGpRdWVyeS5pc1dpbmRvdyggZWxlbSApID8gZWxlbSA6IGVsZW0ubm9kZVR5cGUgPT09IDkgJiYgZWxlbS5kZWZhdWx0Vmlldztcbn1cblxualF1ZXJ5Lm9mZnNldCA9IHtcblx0c2V0T2Zmc2V0OiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgaSApIHtcblx0XHR2YXIgY3VyUG9zaXRpb24sIGN1ckxlZnQsIGN1ckNTU1RvcCwgY3VyVG9wLCBjdXJPZmZzZXQsIGN1ckNTU0xlZnQsIGNhbGN1bGF0ZVBvc2l0aW9uLFxuXHRcdFx0cG9zaXRpb24gPSBqUXVlcnkuY3NzKCBlbGVtLCBcInBvc2l0aW9uXCIgKSxcblx0XHRcdGN1ckVsZW0gPSBqUXVlcnkoIGVsZW0gKSxcblx0XHRcdHByb3BzID0ge307XG5cblx0XHQvLyBTZXQgcG9zaXRpb24gZmlyc3QsIGluLWNhc2UgdG9wL2xlZnQgYXJlIHNldCBldmVuIG9uIHN0YXRpYyBlbGVtXG5cdFx0aWYgKCBwb3NpdGlvbiA9PT0gXCJzdGF0aWNcIiApIHtcblx0XHRcdGVsZW0uc3R5bGUucG9zaXRpb24gPSBcInJlbGF0aXZlXCI7XG5cdFx0fVxuXG5cdFx0Y3VyT2Zmc2V0ID0gY3VyRWxlbS5vZmZzZXQoKTtcblx0XHRjdXJDU1NUb3AgPSBqUXVlcnkuY3NzKCBlbGVtLCBcInRvcFwiICk7XG5cdFx0Y3VyQ1NTTGVmdCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwibGVmdFwiICk7XG5cdFx0Y2FsY3VsYXRlUG9zaXRpb24gPSAoIHBvc2l0aW9uID09PSBcImFic29sdXRlXCIgfHwgcG9zaXRpb24gPT09IFwiZml4ZWRcIiApICYmXG5cdFx0XHQoIGN1ckNTU1RvcCArIGN1ckNTU0xlZnQgKS5pbmRleE9mKFwiYXV0b1wiKSA+IC0xO1xuXG5cdFx0Ly8gTmVlZCB0byBiZSBhYmxlIHRvIGNhbGN1bGF0ZSBwb3NpdGlvbiBpZiBlaXRoZXJcblx0XHQvLyB0b3Agb3IgbGVmdCBpcyBhdXRvIGFuZCBwb3NpdGlvbiBpcyBlaXRoZXIgYWJzb2x1dGUgb3IgZml4ZWRcblx0XHRpZiAoIGNhbGN1bGF0ZVBvc2l0aW9uICkge1xuXHRcdFx0Y3VyUG9zaXRpb24gPSBjdXJFbGVtLnBvc2l0aW9uKCk7XG5cdFx0XHRjdXJUb3AgPSBjdXJQb3NpdGlvbi50b3A7XG5cdFx0XHRjdXJMZWZ0ID0gY3VyUG9zaXRpb24ubGVmdDtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRjdXJUb3AgPSBwYXJzZUZsb2F0KCBjdXJDU1NUb3AgKSB8fCAwO1xuXHRcdFx0Y3VyTGVmdCA9IHBhcnNlRmxvYXQoIGN1ckNTU0xlZnQgKSB8fCAwO1xuXHRcdH1cblxuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIG9wdGlvbnMgKSApIHtcblx0XHRcdG9wdGlvbnMgPSBvcHRpb25zLmNhbGwoIGVsZW0sIGksIGN1ck9mZnNldCApO1xuXHRcdH1cblxuXHRcdGlmICggb3B0aW9ucy50b3AgIT0gbnVsbCApIHtcblx0XHRcdHByb3BzLnRvcCA9ICggb3B0aW9ucy50b3AgLSBjdXJPZmZzZXQudG9wICkgKyBjdXJUb3A7XG5cdFx0fVxuXHRcdGlmICggb3B0aW9ucy5sZWZ0ICE9IG51bGwgKSB7XG5cdFx0XHRwcm9wcy5sZWZ0ID0gKCBvcHRpb25zLmxlZnQgLSBjdXJPZmZzZXQubGVmdCApICsgY3VyTGVmdDtcblx0XHR9XG5cblx0XHRpZiAoIFwidXNpbmdcIiBpbiBvcHRpb25zICkge1xuXHRcdFx0b3B0aW9ucy51c2luZy5jYWxsKCBlbGVtLCBwcm9wcyApO1xuXG5cdFx0fSBlbHNlIHtcblx0XHRcdGN1ckVsZW0uY3NzKCBwcm9wcyApO1xuXHRcdH1cblx0fVxufTtcblxualF1ZXJ5LmZuLmV4dGVuZCh7XG5cdG9mZnNldDogZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cdFx0aWYgKCBhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIG9wdGlvbnMgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdHRoaXMgOlxuXHRcdFx0XHR0aGlzLmVhY2goZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5Lm9mZnNldC5zZXRPZmZzZXQoIHRoaXMsIG9wdGlvbnMsIGkgKTtcblx0XHRcdFx0fSk7XG5cdFx0fVxuXG5cdFx0dmFyIGRvY0VsZW0sIHdpbixcblx0XHRcdGVsZW0gPSB0aGlzWyAwIF0sXG5cdFx0XHRib3ggPSB7IHRvcDogMCwgbGVmdDogMCB9LFxuXHRcdFx0ZG9jID0gZWxlbSAmJiBlbGVtLm93bmVyRG9jdW1lbnQ7XG5cblx0XHRpZiAoICFkb2MgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0ZG9jRWxlbSA9IGRvYy5kb2N1bWVudEVsZW1lbnQ7XG5cblx0XHQvLyBNYWtlIHN1cmUgaXQncyBub3QgYSBkaXNjb25uZWN0ZWQgRE9NIG5vZGVcblx0XHRpZiAoICFqUXVlcnkuY29udGFpbnMoIGRvY0VsZW0sIGVsZW0gKSApIHtcblx0XHRcdHJldHVybiBib3g7XG5cdFx0fVxuXG5cdFx0Ly8gU3VwcG9ydDogQmxhY2tCZXJyeSA1LCBpT1MgMyAob3JpZ2luYWwgaVBob25lKVxuXHRcdC8vIElmIHdlIGRvbid0IGhhdmUgZ0JDUiwganVzdCB1c2UgMCwwIHJhdGhlciB0aGFuIGVycm9yXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QgIT09IHN0cnVuZGVmaW5lZCApIHtcblx0XHRcdGJveCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cdFx0fVxuXHRcdHdpbiA9IGdldFdpbmRvdyggZG9jICk7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHRvcDogYm94LnRvcCArIHdpbi5wYWdlWU9mZnNldCAtIGRvY0VsZW0uY2xpZW50VG9wLFxuXHRcdFx0bGVmdDogYm94LmxlZnQgKyB3aW4ucGFnZVhPZmZzZXQgLSBkb2NFbGVtLmNsaWVudExlZnRcblx0XHR9O1xuXHR9LFxuXG5cdHBvc2l0aW9uOiBmdW5jdGlvbigpIHtcblx0XHRpZiAoICF0aGlzWyAwIF0gKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0dmFyIG9mZnNldFBhcmVudCwgb2Zmc2V0LFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXSxcblx0XHRcdHBhcmVudE9mZnNldCA9IHsgdG9wOiAwLCBsZWZ0OiAwIH07XG5cblx0XHQvLyBGaXhlZCBlbGVtZW50cyBhcmUgb2Zmc2V0IGZyb20gd2luZG93IChwYXJlbnRPZmZzZXQgPSB7dG9wOjAsIGxlZnQ6IDB9LCBiZWNhdXNlIGl0IGlzIGl0cyBvbmx5IG9mZnNldCBwYXJlbnRcblx0XHRpZiAoIGpRdWVyeS5jc3MoIGVsZW0sIFwicG9zaXRpb25cIiApID09PSBcImZpeGVkXCIgKSB7XG5cdFx0XHQvLyBBc3N1bWUgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IGlzIHRoZXJlIHdoZW4gY29tcHV0ZWQgcG9zaXRpb24gaXMgZml4ZWRcblx0XHRcdG9mZnNldCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gR2V0ICpyZWFsKiBvZmZzZXRQYXJlbnRcblx0XHRcdG9mZnNldFBhcmVudCA9IHRoaXMub2Zmc2V0UGFyZW50KCk7XG5cblx0XHRcdC8vIEdldCBjb3JyZWN0IG9mZnNldHNcblx0XHRcdG9mZnNldCA9IHRoaXMub2Zmc2V0KCk7XG5cdFx0XHRpZiAoICFqUXVlcnkubm9kZU5hbWUoIG9mZnNldFBhcmVudFsgMCBdLCBcImh0bWxcIiApICkge1xuXHRcdFx0XHRwYXJlbnRPZmZzZXQgPSBvZmZzZXRQYXJlbnQub2Zmc2V0KCk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCBvZmZzZXRQYXJlbnQgYm9yZGVyc1xuXHRcdFx0cGFyZW50T2Zmc2V0LnRvcCArPSBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnRbIDAgXSwgXCJib3JkZXJUb3BXaWR0aFwiLCB0cnVlICk7XG5cdFx0XHRwYXJlbnRPZmZzZXQubGVmdCArPSBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnRbIDAgXSwgXCJib3JkZXJMZWZ0V2lkdGhcIiwgdHJ1ZSApO1xuXHRcdH1cblxuXHRcdC8vIFN1YnRyYWN0IHBhcmVudCBvZmZzZXRzIGFuZCBlbGVtZW50IG1hcmdpbnNcblx0XHRyZXR1cm4ge1xuXHRcdFx0dG9wOiBvZmZzZXQudG9wIC0gcGFyZW50T2Zmc2V0LnRvcCAtIGpRdWVyeS5jc3MoIGVsZW0sIFwibWFyZ2luVG9wXCIsIHRydWUgKSxcblx0XHRcdGxlZnQ6IG9mZnNldC5sZWZ0IC0gcGFyZW50T2Zmc2V0LmxlZnQgLSBqUXVlcnkuY3NzKCBlbGVtLCBcIm1hcmdpbkxlZnRcIiwgdHJ1ZSApXG5cdFx0fTtcblx0fSxcblxuXHRvZmZzZXRQYXJlbnQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcChmdW5jdGlvbigpIHtcblx0XHRcdHZhciBvZmZzZXRQYXJlbnQgPSB0aGlzLm9mZnNldFBhcmVudCB8fCBkb2NFbGVtO1xuXG5cdFx0XHR3aGlsZSAoIG9mZnNldFBhcmVudCAmJiAoICFqUXVlcnkubm9kZU5hbWUoIG9mZnNldFBhcmVudCwgXCJodG1sXCIgKSAmJiBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnQsIFwicG9zaXRpb25cIiApID09PSBcInN0YXRpY1wiICkgKSB7XG5cdFx0XHRcdG9mZnNldFBhcmVudCA9IG9mZnNldFBhcmVudC5vZmZzZXRQYXJlbnQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBvZmZzZXRQYXJlbnQgfHwgZG9jRWxlbTtcblx0XHR9KTtcblx0fVxufSk7XG5cbi8vIENyZWF0ZSBzY3JvbGxMZWZ0IGFuZCBzY3JvbGxUb3AgbWV0aG9kc1xualF1ZXJ5LmVhY2goIHsgc2Nyb2xsTGVmdDogXCJwYWdlWE9mZnNldFwiLCBzY3JvbGxUb3A6IFwicGFnZVlPZmZzZXRcIiB9LCBmdW5jdGlvbiggbWV0aG9kLCBwcm9wICkge1xuXHR2YXIgdG9wID0gXCJwYWdlWU9mZnNldFwiID09PSBwcm9wO1xuXG5cdGpRdWVyeS5mblsgbWV0aG9kIF0gPSBmdW5jdGlvbiggdmFsICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBtZXRob2QsIHZhbCApIHtcblx0XHRcdHZhciB3aW4gPSBnZXRXaW5kb3coIGVsZW0gKTtcblxuXHRcdFx0aWYgKCB2YWwgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0cmV0dXJuIHdpbiA/IHdpblsgcHJvcCBdIDogZWxlbVsgbWV0aG9kIF07XG5cdFx0XHR9XG5cblx0XHRcdGlmICggd2luICkge1xuXHRcdFx0XHR3aW4uc2Nyb2xsVG8oXG5cdFx0XHRcdFx0IXRvcCA/IHZhbCA6IHdpbmRvdy5wYWdlWE9mZnNldCxcblx0XHRcdFx0XHR0b3AgPyB2YWwgOiB3aW5kb3cucGFnZVlPZmZzZXRcblx0XHRcdFx0KTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWxlbVsgbWV0aG9kIF0gPSB2YWw7XG5cdFx0XHR9XG5cdFx0fSwgbWV0aG9kLCB2YWwsIGFyZ3VtZW50cy5sZW5ndGgsIG51bGwgKTtcblx0fTtcbn0pO1xuXG4vLyBTdXBwb3J0OiBTYWZhcmk8NyssIENocm9tZTwzNytcbi8vIEFkZCB0aGUgdG9wL2xlZnQgY3NzSG9va3MgdXNpbmcgalF1ZXJ5LmZuLnBvc2l0aW9uXG4vLyBXZWJraXQgYnVnOiBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MjkwODRcbi8vIEJsaW5rIGJ1ZzogaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTIyOTI4MFxuLy8gZ2V0Q29tcHV0ZWRTdHlsZSByZXR1cm5zIHBlcmNlbnQgd2hlbiBzcGVjaWZpZWQgZm9yIHRvcC9sZWZ0L2JvdHRvbS9yaWdodDtcbi8vIHJhdGhlciB0aGFuIG1ha2UgdGhlIGNzcyBtb2R1bGUgZGVwZW5kIG9uIHRoZSBvZmZzZXQgbW9kdWxlLCBqdXN0IGNoZWNrIGZvciBpdCBoZXJlXG5qUXVlcnkuZWFjaCggWyBcInRvcFwiLCBcImxlZnRcIiBdLCBmdW5jdGlvbiggaSwgcHJvcCApIHtcblx0alF1ZXJ5LmNzc0hvb2tzWyBwcm9wIF0gPSBhZGRHZXRIb29rSWYoIHN1cHBvcnQucGl4ZWxQb3NpdGlvbixcblx0XHRmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7XG5cdFx0XHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdFx0XHRjb21wdXRlZCA9IGN1ckNTUyggZWxlbSwgcHJvcCApO1xuXHRcdFx0XHQvLyBJZiBjdXJDU1MgcmV0dXJucyBwZXJjZW50YWdlLCBmYWxsYmFjayB0byBvZmZzZXRcblx0XHRcdFx0cmV0dXJuIHJudW1ub25weC50ZXN0KCBjb21wdXRlZCApID9cblx0XHRcdFx0XHRqUXVlcnkoIGVsZW0gKS5wb3NpdGlvbigpWyBwcm9wIF0gKyBcInB4XCIgOlxuXHRcdFx0XHRcdGNvbXB1dGVkO1xuXHRcdFx0fVxuXHRcdH1cblx0KTtcbn0pO1xuXG5cbi8vIENyZWF0ZSBpbm5lckhlaWdodCwgaW5uZXJXaWR0aCwgaGVpZ2h0LCB3aWR0aCwgb3V0ZXJIZWlnaHQgYW5kIG91dGVyV2lkdGggbWV0aG9kc1xualF1ZXJ5LmVhY2goIHsgSGVpZ2h0OiBcImhlaWdodFwiLCBXaWR0aDogXCJ3aWR0aFwiIH0sIGZ1bmN0aW9uKCBuYW1lLCB0eXBlICkge1xuXHRqUXVlcnkuZWFjaCggeyBwYWRkaW5nOiBcImlubmVyXCIgKyBuYW1lLCBjb250ZW50OiB0eXBlLCBcIlwiOiBcIm91dGVyXCIgKyBuYW1lIH0sIGZ1bmN0aW9uKCBkZWZhdWx0RXh0cmEsIGZ1bmNOYW1lICkge1xuXHRcdC8vIE1hcmdpbiBpcyBvbmx5IGZvciBvdXRlckhlaWdodCwgb3V0ZXJXaWR0aFxuXHRcdGpRdWVyeS5mblsgZnVuY05hbWUgXSA9IGZ1bmN0aW9uKCBtYXJnaW4sIHZhbHVlICkge1xuXHRcdFx0dmFyIGNoYWluYWJsZSA9IGFyZ3VtZW50cy5sZW5ndGggJiYgKCBkZWZhdWx0RXh0cmEgfHwgdHlwZW9mIG1hcmdpbiAhPT0gXCJib29sZWFuXCIgKSxcblx0XHRcdFx0ZXh0cmEgPSBkZWZhdWx0RXh0cmEgfHwgKCBtYXJnaW4gPT09IHRydWUgfHwgdmFsdWUgPT09IHRydWUgPyBcIm1hcmdpblwiIDogXCJib3JkZXJcIiApO1xuXG5cdFx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgdHlwZSwgdmFsdWUgKSB7XG5cdFx0XHRcdHZhciBkb2M7XG5cblx0XHRcdFx0aWYgKCBqUXVlcnkuaXNXaW5kb3coIGVsZW0gKSApIHtcblx0XHRcdFx0XHQvLyBBcyBvZiA1LzgvMjAxMiB0aGlzIHdpbGwgeWllbGQgaW5jb3JyZWN0IHJlc3VsdHMgZm9yIE1vYmlsZSBTYWZhcmksIGJ1dCB0aGVyZVxuXHRcdFx0XHRcdC8vIGlzbid0IGEgd2hvbGUgbG90IHdlIGNhbiBkby4gU2VlIHB1bGwgcmVxdWVzdCBhdCB0aGlzIFVSTCBmb3IgZGlzY3Vzc2lvbjpcblx0XHRcdFx0XHQvLyBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L2pxdWVyeS9wdWxsLzc2NFxuXHRcdFx0XHRcdHJldHVybiBlbGVtLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudFsgXCJjbGllbnRcIiArIG5hbWUgXTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEdldCBkb2N1bWVudCB3aWR0aCBvciBoZWlnaHRcblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHRcdGRvYyA9IGVsZW0uZG9jdW1lbnRFbGVtZW50O1xuXG5cdFx0XHRcdFx0Ly8gRWl0aGVyIHNjcm9sbFtXaWR0aC9IZWlnaHRdIG9yIG9mZnNldFtXaWR0aC9IZWlnaHRdIG9yIGNsaWVudFtXaWR0aC9IZWlnaHRdLFxuXHRcdFx0XHRcdC8vIHdoaWNoZXZlciBpcyBncmVhdGVzdFxuXHRcdFx0XHRcdHJldHVybiBNYXRoLm1heChcblx0XHRcdFx0XHRcdGVsZW0uYm9keVsgXCJzY3JvbGxcIiArIG5hbWUgXSwgZG9jWyBcInNjcm9sbFwiICsgbmFtZSBdLFxuXHRcdFx0XHRcdFx0ZWxlbS5ib2R5WyBcIm9mZnNldFwiICsgbmFtZSBdLCBkb2NbIFwib2Zmc2V0XCIgKyBuYW1lIF0sXG5cdFx0XHRcdFx0XHRkb2NbIFwiY2xpZW50XCIgKyBuYW1lIF1cblx0XHRcdFx0XHQpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgP1xuXHRcdFx0XHRcdC8vIEdldCB3aWR0aCBvciBoZWlnaHQgb24gdGhlIGVsZW1lbnQsIHJlcXVlc3RpbmcgYnV0IG5vdCBmb3JjaW5nIHBhcnNlRmxvYXRcblx0XHRcdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCB0eXBlLCBleHRyYSApIDpcblxuXHRcdFx0XHRcdC8vIFNldCB3aWR0aCBvciBoZWlnaHQgb24gdGhlIGVsZW1lbnRcblx0XHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHR5cGUsIHZhbHVlLCBleHRyYSApO1xuXHRcdFx0fSwgdHlwZSwgY2hhaW5hYmxlID8gbWFyZ2luIDogdW5kZWZpbmVkLCBjaGFpbmFibGUsIG51bGwgKTtcblx0XHR9O1xuXHR9KTtcbn0pO1xuXG5cbi8vIFRoZSBudW1iZXIgb2YgZWxlbWVudHMgY29udGFpbmVkIGluIHRoZSBtYXRjaGVkIGVsZW1lbnQgc2V0XG5qUXVlcnkuZm4uc2l6ZSA9IGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcy5sZW5ndGg7XG59O1xuXG5qUXVlcnkuZm4uYW5kU2VsZiA9IGpRdWVyeS5mbi5hZGRCYWNrO1xuXG5cblxuXG4vLyBSZWdpc3RlciBhcyBhIG5hbWVkIEFNRCBtb2R1bGUsIHNpbmNlIGpRdWVyeSBjYW4gYmUgY29uY2F0ZW5hdGVkIHdpdGggb3RoZXJcbi8vIGZpbGVzIHRoYXQgbWF5IHVzZSBkZWZpbmUsIGJ1dCBub3QgdmlhIGEgcHJvcGVyIGNvbmNhdGVuYXRpb24gc2NyaXB0IHRoYXRcbi8vIHVuZGVyc3RhbmRzIGFub255bW91cyBBTUQgbW9kdWxlcy4gQSBuYW1lZCBBTUQgaXMgc2FmZXN0IGFuZCBtb3N0IHJvYnVzdFxuLy8gd2F5IHRvIHJlZ2lzdGVyLiBMb3dlcmNhc2UganF1ZXJ5IGlzIHVzZWQgYmVjYXVzZSBBTUQgbW9kdWxlIG5hbWVzIGFyZVxuLy8gZGVyaXZlZCBmcm9tIGZpbGUgbmFtZXMsIGFuZCBqUXVlcnkgaXMgbm9ybWFsbHkgZGVsaXZlcmVkIGluIGEgbG93ZXJjYXNlXG4vLyBmaWxlIG5hbWUuIERvIHRoaXMgYWZ0ZXIgY3JlYXRpbmcgdGhlIGdsb2JhbCBzbyB0aGF0IGlmIGFuIEFNRCBtb2R1bGUgd2FudHNcbi8vIHRvIGNhbGwgbm9Db25mbGljdCB0byBoaWRlIHRoaXMgdmVyc2lvbiBvZiBqUXVlcnksIGl0IHdpbGwgd29yay5cblxuLy8gTm90ZSB0aGF0IGZvciBtYXhpbXVtIHBvcnRhYmlsaXR5LCBsaWJyYXJpZXMgdGhhdCBhcmUgbm90IGpRdWVyeSBzaG91bGRcbi8vIGRlY2xhcmUgdGhlbXNlbHZlcyBhcyBhbm9ueW1vdXMgbW9kdWxlcywgYW5kIGF2b2lkIHNldHRpbmcgYSBnbG9iYWwgaWYgYW5cbi8vIEFNRCBsb2FkZXIgaXMgcHJlc2VudC4galF1ZXJ5IGlzIGEgc3BlY2lhbCBjYXNlLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlXG4vLyBodHRwczovL2dpdGh1Yi5jb20vanJidXJrZS9yZXF1aXJlanMvd2lraS9VcGRhdGluZy1leGlzdGluZy1saWJyYXJpZXMjd2lraS1hbm9uXG5cbmlmICggdHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQgKSB7XG5cdGRlZmluZSggXCJqcXVlcnlcIiwgW10sIGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBqUXVlcnk7XG5cdH0pO1xufVxuXG5cblxuXG52YXJcblx0Ly8gTWFwIG92ZXIgalF1ZXJ5IGluIGNhc2Ugb2Ygb3ZlcndyaXRlXG5cdF9qUXVlcnkgPSB3aW5kb3cualF1ZXJ5LFxuXG5cdC8vIE1hcCBvdmVyIHRoZSAkIGluIGNhc2Ugb2Ygb3ZlcndyaXRlXG5cdF8kID0gd2luZG93LiQ7XG5cbmpRdWVyeS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24oIGRlZXAgKSB7XG5cdGlmICggd2luZG93LiQgPT09IGpRdWVyeSApIHtcblx0XHR3aW5kb3cuJCA9IF8kO1xuXHR9XG5cblx0aWYgKCBkZWVwICYmIHdpbmRvdy5qUXVlcnkgPT09IGpRdWVyeSApIHtcblx0XHR3aW5kb3cualF1ZXJ5ID0gX2pRdWVyeTtcblx0fVxuXG5cdHJldHVybiBqUXVlcnk7XG59O1xuXG4vLyBFeHBvc2UgalF1ZXJ5IGFuZCAkIGlkZW50aWZpZXJzLCBldmVuIGluIEFNRFxuLy8gKCM3MTAyI2NvbW1lbnQ6MTAsIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvanF1ZXJ5L3B1bGwvNTU3KVxuLy8gYW5kIENvbW1vbkpTIGZvciBicm93c2VyIGVtdWxhdG9ycyAoIzEzNTY2KVxuaWYgKCB0eXBlb2Ygbm9HbG9iYWwgPT09IHN0cnVuZGVmaW5lZCApIHtcblx0d2luZG93LmpRdWVyeSA9IHdpbmRvdy4kID0galF1ZXJ5O1xufVxuXG5cblxuXG5yZXR1cm4galF1ZXJ5O1xuXG59KSk7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi8ubnBtaW5zdGFsbC9qcXVlcnkvMi4xLjQvanF1ZXJ5L2Rpc3QvanF1ZXJ5LmpzXG4gKiogbW9kdWxlIGlkID0gM1xuICoqIG1vZHVsZSBjaHVua3MgPSAxIDMgMzEgNDIgNDMgNDQgNDUgNDYgNDcgNDggNDkgNTAgNTEgNTIgNTNcbiAqKi8iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FDQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUZBO0FBYkE7QUFrQkE7QUFDQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBS0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFGQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBOzs7Ozs7QUMxSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FDcEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OzsiLCJzb3VyY2VSb290IjoiIn0=